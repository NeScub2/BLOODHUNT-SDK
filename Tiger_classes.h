// Class Tiger.ChooseNextWaypoint
// Size: 0xe8 (Inherited: 0x70)
struct UChooseNextWaypoint : UBTTaskNode {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
};

// Class Tiger.TigerBuff
// Size: 0x260 (Inherited: 0x28)
struct UTigerBuff : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FTigerCharacterStatModification StatModification; // 0x30(0xa0)
	struct FTigerStatusEffect StatusEffect; // 0xd0(0x0d)
	char pad_DD[0x3]; // 0xdd(0x03)
	float Duration; // 0xe0(0x04)
	bool bDoesTick; // 0xe4(0x01)
	char pad_E5[0x3]; // 0xe5(0x03)
	float TimeBetweenTicks; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct FTigerNiagaraAttachment ActivatedNiagaraAttachment; // 0xf0(0x48)
	struct FTigerNiagaraAttachment NiagaraAttachment; // 0x138(0x48)
	struct TArray<struct FTigerNiagaraAttachment> AdditionalNiagaraAttachments; // 0x180(0x10)
	struct FTigerNiagaraAttachment DeactivatedNiagaraAttachment; // 0x190(0x48)
	bool bOnlySpawnBuffParticleOnLocalPlayer; // 0x1d8(0x01)
	bool bShowParticlesOnHiddenEnemies; // 0x1d9(0x01)
	bool bAttachToMesh; // 0x1da(0x01)
	char pad_1DB[0x1]; // 0x1db(0x01)
	struct FName AttachPoint; // 0x1dc(0x08)
	bool bBuffParticleTypeAbsoluteRotation; // 0x1e4(0x01)
	char pad_1E5[0x3]; // 0x1e5(0x03)
	struct UParticleSystem* BuffParticleType; // 0x1e8(0x08)
	bool bSpawnActivatedParticleOnRefresh; // 0x1f0(0x01)
	bool bOnlySpawnActivatedParticleOnLocalPlayer; // 0x1f1(0x01)
	bool bAttachActivatedParticle; // 0x1f2(0x01)
	bool bActivatedParticleTypeAbsoluteRotation; // 0x1f3(0x01)
	char pad_1F4[0x4]; // 0x1f4(0x04)
	struct UParticleSystem* ActivatedParticleType; // 0x1f8(0x08)
	bool bOnlySpawnDeactivatedParticleOnLocalPlayer; // 0x200(0x01)
	bool bAttachDeactivatedParticle; // 0x201(0x01)
	bool bDeactivatedParticleTypeAbsoluteRotation; // 0x202(0x01)
	char pad_203[0x5]; // 0x203(0x05)
	struct UParticleSystem* DeactivatedParticleType; // 0x208(0x08)
	struct FName ActivationMontageName; // 0x210(0x08)
	struct UAkAudioEvent* ActivatedSFX; // 0x218(0x08)
	struct UAkAudioEvent* DeactivatedSFX; // 0x220(0x08)
	bool bStacks; // 0x228(0x01)
	bool bOnlyStackWithDifferentCasters; // 0x229(0x01)
	char pad_22A[0x2]; // 0x22a(0x02)
	int32_t MaxStacks; // 0x22c(0x04)
	bool bKeepAfterDeath; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	int32_t RemoveBuffOnActions; // 0x234(0x04)
	bool bShowOnUI; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
	struct UTexture2D* StatusImage; // 0x240(0x08)
	enum class ETigerBuffStatusType StatusType; // 0x248(0x01)
	enum class ETigerBuffProgressType ProgressType; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)
	struct ATigerBuffPostProcess* PostProcessEffect; // 0x250(0x08)
	uint64_t PersistentTelemetryID; // 0x258(0x08)

	void OnRefreshed(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnRefreshed // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnDeactivated(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnDeactivated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnActivated(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnActivated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct UTigerBuffInstance* FindBuffInstance(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.FindBuffInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396830
};

// Class Tiger.TigerBuffStun
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffStun : UTigerBuff {
};

// Class Tiger.TigerBuffBlockAILogic
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffBlockAILogic : UTigerBuff {
};

// Class Tiger.TigerBuffImmobilize
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffImmobilize : UTigerBuff {
};

// Class Tiger.TigerBuffGround
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffGround : UTigerBuff {
};

// Class Tiger.TigerBuffInvulnerable
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffInvulnerable : UTigerBuff {
};

// Class Tiger.TigerBuffInvisible
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffInvisible : UTigerBuff {
};

// Class Tiger.TigerBuffDisableClimbing
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffDisableClimbing : UTigerBuff {
};

// Class Tiger.TigerBuffBlockOffensiveActions
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffBlockOffensiveActions : UTigerBuff {
};

// Class Tiger.TigerKeyTextureMapping
// Size: 0x80 (Inherited: 0x30)
struct UTigerKeyTextureMapping : UDataAsset {
	struct TMap<struct FKey, struct UTexture2D*> KeyTextures; // 0x30(0x50)
};

// Class Tiger.PatrolComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UPatrolComponent : UActorComponent {
};

// Class Tiger.TigerRebuildableActor
// Size: 0x240 (Inherited: 0x228)
struct ATigerRebuildableActor : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct TArray<struct USceneComponent*> BuildCreatedComponents; // 0x230(0x10)

	void OnRebuild(); // Function Tiger.TigerRebuildableActor.OnRebuild // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct USceneComponent* ConvertToBuildComponent(struct USceneComponent* BlueprintCreatedComponent); // Function Tiger.TigerRebuildableActor.ConvertToBuildComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x14a9bc0
};

// Class Tiger.TigerActivatedObject
// Size: 0x280 (Inherited: 0x240)
struct ATigerActivatedObject : ATigerRebuildableActor {
	struct UStaticMeshComponent* BaseMesh; // 0x240(0x08)
	struct UAkAudioEvent* ActivationAudioEvent; // 0x248(0x08)
	bool bActivationAudioShouldPlay; // 0x250(0x01)
	bool bTriggerOnlyOnPlayers; // 0x251(0x01)
	bool bUseAudioActivationRadius; // 0x252(0x01)
	char pad_253[0x1]; // 0x253(0x01)
	float ActivationRadius; // 0x254(0x04)
	float AudioFadeOutDuration; // 0x258(0x04)
	bool bAllowOnHitEvents; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct TWeakObjectPtr<struct UPrimitiveComponent> WeakCharacterTrigger; // 0x260(0x08)
	char pad_268[0x18]; // 0x268(0x18)

	void SetCharacterTriggerComponent(struct UPrimitiveComponent* TriggerComponent); // Function Tiger.TigerActivatedObject.SetCharacterTriggerComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x13738d0
	void OnObjectDeactivated(); // Function Tiger.TigerActivatedObject.OnObjectDeactivated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnObjectActivated(); // Function Tiger.TigerActivatedObject.OnObjectActivated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnEndCharacterOverlap(struct ATigerCharacter* OverlappingCharacter, int32_t TotalOverlapCount); // Function Tiger.TigerActivatedObject.OnEndCharacterOverlap // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnCharacterHit(struct ATigerCharacter* InOverlappingCharacter, struct FVector InNormalImpulse, struct FHitResult& InHitResult); // Function Tiger.TigerActivatedObject.OnCharacterHit // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnBeginCharacterOverlap(struct ATigerCharacter* OverlappingCharacter, int32_t TotalOverlapCount); // Function Tiger.TigerActivatedObject.OnBeginCharacterOverlap // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void EndCharacterOverlap(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex); // Function Tiger.TigerActivatedObject.EndCharacterOverlap // (Final|Native|Private) // @ game+0x13732d0
	void CharacterHit(struct UPrimitiveComponent* InHitComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, struct FVector InNormalImpulse, struct FHitResult& InHit); // Function Tiger.TigerActivatedObject.CharacterHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x1373060
	void BeginCharacterOverlap(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerActivatedObject.BeginCharacterOverlap // (Final|Native|Private|HasOutParms) // @ game+0x1372be0
};

// Class Tiger.TigerActivatedObjectSubsystem
// Size: 0xc0 (Inherited: 0x30)
struct UTigerActivatedObjectSubsystem : UGameInstanceSubsystem {
	char pad_30[0x90]; // 0x30(0x90)
};

// Class Tiger.TigerCameraBehavior
// Size: 0xe8 (Inherited: 0x28)
struct UTigerCameraBehavior : UObject {
	struct UTigerCameraPreset* CameraPreset; // 0x28(0x08)
	char pad_30[0xb8]; // 0x30(0xb8)
};

// Class Tiger.TigerActiveCameraBehavior
// Size: 0x128 (Inherited: 0xe8)
struct UTigerActiveCameraBehavior : UTigerCameraBehavior {
	char pad_E8[0x40]; // 0xe8(0x40)
};

// Class Tiger.TigerAdditiveCameraBehavior
// Size: 0x128 (Inherited: 0xe8)
struct UTigerAdditiveCameraBehavior : UTigerCameraBehavior {
	char pad_E8[0x40]; // 0xe8(0x40)
};

// Class Tiger.TigerAIAwayFromSuspiciousService
// Size: 0x140 (Inherited: 0x70)
struct UTigerAIAwayFromSuspiciousService : UBTService {
	struct FBox SearchFleeSpotBox; // 0x70(0x1c)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector FleePoint; // 0x90(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0xb8(0x28)
	struct FBlackboardKeySelector WantsToReportPlayer; // 0xe0(0x28)
	float KeepFleeingFromSpecificPlayerRadiusSquared; // 0x108(0x04)
	float BoxCenterDistanceFromNPCPosition; // 0x10c(0x04)
	uint32_t NumberOfTimesToRandomForAFleeSpot; // 0x110(0x04)
	bool bShowDebugFeatures; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
	struct TWeakObjectPtr<struct ATigerPlayer> PlayerFleeingFrom; // 0x118(0x08)
	char pad_120[0x20]; // 0x120(0x20)
};

// Class Tiger.TigerAiBarkTask
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiBarkTask : UBTTaskNode {
	struct FTigerNpcVoCategory BarkToPlay; // 0x70(0x08)
};

// Class Tiger.TigerAiBaseController
// Size: 0x3b0 (Inherited: 0x330)
struct ATigerAiBaseController : AAIController {
	struct FVector SpawnPoint; // 0x330(0x0c)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UTigerSightConfigAsset* SightConfigAsset; // 0x340(0x08)
	char pad_348[0x68]; // 0x348(0x68)

	void UnregisterMovementTicket(); // Function Tiger.TigerAiBaseController.UnregisterMovementTicket // (Final|Native|Protected|BlueprintCallable) // @ game+0x1373960
	float PlayAnimationUnreliable(struct UAnimMontage* Animation); // Function Tiger.TigerAiBaseController.PlayAnimationUnreliable // (Final|Native|Public|BlueprintCallable) // @ game+0x1373830
	float PlayAnimationFromNameUnreliable(struct FName Animation); // Function Tiger.TigerAiBaseController.PlayAnimationFromNameUnreliable // (Final|Native|Public|BlueprintCallable) // @ game+0x1373790
	bool HasPathToLocation(struct FVector& Location); // Function Tiger.TigerAiBaseController.HasPathToLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13736f0
	bool GetSightProperties(enum class ETigerNPCType NPCType, struct FTigerSightConfigProperties& OutSightProps); // Function Tiger.TigerAiBaseController.GetSightProperties // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13735d0
	struct UAISenseConfig_Sight* GetSightConfig(); // Function Tiger.TigerAiBaseController.GetSightConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13735a0
	struct ATigerBaseNPC* GetBaseNpcPawn(); // Function Tiger.TigerAiBaseController.GetBaseNpcPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1373570
	bool FindPointOnAiNavMeshWithinExtent(struct FVector& Origin, struct FVector& Extent, struct FVector& OutLocation); // Function Tiger.TigerAiBaseController.FindPointOnAiNavMeshWithinExtent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1373430
};

// Class Tiger.TigerAIBenchmarkDiablerizeTask
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAIBenchmarkDiablerizeTask : UBTTask_BlackboardBase {
	float MaximumDiablerizeDistance; // 0x98(0x04)
	char pad_9C[0xc]; // 0x9c(0x0c)
};

// Class Tiger.TigerAiBenchmarkDisciplineTask
// Size: 0xd8 (Inherited: 0x98)
struct UTigerAiBenchmarkDisciplineTask : UBTTask_BlackboardBase {
	struct ATigerLocalAIControllerBase* AIControllerBase; // 0x98(0x08)
	struct ATigerPlayerController* TigerPlayerController; // 0xa0(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0xa8(0x08)
	struct ATigerPlayer* TigerPlayer; // 0xb0(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0xb8(0x08)
	struct UTigerDisciplineBase* CurrentDisciplineBase; // 0xc0(0x08)
	char pad_C8[0x10]; // 0xc8(0x10)
};

// Class Tiger.TigerAIBenchmarkFindPlayerTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIBenchmarkFindPlayerTask : UBTTask_BlackboardBase {
	bool bUseHeightenedSensesSearchRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float CustomSearchSphereRadius; // 0x9c(0x04)
	bool bDrawSearchSphere; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float MaxVerticalPositionOffset; // 0xa4(0x04)
	float RaycastDistance; // 0xa8(0x04)
	int32_t SearchLowLevelThreshold; // 0xac(0x04)
	float SearchLowHealthPercentageThreshold; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerAiCalculateFiringLocationsScoreService
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAiCalculateFiringLocationsScoreService : UBTService {
	struct FBlackboardKeySelector TargetKey; // 0x70(0x28)
	bool bDebugDrawLocations; // 0x98(0x01)
	bool bDebugDrawSweepChecks; // 0x99(0x01)
	bool bDebugDrawInvalidLocationReason; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Tiger.TigerAiCanCrouch
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCanCrouch : UBTDecorator {
	float MinCrouchDistanceBuffer; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Tiger.TigerAiCanFleeDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiCanFleeDecorator : UBTDecorator {
};

// Class Tiger.TigerAICanInvestigateDecorator
// Size: 0x90 (Inherited: 0x68)
struct UTigerAICanInvestigateDecorator : UBTDecorator {
	struct FBlackboardKeySelector CurrentSuspiciousTarget; // 0x68(0x28)
};

// Class Tiger.TigerAiCanUseWeaponPowerDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCanUseWeaponPowerDecorator : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAICAPBase
// Size: 0x258 (Inherited: 0x228)
struct ATigerAICAPBase : AActor {
	struct TArray<struct ATigerNPC*> NPCUsingCAP; // 0x228(0x10)
	struct TArray<struct UShapeComponent*> Colliders; // 0x238(0x10)
	float Cooldown; // 0x248(0x04)
	int32_t NumberOfSlots; // 0x24c(0x04)
	bool bShouldAdjustTransform; // 0x250(0x01)
	bool bAllowExternalProps; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)

	bool OnCheckNPCEligibility(struct ATigerNPC* NPC); // Function Tiger.TigerAICAPBase.OnCheckNPCEligibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	bool CapIsEmpty(); // Function Tiger.TigerAICAPBase.CapIsEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1373030
	void BeginOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerAICAPBase.BeginOverlappedActor // (Native|Public|HasOutParms) // @ game+0x1372e10
};

// Class Tiger.TigerAICAP
// Size: 0x268 (Inherited: 0x258)
struct ATigerAICAP : ATigerAICAPBase {
	struct TArray<struct UTigerAICommandBase*> Commands; // 0x258(0x10)
};

// Class Tiger.TigerAiCheckCanDiablerize
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCheckCanDiablerize : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiCheckIsTargetDowned
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCheckIsTargetDowned : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAIClearMasqueradeTargetTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIClearMasqueradeTargetTask : UBTTaskNode {
};

// Class Tiger.TigerAICommandBase
// Size: 0x40 (Inherited: 0x28)
struct UTigerAICommandBase : UObject {
	struct ATigerAIController* Owner; // 0x28(0x08)
	struct AActor* WorldReferenceActor; // 0x30(0x08)
	float FailSafeMaxTime; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)

	void DeactivateCommand(bool bHasFinished); // Function Tiger.TigerAICommandBase.DeactivateCommand // (Native|Public|BlueprintCallable) // @ game+0x1373240
};

// Class Tiger.TigerAICommandAbandonCAP
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandAbandonCAP : UTigerAICommandBase {
	float ChanceToAbandonCAP; // 0x40(0x04)
	bool bShouldFindSpline; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class Tiger.TigerAICommandComponent
// Size: 0x140 (Inherited: 0xb0)
struct UTigerAICommandComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)
	struct ATigerAiPermanentCap* PermanentCap; // 0xf0(0x08)
	struct ATigerNPC* Owner; // 0xf8(0x08)
	struct UTigerAICommandBase* ActiveCommand; // 0x100(0x08)
	struct UAnimMontage* LastPlayedCapMontage; // 0x108(0x08)
	struct FTigerCommandQueue CommandQueue; // 0x110(0x10)
	struct FName ContextBaseIdle; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)

	void SetContextIdle(struct FName ContextName); // Function Tiger.TigerAICommandComponent.SetContextIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x1376eb0
	void InterruptAndClearCommands(); // Function Tiger.TigerAICommandComponent.InterruptAndClearCommands // (Final|Native|Public|BlueprintCallable) // @ game+0x1376db0
	struct UTigerAICommandBase* AddCommand(struct UTigerAICommandBase* Command, struct ATigerAICAPBase* CommandGiver); // Function Tiger.TigerAICommandComponent.AddCommand // (Final|Native|Public|BlueprintCallable) // @ game+0x1376a00
};

// Class Tiger.TigerAICommandContextualAction
// Size: 0x80 (Inherited: 0x40)
struct UTigerAICommandContextualAction : UTigerAICommandBase {
	struct TArray<struct FTigerContextualAnimationWrapper> ContextualAnimations; // 0x40(0x10)
	float WaitTimeBefore; // 0x50(0x04)
	float WaitTimeBeforeRandomDeviation; // 0x54(0x04)
	float WaitTimeAfter; // 0x58(0x04)
	float WaitTimeAfterRandomDeviation; // 0x5c(0x04)
	char pad_60[0x20]; // 0x60(0x20)
};

// Class Tiger.TigerAICommandMoveTo
// Size: 0x68 (Inherited: 0x40)
struct UTigerAICommandMoveTo : UTigerAICommandBase {
	struct FTigerAIMoveToLocationData MoveToData; // 0x40(0x18)
	char pad_58[0x10]; // 0x58(0x10)
};

// Class Tiger.TigerAICommandPlayerProximityWait
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandPlayerProximityWait : UTigerAICommandBase {
	float SquaredPlayerProximityRadiusRequired; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAICommandWaitForOrder
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandWaitForOrder : UTigerAICommandBase {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerAIController
// Size: 0x498 (Inherited: 0x3b0)
struct ATigerAIController : ATigerAiBaseController {
	struct FName LureTargetKeyName; // 0x3b0(0x08)
	struct FName CurrentMasqueradeTargetKeyName; // 0x3b8(0x08)
	struct FName TargetPositionKeyName; // 0x3c0(0x08)
	struct FName MasqueradeBreachTargetKey; // 0x3c8(0x08)
	struct FName BehaviorIsActiveKeyName; // 0x3d0(0x08)
	struct FName SpawnPointKeyName; // 0x3d8(0x08)
	struct FName ActiveCAPKeyName; // 0x3e0(0x08)
	struct UBehaviorTree* LureBehaviorTree; // 0x3e8(0x08)
	struct UBehaviorTree* BloodDrainedBehaviorTree; // 0x3f0(0x08)
	struct UBehaviorTree* EmptyBehaviorTree; // 0x3f8(0x08)
	struct UTigerFearValueAsset* FearValueAsset; // 0x400(0x08)
	float OutOfCombatHealthRegenerationDelay; // 0x408(0x04)
	float OutOfCombatHealthRegenerationTickInterval; // 0x40c(0x04)
	float OutOfCombatTickHealthPercentage; // 0x410(0x04)
	float TimeWhenEnteredBloodDrainedState; // 0x414(0x04)
	float CheckForPlayerWeaponsInterval; // 0x418(0x04)
	float CheckForPlayerWeaponsDeviation; // 0x41c(0x04)
	float BaseThreatRadiusForEquippedRanged; // 0x420(0x04)
	float BaseThreatRadiusForEquippedMelee; // 0x424(0x04)
	float FearValue; // 0x428(0x04)
	float MaxFearValue; // 0x42c(0x04)
	float MinCrouchDistanceFromPlayer; // 0x430(0x04)
	float ChanceToFleeWhenEnteringThreatenedState; // 0x434(0x04)
	char pad_438[0x30]; // 0x438(0x30)
	struct UTigerNpcMovementRestrictionBoundsData* MovementRestrictionBoundsData; // 0x468(0x08)
	struct UTigerNpcMovementRestrictionBoundsData* TargetMovementRestrictionBoundsData; // 0x470(0x08)
	char pad_478[0x20]; // 0x478(0x20)

	void SetupData(enum class ETigerNPCType InNpcType); // Function Tiger.TigerAIController.SetupData // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SetNewReactionData(struct FTigerNpcReactionEvent& ReactionEvent); // Function Tiger.TigerAIController.SetNewReactionData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13771d0
	struct FTigerNpcReactionEvent SetLastReactionData(); // Function Tiger.TigerAIController.SetLastReactionData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1377120
	void SetFearValue(float InFearValue); // Function Tiger.TigerAIController.SetFearValue // (Final|Native|Public|BlueprintCallable) // @ game+0x13770a0
	void SetCurrentMasqueradeTarget(struct UBlackboardComponent* BBComp, struct ATigerCharacter* InLookAtTarget); // Function Tiger.TigerAIController.SetCurrentMasqueradeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1376f40
	void RunDefaultBehavior(); // Function Tiger.TigerAIController.RunDefaultBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x1376e90
	void RequestInvestigationTicket(struct ATigerPlayer* TigerPlayer); // Function Tiger.TigerAIController.RequestInvestigationTicket // (Final|Native|Public|BlueprintCallable) // @ game+0x1376e00
	bool IsReacting(); // Function Tiger.TigerAIController.IsReacting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376dd0
	struct ATigerNPC* GetTigerPawn(); // Function Tiger.TigerAIController.GetTigerPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d90
	float GetMaxFearValue(); // Function Tiger.TigerAIController.GetMaxFearValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d70
	float GetFearValue(); // Function Tiger.TigerAIController.GetFearValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d50
	float GetFearPercentage(); // Function Tiger.TigerAIController.GetFearPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d20
	enum class ETigerAIMasqueradeState GetCurrentBehaviorState(); // Function Tiger.TigerAIController.GetCurrentBehaviorState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d00
	struct ATigerAICAPBase* GetActiveCAP(); // Function Tiger.TigerAIController.GetActiveCAP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376cd0
	void ClearCurrentMasqueradeTarget(struct UBlackboardComponent* BBComp); // Function Tiger.TigerAIController.ClearCurrentMasqueradeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1376c40
	void CancelLureBehavior(); // Function Tiger.TigerAIController.CancelLureBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x1376c20
	void AdjustFearValue(float Adjustment); // Function Tiger.TigerAIController.AdjustFearValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1376ad0
};

// Class Tiger.TigerAiMovementBudgetAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerAiMovementBudgetAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerAiMovementBudget> MovementBudgets; // 0x30(0x50)
};

// Class Tiger.TigerAICoordinator
// Size: 0x3f8 (Inherited: 0xb0)
struct UTigerAICoordinator : UActorComponent {
	int32_t AttackingNpcForPlayerLimit; // 0xb0(0x04)
	float SprintTimeUntilReport; // 0xb4(0x04)
	float ClimbTimeUntilReport; // 0xb8(0x04)
	float AirTimeUntilReport; // 0xbc(0x04)
	float SuspicionStateTime; // 0xc0(0x04)
	float ThreatStateTime; // 0xc4(0x04)
	float SuspiciousStateEscapeRadiusSquared; // 0xc8(0x04)
	float ThreatenedStateEscapeRadiusSquared; // 0xcc(0x04)
	float MakeNearbyNPCsSuspiciousRadius; // 0xd0(0x04)
	float FearValueDecreasePerSecond; // 0xd4(0x04)
	float CrimeActionCooldownDistance; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	float CrimeActionMasqueradePointThreshold; // 0xe0(0x04)
	float PatrollingHelicopterEventRadius; // 0xe4(0x04)
	float PatrollingHelicopterLowestResponseHeight; // 0xe8(0x04)
	float PatrollingHelicopterEventTimeOut; // 0xec(0x04)
	float PatrollingHelicopterTimeBetweenGunfireEventPositionUpdate; // 0xf0(0x04)
	float TimeInSmokeUntilRemoval; // 0xf4(0x04)
	bool bUseMovementTickets; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)
	struct UTigerAiMovementBudgetAsset* MovementBudgetAsset; // 0x100(0x08)
	bool bPatrollingHelicotpersAreActive; // 0x108(0x01)
	char pad_109[0x97]; // 0x109(0x97)
	struct TArray<struct ATigerEntityPatrollingHelicopter*> EntityPatrollingHelicopters; // 0x1a0(0x10)
	char pad_1B0[0x80]; // 0x1b0(0x80)
	struct TArray<struct UTigerAiEntityPlatoon*> EntityPlatoons; // 0x230(0x10)
	struct TArray<struct UTigerAiSquad*> Squads; // 0x240(0x10)
	char pad_250[0xa0]; // 0x250(0xa0)
	struct ATigerPlayerGrid* PlayerGrid; // 0x2f0(0x08)
	char pad_2F8[0xc8]; // 0x2f8(0xc8)
	struct TArray<struct FTigerPlayerActionProcessData> DelayedPlayerActionProcesses; // 0x3c0(0x10)
	char pad_3D0[0x28]; // 0x3d0(0x28)

	void SetNPCSightModifier(float Modifier); // Function Tiger.TigerAICoordinator.SetNPCSightModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x1377150
	void SetEnableAICoordinator(bool bEnabled); // Function Tiger.TigerAICoordinator.SetEnableAICoordinator // (Final|Native|Public|BlueprintCallable) // @ game+0x1377010
	void CacheFearValueThresholds(struct UTigerFearValueAsset* CivFearValueAsset, struct UTigerFearValueAsset* PolFearValueAsset); // Function Tiger.TigerAICoordinator.CacheFearValueThresholds // (Final|Native|Public|BlueprintCallable) // @ game+0x1376b50
};

// Class Tiger.TigerAiDisciplineTaskBase
// Size: 0xc8 (Inherited: 0x98)
struct UTigerAiDisciplineTaskBase : UBTTask_BlackboardBase {
	struct ATigerLocalAIController* LocalAIController; // 0x98(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0xa0(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0xa8(0x08)
	struct UTigerDisciplineBase* CurrentDisciplineBase; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerAiEntityMovementModeService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAiEntityMovementModeService : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector bCanShootKey; // 0x98(0x28)
	float StartSprintDistanceBuffer; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
};

// Class Tiger.TigerAiEntityPlatoon
// Size: 0x58 (Inherited: 0x28)
struct UTigerAiEntityPlatoon : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerAIEntityReactPlayersService
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIEntityReactPlayersService : UBTService {
	struct FBlackboardKeySelector SuspiciousTarget; // 0x70(0x28)
	float ThresholdDistanceSquared; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAiFindFiringLocation
// Size: 0x118 (Inherited: 0x70)
struct UTigerAiFindFiringLocation : UBTTaskNode {
	struct FBlackboardKeySelector TargetKey; // 0x70(0x28)
	struct FBlackboardKeySelector FiringLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector FiringLocationIndexKey; // 0xc0(0x28)
	struct FBlackboardKeySelector bCanShootKey; // 0xe8(0x28)
	float ClaimedLocationDuration; // 0x110(0x04)
	bool bDebugDraw; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
};

// Class Tiger.TigerAIFireAtActorTask
// Size: 0xe8 (Inherited: 0x98)
struct UTigerAIFireAtActorTask : UBTTask_BlackboardBase {
	struct FBlackboardKeySelector TargetToShootActorKey; // 0x98(0x28)
	struct FBlackboardKeySelector CanShootKey; // 0xc0(0x28)
};

// Class Tiger.TigerAIFleeFromThreatService
// Size: 0x140 (Inherited: 0x70)
struct UTigerAIFleeFromThreatService : UBTService {
	struct FBox SearchFleeSpotBox; // 0x70(0x1c)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector FleePoint; // 0x90(0x28)
	struct FBlackboardKeySelector ClosestThreatPosition; // 0xb8(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0xe0(0x28)
	float KeepFleeingFromSpecificPlayerRadiusSquared; // 0x108(0x04)
	float BoxCenterDistanceFromNPCPosition; // 0x10c(0x04)
	bool bShowDebugFeatures; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	struct TWeakObjectPtr<struct ATigerPlayer> PlayerFleeingFrom; // 0x114(0x08)
	char pad_11C[0x24]; // 0x11c(0x24)
};

// Class Tiger.TigerAIGetSuspectTargetService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAIGetSuspectTargetService : UBTService {
	struct FBlackboardKeySelector SuspectPosition; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentSuspectTarget; // 0x98(0x28)
	bool bShowDebugFeatures; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
};

// Class Tiger.TigerAiGiveOrderToSquad
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiGiveOrderToSquad : UBTTaskNode {
	enum class ETigerNpcSquadOrder OrderToGive; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiSpawningCap
// Size: 0x290 (Inherited: 0x258)
struct ATigerAiSpawningCap : ATigerAICAPBase {
	struct USceneComponent* SceneComp; // 0x258(0x08)
	struct UChildActorComponent* NPCSpawner; // 0x260(0x08)
	struct FName SpawningGroup; // 0x268(0x08)
	struct FName SpawnedNpcMovementGroup; // 0x270(0x08)
	struct FGuid SpawningSubGroupId; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)
};

// Class Tiger.TigerAIGroupCAP
// Size: 0x2a0 (Inherited: 0x290)
struct ATigerAIGroupCAP : ATigerAiSpawningCap {
	struct TArray<struct FTigerAiGroupCapSlot> CapSlots; // 0x290(0x10)

	bool TriggerNextCommandForSlot(struct ATigerNPC* NPC, int32_t CapSlotIndex); // Function Tiger.TigerAIGroupCAP.TriggerNextCommandForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x137b690
	bool OnRequestNewCommands(struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.OnRequestNewCommands // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool OnIsAvailableCheck(); // Function Tiger.TigerAIGroupCAP.OnIsAvailableCheck // (Native|Event|Public|BlueprintEvent) // @ game+0x137b520
	bool IsSlotAvailable(int32_t Index); // Function Tiger.TigerAIGroupCAP.IsSlotAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x137b480
	int32_t GetSlotAssignedToNPC(struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.GetSlotAssignedToNPC // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x137b3c0
	struct UTigerAICommandBase* GetNextCommand(struct FTigerAiGroupCapSlot& CapSlot, int32_t CapSlotIndex); // Function Tiger.TigerAIGroupCAP.GetNextCommand // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x137b270
	void CapCommandStarted(int32_t CapSlotIndex, int32_t CommandIndex); // Function Tiger.TigerAIGroupCAP.CapCommandStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x137b0e0
	bool AssignNpcToSlot(int32_t SlotIndex, struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.AssignNpcToSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x137b010
};

// Class Tiger.TigerAiHasCurrentSquadOrder
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiHasCurrentSquadOrder : UBTDecorator {
	enum class ETigerNpcSquadOrder SquadOrderToCompare; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiHasPlayerInSightDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiHasPlayerInSightDecorator : UBTDecorator {
};

// Class Tiger.TigerAiIsHeightElevationBlockingVision
// Size: 0xc0 (Inherited: 0x68)
struct UTigerAiIsHeightElevationBlockingVision : UBTDecorator {
	struct FBlackboardKeySelector TargetLocationKey; // 0x68(0x28)
	struct FBlackboardKeySelector bCanSeeTargetKey; // 0x90(0x28)
	float MaxVerticalAngleToTarget; // 0xb8(0x04)
	float LargeEnoughHeightDifference; // 0xbc(0x04)
};

// Class Tiger.TigerAiIsInMovementRestrictionBoundsArea
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiIsInMovementRestrictionBoundsArea : UBTDecorator {
	enum class ETigerNpcMovementRestrictionBoundsArea AreaToCompare; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiIsMovingOutOfBounds
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiIsMovingOutOfBounds : UBTDecorator {
	struct FBlackboardKeySelector TargetPositionKey; // 0x68(0x28)
	float OutOfBoundsDistance; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Tiger.TigerAIIsReactingDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAIIsReactingDecorator : UBTDecorator {
};

// Class Tiger.TigerAiIsSquadCaptain
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiIsSquadCaptain : UBTDecorator {
};

// Class Tiger.TigerAiJudgeController
// Size: 0x3f0 (Inherited: 0x3b0)
struct ATigerAiJudgeController : ATigerAiBaseController {
	struct UTigerAiJudgeSmComponent* JudgeStateMachineComp; // 0x3b0(0x08)
	struct FTigerSightConfigProperties StandardSightProperties; // 0x3b8(0x1c)
	struct FTigerSightConfigProperties CombatSightProperties; // 0x3d4(0x1c)

	void PlayTimedAnimationTriggers(struct TArray<struct FTigerTimedAnimationTrigger>& AnimationTriggers); // Function Tiger.TigerAiJudgeController.PlayTimedAnimationTriggers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x137b550
	struct ATigerJudge* GetJudgePawn(); // Function Tiger.TigerAiJudgeController.GetJudgePawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d90
};

// Class Tiger.TigerAiJudgeSmComponent
// Size: 0x178 (Inherited: 0xb0)
struct UTigerAiJudgeSmComponent : UActorComponent {
	struct TArray<struct ATigerPlayer*> CurrentlyPerceivedPlayersBySight; // 0xb0(0x10)
	struct TArray<struct ATigerPlayer*> BloodhuntedPlayersWithinCombatRadius; // 0xc0(0x10)
	struct UTigerJudgeBaseState* StartingState; // 0xd0(0x08)
	struct UTigerJudgeBaseState* DownedState; // 0xd8(0x08)
	struct UTigerJudgeBaseState* FeedingState; // 0xe0(0x08)
	struct UTigerJudgeBaseState* ActiveState; // 0xe8(0x08)
	struct TMap<struct UTigerJudgeBaseState*, struct UTigerJudgeBaseState*> InstancedStates; // 0xf0(0x50)
	float CombatRadiusSq; // 0x140(0x04)
	bool bIsSeeingAnyBloodhuntedPlayer; // 0x144(0x01)
	char pad_145[0x33]; // 0x145(0x33)

	void SwitchToState(struct UTigerJudgeBaseState* NewStateType); // Function Tiger.TigerAiJudgeSmComponent.SwitchToState // (Native|Public|BlueprintCallable) // @ game+0x137b600
	void AddMasqueradePointsToSeenPlayers(float AdjustAmount, float TimeBetweenAddingPoints); // Function Tiger.TigerAiJudgeSmComponent.AddMasqueradePointsToSeenPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x137af40
};

// Class Tiger.TigerAimAssist
// Size: 0xa0 (Inherited: 0x28)
struct UTigerAimAssist : UObject {
	struct ATigerPlayerController* PlayerController; // 0x28(0x08)
	struct FTigerAimAssistState State; // 0x30(0x68)
	char pad_98[0x8]; // 0x98(0x08)
};

// Class Tiger.TigerAimAssistSettings
// Size: 0x200 (Inherited: 0x28)
struct UTigerAimAssistSettings : UObject {
	struct FTigerAimAssistModeConfig Modes[0x4]; // 0x28(0x1a0)
	struct FVector2D BaseSlowdownAssistRadiusCm; // 0x1c8(0x08)
	struct FVector2D BaseSlowdownAssistStrength; // 0x1d0(0x08)
	struct FVector2D BaseRotationAssistRadiusCm; // 0x1d8(0x08)
	struct FVector2D BaseRotationAssistStrength; // 0x1e0(0x08)
	float MinRangeCm; // 0x1e8(0x04)
	float MaxRangeCm; // 0x1ec(0x04)
	struct FVector2D MaxRotationAssistDegreesPerSecond; // 0x1f0(0x08)
	float NoEffectScoreMultiplier; // 0x1f8(0x04)
	float RotationAssistMinimumMoveSpeed; // 0x1fc(0x04)
};

// Class Tiger.TigerAimingCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerAimingCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.TigerAiMoveAsyncTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAiMoveAsyncTask : UBTTask_BlackboardBase {
	float AcceptableRadiusSq; // 0x98(0x04)
	float ObservedBlackboardValueToleranceSq; // 0x9c(0x04)
};

// Class Tiger.TigerAiMoveToTask
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerAiMoveToTask : UBTTask_MoveTo {
	bool bResetMoveTargetOnEnd; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
};

// Class Tiger.TigerAiPathToTargetService
// Size: 0x158 (Inherited: 0x70)
struct UTigerAiPathToTargetService : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SuitableEdgeLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector IsTargetOutOfBoundsKey; // 0xc0(0x28)
	struct FBlackboardKeySelector HasPathToTargetKey; // 0xe8(0x28)
	struct FBlackboardKeySelector IsPathOutOfBoundsKey; // 0x110(0x28)
	float OutOfBoundsDistance; // 0x138(0x04)
	float HeightDifferenceOutOfBounds; // 0x13c(0x04)
	bool bDebugDraw; // 0x140(0x01)
	char pad_141[0x17]; // 0x141(0x17)
};

// Class Tiger.TigerAIPerceptionSystem
// Size: 0x130 (Inherited: 0x130)
struct UTigerAIPerceptionSystem : UAIPerceptionSystem {
};

// Class Tiger.TigerAiPerfBenchUseWeapon
// Size: 0x90 (Inherited: 0x70)
struct UTigerAiPerfBenchUseWeapon : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPermanentCap
// Size: 0x2c8 (Inherited: 0x290)
struct ATigerAiPermanentCap : ATigerAiSpawningCap {
	struct TArray<struct UTigerAICommandBase*> Commands; // 0x290(0x10)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	struct FName CapContextBase; // 0x2a4(0x08)
	int32_t CapContextStartingIndex; // 0x2ac(0x04)
	struct UTigerNPCAsset* NpcAssetToSpawn; // 0x2b0(0x08)
	int32_t LoopingStartIndex; // 0x2b8(0x04)
	struct TWeakObjectPtr<struct ATigerNPC> PermanentNpc; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
};

// Class Tiger.TigerAIPetClearPathToMaster
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIPetClearPathToMaster : UBTTaskNode {
};

// Class Tiger.TigerAIPetComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerAIPetComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)

	bool HasGotEndPoint(); // Function Tiger.TigerAIPetComponent.HasGotEndPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x137b460
	struct TArray<struct FVector> GetMasterPlayersStoredPath(); // Function Tiger.TigerAIPetComponent.GetMasterPlayersStoredPath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x137b1e0
	struct FVector GetEndPoint(); // Function Tiger.TigerAIPetComponent.GetEndPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x137b1b0
};

// Class Tiger.TigerAIPetFindEndOfMastersPath
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetFindEndOfMastersPath : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPetPreparePathContinuing
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetPreparePathContinuing : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPetStoreValidMasterPos
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetStoreValidMasterPos : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPlayAnimationTask
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAIPlayAnimationTask : UBTTaskNode {
	struct UAnimMontage* AnimationToPlay; // 0x70(0x08)
	struct FBlackboardKeySelector ContextualActionPointKey; // 0x78(0x28)
	struct UBehaviorTreeComponent* MyOwnerComp; // 0xa0(0x08)
	char pad_A8[0x20]; // 0xa8(0x20)
};

// Class Tiger.TigerAiPlayerAtWpRangeDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiPlayerAtWpRangeDecorator : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAIPlayerClearPrioritiesTask
// Size: 0x98 (Inherited: 0x98)
struct UTigerAIPlayerClearPrioritiesTask : UBTTask_BlackboardBase {
};

// Class Tiger.TigerAIPlayerClimbIfPossibleTask
// Size: 0xd0 (Inherited: 0x70)
struct UTigerAIPlayerClimbIfPossibleTask : UBTTaskNode {
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x70(0x08)
	struct ATigerPlayerController* PlayerController; // 0x78(0x08)
	struct ATigerPlayerCameraManager* PlayerCamera; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalClimbState* ClimbState; // 0x98(0x08)
	struct UTigerTraversalStateClimbingConfig* ClimbConfig; // 0xa0(0x08)
	float AngleFromForward; // 0xa8(0x04)
	char pad_AC[0x24]; // 0xac(0x24)
};

// Class Tiger.TigerAiPlayerCombatService
// Size: 0xd8 (Inherited: 0x70)
struct UTigerAiPlayerCombatService : UBTService {
	struct TMap<enum class ETigerWeaponType, struct FWeaponDistanceDesc> WeaponRanges; // 0x70(0x50)
	struct ATigerLocalAIController* LocalAIController; // 0xc0(0x08)
	struct AActor* CurrentLureTarget; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)
};

// Class Tiger.TigerAiPlayerDiablerizeTask
// Size: 0xc0 (Inherited: 0x98)
struct UTigerAiPlayerDiablerizeTask : UBTTask_BlackboardBase {
	float MaximumDiablerizeDistance; // 0x98(0x04)
	char pad_9C[0x24]; // 0x9c(0x24)
};

// Class Tiger.TigerAiPlayerEquipRangedWeapon
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiPlayerEquipRangedWeapon : UBTTaskNode {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Tiger.TigerAIPlayerFeeding
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerFeeding : UBTTask_BlackboardBase {
	float MaximumFeedingDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerFindBloodHuntedTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIPlayerFindBloodHuntedTask : UBTTaskNode {
};

// Class Tiger.TigerAIPlayerFindCivilianTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindCivilianTask : UBTTask_BlackboardBase {
	bool bUseHeightenedSensesSearchRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float CustomSearchSphereRadius; // 0x9c(0x04)
	bool bDrawSearchSphere; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float MaxVerticalPositionOffset; // 0xa4(0x04)
	float RaycastDistance; // 0xa8(0x04)
	int32_t SearchLowResonanceThreshold; // 0xac(0x04)
	float SearchLowHealthPercentageThreshold; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerAIPlayerFindClosestItemTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindClosestItemTask : UBTTask_BlackboardBase {
	float MaxVerticalPositionOffset; // 0x98(0x04)
	float RaycastDistance; // 0x9c(0x04)
	float SearchSphereRadius; // 0xa0(0x04)
	char pad_A4[0x14]; // 0xa4(0x14)
};

// Class Tiger.TigerAIPlayerFindNewPointTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindNewPointTask : UBTTask_BlackboardBase {
	float NavigablePointRadius; // 0x98(0x04)
	float MaxCenterDistance; // 0x9c(0x04)
	char pad_A0[0x18]; // 0xa0(0x18)
};

// Class Tiger.TigerAiPlayerMainStateService
// Size: 0xe8 (Inherited: 0x70)
struct UTigerAiPlayerMainStateService : UBTService {
	char pad_70[0x8]; // 0x70(0x08)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayer* AiPlayer; // 0x80(0x08)
	struct ATigerCharacter* TargetCharacter; // 0x88(0x08)
	struct UTigerInventoryComponent* LocalAiInventory; // 0x90(0x08)
	struct ATigerCharacter* ClosestHostileCharacterFleeingFrom; // 0x98(0x08)
	char pad_A0[0x30]; // 0xa0(0x30)
	float FleeAttackDistance; // 0xd0(0x04)
	char pad_D4[0x14]; // 0xd4(0x14)

	void OnReactionDelayPassed(struct AActor* InActor); // Function Tiger.TigerAiPlayerMainStateService.OnReactionDelayPassed // (Final|Native|Private) // @ game+0x137fe00
	void OnPerceptionUpdated(struct AActor* InActor, struct FAIStimulus InStimulus); // Function Tiger.TigerAiPlayerMainStateService.OnPerceptionUpdated // (Final|Native|Private) // @ game+0x137fc70
	void OnDiablerizeStateChanged(bool InIsDiablerizeActive, bool InIsTarget); // Function Tiger.TigerAiPlayerMainStateService.OnDiablerizeStateChanged // (Final|Native|Private) // @ game+0x137fb20
};

// Class Tiger.TigerAIPlayerMoveToTask
// Size: 0x150 (Inherited: 0xb0)
struct UTigerAIPlayerMoveToTask : UBTTask_MoveTo {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct UTigerAIPlayerClimbIfPossibleTask* ClimbTask; // 0xb8(0x08)
	struct UTigerAIPlayerSlideIfPossibleTask* SlideTask; // 0xc0(0x08)
	struct UTigerAIPlayerWallGrindTask* WallGrindTask; // 0xc8(0x08)
	float CheckStuckDelay; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	float CheckClimbTaskTransitionsDelay; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	float CheckSlideTaskTransitionsDelay; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	float JumpGapTransitionsDelay; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0xf0(0x08)
	struct ATigerPlayer* CurrentTigerPlayer; // 0xf8(0x08)
	char pad_100[0x50]; // 0x100(0x50)

	void OnLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerAIPlayerMoveToTask.OnLifeStatusChanged // (Final|Native|Public) // @ game+0x137fbf0
};

// Class Tiger.TigerAIPlayerOpenInteractiveTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerOpenInteractiveTask : UBTTask_BlackboardBase {
	char pad_98[0x20]; // 0x98(0x20)
};

// Class Tiger.TigerAIPlayerPickPriorityTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerPickPriorityTask : UBTTask_BlackboardBase {
	float MaxVerticalPositionOffset; // 0x98(0x04)
	float RaycastDistance; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerPickUpItemTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerPickUpItemTask : UBTTask_BlackboardBase {
	float MaximumLootingDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerSlideIfPossibleTask
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIPlayerSlideIfPossibleTask : UBTTaskNode {
	float MinimumSlideDistanceSqrd; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayerController* PlayerController; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalSlideState* SlideState; // 0x98(0x08)
};

// Class Tiger.TigerAIPlayerTravelBloodVeinTask
// Size: 0xd8 (Inherited: 0x98)
struct UTigerAIPlayerTravelBloodVeinTask : UBTTask_BlackboardBase {
	struct UCurveFloat* JumpProbabilityDistribution; // 0x98(0x08)
	char pad_A0[0x8]; // 0xa0(0x08)
	enum class ETigerJumpDistribution JumpDistributionType; // 0xa8(0x01)
	char pad_A9[0x2f]; // 0xa9(0x2f)
};

// Class Tiger.TigerAIPlayerUseHealingItem
// Size: 0x90 (Inherited: 0x70)
struct UTigerAIPlayerUseHealingItem : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPlayerUseWeapon
// Size: 0x90 (Inherited: 0x70)
struct UTigerAiPlayerUseWeapon : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPlayerUseWeaponPower
// Size: 0x98 (Inherited: 0x70)
struct UTigerAiPlayerUseWeaponPower : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
	struct UTigerDisciplineBase* WeaponAbility; // 0x90(0x08)
};

// Class Tiger.TigerAIPlayerWallGrindTask
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIPlayerWallGrindTask : UBTTaskNode {
	char pad_70[0x8]; // 0x70(0x08)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayerController* PlayerController; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalWallGrindState* GrindState; // 0x98(0x08)
};

// Class Tiger.TigerAiReloadWeaponTask
// Size: 0x80 (Inherited: 0x70)
struct UTigerAiReloadWeaponTask : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)

	void OnReloadAborted(); // Function Tiger.TigerAiReloadWeaponTask.OnReloadAborted // (Final|Native|Private) // @ game+0x137fe90
};

// Class Tiger.TigerAiReportNewThreatTask
// Size: 0x98 (Inherited: 0x70)
struct UTigerAiReportNewThreatTask : UBTTaskNode {
	struct FBlackboardKeySelector PlayerToReportKey; // 0x70(0x28)
};

// Class Tiger.TigerAIReportSuspciousPlayer
// Size: 0xe8 (Inherited: 0x70)
struct UTigerAIReportSuspciousPlayer : UBTTaskNode {
	struct FBlackboardKeySelector PoliceTarget; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0x98(0x28)
	struct FBlackboardKeySelector PlayerNeedsToBeReported; // 0xc0(0x28)
};

// Class Tiger.TigerAiRequestOutOfBoundsPursuitSquad
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAiRequestOutOfBoundsPursuitSquad : UBTTaskNode {
	struct FBlackboardKeySelector TargetPlayer; // 0x70(0x28)
	float NearbySquadDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAISense_Masquerade
// Size: 0x90 (Inherited: 0x80)
struct UTigerAISense_Masquerade : UAISense {
	struct TArray<struct FTigerAIMasqueradeEvent> MasqueradeEvents; // 0x80(0x10)

	void ReportPlayerAction(struct ATigerPlayer* Instigator, struct FTigerAIPlayerAction& PlayerAction); // Function Tiger.TigerAISense_Masquerade.ReportPlayerAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x137feb0
};

// Class Tiger.TigerAISenseConfig_Masquerade
// Size: 0x50 (Inherited: 0x48)
struct UTigerAISenseConfig_Masquerade : UAISenseConfig {
	struct UTigerAISense_Masquerade* Implementation; // 0x48(0x08)
};

// Class Tiger.TigerAISense_Sight
// Size: 0x170 (Inherited: 0x170)
struct UTigerAISense_Sight : UAISense_Sight {
};

// Class Tiger.TigerAISenseConfig_Sight
// Size: 0x78 (Inherited: 0x48)
struct UTigerAISenseConfig_Sight : UAISenseConfig {
	struct UTigerAISense_Sight* Implementation; // 0x48(0x08)
	float SightRadius; // 0x50(0x04)
	float LoseSightRadius; // 0x54(0x04)
	float PeripheralVisionAngleDegrees; // 0x58(0x04)
	float CloseSightRadius; // 0x5c(0x04)
	float CloseLoseSightRadius; // 0x60(0x04)
	float ClosePeripheralVisionAngleDegrees; // 0x64(0x04)
	float HeightDifference; // 0x68(0x04)
	struct FAISenseAffiliationFilter DetectionByAffiliation; // 0x6c(0x04)
	float AutoSuccessRangeFromLastSeenLocation; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerSightConfigAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerSightConfigAsset : UDataAsset {
	struct TMap<enum class ETigerNPCType, struct FTigerSightConfigData> SightData; // 0x30(0x50)
};

// Class Tiger.TigerAiSetCrouchedTask
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiSetCrouchedTask : UBTTaskNode {
	bool bShouldCrouch; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiSetMovementMode
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiSetMovementMode : UBTTaskNode {
	enum class ETigerAIAnimationMode MovementMode; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiShouldFireFleeDecorator
// Size: 0x98 (Inherited: 0x90)
struct UTigerAiShouldFireFleeDecorator : UBTDecorator_BlackboardBase {
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerAiShouldReloadDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiShouldReloadDecorator : UBTDecorator {
	bool bBaseUponFullAmmoPercentage; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float ReloadAmmoPercentage; // 0x6c(0x04)
};

// Class Tiger.TigerAiShouldReportNewThreatDecorator
// Size: 0x90 (Inherited: 0x68)
struct UTigerAiShouldReportNewThreatDecorator : UBTDecorator {
	struct FBlackboardKeySelector PlayerToReportKey; // 0x68(0x28)
};

// Class Tiger.TigerAiShouldRequestOutOfBoundsPursuitSquad
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiShouldRequestOutOfBoundsPursuitSquad : UBTDecorator {
	struct FBlackboardKeySelector CurrentTargetKey; // 0x68(0x28)
	float MaxDistanceFromCurrentSquad; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Tiger.TigerAiShouldUseDisciplineBase
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiShouldUseDisciplineBase : UBTDecorator {
	float LowHealthPercentage; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0x70(0x08)
	struct ATigerPlayerController* LocalAiPlayerController; // 0x78(0x08)
	struct ATigerPlayer* AiTigerPlayer; // 0x80(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x88(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0x90(0x08)
};

// Class Tiger.TigerAiShouldUseArchDiscipline
// Size: 0xb0 (Inherited: 0x98)
struct UTigerAiShouldUseArchDiscipline : UTigerAiShouldUseDisciplineBase {
	float ShockwavePunchMinimumTargetDistance; // 0x98(0x04)
	float EarthshockUseWithoutJumpChance; // 0x9c(0x04)
	float TrapsAndScoutsUseNearLootDistance; // 0xa0(0x04)
	float ScoutsRedeployChance; // 0xa4(0x04)
	float RejuvenatingVoiceLowHealthPercentage; // 0xa8(0x04)
	float TankyChargeUseDistance; // 0xac(0x04)
};

// Class Tiger.TigerAiShouldUseClanDiscipline
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAiShouldUseClanDiscipline : UTigerAiShouldUseDisciplineBase {
	float DisableNearTargetDistance; // 0x98(0x04)
	float SoaringLeapRayClearance; // 0x9c(0x04)
	float VanishCombatUseChance; // 0xa0(0x04)
	float ProjectionDashUseDistance; // 0xa4(0x04)
};

// Class Tiger.TigerNPCSpawningBase
// Size: 0x270 (Inherited: 0x228)
struct ATigerNPCSpawningBase : AActor {
	struct ATigerAISplinePath* AISplinePath; // 0x228(0x08)
	struct FName SpawningGroup; // 0x230(0x08)
	int32_t SpawnAmount; // 0x238(0x04)
	struct FGuid SpawningSubGroupId; // 0x23c(0x10)
	float Prio; // 0x24c(0x04)
	bool bShouldBeManuallyActivated; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	struct FName MovementGroup; // 0x254(0x08)
	char pad_25C[0x14]; // 0x25c(0x14)

	struct TArray<struct ATigerBaseNPC*> ManuallySpawnNPCs(int32_t Budget, int32_t OverrideSpawnAmount); // Function Tiger.TigerNPCSpawningBase.ManuallySpawnNPCs // (Final|Native|Public|BlueprintCallable) // @ game+0x144ca60
};

// Class Tiger.TigerAISpawner
// Size: 0x278 (Inherited: 0x270)
struct ATigerAISpawner : ATigerNPCSpawningBase {
	struct UTigerNPCAsset* NPCAsset; // 0x270(0x08)
};

// Class Tiger.TigerAISplinePath
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerAISplinePath : AActor {
	struct FTigerAISplinePathData PathData; // 0x228(0xa0)
	char pad_2C8[0x8]; // 0x2c8(0x08)
};

// Class Tiger.TigerAiSplinePathHub
// Size: 0x240 (Inherited: 0x228)
struct ATigerAiSplinePathHub : AActor {
	struct TArray<struct FTigerAISplinePathConnection> SplineConnections; // 0x228(0x10)
	float ConnectionRadius; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
};

// Class Tiger.TigerAiSquad
// Size: 0x68 (Inherited: 0x28)
struct UTigerAiSquad : UObject {
	char pad_28[0x40]; // 0x28(0x40)
};

// Class Tiger.TigerAiSquadFormationService
// Size: 0xb0 (Inherited: 0x70)
struct UTigerAiSquadFormationService : UBTService {
	struct FBlackboardKeySelector FormationLocationKey; // 0x70(0x28)
	bool bDebugDraw; // 0x98(0x01)
	char pad_99[0x17]; // 0x99(0x17)
};

// Class Tiger.TigerAIsRespondingToRoar
// Size: 0x68 (Inherited: 0x68)
struct UTigerAIsRespondingToRoar : UBTDecorator {
};

// Class Tiger.TigerAiStopActiveCapTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAiStopActiveCapTask : UBTTaskNode {
};

// Class Tiger.TigerAiTargetOutOfBounds
// Size: 0xe0 (Inherited: 0x68)
struct UTigerAiTargetOutOfBounds : UBTDecorator {
	struct FBlackboardKeySelector IsTargetOutOfBoundsKey; // 0x68(0x28)
	struct FBlackboardKeySelector HasPathToTargetKey; // 0x90(0x28)
	struct FBlackboardKeySelector IsPathOutOfBoundsKey; // 0xb8(0x28)
};

// Class Tiger.TigerAIThreateningTargetService
// Size: 0x148 (Inherited: 0x70)
struct UTigerAIThreateningTargetService : UBTService {
	struct FBlackboardKeySelector ThreatPosition; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentThreatTarget; // 0x98(0x28)
	struct FBlackboardKeySelector SuggestedNonObstructedPosition; // 0xc0(0x28)
	struct FBlackboardKeySelector bIsAllowedToChaseKey; // 0xe8(0x28)
	struct FBlackboardKeySelector bCanShoot; // 0x110(0x28)
	bool bUseAttackPermissions; // 0x138(0x01)
	bool bShowDebugFeatures; // 0x139(0x01)
	char pad_13A[0xe]; // 0x13a(0x0e)
};

// Class Tiger.TigerAIThreateningTargetEntityService
// Size: 0x170 (Inherited: 0x148)
struct UTigerAIThreateningTargetEntityService : UTigerAIThreateningTargetService {
	struct FBlackboardKeySelector MasqueradeBreachTargetKey; // 0x148(0x28)
};

// Class Tiger.TigerAiTryFindLocationAgainstElevatedTarget
// Size: 0xd0 (Inherited: 0x70)
struct UTigerAiTryFindLocationAgainstElevatedTarget : UBTTaskNode {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SuggestedLocationKey; // 0x98(0x28)
	float MaxStepbackDistance; // 0xc0(0x04)
	float MinStepbackDistance; // 0xc4(0x04)
	float DesiredMaxVerticalAngle; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Tiger.TigerAIUpdateBloodDrainedService
// Size: 0x78 (Inherited: 0x70)
struct UTigerAIUpdateBloodDrainedService : UBTService {
	float MaxTimeInBloodDrainedState; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerAIUpdateWaypoint
// Size: 0xf0 (Inherited: 0x70)
struct UTigerAIUpdateWaypoint : UBTService {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
	float Distance; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
};

// Class Tiger.TigerAiUseArchetypeDisciplineTask
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerAiUseArchetypeDisciplineTask : UTigerAiDisciplineTaskBase {
};

// Class Tiger.TigerAiUseClanDisciplineTask
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerAiUseClanDisciplineTask : UTigerAiDisciplineTaskBase {
};

// Class Tiger.TigerFearValueAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerFearValueAsset : UDataAsset {
	struct TMap<enum class ETigerAIMasqueradeState, float> FearValueThresholds; // 0x30(0x50)
};

// Class Tiger.TigerNpcPropAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerNpcPropAsset : UDataAsset {
	struct TArray<struct FName> TagsToAddToNpc; // 0x30(0x10)
	struct UTigerAnimationSetAsset* PropAnimationSet; // 0x40(0x08)
	struct TArray<struct FName> HeldPropAttachments; // 0x48(0x10)
};

// Class Tiger.TigerNPCVisualAsset
// Size: 0x150 (Inherited: 0x30)
struct UTigerNPCVisualAsset : UDataAsset {
	struct FName MainTag; // 0x30(0x08)
	struct TArray<struct FName> AdditionalTags; // 0x38(0x10)
	struct USkeletalMesh* SkeletalMesh; // 0x48(0x08)
	struct TArray<struct USkeletalMesh*> HeadSkeletalMeshes; // 0x50(0x10)
	struct TArray<struct USkeletalMesh*> HairSkeletalMeshes; // 0x60(0x10)
	struct TArray<struct UTigerColorSetAsset*> ColorSetAssets; // 0x70(0x10)
	struct TArray<struct UTigerLinearColorSetAsset*> HairColorSetAssets; // 0x80(0x10)
	struct UMaterialInstance* DefaultMaterial; // 0x90(0x08)
	bool bShowHeart; // 0x98(0x01)
	enum class ETigerGender Gender; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
	struct UAnimInstance* HairAnimationBlueprint; // 0xa0(0x08)
	bool bUseCharacterPreset; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct TSoftObjectPtr<UTigerCharacterPreset> CharacterPreset; // 0xb0(0x28)
	struct UAnimInstance* AnimationInstanceClass; // 0xd8(0x08)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	float ChanceForProp; // 0xe4(0x04)
	struct TMap<struct UTigerNpcPropAsset*, float> PossibleNpcProps; // 0xe8(0x50)
	float WalkSpeed; // 0x138(0x04)
	float WalkTurnSpeed; // 0x13c(0x04)
	float SprintSpeed; // 0x140(0x04)
	float SprintTurnSpeed; // 0x144(0x04)
	float StrafeSpeed; // 0x148(0x04)
	float StrafeTurnSpeed; // 0x14c(0x04)
};

// Class Tiger.TigerNPCBehaviorAsset
// Size: 0x200 (Inherited: 0x30)
struct UTigerNPCBehaviorAsset : UDataAsset {
	struct ATigerBaseNPC* NPCBlueprint; // 0x30(0x08)
	struct UTigerMasqueradeActionResponse* MasqueradeActionResponseClass; // 0x38(0x08)
	struct UBehaviorTree* DefaultBehaviorTree; // 0x40(0x08)
	struct TMap<enum class ETigerAIMasqueradeState, struct UBehaviorTree*> BehaviorTrees; // 0x48(0x50)
	struct TArray<struct UActorComponent*> AdditionalComponentClasses; // 0x98(0x10)
	struct UTigerWeapon* WeaponClass; // 0xa8(0x08)
	enum class ETigerNPCType NPCType; // 0xb0(0x01)
	enum class ETigerAIAnimationMode AnimationMode; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	struct FTigerCharacterStatModification BaseStatModifications; // 0xb4(0xa0)
	struct FTigerCharacterStatModification BaseGroupStatModifications; // 0x154(0xa0)
	bool bUseGroupStats; // 0x1f4(0x01)
	char pad_1F5[0x3]; // 0x1f5(0x03)
	float OverrideBaseMaxHealth; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
};

// Class Tiger.TigerNPCAsset
// Size: 0x50 (Inherited: 0x30)
struct UTigerNPCAsset : UDataAsset {
	struct TArray<struct FTigerRandomVisualAsset> NormalizedVisualAssets; // 0x30(0x10)
	struct UTigerNPCBehaviorAsset* BehaviorAsset; // 0x40(0x08)
	struct UTigerGrimoireEntry* GrimoireEntry; // 0x48(0x08)
};

// Class Tiger.TigerColorSetAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerColorSetAsset : UDataAsset {
	struct TMap<struct FName, struct FColor> ColorSets; // 0x30(0x50)
	struct TMap<struct FName, float> ScalarParameters; // 0x80(0x50)
};

// Class Tiger.TigerNPCCheatCommandsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerNPCCheatCommandsAsset : UDataAsset {
	struct TMap<struct FName, struct UTigerNPCAsset*> Commands; // 0x30(0x50)
};

// Class Tiger.TigerLinearColorSetAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerLinearColorSetAsset : UDataAsset {
	struct TMap<struct FName, struct FLinearColor> ColorSets; // 0x30(0x50)
	struct TMap<struct FName, float> ScalarParameters; // 0x80(0x50)
};

// Class Tiger.TigerAIWithinMovementBoundsServices
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIWithinMovementBoundsServices : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
};

// Class Tiger.TigerDisciplineMetaData
// Size: 0x30 (Inherited: 0x28)
struct UTigerDisciplineMetaData : UAnimMetaData {
	enum class ETigerDisciplinesEnum DisicplineType; // 0x28(0x01)
	bool bAllowRotationLerp; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Tiger.TigerAnimationSet
// Size: 0x360 (Inherited: 0x28)
struct UTigerAnimationSet : UObject {
	struct TArray<struct UTigerAnimationSetAsset*> ParentSets; // 0x28(0x10)
	struct TMap<struct FName, struct UAnimSequence*> Sequences; // 0x38(0x50)
	struct TMap<struct FName, struct UAnimMontage*> Montages; // 0x88(0x50)
	struct TMap<struct FName, struct UTigerMontageList*> MontageLists; // 0xd8(0x50)
	struct TMap<struct FName, struct UBlendSpace*> BlendSpaces; // 0x128(0x50)
	struct TMap<struct FName, struct UBlendSpace1D*> BlendSpaces1D; // 0x178(0x50)
	struct TMap<struct FName, struct UTigerRandomSequenceList*> RandomSequenceLists; // 0x1c8(0x50)
	struct TMap<struct FName, struct UTigerCustomSequenceList*> CustomSequences; // 0x218(0x50)
	struct TMap<struct FName, struct UTigerCustomMontageList*> CustomMontages; // 0x268(0x50)
	struct TMap<struct FName, struct UTigerCustomBlendSpaceList*> CustomBlendSpaces; // 0x2b8(0x50)
	struct TMap<struct FName, struct UTigerCustomBlendSpace1DList*> CustomBlendSpaces1D; // 0x308(0x50)
	int32_t Priority; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
};

// Class Tiger.TigerAnimationSetAsset
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimationSetAsset : UDataAsset {
	struct UTigerAnimationSet* Set; // 0x30(0x08)
};

// Class Tiger.TigerAnimationSetCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerAnimationSetCollection : UObject {
	struct UTigerAnimationSet* ResultSet; // 0x28(0x08)
	struct TArray<struct UTigerAnimationSet*> AnimationSets; // 0x30(0x10)

	void AddSet(struct UTigerAnimationSetAsset* Asset); // Function Tiger.TigerAnimationSetCollection.AddSet // (Final|Native|Public|BlueprintCallable) // @ game+0x1384e60
};

// Class Tiger.TigerMontageList
// Size: 0x38 (Inherited: 0x28)
struct UTigerMontageList : UObject {
	struct TArray<struct UAnimMontage*> MontageList; // 0x28(0x10)

	struct UAnimMontage* GetRandomMontage(); // Function Tiger.TigerMontageList.GetRandomMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13856c0
};

// Class Tiger.TigerCustomSequenceList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomSequenceList : UObject {
};

// Class Tiger.TigerCustomSequenceListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomSequenceListClan : UTigerCustomSequenceList {
	struct UAnimSequence* Sequences[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomSequenceListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomSequenceListGender : UTigerCustomSequenceList {
	struct UAnimSequence* Sequences[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomSequenceListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomSequenceListClanAndGender : UTigerCustomSequenceList {
	struct FTigerPlayerSequenceByClan SequencesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerCustomMontageList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomMontageList : UObject {
};

// Class Tiger.TigerCustomMontageListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomMontageListClan : UTigerCustomMontageList {
	struct UAnimMontage* Montages[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomMontageListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomMontageListGender : UTigerCustomMontageList {
	struct UAnimMontage* Montages[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomMontageListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomMontageListClanAndGender : UTigerCustomMontageList {
	struct FTigerPlayerMontageByClan MontagesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerCustomMontageListMeleeWeapon
// Size: 0x78 (Inherited: 0x28)
struct UTigerCustomMontageListMeleeWeapon : UTigerCustomMontageList {
	struct TMap<struct UTigerMeleeWeapon*, struct UAnimMontage*> Montages; // 0x28(0x50)
};

// Class Tiger.TigerCustomBlendSpaceList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomBlendSpaceList : UObject {
};

// Class Tiger.TigerCustomBlendSpaceListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListClan : UTigerCustomBlendSpaceList {
	struct UBlendSpace* BlendSpaces[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomBlendSpaceListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListGender : UTigerCustomBlendSpaceList {
	struct UBlendSpace* BlendSpaces[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomBlendSpaceListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListClanAndGender : UTigerCustomBlendSpaceList {
	struct FTigerPlayerBlendSpaceByClan BlendSpacesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerCustomBlendSpace1DList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DList : UObject {
};

// Class Tiger.TigerCustomBlendSpace1DListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListClan : UTigerCustomBlendSpace1DList {
	struct UBlendSpace1D* BlendSpaces[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomBlendSpace1DListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListGender : UTigerCustomBlendSpace1DList {
	struct UBlendSpace1D* BlendSpaces[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomBlendSpace1DListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListClanAndGender : UTigerCustomBlendSpace1DList {
	struct FTigerPlayerBlendSpace1DByClan BlendSpacesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerAnimIKWindow
// Size: 0x78 (Inherited: 0x30)
struct UTigerAnimIKWindow : UAnimNotifyState {
	struct FName SocketName; // 0x30(0x08)
	struct FName SocketToLineTraceFrom; // 0x38(0x08)
	enum class ETigerIKDirection IKSearchDirection; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName TargetJoint; // 0x44(0x08)
	float TargetJointVerticalOffsetAmount; // 0x4c(0x04)
	float TargetJointHorizontalOffsetAmount; // 0x50(0x04)
	float TargetJointDepthOffsetAmount; // 0x54(0x04)
	float IKResultVerticalAdjustment; // 0x58(0x04)
	float IKResultHorizontalAdjustment; // 0x5c(0x04)
	float IKResultDepthAdjustment; // 0x60(0x04)
	float IKResultAlpha; // 0x64(0x04)
	bool bIKShouldRemainActiveWhenAnimationLoops; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float InOutBlendSpeed; // 0x6c(0x04)
	bool bShouldBlendInAndOut; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerFaceCurvesAnimationMap
// Size: 0xc8 (Inherited: 0x28)
struct UTigerFaceCurvesAnimationMap : UObject {
	struct TMap<struct FName, struct UAnimSequence*> CurveAnimations; // 0x28(0x50)
	struct TMap<struct FName, struct UAnimMontage*> FaceMontages; // 0x78(0x50)
};

// Class Tiger.TigerAnimInstance
// Size: 0x3c0 (Inherited: 0x2c0)
struct UTigerAnimInstance : UAnimInstance {
	enum class ETigerEquippedWeaponType EquippedWeaponType; // 0x2b8(0x01)
	bool bOwnerIsLocked; // 0x2b9(0x01)
	struct UPoseAsset* FacePoseAsset; // 0x2c0(0x08)
	struct UAnimSequence* FacePoseAnimation; // 0x2c8(0x08)
	struct UBlendSpace* BlockStanceBlendSpace; // 0x2d0(0x08)
	char pad_2DA[0x4e]; // 0x2da(0x4e)
	struct UTigerAnimationSetAsset* DefaultAnimationSet; // 0x328(0x08)
	struct UTigerFaceCurvesAnimationMap* FaceCurvesAnimationMap; // 0x330(0x08)
	struct TArray<struct FName> AvailableFaceCurves; // 0x338(0x10)
	struct UTigerAnimationFilter* FacialAnimationFilter; // 0x348(0x08)
	struct UTigerAnimationSetCollection* AnimationSetCollection; // 0x350(0x08)
	struct UTigerAnimationSetCollection* PreviousAnimationSetCollection; // 0x358(0x08)
	struct UAnimMontage* LatestFacialAnim; // 0x360(0x08)
	struct FVector Velocity; // 0x368(0x0c)
	struct FVector PreviousVelocity; // 0x374(0x0c)
	float Speed; // 0x380(0x04)
	float Direction; // 0x384(0x04)
	float AimAnglePitch; // 0x388(0x04)
	float AimAngleYaw; // 0x38c(0x04)
	char pad_390[0x4]; // 0x390(0x04)
	bool bIsDead; // 0x394(0x01)
	bool bShooting; // 0x395(0x01)
	bool bIsBlocking; // 0x396(0x01)
	bool bIsMontagePlaying; // 0x397(0x01)
	char pad_398[0x4]; // 0x398(0x04)
	float MaxRootYawOffset; // 0x39c(0x04)
	float MaxAimingRootYawOffset; // 0x3a0(0x04)
	float RootYawOffset; // 0x3a4(0x04)
	float SmoothCharacterYaw; // 0x3a8(0x04)
	float CharacterYawLastTick; // 0x3ac(0x04)
	float CharacterYawChangeOverFrame; // 0x3b0(0x04)
	float CharacterDeltaYawSmooth; // 0x3b4(0x04)
	char pad_3B8[0x8]; // 0x3b8(0x08)

	void WeaponTypeBranch(enum class ETigerEquippedWeaponType& WeaponType); // Function Tiger.TigerAnimInstance.WeaponTypeBranch // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1385940
	void UpdateAnimNotifyIKAlphaBlendOnBones(float DeltaTime); // Function Tiger.TigerAnimInstance.UpdateAnimNotifyIKAlphaBlendOnBones // (Final|Native|Public|BlueprintCallable) // @ game+0x13858c0
	void TurnInPlace(bool bInIsStandingOnGround); // Function Tiger.TigerAnimInstance.TurnInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x1385830
	void OnSuccessfulMeleeHit(); // Function Tiger.TigerAnimInstance.OnSuccessfulMeleeHit // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnSettle(struct FTigerSettleEvent& SettleEvent); // Function Tiger.TigerAnimInstance.OnSettle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnMeleeAttack(int32_t InAttackIndex); // Function Tiger.TigerAnimInstance.OnMeleeAttack // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnInitiateAnimationBlueprint(); // Function Tiger.TigerAnimInstance.OnInitiateAnimationBlueprint // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFootstep(bool bIsLeftFoot, float FootstepDuration); // Function Tiger.TigerAnimInstance.OnFootstep // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFiredWeapon(bool bInSecondaryWeaponFired); // Function Tiger.TigerAnimInstance.OnFiredWeapon // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnChangeAnimationSet(); // Function Tiger.TigerAnimInstance.OnChangeAnimationSet // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsActiveMontageRootMotion(); // Function Tiger.TigerAnimInstance.IsActiveMontageRootMotion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385800
	struct UAnimSequence* GetSequence(struct FName SequenceName); // Function Tiger.TigerAnimInstance.GetSequence // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385760
	struct UAnimMontage* GetRandomMontage(struct FName MontageListName); // Function Tiger.TigerAnimInstance.GetRandomMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385620
	struct UTigerRandomSequenceList* GetRandomAnimationSequenceList(struct FName SequenceListName); // Function Tiger.TigerAnimInstance.GetRandomAnimationSequenceList // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385580
	struct UTigerRandomSequenceList* GetPreviousRandomAnimationSequenceList(struct FName SequenceListName); // Function Tiger.TigerAnimInstance.GetPreviousRandomAnimationSequenceList // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13854e0
	struct UBlendSpace* GetPreviousBlendSpace(struct FName BlendSpaceName); // Function Tiger.TigerAnimInstance.GetPreviousBlendSpace // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385440
	struct UAnimMontage* GetMontage(struct FName InMontageName); // Function Tiger.TigerAnimInstance.GetMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13853a0
	void GetFaceAnimSlotsWithActiveCurves(struct FName& OutSlot0, struct FName& OutSlot1, struct FName& OutSlot2, struct FName& OutSlot3); // Function Tiger.TigerAnimInstance.GetFaceAnimSlotsWithActiveCurves // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1385160
	struct UAnimSequence* GetFaceAnimationForCurve(struct FName& CurveName); // Function Tiger.TigerAnimInstance.GetFaceAnimationForCurve // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385300
	struct UBlendSpace1D* GetBlendSpace1D(struct FName BlendSpace1DName); // Function Tiger.TigerAnimInstance.GetBlendSpace1D // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1385020
	struct UBlendSpace* GetBlendSpace(struct FName BlendSpaceName); // Function Tiger.TigerAnimInstance.GetBlendSpace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13850c0
	struct UTigerAnimationSetAsset* GetAnimSetAssetFromWeaponClass(struct UTigerWeapon* InWeaponClass); // Function Tiger.TigerAnimInstance.GetAnimSetAssetFromWeaponClass // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool GetAnimNotifyIKDataForBone(struct FName BoneName, struct FTigerAnimNotifyIKData& IKData); // Function Tiger.TigerAnimInstance.GetAnimNotifyIKDataForBone // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1384ef0
	void AddSets(struct UTigerAnimationSetCollection* SetCollection); // Function Tiger.TigerAnimInstance.AddSets // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void AbortFacialAnimCallback(); // Function Tiger.TigerAnimInstance.AbortFacialAnimCallback // (Final|Native|Public) // @ game+0x1384e40
	void AbortAnimation(float BlendOutTime, struct UAnimMontage* AnimationMontage, bool bStopAllIfNullMontage); // Function Tiger.TigerAnimInstance.AbortAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1384d20
};

// Class Tiger.TigerAnimNotiftyStateFlying
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotiftyStateFlying : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotify_AddProps
// Size: 0x50 (Inherited: 0x38)
struct UTigerAnimNotify_AddProps : UAnimNotify {
	struct ATigerPropDummy* PropDummyClass; // 0x38(0x08)
	struct TArray<struct FName> PropsToSpawn; // 0x40(0x10)
};

// Class Tiger.TigerAnimNotify_CameraAnimation
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_CameraAnimation : UAnimNotify {
	struct UCameraAnim* CameraAnimation; // 0x38(0x08)
	float AnimationRate; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_CameraShake
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_CameraShake : UAnimNotify {
	struct UMatineeCameraShake* ShakeType; // 0x38(0x08)
	float ShakeScale; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_Discipline
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Discipline : UAnimNotify {
	enum class ETigerDisciplinesEnum Discipline; // 0x38(0x01)
	enum class ETigerDisciplineEvent DisciplineEvent; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// Class Tiger.TigerAnimNotify_DropProps
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_DropProps : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_Footstep
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Footstep : UAnimNotify {
	bool bIsLeftFoot; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float FootstepDuration; // 0x3c(0x04)

	void SetData(bool bIsLeftFootIn, float FootstepDurationIn); // Function Tiger.TigerAnimNotify_Footstep.SetData // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x138a9c0
};

// Class Tiger.TigerAnimNotify_Melee
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Melee : UAnimNotify {
	struct FName EventName; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_NiagaraEffect
// Size: 0x80 (Inherited: 0x38)
struct UTigerAnimNotify_NiagaraEffect : UAnimNotify {
	struct FSoftObjectPath NiagaraPath; // 0x38(0x18)
	struct UNiagaraSystem* CachedNiagaraEffect; // 0x50(0x08)
	struct FName AttachPointName; // 0x58(0x08)
	struct FVector EffectLocation; // 0x60(0x0c)
	struct FRotator EffectRotation; // 0x6c(0x0c)
	enum class EAttachLocation AttachLocationRule; // 0x78(0x01)
	bool bOnlySpawnOnLocalPlayer; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Tiger.TigerAnimNotify_ParticleEffect
// Size: 0xd0 (Inherited: 0x90)
struct UTigerAnimNotify_ParticleEffect : UAnimNotify_PlayParticleEffect {
	struct UParticleSystem* IndoorPSTemplate; // 0x90(0x08)
	struct UParticleSystem* OutdoorPSTemplate; // 0x98(0x08)
	enum class ETigerPlayOnClients PlayOnClients; // 0xa0(0x01)
	char pad_A1[0x1f]; // 0xa1(0x1f)
	struct UTigerParticleStrategyChooseSystem* ChooseParticleSystemOverride; // 0xc0(0x08)
	struct UTigerParticleStrategyPostSpawn* ParticlePostSpawnModification; // 0xc8(0x08)
};

// Class Tiger.TigerAnimNotify_PlayCharEffect
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_PlayCharEffect : UAnimNotify {
	struct UTigerCharacterEffect* Effect; // 0x38(0x08)
	struct FName SocketToUse; // 0x40(0x08)
};

// Class Tiger.TigerAnimNotify_PlayVoEvent
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_PlayVoEvent : UAnimNotify {
	struct FTigerNpcVoCategory VoCategory; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_PrimeWeapon
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_PrimeWeapon : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_Ragdoll
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_Ragdoll : UAnimNotify {
	struct FName RagdollOnlyBelowBone; // 0x38(0x08)
	bool bIncludeNamedBone; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float VelocityScale; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_Recklessness
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Recklessness : UAnimNotify {
	bool bActivate; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerAnimNotify_ReloadSlot
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadSlot : UAnimNotify {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_ReloadComplete
// Size: 0x40 (Inherited: 0x40)
struct UTigerAnimNotify_ReloadComplete : UTigerAnimNotify_ReloadSlot {
};

// Class Tiger.TigerAnimNotify_ReloadFull
// Size: 0x40 (Inherited: 0x40)
struct UTigerAnimNotify_ReloadFull : UTigerAnimNotify_ReloadSlot {
};

// Class Tiger.TigerAnimNotify_ReloadSingle
// Size: 0x40 (Inherited: 0x40)
struct UTigerAnimNotify_ReloadSingle : UTigerAnimNotify_ReloadSlot {
};

// Class Tiger.TigerAnimNotify_SetCapContext
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_SetCapContext : UAnimNotify {
	struct FName ContextName; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_SpawnMesh
// Size: 0x70 (Inherited: 0x38)
struct UTigerAnimNotify_SpawnMesh : UAnimNotify {
	struct UStaticMesh* MeshToSpawn; // 0x38(0x08)
	struct FName SocketToSpawnFrom; // 0x40(0x08)
	struct FVector Direction[0x2]; // 0x48(0x18)
	float Speed[0x2]; // 0x60(0x08)
	float RandomAngularImpulseStrength; // 0x68(0x04)
	bool bShowInEditor; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// Class Tiger.TigerAnimNotify_TriggerUpdateWpnAppearance
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_TriggerUpdateWpnAppearance : UAnimNotify {
};

// Class Tiger.TigerAnimNotifyState_AbortAnimationOnInput
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_AbortAnimationOnInput : UAnimNotifyState {
	float BlendOutTime; // 0x30(0x04)
	bool bShouldAbortOnMovement; // 0x34(0x01)
	bool bShouldAbortOnHeldBlock; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
};

// Class Tiger.TigerAnimNotifyState_CameraPresetOverride
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_CameraPresetOverride : UAnimNotifyState {
	struct UTigerCameraPreset* CameraPreset; // 0x30(0x08)
};

// Class Tiger.TigerAnimNotifyState_CancelReactionIfThreatened
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_CancelReactionIfThreatened : UAnimNotifyState {
	enum class ETigerAIAnimationMode StateToCancelFor; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)

	void OnReactionCanceled(struct ATigerNPC* NPC); // Function Tiger.TigerAnimNotifyState_CancelReactionIfThreatened.OnReactionCanceled // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerAnimNotifyState_DamageImmunity
// Size: 0x40 (Inherited: 0x30)
struct UTigerAnimNotifyState_DamageImmunity : UAnimNotifyState {
	struct TArray<struct UDamageType*> ImmunityTo; // 0x30(0x10)
};

// Class Tiger.TigerAnimNotifyState_EnableTurnStart
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_EnableTurnStart : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_EnableWeaponHitbox
// Size: 0x50 (Inherited: 0x30)
struct UTigerAnimNotifyState_EnableWeaponHitbox : UAnimNotifyState {
	char pad_30[0x10]; // 0x30(0x10)
	struct UCurveFloat* pitchOffsetCurve; // 0x40(0x08)
	int32_t WeaponIndex; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Tiger.TigerAnimNotifyState_FaceCameraDirection
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_FaceCameraDirection : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_HeavyAttackRange
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_HeavyAttackRange : UAnimNotifyState {

	void OnChargeUpEnded(struct ATigerPlayer* Player, struct UTigerMeleeWeapon* EquippedWeapon, float ChargeUpRatio); // Function Tiger.TigerAnimNotifyState_HeavyAttackRange.OnChargeUpEnded // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
	struct UTigerMeleeWeapon* GetEquippedWeapon(struct USkeletalMeshComponent* MeshComp); // Function Tiger.TigerAnimNotifyState_HeavyAttackRange.GetEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1389ec0
};

// Class Tiger.TigerAnimNotifyState_HideWeapon
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_HideWeapon : UAnimNotifyState {
	enum class ETigerTriggerUpdateWpnAppearance WeaponAppearanceUpdate; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerAnimNotifyState_Invulnerability
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_Invulnerability : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_LockOwner
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_LockOwner : UAnimNotifyState {
	bool bStopActiveMovement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerAnimNotifyState_MeleeRecoveryEnableMove
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_MeleeRecoveryEnableMove : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_OverrideCanInteractInDodge
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_OverrideCanInteractInDodge : UAnimNotifyState {
	struct UTigerMeleeWeapon* RequiredWeapon; // 0x30(0x08)
};

// Class Tiger.TigerAnimNotifyState_RangedHitAnimInterruptRange
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_RangedHitAnimInterruptRange : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_ResetCloth
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_ResetCloth : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_TimedIndoorOutDoorParticleEffect
// Size: 0x78 (Inherited: 0x30)
struct UTigerAnimNotifyState_TimedIndoorOutDoorParticleEffect : UAnimNotifyState {
	struct UParticleSystem* IndoorPSTemplate; // 0x30(0x08)
	struct UParticleSystem* OutdoorPSTemplate; // 0x38(0x08)
	enum class ETigerPlayOnClients PlayOnClients; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName SocketName; // 0x44(0x08)
	struct FVector LocationOffset; // 0x4c(0x0c)
	struct FRotator RotationOffset; // 0x58(0x0c)
	bool bDestroyAtEnd; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	struct UTigerParticleStrategyChooseSystem* ChooseParticleSystemOverride; // 0x68(0x08)
	struct UTigerParticleStrategyPostSpawn* ParticlePostSpawnModification; // 0x70(0x08)
};

// Class Tiger.TigerAnimNotifyState_WallGrindFX
// Size: 0x40 (Inherited: 0x30)
struct UTigerAnimNotifyState_WallGrindFX : UAnimNotifyState {
	struct TArray<struct FName> SocketsToUse; // 0x30(0x10)
};

// Class Tiger.TigerAnimNotifyState_WeaponGlow
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_WeaponGlow : UAnimNotifyState {

	void OnWeaponGlowEnd(struct USkeletalMeshComponent* WeaponMeshComponent, struct UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig); // Function Tiger.TigerAnimNotifyState_WeaponGlow.OnWeaponGlowEnd // (Event|Protected|BlueprintEvent|Const) // @ game+0x184a280
	void OnWeaponGlowBegin(struct USkeletalMeshComponent* WeaponMeshComponent, struct UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig); // Function Tiger.TigerAnimNotifyState_WeaponGlow.OnWeaponGlowBegin // (Event|Protected|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerAnimNotifyStateAttachMesh
// Size: 0x48 (Inherited: 0x30)
struct UTigerAnimNotifyStateAttachMesh : UAnimNotifyState {
	struct UStaticMesh* MeshToSpawn; // 0x30(0x08)
	struct FName SocketName; // 0x38(0x08)
	bool bShowInEditor; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float PropTimeout; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotifyStateJdgSword
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyStateJdgSword : UAnimNotifyState {
};

// Class Tiger.TigerANS_DeltaCorrectionWindow
// Size: 0x30 (Inherited: 0x30)
struct UTigerANS_DeltaCorrectionWindow : UAnimNotifyState {
};

// Class Tiger.TigerAnsSidewaysClimbBlocker
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnsSidewaysClimbBlocker : UAnimNotifyState {
};

// Class Tiger.TigerApartmentArchetype
// Size: 0x250 (Inherited: 0x228)
struct ATigerApartmentArchetype : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USceneComponent* Min; // 0x230(0x08)
	struct USceneComponent* Max; // 0x238(0x08)
	struct TArray<struct UMaterialInterface*> PossibleWallpapers; // 0x240(0x10)
};

// Class Tiger.TigerApartmentLight
// Size: 0x228 (Inherited: 0x228)
struct ATigerApartmentLight : AActor {
};

// Class Tiger.TigerWidget
// Size: 0x280 (Inherited: 0x260)
struct UTigerWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)
	struct UTigerTooltipWidget* TigerTooltipWidget; // 0x268(0x08)
	struct TArray<struct FTigerTooltipAction> TooltipActions; // 0x270(0x10)

	void UpdateScrollOffsetFromGamepadInput(struct UScrollBox* ScrollBox); // Function Tiger.TigerWidget.UpdateScrollOffsetFromGamepadInput // (Final|Native|Public|BlueprintCallable) // @ game+0x14fbec0
	bool ShouldIgnoreVisibilityChanges(); // Function Tiger.TigerWidget.ShouldIgnoreVisibilityChanges // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x14fbe60
	struct UTigerTooltipWidget* ReuseOrCreateNewTooltipWidget(struct UTigerTooltipWidget* InTooltipClass); // Function Tiger.TigerWidget.ReuseOrCreateNewTooltipWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x14fbdc0
	void RemoveTooltipInputListeners(); // Function Tiger.TigerWidget.RemoveTooltipInputListeners // (Final|Native|Public|BlueprintCallable) // @ game+0x14fbda0
	void PostAkEvent(struct UAkAudioEvent* AudioEvent); // Function Tiger.TigerWidget.PostAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x14fbc80
	void OnPlayerStateReceived(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerWidget.OnPlayerStateReceived // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsSharkmobAccountLoginsEnabled(); // Function Tiger.TigerWidget.IsSharkmobAccountLoginsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14fb7b0
	void IncrementCollapseVisibility(); // Function Tiger.TigerWidget.IncrementCollapseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb790
	struct ATigerPlayer* GetViewTargetTigerPlayer(); // Function Tiger.TigerWidget.GetViewTargetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb4b0
	struct ATigerSpectatorPawn* GetTigerSpectator(); // Function Tiger.TigerWidget.GetTigerSpectator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb480
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerWidget.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb450
	struct ATigerPlayerController* GetTigerPlayerController(); // Function Tiger.TigerWidget.GetTigerPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb420
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerWidget.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb3f0
	struct UTigerPersistentPlayerState* GetTigerPersistentPlayerState(); // Function Tiger.TigerWidget.GetTigerPersistentPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb3c0
	struct ATigerMatchHUD* GetTigerMatchHUD(); // Function Tiger.TigerWidget.GetTigerMatchHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb390
	struct ATigerMatchGameState* GetTigerMatchGameState(); // Function Tiger.TigerWidget.GetTigerMatchGameState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb360
	struct ATigerElysiumHUD* GetTigerElysiumHUD(); // Function Tiger.TigerWidget.GetTigerElysiumHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb330
	struct ATigerHUD* GetTigerBaseHUD(); // Function Tiger.TigerWidget.GetTigerBaseHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb300
	struct ATigerPlayer* GetSpectatedTigerPlayer(); // Function Tiger.TigerWidget.GetSpectatedTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb2d0
	float GetScrollOffsetFromGamepadInput(); // Function Tiger.TigerWidget.GetScrollOffsetFromGamepadInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb2a0
	struct UWidget* GetRootWidget(); // Function Tiger.TigerWidget.GetRootWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb270
	struct UTigerPartyManager* GetPartyManager(); // Function Tiger.TigerWidget.GetPartyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb240
	void DecrementCollapseVisibility(); // Function Tiger.TigerWidget.DecrementCollapseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb220
	struct UTigerTooltipWidget* ConstructTooltipWidget(); // Function Tiger.TigerWidget.ConstructTooltipWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void CallReleasedForAction(struct FName& InputAction); // Function Tiger.TigerWidget.CallReleasedForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14fb0a0
	void CallPressedForAction(struct FName& InputAction); // Function Tiger.TigerWidget.CallPressedForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14fb010
	void AddTooltipInputListeners(); // Function Tiger.TigerWidget.AddTooltipInputListeners // (Final|Native|Public|BlueprintCallable) // @ game+0x14faf60
	void AddTooltipAction(struct FTigerTooltipAction& NewTooltipAction, struct FDelegate& OnPressed, struct FDelegate& OnReleased); // Function Tiger.TigerWidget.AddTooltipAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14fad80
};

// Class Tiger.TigerArchetypeLevelWidget
// Size: 0x290 (Inherited: 0x280)
struct UTigerArchetypeLevelWidget : UTigerWidget {
	int32_t ArchetypeLevel; // 0x280(0x04)
	struct TWeakObjectPtr<struct ATigerPlayer> RepresentedPlayer; // 0x284(0x08)
	char pad_28C[0x4]; // 0x28c(0x04)

	void UpdateArchetypeLevel(); // Function Tiger.TigerArchetypeLevelWidget.UpdateArchetypeLevel // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnSelectedPerksUpdated(); // Function Tiger.TigerArchetypeLevelWidget.OnSelectedPerksUpdated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeLevelWidget.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x138a930
	void OnArchetypeChanged(struct UTigerPlayerClanData* InClanData, struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeLevelWidget.OnArchetypeChanged // (Final|Native|Protected) // @ game+0x138a860
	void Init(struct ATigerPlayer* InRepresentedPlayer); // Function Tiger.TigerArchetypeLevelWidget.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x138a7d0
};

// Class Tiger.TigerArchetypeRewardData
// Size: 0xb0 (Inherited: 0x30)
struct UTigerArchetypeRewardData : UDataAsset {
	struct FTigerArchetype Archetypes[0x8]; // 0x30(0x80)

	struct TArray<struct FTigerItemId> GetRewardsInLevelRange(enum class ETigerPowerKitType InType, int32_t InLowerLevel, int32_t InUpperLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardsInLevelRange // (Final|Native|Public|BlueprintCallable) // @ game+0x138a670
	struct TArray<struct FTigerItemId> GetRewardsBeforeLevel(enum class ETigerPowerKitType InType, int32_t InLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardsBeforeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x138a560
	struct TArray<struct FTigerItemId> GetRewardsAfterLevel(enum class ETigerPowerKitType InType, int32_t InLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardsAfterLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x138a450
	struct TArray<struct FTigerItemId> GetRewards(enum class ETigerPowerKitType InType); // Function Tiger.TigerArchetypeRewardData.GetRewards // (Final|Native|Public|BlueprintCallable) // @ game+0x138a370
	struct FTigerItemId GetRewardForLevel(enum class ETigerPowerKitType InType, int32_t InLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardForLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x138a290
	bool GetNextLevelReward(enum class ETigerPowerKitType InType, int32_t InLevel, struct FTigerArchetypeReward& OutArchetypeReward); // Function Tiger.TigerArchetypeRewardData.GetNextLevelReward // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x138a160
	struct TArray<struct FTigerArchetypeReward> GetLevelRewards(enum class ETigerPowerKitType InType); // Function Tiger.TigerArchetypeRewardData.GetLevelRewards // (Final|Native|Public|BlueprintCallable) // @ game+0x138a080
	void GetFirstAndLastRewardLevels(enum class ETigerPowerKitType InType, int32_t& OutFirstRewardLevel, int32_t& OutLastRewardLevel); // Function Tiger.TigerArchetypeRewardData.GetFirstAndLastRewardLevels // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1389f60
	int32_t FindRewardUnlockLevel(enum class ETigerPowerKitType InType, struct UTigerInventoryItemBase* InRewardItem); // Function Tiger.TigerArchetypeRewardData.FindRewardUnlockLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1389df0
};

// Class Tiger.TigerMenuWidget
// Size: 0x298 (Inherited: 0x280)
struct UTigerMenuWidget : UTigerWidget {
	struct UTigerSharedMouseCursor* SharedMouseCursor; // 0x280(0x08)
	bool bStopPlayerInteractionsOnOpen; // 0x288(0x01)
	bool bShouldShowMouseCursorOnOpenWithGamepad; // 0x289(0x01)
	char pad_28A[0x1]; // 0x28a(0x01)
	bool bShouldCloseOtherMenusOnOpen; // 0x28b(0x01)
	char pad_28C[0x2]; // 0x28c(0x02)
	bool bShouldThrottleFrameRate; // 0x28e(0x01)
	char pad_28F[0x9]; // 0x28f(0x09)

	bool TryMakeDateTime(int32_t InYear, int32_t InMonth, int32_t InDay, struct FDateTime& OutDateTime); // Function Tiger.TigerMenuWidget.TryMakeDateTime // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1444b10
	void Open(); // Function Tiger.TigerMenuWidget.Open // (Native|Public|BlueprintCallable) // @ game+0x13deb70
	void OnPersistentPlayerStateInitialized(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerMenuWidget.OnPersistentPlayerStateInitialized // (Native|Event|Protected|BlueprintEvent) // @ game+0x13deb90
	void OnPersistentPlayerInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerMenuWidget.OnPersistentPlayerInitialized // (Final|Native|Protected) // @ game+0x14449d0
	void OnOpen(); // Function Tiger.TigerMenuWidget.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnClose(); // Function Tiger.TigerMenuWidget.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsOpen(); // Function Tiger.TigerMenuWidget.IsOpen // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1444940
	void Close(); // Function Tiger.TigerMenuWidget.Close // (Native|Public|BlueprintCallable) // @ game+0x1435c80
};

// Class Tiger.TigerIngameSubmenuWidget
// Size: 0x2c0 (Inherited: 0x298)
struct UTigerIngameSubmenuWidget : UTigerMenuWidget {
	struct FText MenuName; // 0x298(0x18)
	struct UTigerIngameMenuWidget* MenuContainer; // 0x2b0(0x08)
	bool InGameMenuEnabled; // 0x2b8(0x01)
	enum class ETigerNewNotificationMenuOptions NewNotificationMenuOption; // 0x2b9(0x01)
	char pad_2BA[0x6]; // 0x2ba(0x06)

	void UnregisterSharedInputs(); // Function Tiger.TigerIngameSubmenuWidget.UnregisterSharedInputs // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void RegisterSharedInputs(); // Function Tiger.TigerIngameSubmenuWidget.RegisterSharedInputs // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSceneBackgroundUI
// Size: 0x3c0 (Inherited: 0x2c0)
struct UTigerSceneBackgroundUI : UTigerIngameSubmenuWidget {
	struct TSoftObjectPtr<UWorld> DefaultSubLevel; // 0x2c0(0x28)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	struct UTigerSubLevelList* SubLevelList; // 0x2f0(0x08)
	struct FName DefaultCameraTag; // 0x2f8(0x08)
	struct FName SpawnLocationTag; // 0x300(0x08)
	struct FViewTargetTransitionParams CameraTransitionParams; // 0x308(0x10)
	struct TSoftObjectPtr<UTigerItemPreviewAsset> ItemPreviews; // 0x318(0x28)
	struct FName ItemParentTag; // 0x340(0x08)
	struct ATigerSingleChildActor* ItemParentActor; // 0x348(0x08)
	struct TSoftClassPtr<UObject> CurrentPreviewItem; // 0x350(0x28)
	struct TArray<struct ACineCameraActor*> CinematicCameras; // 0x378(0x10)
	char pad_388[0x20]; // 0x388(0x20)
	struct FMulticastInlineDelegate OnBackgroundShown; // 0x3a8(0x10)
	char pad_3B8[0x8]; // 0x3b8(0x08)

	bool TransitionToCameraWithTag(struct FName& CameraTag, bool bUseCameraTransition); // Function Tiger.TigerSceneBackgroundUI.TransitionToCameraWithTag // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14b3400
	void ShowDefaultBackgroundScene(); // Function Tiger.TigerSceneBackgroundUI.ShowDefaultBackgroundScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b3330
	void ShowBackgroundScene(int32_t InSubLevelIndex); // Function Tiger.TigerSceneBackgroundUI.ShowBackgroundScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b32a0
	void RetryPreviewItem(); // Function Tiger.TigerSceneBackgroundUI.RetryPreviewItem // (Final|Native|Protected) // @ game+0x14b2ed0
	void PreviewReward(struct FTigerItemId ItemId); // Function Tiger.TigerSceneBackgroundUI.PreviewReward // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b2e40
	void PreviewItem(struct TSoftClassPtr<UObject>& InItemClassPath); // Function Tiger.TigerSceneBackgroundUI.PreviewItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14b2d80
	void OnPreviewItemUpdated(struct UTigerInventoryItemBase* InPreviewItem, struct ATigerBattlepassRewardPreview* InPreviewActor, struct UTigerInventoryItemBase* InCombinedItemParent); // Function Tiger.TigerSceneBackgroundUI.OnPreviewItemUpdated // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnPreviewItemOpened(); // Function Tiger.TigerSceneBackgroundUI.OnPreviewItemOpened // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b2cd0
	void OnBackgroundSceneShownNative(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneShownNative // (Native|Protected) // @ game+0x13deb30
	void OnBackgroundSceneShown(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneShown // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnBackgroundSceneLoadedNative(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneLoadedNative // (Final|Native|Protected) // @ game+0x14b2b80
	void HidePreviewItem(); // Function Tiger.TigerSceneBackgroundUI.HidePreviewItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b29e0
	struct TArray<struct AActor*> GetCurrentPaperDollArray(struct FName InBattlePassSubLevelName); // Function Tiger.TigerSceneBackgroundUI.GetCurrentPaperDollArray // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b2860
};

// Class Tiger.TigerArchetypeSelectElysiumUI
// Size: 0x3e0 (Inherited: 0x3c0)
struct UTigerArchetypeSelectElysiumUI : UTigerSceneBackgroundUI {
	struct TArray<struct FTigerPersistentPlayerCharacter> PlayerCharacters; // 0x3c0(0x10)
	struct FTigerItemId AdditionalCharacterSlotItem; // 0x3d0(0x08)
	char NumCharacterSlots; // 0x3d8(0x01)
	char pad_3D9[0x7]; // 0x3d9(0x07)

	void SelectCharacter(struct FTigerPersistentCharacterID InCharacterId); // Function Tiger.TigerArchetypeSelectElysiumUI.SelectCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x138ecd0
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeSelectElysiumUI.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x138eb40
	void OnPlayerInventoryChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeSelectElysiumUI.OnPlayerInventoryChanged // (Final|Native|Protected) // @ game+0x138ea30
	void OnGotPlayerCharacters(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectElysiumUI.OnGotPlayerCharacters // (Final|Native|Protected|HasOutParms) // @ game+0x138e770
	void OnBuyCharacterSlotServerResponse(bool bInSuccess, struct FTigerItemId& InItemId, struct FString InErrorMessage); // Function Tiger.TigerArchetypeSelectElysiumUI.OnBuyCharacterSlotServerResponse // (Final|Native|Protected|HasOutParms) // @ game+0x138e620
	void OnBuyCharacterSlotResults(bool bInSuccess, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectElysiumUI.OnBuyCharacterSlotResults // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnArchetypeChanged(struct UTigerPowerKit* InArchetypeData, struct TArray<int32_t>& InPlayerArchetypeCharacterIndices); // Function Tiger.TigerArchetypeSelectElysiumUI.OnArchetypeChanged // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	struct FTigerItemIdWithPrice GetAdditionalSlotPrice(); // Function Tiger.TigerArchetypeSelectElysiumUI.GetAdditionalSlotPrice // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e230
	void CreateNewCharacter(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectElysiumUI.CreateNewCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x138df50
	void ChangeArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectElysiumUI.ChangeArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x138dec0
	void BuyAdditionalCharacterSlot(); // Function Tiger.TigerArchetypeSelectElysiumUI.BuyAdditionalCharacterSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x138dea0
};

// Class Tiger.TigerArchetypeSelectPragueUI
// Size: 0x310 (Inherited: 0x298)
struct UTigerArchetypeSelectPragueUI : UTigerMenuWidget {
	int32_t GroupSize; // 0x298(0x04)
	int32_t PreGameStateEndTime; // 0x29c(0x04)
	struct FString PreHighlightTag; // 0x2a0(0x10)
	struct FName CameraLevelName; // 0x2b0(0x08)
	float TimeLeftUntilStateChange; // 0x2b8(0x04)
	enum class ETigerArchetypeSelectUiState UiState; // 0x2bc(0x01)
	char pad_2BD[0x3]; // 0x2bd(0x03)
	struct TArray<struct FTigerPersistentPlayerCharacter> PlayerCharacters; // 0x2c0(0x10)
	enum class ETigerPowerKitType SelectedArchetypeType; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComp; // 0x2d8(0x08)
	char pad_2E0[0x30]; // 0x2e0(0x30)

	void SelectCharacterForArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectPragueUI.SelectCharacterForArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x138ed50
	void RevertLODBias(); // Function Tiger.TigerArchetypeSelectPragueUI.RevertLODBias // (Final|Native|Protected|BlueprintCallable) // @ game+0x138ecb0
	void OnUiStateChanged(enum class ETigerArchetypeSelectUiState InPreviousUiState); // Function Tiger.TigerArchetypeSelectPragueUI.OnUiStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPlayerCharactersReceived(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectPragueUI.OnPlayerCharactersReceived // (Final|Native|Protected|HasOutParms) // @ game+0x138e8d0
	void OnPlayerChangedSelection(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerArchetypeSelectPragueUI.OnPlayerChangedSelection // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnGroupMembersChanged(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*>& InPreviousGroupMembers); // Function Tiger.TigerArchetypeSelectPragueUI.OnGroupMembersChanged // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnBackgroundLevelLoaded(); // Function Tiger.TigerArchetypeSelectPragueUI.OnBackgroundLevelLoaded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnArchetypeSelectionLocked(struct ATigerPlayerState* InPlayerState, enum class ETigerPowerKitType InArchetype); // Function Tiger.TigerArchetypeSelectPragueUI.OnArchetypeSelectionLocked // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void HandleLevelVisibilityChanged(); // Function Tiger.TigerArchetypeSelectPragueUI.HandleLevelVisibilityChanged // (Final|Native|Protected) // @ game+0x138e410
	float GetSecondsLeftUntilPlayerSelection(enum class ETigerArchetypeSelectUiState InPlayerUiState); // Function Tiger.TigerArchetypeSelectPragueUI.GetSecondsLeftUntilPlayerSelection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e2d0
	void EnablePaperDollHighlight(struct ATigerPaperDoll* InPaperDoll, bool bInEnable); // Function Tiger.TigerArchetypeSelectPragueUI.EnablePaperDollHighlight // (Final|Native|Protected|BlueprintCallable) // @ game+0x138e000
};

// Class Tiger.TigerBuffInstance
// Size: 0x88 (Inherited: 0x28)
struct UTigerBuffInstance : UObject {
	struct FTigerBuffReplicatedInstanceData BuffReplicatedInstanceData; // 0x28(0x20)
	struct TWeakObjectPtr<struct ATigerCharacter> OwnerCharacter; // 0x48(0x08)
	struct UTigerBuff* Buff; // 0x50(0x08)
	char pad_58[0x10]; // 0x58(0x10)
	struct UParticleSystemComponent* ActiveBuffParticles; // 0x68(0x08)
	struct UNiagaraComponent* ActiveNiagaraParticles; // 0x70(0x08)
	struct TArray<struct UNiagaraComponent*> AdditionalActiveNiagaraParticles; // 0x78(0x10)

	struct ATigerCharacter* GetOwningCharacter(); // Function Tiger.TigerBuffInstance.GetOwningCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396a50
	struct UNiagaraComponent* GetActiveNiagaraParticles(); // Function Tiger.TigerBuffInstance.GetActiveNiagaraParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13969f0
	struct UParticleSystemComponent* GetActiveBuffParticles(); // Function Tiger.TigerBuffInstance.GetActiveBuffParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13969d0
};

// Class Tiger.TigerAreaBuffInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerAreaBuffInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerAreaBuff
// Size: 0x260 (Inherited: 0x260)
struct UTigerAreaBuff : UTigerBuff {
};

// Class Tiger.TigerAreaEffect
// Size: 0x510 (Inherited: 0x228)
struct ATigerAreaEffect : AActor {
	struct UParticleSystem* StartParticleType; // 0x228(0x08)
	struct UParticleSystem* LoopedParticleType; // 0x230(0x08)
	struct UParticleSystem* EndParticleType; // 0x238(0x08)
	struct UDamageType* DamageType; // 0x240(0x08)
	enum class ETigerDamageCauser DamageCauserType; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FRuntimeFloatCurve TimeDamageModifierCurve; // 0x250(0x88)
	struct FRuntimeFloatCurve RangeDamageModifierCurve; // 0x2d8(0x88)
	struct FRuntimeFloatCurve TimeHealingModifierCurve; // 0x360(0x88)
	struct FRuntimeFloatCurve RangeHealingModifierCurve; // 0x3e8(0x88)
	struct USphereComponent* CollisionSphere; // 0x470(0x08)
	float Range; // 0x478(0x04)
	char pad_47C[0x4]; // 0x47c(0x04)
	struct UTigerBuff* DamageBuff; // 0x480(0x08)
	float InitialDamageAmount; // 0x488(0x04)
	float DamageAmount; // 0x48c(0x04)
	struct UTigerBuff* HealBuff; // 0x490(0x08)
	float InitialHealAmount; // 0x498(0x04)
	float HealAmount; // 0x49c(0x04)
	float TickRate; // 0x4a0(0x04)
	float Duration; // 0x4a4(0x04)
	float Delay; // 0x4a8(0x04)
	bool bShouldAffectCivilians; // 0x4ac(0x01)
	bool bSkipLineTrace; // 0x4ad(0x01)
	char pad_4AE[0x2]; // 0x4ae(0x02)
	struct UParticleSystemComponent* LoopedParticleComponent; // 0x4b0(0x08)
	char pad_4B8[0x40]; // 0x4b8(0x40)
	struct FTigerDamageContext DamageContext; // 0x4f8(0x18)

	void Trigger(); // Function Tiger.TigerAreaEffect.Trigger // (Final|Native|Public) // @ game+0x138ede0
	void OnVehicleHit(struct AActor* InActor); // Function Tiger.TigerAreaEffect.OnVehicleHit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnTriggerClient(); // Function Tiger.TigerAreaEffect.OnTriggerClient // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void EndOverlappedTrigger(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex); // Function Tiger.TigerAreaEffect.EndOverlappedTrigger // (Final|Native|Protected) // @ game+0x138e0d0
	void BeginOverlappedTrigger(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerAreaEffect.BeginOverlappedTrigger // (Final|Native|Protected|HasOutParms) // @ game+0x138dc70
};

// Class Tiger.TigerSimpleTextPrompt
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerSimpleTextPrompt : UTigerWidget {
	struct FText DisplayText; // 0x280(0x18)
	float PromptLifetimeFailsafe; // 0x298(0x04)
	bool bIsVisible; // 0x29c(0x01)
	char pad_29D[0xb]; // 0x29d(0x0b)

	void SetText(struct FText Text); // Function Tiger.TigerSimpleTextPrompt.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x14b7bb0
	void OnShowPrompt(); // Function Tiger.TigerSimpleTextPrompt.OnShowPrompt // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnHidePrompt(); // Function Tiger.TigerSimpleTextPrompt.OnHidePrompt // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Hide(); // Function Tiger.TigerSimpleTextPrompt.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x14b74d0
	void FailsafeHide(); // Function Tiger.TigerSimpleTextPrompt.FailsafeHide // (Final|Native|Private) // @ game+0x14b7340
	bool CanBeShown(); // Function Tiger.TigerSimpleTextPrompt.CanBeShown // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x14b7270
};

// Class Tiger.TigerArtifactPickedupPrompt
// Size: 0x2b0 (Inherited: 0x2a8)
struct UTigerArtifactPickedupPrompt : UTigerSimpleTextPrompt {
	struct UTigerArtifactAsset* ArtifactAsset; // 0x2a8(0x08)

	void OnArtifactAssetSet(struct UTigerArtifactAsset* InArtifactAsset); // Function Tiger.TigerArtifactPickedupPrompt.OnArtifactAssetSet // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerAsyncChooseNextWaypoint
// Size: 0xf8 (Inherited: 0x70)
struct UTigerAsyncChooseNextWaypoint : UBTTaskNode {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
	char pad_E8[0x10]; // 0xe8(0x10)
};

// Class Tiger.TigerAudioVisualizationSpawnerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerAudioVisualizationSpawnerComponent : UActorComponent {
	struct UParticleSystem* ParticleSystemToSpawn; // 0xb0(0x08)
	int32_t MaxSimultaneousVisualizations; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct FTigerHeightenedSensesAudioVisualization> ActiveVisualizations; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	void VisualizeAudioEvent(struct FVector InLocation, bool InShowOnlyInHeightenedSenses); // Function Tiger.TigerAudioVisualizationSpawnerComponent.VisualizeAudioEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x138ee00
};

// Class Tiger.TigerAuthenticationManager
// Size: 0x178 (Inherited: 0x38)
struct UTigerAuthenticationManager : UTigerAuthenticationManagerBase {
	char pad_38[0x38]; // 0x38(0x38)
	bool bEnableSharkmobAccountLogin; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct UTigerGameInstance* GameInstance; // 0x78(0x08)
	char pad_80[0xf8]; // 0x80(0xf8)

	bool IsSharkmobAccountLoginsEnabled(); // Function Tiger.TigerAuthenticationManager.IsSharkmobAccountLoginsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e430
	struct FString GetUserLocation(); // Function Tiger.TigerAuthenticationManager.GetUserLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e390
	enum class EShAccountChannel GetAuthenticatedChannel(); // Function Tiger.TigerAuthenticationManager.GetAuthenticatedChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e270
};

// Class Tiger.TigerBalconyVolumeDefaultValues
// Size: 0x40 (Inherited: 0x30)
struct UTigerBalconyVolumeDefaultValues : UDataAsset {
	struct TArray<struct FTigerBuildingSystemBalconyVolumeDefaults> DefaultBalconyVolumeSets; // 0x30(0x10)
};

// Class Tiger.TigerNPCFacePoseMap
// Size: 0x38 (Inherited: 0x28)
struct UTigerNPCFacePoseMap : UObject {
	struct TArray<struct FTigerFacePoseData> HeadMeshsPoseAssets; // 0x28(0x10)
};

// Class Tiger.TigerCharacter
// Size: 0x7a0 (Inherited: 0x4c0)
struct ATigerCharacter : ACharacter {
	struct UTigerCharacterMeshManager* MeshManager; // 0x4c0(0x08)
	struct UTigerRangedWeaponComponent* RangedWeaponComponent; // 0x4c8(0x08)
	struct UTigerMeleeWeaponComponent* MeleeWeaponComponent; // 0x4d0(0x08)
	struct UTigerCombatComponent* CombatComponent; // 0x4d8(0x08)
	struct UTigerFeedingComponent* FeedingComponent; // 0x4e0(0x08)
	struct UTigerBuffComponent* BuffComponent; // 0x4e8(0x08)
	struct UTigerOutlineComponent* OutlineComponent; // 0x4f0(0x08)
	struct UAkComponent* AudioComponent; // 0x4f8(0x08)
	struct UAkComponent* NonOccludedAudioComponent; // 0x500(0x08)
	struct USceneComponent* AdditionalMeshes; // 0x508(0x08)
	struct USkeletalMeshComponent* HeadMesh; // 0x510(0x08)
	struct USkeletalMeshComponent* HoodieMesh; // 0x518(0x08)
	struct USkeletalMeshComponent* HairMesh; // 0x520(0x08)
	struct USkeletalMeshComponent* HeadgearMesh; // 0x528(0x08)
	struct USkeletalMeshComponent* EyewearMesh; // 0x530(0x08)
	struct USkeletalMeshComponent* BodyAdditionalMesh; // 0x538(0x08)
	char pad_540[0x18]; // 0x540(0x18)
	struct FMulticastInlineDelegate OnCharacterAction; // 0x558(0x10)
	struct FMulticastInlineDelegate OnDamageMitigated; // 0x568(0x10)
	char pad_578[0x10]; // 0x578(0x10)
	bool bIsRootMotionDisabled; // 0x588(0x01)
	char pad_589[0x3]; // 0x589(0x03)
	float BaseMaxHealth; // 0x58c(0x04)
	struct USkeletalMeshComponent* ThirdPersonWeaponMeshRef; // 0x590(0x08)
	struct USkeletalMeshComponent* SecondaryWeaponMeshRef; // 0x598(0x08)
	struct USceneComponent* ProjectileSpawnRef; // 0x5a0(0x08)
	struct USceneComponent* SecondaryProjectileSpawnRef; // 0x5a8(0x08)
	struct FTigerReplicatedCharacterStats ReplicatedCharacterStats; // 0x5b0(0x18)
	char pad_5C8[0x88]; // 0x5c8(0x88)
	bool bBlueprintReferencesSetup; // 0x650(0x01)
	char pad_651[0x7]; // 0x651(0x07)
	struct FMulticastInlineDelegate OnCharacterDeath; // 0x658(0x10)
	char pad_668[0x30]; // 0x668(0x30)
	float CurrentHealth; // 0x698(0x04)
	char pad_69C[0x4]; // 0x69c(0x04)
	struct FMulticastInlineDelegate OnMaxShieldReplicated; // 0x6a0(0x10)
	uint16_t MaxShield; // 0x6b0(0x02)
	int16_t MaxAttainableShield; // 0x6b2(0x02)
	uint16_t CurrentShield; // 0x6b4(0x02)
	char pad_6B6[0x2]; // 0x6b6(0x02)
	float LowHealthThreshold; // 0x6b8(0x04)
	char pad_6BC[0x4]; // 0x6bc(0x04)
	float HitAnimationInterval; // 0x6c0(0x04)
	char pad_6C4[0xc]; // 0x6c4(0x0c)
	struct FVector HealthBarOffset; // 0x6d0(0x0c)
	enum class ETigerGender BodyType; // 0x6dc(0x01)
	bool bIsKindred; // 0x6dd(0x01)
	enum class ETigerCharacterType CharacterType; // 0x6de(0x01)
	char pad_6DF[0x1]; // 0x6df(0x01)
	struct FName RangedHitAnimationListName; // 0x6e0(0x08)
	struct FName MeleeHitAnimationListName; // 0x6e8(0x08)
	struct UPhysicsAsset* HitboxPhysicsAsset; // 0x6f0(0x08)
	struct UPhysicsAsset* RagdollPhysicsAsset; // 0x6f8(0x08)
	char pad_700[0x10]; // 0x700(0x10)
	struct FTimerHandle RagdollTimer; // 0x710(0x08)
	struct UAnimMontage* TimedMontageLoop; // 0x718(0x08)
	struct FTimerHandle TimedMontageLoopTimer; // 0x720(0x08)
	char pad_728[0x10]; // 0x728(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerCharacter>> CharmedByCharacters; // 0x738(0x10)
	bool bIsDodging; // 0x748(0x01)
	char pad_749[0x7]; // 0x749(0x07)
	float SmoothYawInterpSpeed; // 0x750(0x04)
	char pad_754[0xc]; // 0x754(0x0c)
	struct UWidgetComponent* HealthBarComponent; // 0x760(0x08)
	struct USkeletalMeshSocket* WidgetSocket; // 0x768(0x08)
	char pad_770[0x30]; // 0x770(0x30)

	void TriggerLimitedHitAnimation(bool bIsRangedHit); // Function Tiger.TigerCharacter.TriggerLimitedHitAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad9c0
	float TriggerHitAnimation(bool bInIsRangedHit); // Function Tiger.TigerCharacter.TriggerHitAnimation // (Native|Public|BlueprintCallable) // @ game+0x13ad920
	float TriggerAnimationByName(struct FName AnimationMontageName, float PlayRate); // Function Tiger.TigerCharacter.TriggerAnimationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad850
	void TigerOnMaxShieldReplicated__DelegateSignature(); // DelegateFunction Tiger.TigerCharacter.TigerOnMaxShieldReplicated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnDamageMitigated__DelegateSignature(float InTotalDamage, float InDamageMitigated); // DelegateFunction Tiger.TigerCharacter.TigerOnDamageMitigated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnCrouchStateUpdated__DelegateSignature(bool bInIsCrouched); // DelegateFunction Tiger.TigerCharacter.TigerOnCrouchStateUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnCharacterDeath__DelegateSignature(); // DelegateFunction Tiger.TigerCharacter.TigerOnCharacterDeath__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnCharacterAction__DelegateSignature(enum class ETigerCharacterAction InCharacterAction); // DelegateFunction Tiger.TigerCharacter.TigerOnCharacterAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SpawnBloodDecal(); // Function Tiger.TigerCharacter.SpawnBloodDecal // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool ShouldHealthbarBeVisible(); // Function Tiger.TigerCharacter.ShouldHealthbarBeVisible // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ad820
	void SetClanSwitch(enum class ETigerClan InTigerClan); // Function Tiger.TigerCharacter.SetClanSwitch // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad7a0
	void SetBaseMaxHealth(float NewMaxHealth); // Function Tiger.TigerCharacter.SetBaseMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad720
	void ReportCharacterAction(enum class ETigerCharacterAction Action); // Function Tiger.TigerCharacter.ReportCharacterAction // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad6a0
	void RefreshCharacterStats(); // Function Tiger.TigerCharacter.RefreshCharacterStats // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad680
	int32_t PostAkEvent(struct UAkAudioEvent* AudioEvent, bool bEnableOcclusion); // Function Tiger.TigerCharacter.PostAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x13ad5b0
	void OnWeaponVisualChangedEvent(); // Function Tiger.TigerCharacter.OnWeaponVisualChangedEvent // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnWeaponFired(bool bSecondaryWeaponFired); // Function Tiger.TigerCharacter.OnWeaponFired // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnShowDamageAmount(struct FVector& InHitLocation, struct FLinearColor& InDamageColor, int32_t InTotalDamageAmount, int32_t InHealthDamageAmount, bool bInHasExtraHealth, bool bInHasShield, float InRangedDamageFalloffPercent); // Function Tiger.TigerCharacter.OnShowDamageAmount // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnRep_MaxShieldChanged(uint16_t InOldMaxShield); // Function Tiger.TigerCharacter.OnRep_MaxShieldChanged // (Final|Native|Protected) // @ game+0x13ad370
	void OnRep_CurrentShieldChanged(); // Function Tiger.TigerCharacter.OnRep_CurrentShieldChanged // (Final|Native|Protected) // @ game+0x13ad350
	void OnRep_CurrentHealth(float InOldHealth); // Function Tiger.TigerCharacter.OnRep_CurrentHealth // (Native|Protected) // @ game+0x13ad2c0
	void OnPlayMeleeHitEffects(struct UTigerMeleeWeapon* WeaponHitBy, struct FVector& ImpactLocation, struct FVector& HitDirection); // Function Tiger.TigerCharacter.OnPlayMeleeHitEffects // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnLocalDisciplineUseFailed(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnLocalDisciplineUseFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnLocalDisciplineUse(struct FDisciplineUse& DisciplineUse, float ExpectedDuration); // Function Tiger.TigerCharacter.OnLocalDisciplineUse // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnLocalDisciplineReleaseFailed(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnLocalDisciplineReleaseFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnLocalDisciplineRelease(struct FDisciplineUse& DisciplineUse, float ExpectedDuration); // Function Tiger.TigerCharacter.OnLocalDisciplineRelease // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnDodged(bool IsControllingPlayer, bool bLaunchedInAir, struct FVector LaunchDirection, char DodgeStage); // Function Tiger.TigerCharacter.OnDodged // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnDisciplineUseSucceeded(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnDisciplineUseSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnDisciplineReleaseSucceeded(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnDisciplineReleaseSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void Multicast_SetRagdollDeath(bool bEnableRagdoll); // Function Tiger.TigerCharacter.Multicast_SetRagdollDeath // (Net|Native|Event|NetMulticast|Public) // @ game+0x13acd90
	void Multicast_PostAkEvent(struct UAkAudioEvent* AudioEvent, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PostAkEvent // (Net|Native|Event|NetMulticast|Public) // @ game+0x13accc0
	void Multicast_PlaySoundAtActorLocation(struct USoundBase* SoundBase); // Function Tiger.TigerCharacter.Multicast_PlaySoundAtActorLocation // (Net|Native|Event|NetMulticast|Public) // @ game+0x13acc30
	void Multicast_PlayAnimationBroadcastUnreliable(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PlayAnimationBroadcastUnreliable // (Net|Native|Event|NetMulticast|Public) // @ game+0x13acb60
	void Multicast_PlayAnimationBroadcast(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PlayAnimationBroadcast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13aca90
	void Multicast_OnJumped(int32_t InJumpCount); // Function Tiger.TigerCharacter.Multicast_OnJumped // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13aca00
	void Multicast_ApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.Multicast_ApplyEffectWithTarget // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13ac930
	void Multicast_ApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.Multicast_ApplyEffectWithSocket // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13ac860
	void Multicast_ApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.Multicast_ApplyEffect // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13ac7d0
	void Multicast_AbortAnimationBroadcastUnreliable(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_AbortAnimationBroadcastUnreliable // (Net|Native|Event|NetMulticast|Public) // @ game+0x13ac700
	void Multicast_AbortAnimationBroadcast(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_AbortAnimationBroadcast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13ac630
	void LocalApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.LocalApplyEffectWithTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13ac560
	void LocalApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.LocalApplyEffectWithSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x13ac490
	void LocalApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.LocalApplyEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x13ac400
	bool IsSprinting(); // Function Tiger.TigerCharacter.IsSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x13ac3d0
	bool IsSimulatedProxy(); // Function Tiger.TigerCharacter.IsSimulatedProxy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac3a0
	bool IsPlayingAnimationMontage(); // Function Tiger.TigerCharacter.IsPlayingAnimationMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac370
	bool IsInvulnerable(); // Function Tiger.TigerCharacter.IsInvulnerable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac340
	bool IsInJump(); // Function Tiger.TigerCharacter.IsInJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac310
	bool IsInAir(); // Function Tiger.TigerCharacter.IsInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac2e0
	bool IsFriendlyWith(struct ATigerCharacter* OtherCharacter); // Function Tiger.TigerCharacter.IsFriendlyWith // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac240
	bool IsDowned(); // Function Tiger.TigerCharacter.IsDowned // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac210
	bool IsDead(); // Function Tiger.TigerCharacter.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac1f0
	bool IsClimbing(); // Function Tiger.TigerCharacter.IsClimbing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac1c0
	bool IsCharacterVisible(); // Function Tiger.TigerCharacter.IsCharacterVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac1a0
	bool IsBelowLowHealthThreshold(float InHealthOffset); // Function Tiger.TigerCharacter.IsBelowLowHealthThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ac110
	struct UTigerCharacterMovementComponent* GetTigerCharacterMovement(); // Function Tiger.TigerCharacter.GetTigerCharacterMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab570
	struct UTigerAnimInstance* GetTigerAnimInstance(); // Function Tiger.TigerCharacter.GetTigerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab540
	float GetSmoothYaw(); // Function Tiger.TigerCharacter.GetSmoothYaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab510
	bool GetShieldFull(); // Function Tiger.TigerCharacter.GetShieldFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab4e0
	struct FTigerReplicatedCharacterStats GetReplicatedStats(); // Function Tiger.TigerCharacter.GetReplicatedStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab4a0
	struct FTigerNonReplicatedCharacterStats GetNonReplicatedStats(); // Function Tiger.TigerCharacter.GetNonReplicatedStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab420
	float GetMaxShield(); // Function Tiger.TigerCharacter.GetMaxShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab3f0
	float GetMaxHealth(); // Function Tiger.TigerCharacter.GetMaxHealth // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab3b0
	float GetHeartVisibility(); // Function Tiger.TigerCharacter.GetHeartVisibility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab390
	float GetCurrentShield(); // Function Tiger.TigerCharacter.GetCurrentShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab360
	float GetCurrentHealthPercentage(); // Function Tiger.TigerCharacter.GetCurrentHealthPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab330
	float GetCurrentHealth(); // Function Tiger.TigerCharacter.GetCurrentHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab300
	float GetBaseMaxHealth(); // Function Tiger.TigerCharacter.GetBaseMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab2d0
	enum class ETigerCharacterAkAlignmentType GetAkCharacterAlignment(); // Function Tiger.TigerCharacter.GetAkCharacterAlignment // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab2a0
	struct FRotator GetAimRotation(); // Function Tiger.TigerCharacter.GetAimRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab260
	float GetAimAnglePitch(); // Function Tiger.TigerCharacter.GetAimAnglePitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab230
	float ChangeHealth(float InHealAmount, struct ATigerCharacter* InInstigator, bool bInOnlyHealRecentDamage); // Function Tiger.TigerCharacter.ChangeHealth // (Native|Public|BlueprintCallable) // @ game+0x13ab110
	void CalculateCharacterStats(struct FTigerCharacterStatModification& AccumulatedStats); // Function Tiger.TigerCharacter.CalculateCharacterStats // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab070
	void AuthorityApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.AuthorityApplyEffectWithTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13aafa0
	void AuthorityApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.AuthorityApplyEffectWithSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x13aaed0
	void AuthorityApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.AuthorityApplyEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x13aae40
	void AbortAnimationByName(struct FName InAnimationMontageName, float InBlendOutTime, bool bInStopAllIfNullMontage); // Function Tiger.TigerCharacter.AbortAnimationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x13aad20
	void AbortAnimation(struct UAnimMontage* InAnimationMontage, float InBlendOutTime, bool bInStopAllIfNullMontage); // Function Tiger.TigerCharacter.AbortAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x13aac00
};

// Class Tiger.TigerBaseNPC
// Size: 0x900 (Inherited: 0x7a0)
struct ATigerBaseNPC : ATigerCharacter {
	char pad_7A0[0x10]; // 0x7a0(0x10)
	struct UTigerHSensesTargetComponent* HeightenedSensesTargetComponent; // 0x7b0(0x08)
	struct UTigerNPCAsset* NPCAsset; // 0x7b8(0x08)
	struct UTigerBloodPotencyComponent* BloodPotencyComponent; // 0x7c0(0x08)
	struct UTigerNPCVisualAsset* VisualAsset; // 0x7c8(0x08)
	struct UTigerNpcPropAsset* PropAsset; // 0x7d0(0x08)
	struct UTigerMasqueradeActionResponse* MasqueradeActionResponse; // 0x7d8(0x08)
	struct UTigerNPCFacePoseMap* HeadMeshsPoseAssetsClass; // 0x7e0(0x08)
	enum class ETigerNPCType NPCType; // 0x7e8(0x01)
	char pad_7E9[0x7]; // 0x7e9(0x07)
	struct UTigerInteractiveNpcComponent* InteractiveNpcComponent; // 0x7f0(0x08)
	struct FTigerMeshCollection ReplicatedMeshCollection; // 0x7f8(0x30)
	struct UObject* ReplicatedAnimationInstanceClass; // 0x828(0x08)
	struct ATigerAISplinePath* ActiveSplinePath; // 0x830(0x08)
	struct ATigerNPCSpawningBase* Spawner; // 0x838(0x08)
	struct USkeletalMeshComponent* HeightenedSensesHeartMesh; // 0x840(0x08)
	struct USkeletalMeshComponent* InWorldHeartMesh; // 0x848(0x08)
	float LastTimeReactingToLocalPlayerAction; // 0x850(0x04)
	int32_t LastPlayedVoEventId; // 0x854(0x04)
	bool bHasSightOfLocalPlayer; // 0x858(0x01)
	char pad_859[0x7]; // 0x859(0x07)
	enum class ETigerBloodType BloodType; // 0x860(0x01)
	enum class ETigerBloodPotency BloodPotency; // 0x861(0x01)
	char pad_862[0x6]; // 0x862(0x06)
	struct TArray<struct ATigerAISplinePath*> StoredSplines; // 0x868(0x10)
	struct ATigerWorldCompositionGrid* StreamingGrid; // 0x878(0x08)
	char pad_880[0x80]; // 0x880(0x80)

	void QueueVoEvent(struct FName& InVoCategory, bool bInShouldMulticast); // Function Tiger.TigerBaseNPC.QueueVoEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x138ebd0
	void PickHeartMeshes(); // Function Tiger.TigerBaseNPC.PickHeartMeshes // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OverrideBloodPotency(enum class ETigerBloodPotency InNewBloodPotency); // Function Tiger.TigerBaseNPC.OverrideBloodPotency // (Final|Native|Public|BlueprintCallable) // @ game+0x138db70
	void OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses(); // Function Tiger.TigerBaseNPC.OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnSawLocalPlayerBreachMasquerade(); // Function Tiger.TigerBaseNPC.OnSawLocalPlayerBreachMasquerade // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnRep_ReplicatedAnimationInstanceClassChanged(); // Function Tiger.TigerBaseNPC.OnRep_ReplicatedAnimationInstanceClassChanged // (Final|Native|Protected) // @ game+0x138eb20
	void OnRep_BloodType(); // Function Tiger.TigerBaseNPC.OnRep_BloodType // (Final|Native|Protected) // @ game+0x138eb00
	void OnRep_BloodPotency(); // Function Tiger.TigerBaseNPC.OnRep_BloodPotency // (Final|Native|Protected) // @ game+0x138eae0
	void OnRep_AdditionalMeshCollectionChanged(); // Function Tiger.TigerBaseNPC.OnRep_AdditionalMeshCollectionChanged // (Final|Native|Protected) // @ game+0x138eac0
	void OnLostSightOfLocalPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerBaseNPC.OnLostSightOfLocalPlayer // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGainedSightOfLocalPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerBaseNPC.OnGainedSightOfLocalPlayer // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBloodTypeChanged(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBaseNPC.OnBloodTypeChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnBloodPotencyChanged(enum class ETigerBloodPotency InBloodPotency); // Function Tiger.TigerBaseNPC.OnBloodPotencyChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnBecameClosestNpcWithPotencyInHeightenedSenses(); // Function Tiger.TigerBaseNPC.OnBecameClosestNpcWithPotencyInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_VerifySimulationLocation(struct FVector InAuthorityLocation); // Function Tiger.TigerBaseNPC.Multicast_VerifySimulationLocation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x138e5a0
	void Multicast_QueueVoEvent(int8_t InVoCategoryIndex); // Function Tiger.TigerBaseNPC.Multicast_QueueVoEvent // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x138e520
	void Multicast_ChangeBlood(enum class ETigerBloodPotency InNewBloodPotency, enum class ETigerBloodType InNewBloodType); // Function Tiger.TigerBaseNPC.Multicast_ChangeBlood // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x138e450
	struct ATigerAiBaseController* GetTigerAiBaseController(); // Function Tiger.TigerBaseNPC.GetTigerAiBaseController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e360
	enum class ETigerBloodType GetBloodType(); // Function Tiger.TigerBaseNPC.GetBloodType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e2b0
	enum class ETigerBloodPotency GetBloodPotency(); // Function Tiger.TigerBaseNPC.GetBloodPotency // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e290
	void DeactivateHeightenedSensesVisualization(); // Function Tiger.TigerBaseNPC.DeactivateHeightenedSensesVisualization // (Final|Native|Protected|BlueprintCallable) // @ game+0x138dfe0
	void AuthoritySetBloodType(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBaseNPC.AuthoritySetBloodType // (Final|Native|Public|BlueprintCallable) // @ game+0x138dbf0
	void AuthoritySetBloodPotency(enum class ETigerBloodPotency InNewBloodPotency); // Function Tiger.TigerBaseNPC.AuthoritySetBloodPotency // (Final|Native|Public|BlueprintCallable) // @ game+0x138db70
	void AuthoritySetBlood(enum class ETigerBloodPotency InNewBloodPotency, enum class ETigerBloodType InNewBloodType); // Function Tiger.TigerBaseNPC.AuthoritySetBlood // (Final|Native|Public|BlueprintCallable) // @ game+0x138daa0
	void ActivateHeightenedSensesVisualization(); // Function Tiger.TigerBaseNPC.ActivateHeightenedSensesVisualization // (Final|Native|Protected|BlueprintCallable) // @ game+0x138da80
};

// Class Tiger.TigerBaseThrallData
// Size: 0xc8 (Inherited: 0x30)
struct UTigerBaseThrallData : UDataAsset {
	enum class ETigerThrallId ThrallId; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText ThrallName; // 0x38(0x18)
	struct FText ThrallDescription; // 0x50(0x18)
	struct FText ThrallHintText; // 0x68(0x18)
	struct TArray<struct UTexture2D*> ThrallPortraits; // 0x80(0x10)
	struct FText ThrallKeepsakeName; // 0x90(0x18)
	struct UTexture2D* ThrallKeepsakePortrait; // 0xa8(0x08)
	struct FTigerThrallStats StartingStats; // 0xb0(0x10)
	struct UTigerGrimoireEntry* GrimoireEntry; // 0xc0(0x08)
};

// Class Tiger.TigerBattlepassUI
// Size: 0x3f0 (Inherited: 0x3c0)
struct UTigerBattlepassUI : UTigerSceneBackgroundUI {
	int32_t MaxPageItems; // 0x3c0(0x04)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct TArray<int32_t> PageSizes; // 0x3c8(0x10)
	int32_t CurrentPageIndex; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct TArray<struct UTigerClientSeasonalRewardTier*> RewardTiers; // 0x3e0(0x10)

	void GetPageItemIndices(int32_t PageIndex, int32_t& FirstItemIndex, int32_t& LastItemIndex); // Function Tiger.TigerBattlepassUI.GetPageItemIndices // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391e70
};

// Class Tiger.TigerBelowBalconyEntryTrigger
// Size: 0x268 (Inherited: 0x260)
struct ATigerBelowBalconyEntryTrigger : ATriggerVolume {
	struct FName EnterBalconyFromBelowAnimName; // 0x260(0x08)
};

// Class Tiger.TigerBlindingBeautyEffectActor
// Size: 0x238 (Inherited: 0x228)
struct ATigerBlindingBeautyEffectActor : AActor {
	struct ATigerPlayer* Player; // 0x228(0x08)
	float TriggerTime; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)

	void OnDashExit(bool bInShouldTrigger); // Function Tiger.TigerBlindingBeautyEffectActor.OnDashExit // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnDashEnter(); // Function Tiger.TigerBlindingBeautyEffectActor.OnDashEnter // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerBloodDecalTrail
// Size: 0x230 (Inherited: 0x228)
struct ATigerBloodDecalTrail : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerBloodPotencyVisualizationConfig
// Size: 0x80 (Inherited: 0x30)
struct UTigerBloodPotencyVisualizationConfig : UDataAsset {
	struct TArray<struct UMaterialInstance*> HeartMeshMaterialTarget; // 0x30(0x10)
	struct TSoftObjectPtr<UNiagaraSystem> NiagaraPath; // 0x40(0x28)
	struct UParticleSystem* ParticleSystem; // 0x68(0x08)
	struct FName ParticleSystemAttachmentSocket; // 0x70(0x08)
	bool bParticleSystemAbsoluteRotation; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Tiger.TigerBloodPotencyComponent
// Size: 0x230 (Inherited: 0xb0)
struct UTigerBloodPotencyComponent : UActorComponent {
	float BloodTypeWeights[0x5]; // 0xb0(0x14)
	bool bEnableBloodTypeEffects; // 0xc4(0x01)
	bool bVisualizeBloodTypeNone; // 0xc5(0x01)
	char pad_C6[0x2]; // 0xc6(0x02)
	struct UTigerBloodPotencyVisualizationConfig* CurrentHeightenedSensesConfig; // 0xc8(0x08)
	struct UTigerBloodPotencyVisualizationConfig* CurrentInWorldConfig; // 0xd0(0x08)
	struct UTigerBloodPotencyVisualizationConfig* HeightenedSensesVisualConfiguration[0x4]; // 0xd8(0x20)
	struct UTigerBloodPotencyVisualizationConfig* HeightenedSensesVisualConfigurationByBloodType[0x5]; // 0xf8(0x28)
	struct UTigerBloodPotencyVisualizationConfig* InWorldVisualConfiguration[0x4]; // 0x120(0x20)
	struct UTigerBloodPotencyVisualizationConfig* InWorldVisualConfigurationByBloodType[0x5]; // 0x140(0x28)
	struct FName HeartMeshMaximumVisibilityDistanceName; // 0x168(0x08)
	struct TArray<struct UMaterialInstance*> HsMeshPreviousMaterials; // 0x170(0x10)
	struct TArray<struct UMaterialInstance*> HsMeshTargetMaterials; // 0x180(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> HsMeshCurrentMaterials; // 0x190(0x10)
	struct USkeletalMeshComponent* HsSkeletalMeshComponent; // 0x1a0(0x08)
	struct UParticleSystemComponent* HsParticleSystemComponent; // 0x1a8(0x08)
	struct UNiagaraComponent* HsNiagaraComponent; // 0x1b0(0x08)
	struct TArray<struct UMaterialInstance*> InWorldMeshPreviousMaterials; // 0x1b8(0x10)
	struct TArray<struct UMaterialInstance*> InWorldMeshTargetMaterials; // 0x1c8(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> InWorldMeshCurrentMaterials; // 0x1d8(0x10)
	struct USkeletalMeshComponent* InWorldSkeletalMeshComponent; // 0x1e8(0x08)
	struct UParticleSystemComponent* InWorldParticleSystemComponent; // 0x1f0(0x08)
	struct UNiagaraComponent* InWorldNiagaraComponent; // 0x1f8(0x08)
	struct ATigerBaseNPC* NpcOwner; // 0x200(0x08)
	char pad_208[0x10]; // 0x208(0x10)
	float MaterialInterpolationDuration; // 0x218(0x04)
	char pad_21C[0x14]; // 0x21c(0x14)

	void RefreshBloodPotencyVisualization(bool bInForceRefresh); // Function Tiger.TigerBloodPotencyComponent.RefreshBloodPotencyVisualization // (Final|Native|Public|BlueprintCallable) // @ game+0x1392560
};

// Class Tiger.TigerBloodResonanceAsset
// Size: 0x1f8 (Inherited: 0x30)
struct UTigerBloodResonanceAsset : UDataAsset {
	struct FText ResonanceName; // 0x30(0x18)
	struct FText InventoryLevel1Description; // 0x48(0x18)
	struct FText InventoryLevel2Description; // 0x60(0x18)
	struct FText InventoryLevel3Description; // 0x78(0x18)
	struct FText FeedRewardLevel1Description; // 0x90(0x18)
	struct FText FeedRewardLevel2Description; // 0xa8(0x18)
	struct FText FeedRewardLevel3Description; // 0xc0(0x18)
	struct FColor ResonanceColor; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TSoftObjectPtr<UTexture2D> ResonanceLevel1; // 0xe0(0x28)
	struct TSoftObjectPtr<UTexture2D> ResonanceLevel2; // 0x108(0x28)
	struct TSoftObjectPtr<UTexture2D> ResonanceLevel3; // 0x130(0x28)
	struct TSoftObjectPtr<UTexture2D> SlotLevel1; // 0x158(0x28)
	struct TSoftObjectPtr<UTexture2D> SlotLevel2; // 0x180(0x28)
	struct TSoftObjectPtr<UTexture2D> SlotLevel3; // 0x1a8(0x28)
	struct TSoftObjectPtr<UMaterial> ResonanceVfx; // 0x1d0(0x28)
};

// Class Tiger.TigerBloodResonanceComponent
// Size: 0x200 (Inherited: 0xb0)
struct UTigerBloodResonanceComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBloodResonanceBlockedByCap; // 0xb0(0x10)
	float BloodCapIncreasePerEvent[0x20]; // 0xc0(0x80)
	struct FTigerBloodResonanceBuffs BloodResonanceBuffs[0x4]; // 0x140(0x40)
	int32_t StartingBloodCap; // 0x180(0x04)
	int32_t StartingBloodCapIncreaseGameMode; // 0x184(0x04)
	int32_t BloodTypeCap; // 0x188(0x04)
	int32_t MaxBloodCap; // 0x18c(0x04)
	int32_t CurrentBloodCap; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct FMulticastInlineDelegate OnBloodCapChanged; // 0x198(0x10)
	struct FMulticastInlineDelegate OnBloodResonanceAdded; // 0x1a8(0x10)
	struct TArray<enum class ETigerBloodType> CurrentBloodResonance; // 0x1b8(0x10)
	int32_t BloodResonanceLevels[0x4]; // 0x1c8(0x10)
	int32_t OldBloodResonanceLevels[0x4]; // 0x1d8(0x10)
	char pad_1E8[0x10]; // 0x1e8(0x10)
	float CurrentBloodSlotsIncrease; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)

	void OnRep_CurrentBloodCap(); // Function Tiger.TigerBloodResonanceComponent.OnRep_CurrentBloodCap // (Final|Native|Private) // @ game+0x1392500
	void OnRep_BloodResonanceLevels(); // Function Tiger.TigerBloodResonanceComponent.OnRep_BloodResonanceLevels // (Final|Native|Private) // @ game+0x13924c0
	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerBloodResonanceComponent.OnPlayerEvent // (Final|Native|Private) // @ game+0x13923f0
	void OnLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerBloodResonanceComponent.OnLifeStatusChanged // (Final|Native|Private) // @ game+0x13922a0
	int32_t GetTotalBloodResonanceNum(); // Function Tiger.TigerBloodResonanceComponent.GetTotalBloodResonanceNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391f90
	int32_t GetMaxBloodCap(); // Function Tiger.TigerBloodResonanceComponent.GetMaxBloodCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391e50
	int32_t GetCurrentBloodResonanceOfType(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodResonanceOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391cb0
	struct TArray<enum class ETigerBloodType> GetCurrentBloodResonance(); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodResonance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391c20
	int32_t GetCurrentBloodCap(); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391c00
	void Client_AddBloodResonance(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.Client_AddBloodResonance // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1391b40
	void BlueprintServerAddBloodResonance(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.BlueprintServerAddBloodResonance // (Final|Native|Public|BlueprintCallable) // @ game+0x1391a90
};

// Class Tiger.TigerBloodVein
// Size: 0x278 (Inherited: 0x228)
struct ATigerBloodVein : AActor {
	struct FMulticastInlineDelegate OnEndOfVeinReached; // 0x228(0x10)
	struct USplineComponent* Spline; // 0x238(0x08)
	struct USceneComponent* CurrentPlayerSpot; // 0x240(0x08)
	float EarliestDisconnectPoint; // 0x248(0x04)
	float LatestDisconnectPoint; // 0x24c(0x04)
	float VeinMovementSpeed; // 0x250(0x04)
	bool bIsVeinActive; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct ATigerHolyIncense* HolyIncense; // 0x258(0x08)
	char pad_260[0xc]; // 0x260(0x0c)
	float StartSynchronizedTime; // 0x26c(0x04)
	char pad_270[0x8]; // 0x270(0x08)

	void TigerOnEndOfVeinReached__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVein.TigerOnEndOfVeinReached__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnVeinActivated(); // Function Tiger.TigerBloodVein.OnVeinActivated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRep_IsVeinActive(); // Function Tiger.TigerBloodVein.OnRep_IsVeinActive // (Final|Native|Private) // @ game+0x1392540
	void Multicast_StartMovement(float ServerTime); // Function Tiger.TigerBloodVein.Multicast_StartMovement // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1392210
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerBloodVein.MatchStateChanged // (Final|Native|Private) // @ game+0x13920c0
	struct FVector GetCurrentPlayerLocation(); // Function Tiger.TigerBloodVein.GetCurrentPlayerLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391d80
	struct FVector GetCurrentPlayerDirection(); // Function Tiger.TigerBloodVein.GetCurrentPlayerDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391d40
};

// Class Tiger.TigerBloodVeinBranch
// Size: 0x288 (Inherited: 0x228)
struct ATigerBloodVeinBranch : AActor {
	struct FMulticastInlineDelegate OnReachedEndOfBloodVeinBranch; // 0x228(0x10)
	struct UStaticMesh* VeinSplineMesh; // 0x238(0x08)
	struct ATigerBloodVeinPawn* ControllingPawn; // 0x240(0x08)
	struct USceneComponent* CurrentPlayerSpot; // 0x248(0x08)
	float LandSoundEventTimeOffset; // 0x250(0x04)
	float SplineMeshDistance; // 0x254(0x04)
	float SplineScale; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TArray<struct USplineMeshComponent*> GeneratedSplineMeshes; // 0x260(0x10)
	struct UTigerBloodVeinBranchMovementComponent* MovementComponent; // 0x270(0x08)
	char pad_278[0x10]; // 0x278(0x10)

	void TigerDelegateReachedEndOfBloodVeinBranch__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVeinBranch.TigerDelegateReachedEndOfBloodVeinBranch__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void PostLandingSoundEvent(); // Function Tiger.TigerBloodVeinBranch.PostLandingSoundEvent // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsLocalPlayerInThisBranch(); // Function Tiger.TigerBloodVeinBranch.IsLocalPlayerInThisBranch // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1392050
	void HitGround(); // Function Tiger.TigerBloodVeinBranch.HitGround // (Final|Native|Private) // @ game+0x1392010
	void HideGeneratedMeshes(); // Function Tiger.TigerBloodVeinBranch.HideGeneratedMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x1391ff0
	struct TArray<struct USplineMeshComponent*> GetGeneratedSplineMeshes(); // Function Tiger.TigerBloodVeinBranch.GetGeneratedSplineMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x1391dc0
};

// Class Tiger.TigerBloodVeinBranchMovementComponent
// Size: 0x170 (Inherited: 0xb0)
struct UTigerBloodVeinBranchMovementComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct ACharacter* PlayerPawn; // 0xc0(0x08)
	struct ATigerGameState* GameState; // 0xc8(0x08)
	struct TArray<struct FVector> MovementTargets; // 0xd0(0x10)
	float StartSimulationTime; // 0xe0(0x04)
	bool bHitGround; // 0xe4(0x01)
	char pad_E5[0x3]; // 0xe5(0x03)
	float SecondsPerStep; // 0xe8(0x04)
	struct FTigerBloodVeinBranchMovementSettings PrimaryMovementSettings; // 0xec(0x24)
	struct FTigerBloodVeinBranchMovementSettings SecondaryMovementSettings; // 0x110(0x24)
	char pad_134[0xc]; // 0x134(0x0c)
	struct ATigerBloodVeinBranch* Branch; // 0x140(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x148(0x08)
	char pad_150[0x20]; // 0x150(0x20)

	void TigerDelegateBloodVeinBranchHitGround__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVeinBranchMovementComponent.TigerDelegateBloodVeinBranchHitGround__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Multicast_AddBranchPoint(struct FVector InNewTarget); // Function Tiger.TigerBloodVeinBranchMovementComponent.Multicast_AddBranchPoint // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x1392190
	void HitGround(); // Function Tiger.TigerBloodVeinBranchMovementComponent.HitGround // (Final|Native|Private) // @ game+0x1392030
};

// Class Tiger.TigerBloodVeinPawn
// Size: 0x2f8 (Inherited: 0x288)
struct ATigerBloodVeinPawn : APawn {
	struct FMulticastInlineDelegate OnIsCoterieNavigatorChanged; // 0x288(0x10)
	struct ATigerBloodVein* BloodVein; // 0x298(0x08)
	bool bIsCoterieNavigator; // 0x2a0(0x01)
	bool bWantsToLaunchSolo; // 0x2a1(0x01)
	char pad_2A2[0x6]; // 0x2a2(0x06)
	struct UStaticMeshComponent* StaticMesh; // 0x2a8(0x08)
	struct UTigerSpringArmComponent* SpringArm; // 0x2b0(0x08)
	struct UCameraComponent* Camera; // 0x2b8(0x08)
	enum class ETigerBloodVeinAlternateAction AlternateAction; // 0x2c0(0x01)
	char pad_2C1[0x17]; // 0x2c1(0x17)
	struct ATigerBloodVeinBranch* BranchClass; // 0x2d8(0x08)
	float AlternateActionHoldTime; // 0x2e0(0x04)
	char pad_2E4[0x14]; // 0x2e4(0x14)

	void SpawnPlayer(); // Function Tiger.TigerBloodVeinPawn.SpawnPlayer // (Final|Native|Private) // @ game+0x1392920
	void Server_SetLaunchSolo(bool bInWantsToLaunchSolo); // Function Tiger.TigerBloodVeinPawn.Server_SetLaunchSolo // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1392860
	void Server_SendInputData(char InPackedInputVector, char InCompressedCameraYaw, char InCompressedCameraPitch); // Function Tiger.TigerBloodVeinPawn.Server_SendInputData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1392710
	void Server_PassCoterieNavigator(); // Function Tiger.TigerBloodVeinPawn.Server_PassCoterieNavigator // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13926c0
	void Server_LaunchBranch(struct FRotator InCameraRotation); // Function Tiger.TigerBloodVeinPawn.Server_LaunchBranch // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x13925f0
	void OnRep_IsCoterieNavigator(); // Function Tiger.TigerBloodVeinPawn.OnRep_IsCoterieNavigator // (Final|Native|Private) // @ game+0x1392520
	void OnRep_BloodVein(); // Function Tiger.TigerBloodVeinPawn.OnRep_BloodVein // (Final|Native|Private) // @ game+0x13924e0
	void OnMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerBloodVeinPawn.OnMatchStateChanged // (Final|Native|Private) // @ game+0x1392320
	void OnIsCoterieNavigatorChanged__DelegateSignature(bool bInIsCoterieNavigator); // DelegateFunction Tiger.TigerBloodVeinPawn.OnIsCoterieNavigatorChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnConnectedToMainVein(); // Function Tiger.TigerBloodVeinPawn.OnConnectedToMainVein // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnBranchedOffFromMainVein(); // Function Tiger.TigerBloodVeinPawn.OnBranchedOffFromMainVein // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsNavigatingBranch(); // Function Tiger.TigerBloodVeinPawn.IsNavigatingBranch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1392080
	bool HasBranchedOff(); // Function Tiger.TigerBloodVeinPawn.HasBranchedOff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391fc0
	void EndOfVeinReached(); // Function Tiger.TigerBloodVeinPawn.EndOfVeinReached // (Final|Native|Private) // @ game+0x1391be0
	void Client_OnDetachedFromMainVein(); // Function Tiger.TigerBloodVeinPawn.Client_OnDetachedFromMainVein // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1391bc0
	bool CanDoSecondaryLaunch(); // Function Tiger.TigerBloodVeinPawn.CanDoSecondaryLaunch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1391b10
};

// Class Tiger.TigerBloodVeinTooltipLocation
// Size: 0x230 (Inherited: 0x228)
struct ATigerBloodVeinTooltipLocation : AActor {
	float MaximumDistance; // 0x228(0x04)
	bool bIsVisible; // 0x22c(0x01)
	char pad_22D[0x3]; // 0x22d(0x03)

	void OnVisiblityChanged(); // Function Tiger.TigerBloodVeinTooltipLocation.OnVisiblityChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerBloodVeinTrackWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerBloodVeinTrackWidget : UTigerWidget {
};

// Class Tiger.TigerBlueprintLootComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerBlueprintLootComponent : UActorComponent {
	struct UTigerItemLootTable* LootTable; // 0xb0(0x08)
	struct TArray<struct AActor*> SpawnedItemActors; // 0xb8(0x10)

	struct TArray<struct AActor*> GetSpawnedItemActors(); // Function Tiger.TigerBlueprintLootComponent.GetSpawnedItemActors // (Final|Native|Public|Const) // @ game+0x1396a80
	struct UTigerItemLootTable* GetLootTable(); // Function Tiger.TigerBlueprintLootComponent.GetLootTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396a30
};

// Class Tiger.TigerBlueprintLootLocationComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerBlueprintLootLocationComponent : UActorComponent {
	struct UTigerLootLocationConfiguration* Configuration; // 0xb0(0x08)
	char GameTypeFilter; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Tiger.TigerBootGameMode
// Size: 0x2e8 (Inherited: 0x2c8)
struct ATigerBootGameMode : AGameModeBase {
	enum class ESessionType SessionTraveledFrom; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UTigerGameFlowStateMap* GameFlowStateMap; // 0x2d0(0x08)
	struct UTigerGameFlowStateMap* BotGameFlowStateMap; // 0x2d8(0x08)
	struct UTigerLegalDocuments* LegalDocumentsObj; // 0x2e0(0x08)

	struct UTigerLegalDocuments* GetLegalDocuments(); // Function Tiger.TigerBootGameMode.GetLegalDocuments // (Final|Native|Public|BlueprintCallable) // @ game+0x1396a10
};

// Class Tiger.TigerGameState
// Size: 0x380 (Inherited: 0x278)
struct ATigerGameState : AGameStateBase {
	struct FMulticastInlineDelegate OnWeatherScenarioChangedEvent; // 0x278(0x10)
	struct TArray<int32_t> FakeMatchmakingDelayGameModeIndices; // 0x288(0x10)
	char pad_298[0x20]; // 0x298(0x20)
	struct FGuid MatchID; // 0x2b8(0x10)
	struct TWeakObjectPtr<struct ATigerHolyIncense> HolyIncense; // 0x2c8(0x08)
	char pad_2D0[0x4]; // 0x2d0(0x04)
	float SynchronizedTime; // 0x2d4(0x04)
	char pad_2D8[0x10]; // 0x2d8(0x10)
	struct UTigerWeatherScenarioData* WeatherScenarioClass; // 0x2e8(0x08)
	struct UTigerWeatherScenarioData* WeatherScenario; // 0x2f0(0x08)
	char pad_2F8[0x50]; // 0x2f8(0x50)
	struct FString ServerId; // 0x348(0x10)
	enum class ETigerServerScalabilityTarget CurrentScalabilityTarget; // 0x358(0x01)
	char pad_359[0x27]; // 0x359(0x27)

	bool UnsubscribeOnPlayerStateGameDataChanged(int32_t InPlayerId, struct FDelegate& InDelegate); // Function Tiger.TigerGameState.UnsubscribeOnPlayerStateGameDataChanged // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13fd3d0
	struct ATigerPlayerState* TryGetPlayerStateFromID(struct FTigerPersistentPlayerID& InID); // Function Tiger.TigerGameState.TryGetPlayerStateFromID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13fd270
	void TigerPrintServerScalabilityTarget(); // Function Tiger.TigerGameState.TigerPrintServerScalabilityTarget // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerDisplayServerId(); // Function Tiger.TigerGameState.TigerDisplayServerId // (Final|Exec|Native|Private) // @ game+0xb5ee20
	bool SubscribeOnPlayerStateGameDataChanged(int32_t InPlayerId, struct FDelegate& InDelegate); // Function Tiger.TigerGameState.SubscribeOnPlayerStateGameDataChanged // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13fd170
	void OnWeatherScenarioChanged__DelegateSignature(struct UTigerWeatherScenarioData* WeatherScenarioData); // DelegateFunction Tiger.TigerGameState.OnWeatherScenarioChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_WeatherScenarioClass(); // Function Tiger.TigerGameState.OnRep_WeatherScenarioClass // (Final|Native|Private) // @ game+0x13fcd20
	void OnRep_SynchronizedTime(); // Function Tiger.TigerGameState.OnRep_SynchronizedTime // (Final|Native|Private) // @ game+0x13fcd00
	void OnRep_FakeMatchmakingDelayRemovedForGameModeIndex(); // Function Tiger.TigerGameState.OnRep_FakeMatchmakingDelayRemovedForGameModeIndex // (Final|Native|Private) // @ game+0x13fcce0
	void OnPlayerStateGameDataChangeDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerGameState.OnPlayerStateGameDataChangeDelegate__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void OnPlayerStateGameDataChanged__DelegateSignature(); // DelegateFunction Tiger.TigerGameState.OnPlayerStateGameDataChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Multicast_SynchronizeTime(float InNewSynchronizedTime); // Function Tiger.TigerGameState.Multicast_SynchronizeTime // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13fcc50
	float GetSynchronizedTimeNonInterpolated(); // Function Tiger.TigerGameState.GetSynchronizedTimeNonInterpolated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fc840
	float GetSynchronizedTime(); // Function Tiger.TigerGameState.GetSynchronizedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fc810
	struct FTigerPlayerStateGameData GetPlayerStateDataCopy(int32_t InPlayerId); // Function Tiger.TigerGameState.GetPlayerStateDataCopy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fc6f0
	struct FGuid GetMatchId(); // Function Tiger.TigerGameState.GetMatchId // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fc6a0
};

// Class Tiger.TigerBootGameState
// Size: 0x388 (Inherited: 0x380)
struct ATigerBootGameState : ATigerGameState {
	char pad_380[0x8]; // 0x380(0x08)

	void SetBootStateToArchetypeSelect(); // Function Tiger.TigerBootGameState.SetBootStateToArchetypeSelect // (Final|Native|Public|BlueprintCallable) // @ game+0x1397180
};

// Class Tiger.TigerPassiveConfig
// Size: 0x120 (Inherited: 0x30)
struct UTigerPassiveConfig : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct UTexture2D* Icon; // 0x60(0x08)
	struct UMediaSource* PreviewVideo; // 0x68(0x08)
	struct UTigerWidget* CustomWidget; // 0x70(0x08)
	struct UTigerPassiveComponent* LogicComponent; // 0x78(0x08)
	struct FTigerCharacterStatModification PassiveStatChanges; // 0x80(0xa0)
};

// Class Tiger.TigerBrujahBaneRecklessness
// Size: 0x128 (Inherited: 0x120)
struct UTigerBrujahBaneRecklessness : UTigerPassiveConfig {
	float DamageTakenMultiplier; // 0x120(0x04)
	float AutoDeactivateTimer; // 0x124(0x04)
};

// Class Tiger.TigerPassiveComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerPassiveComponent : UActorComponent {
	struct ATigerPlayer* PlayerOwner; // 0xb0(0x08)
	struct UTigerWidget* PassiveWidget; // 0xb8(0x08)

	void SetPassiveWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerPassiveComponent.SetPassiveWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1455460
	void OnCreated(struct ATigerPlayer* InPlayer, bool InHasAuthority); // Function Tiger.TigerPassiveComponent.OnCreated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsPassiveActive(); // Function Tiger.TigerPassiveComponent.IsPassiveActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1455160
	struct UTigerWidget* GetPassiveWidget(); // Function Tiger.TigerPassiveComponent.GetPassiveWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1454c00
};

// Class Tiger.TigerBrujahBaneRecklessnessLogic
// Size: 0x178 (Inherited: 0xc0)
struct UTigerBrujahBaneRecklessnessLogic : UTigerPassiveComponent {
	struct UTigerBrujahBaneRecklessness* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	char pad_D0[0xa8]; // 0xd0(0xa8)
};

// Class Tiger.TigerBrujahTraitMomentum
// Size: 0x140 (Inherited: 0x120)
struct UTigerBrujahTraitMomentum : UTigerPassiveConfig {
	float MomentumActiveTimer; // 0x120(0x04)
	float GroundSlamRadiusMultiplier; // 0x124(0x04)
	float MightyLeapVelocityMultiplier; // 0x128(0x04)
	float FOTTKnockbackDistanceMultiplier; // 0x12c(0x04)
	float FOTTWallImpactDamageMultiplier; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct UAkAudioEvent* MomentumStartedAudioEvent; // 0x138(0x08)
};

// Class Tiger.TigerBrujahTraitMomentumLogic
// Size: 0xe0 (Inherited: 0xc0)
struct UTigerBrujahTraitMomentumLogic : UTigerPassiveComponent {
	struct UTigerBrujahTraitMomentum* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	char pad_D0[0x10]; // 0xd0(0x10)

	bool IsMomentumActive(); // Function Tiger.TigerBrujahTraitMomentumLogic.IsMomentumActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1396c70
};

// Class Tiger.TigerBuffAdrenalineRushInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffAdrenalineRushInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffAdrenalineRush
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffAdrenalineRush : UTigerBuff {
};

// Class Tiger.TigerBuffAnarchHuntingKnife
// Size: 0x280 (Inherited: 0x260)
struct UTigerBuffAnarchHuntingKnife : UTigerBuff {
	struct UCurveFloat* EffectStrengthBasedOnDistance; // 0x260(0x08)
	struct UCurveFloat* EffectStrengthBasedOnKills; // 0x268(0x08)
	struct UCurveFloat* DamageBasedOnEnemiesKilled; // 0x270(0x08)
	float MaxDistanceToCheckForEnemies; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class Tiger.TigerBuffAnarchHuntingKnifeInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffAnarchHuntingKnifeInstance : UTigerBuffInstance {
	struct UTigerBuffAnarchHuntingKnife* HuntingKnifeBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffAnarchHuntingKnifeStack
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffAnarchHuntingKnifeStack : UTigerBuff {
};

// Class Tiger.TigerBuffAnarchHuntingKnifeStackInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffAnarchHuntingKnifeStackInstance : UTigerBuffInstance {
	struct ATigerPlayer* Player; // 0x88(0x08)
};

// Class Tiger.TigerBuffArtifactFeedingBonus
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffArtifactFeedingBonus : UTigerBuff {
	float FeedBonusHealthMultiplier; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Tiger.TigerBuffArtifactFeedingBonusInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffArtifactFeedingBonusInstance : UTigerBuffInstance {
	struct UTigerBuffArtifactFeedingBonus* ArtifactFeedingBonusBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffHealthRegenBase
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffHealthRegenBase : UTigerBuff {
	float HealthToHeal; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Tiger.TigerBuffArtifactHealthRegen
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffArtifactHealthRegen : UTigerBuffHealthRegenBase {
};

// Class Tiger.TigerBuffHealthRegenBaseInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffHealthRegenBaseInstance : UTigerBuffInstance {
	struct UTigerBuffHealthRegenBase* HealthRegenBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffArtifactHealthRegenInstance
// Size: 0x98 (Inherited: 0x98)
struct UTigerBuffArtifactHealthRegenInstance : UTigerBuffHealthRegenBaseInstance {
};

// Class Tiger.TigerBuffBlindingBeautyInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffBlindingBeautyInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerBuffBlindingBeauty
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffBlindingBeauty : UTigerBuff {
	float BlockJumpDuration; // 0x260(0x04)
	float TurnRateCap; // 0x264(0x04)
};

// Class Tiger.TigerBuffClanReducesCooldown
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffClanReducesCooldown : UTigerBuff {
	float AbilityCooldownReduction; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Tiger.TigerBuffClanReducesCooldownInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffClanReducesCooldownInstance : UTigerBuffInstance {
	struct UTigerBuffClanReducesCooldown* ClanReduceCooldownBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffClimbInterrupt
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffClimbInterrupt : UTigerBuffDisableClimbing {
};

// Class Tiger.TigerBuffClimbInterruptInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffClimbInterruptInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerBuffComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBuffAdded; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnBuffRemoved; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnBuffRefreshed; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnClientBuffIdUpdated; // 0xe0(0x10)
	bool bDrawDebugString; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct TArray<struct UTigerBuffInstance*> BuffInstances; // 0xf8(0x10)
	struct TArray<struct UTigerBuffInstance*> NonVerifiedBuffInstances; // 0x108(0x10)
	struct TArray<struct FTigerDeferredBuffInstantiation> DeferredBuffs; // 0x118(0x10)
	char pad_128[0x20]; // 0x128(0x20)

	void Server_RequestRemoveBuffIfNonExistentFor(struct ATigerCharacter* Target, struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float BuffEndTime); // Function Tiger.TigerBuffComponent.Server_RequestRemoveBuffIfNonExistentFor // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1396fa0
	void RemoveBuffByID(int32_t BuffID); // Function Tiger.TigerBuffComponent.RemoveBuffByID // (Final|Native|Public|BlueprintCallable) // @ game+0x1396f10
	void OnRep_BuffInstances(); // Function Tiger.TigerBuffComponent.OnRep_BuffInstances // (Final|Native|Private) // @ game+0x1396ef0
	void Multicast_ClearBuff(int32_t BuffID); // Function Tiger.TigerBuffComponent.Multicast_ClearBuff // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1396e60
	void Multicast_ClearAllBuffs(); // Function Tiger.TigerBuffComponent.Multicast_ClearAllBuffs // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1396e40
	void Multicast_AddBuff(struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float Length, float BuffStrength); // Function Tiger.TigerBuffComponent.Multicast_AddBuff // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1396ca0
	bool IsDisablingDisciplines(); // Function Tiger.TigerBuffComponent.IsDisablingDisciplines // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396c50
	bool HasBuff(struct UTigerBuff* BuffType); // Function Tiger.TigerBuffComponent.HasBuff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396bb0
	float GetTimeLeft(struct UTigerBuff* BuffType); // Function Tiger.TigerBuffComponent.GetTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396b10
	struct UTigerBuffInstance* FindExistingBuffOfType(struct UTigerBuff* BuffType, struct ATigerCharacter* Caster); // Function Tiger.TigerBuffComponent.FindExistingBuffOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1396900
	void Client_ClearBuffFor(struct ATigerCharacter* Target, int32_t BuffID); // Function Tiger.TigerBuffComponent.Client_ClearBuffFor // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1396760
	void Client_ClearAllBuffs(); // Function Tiger.TigerBuffComponent.Client_ClearAllBuffs // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0xcf4ef0
	void Client_AddBuff(struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float Length, float BuffStrength); // Function Tiger.TigerBuffComponent.Client_AddBuff // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13965c0
	int32_t ApplyStun(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyStun // (Final|Native|Public|BlueprintCallable) // @ game+0x13964f0
	int32_t ApplyInvulnerable(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x1396420
	int32_t ApplyImmobilized(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyImmobilized // (Final|Native|Public|BlueprintCallable) // @ game+0x1396350
	int32_t ApplyGrounded(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyGrounded // (Final|Native|Public|BlueprintCallable) // @ game+0x1396280
	int32_t ApplyBuff(struct UTigerBuff* BuffType, struct ATigerCharacter* BuffCaster, float OverrideLength, float OverrideBuffStrength, bool bDoLagCompensation); // Function Tiger.TigerBuffComponent.ApplyBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x13960e0
};

// Class Tiger.TigerBuffDisciplineVentrueClanInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffDisciplineVentrueClanInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffDisciplineVentrueClan
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffDisciplineVentrueClan : UTigerBuff {
};

// Class Tiger.TigerBuffDOT
// Size: 0x270 (Inherited: 0x260)
struct UTigerBuffDOT : UTigerBuff {
	struct UDamageType* DamageType; // 0x260(0x08)
	float DamagePerTick; // 0x268(0x04)
	bool bPlayHitAnimation; // 0x26c(0x01)
	bool bSpawnBloodDecals; // 0x26d(0x01)
	bool bUseCasterAsInstigator; // 0x26e(0x01)
	char pad_26F[0x1]; // 0x26f(0x01)
};

// Class Tiger.TigerBuffDOTInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffDOTInstance : UTigerBuffInstance {
	struct UTigerBuffDOT* BuffDOT; // 0x88(0x08)
	char pad_90[0x10]; // 0x90(0x10)
};

// Class Tiger.TigerBufferedAction
// Size: 0x48 (Inherited: 0x28)
struct UTigerBufferedAction : UObject {
	struct ATigerPlayerController* OwnerPlayerController; // 0x28(0x08)
	struct UTigerActionBuffer* OwnerActionBuffer; // 0x30(0x08)
	char pad_38[0x10]; // 0x38(0x10)
};

// Class Tiger.TigerBufferedActionQuickAttack
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionQuickAttack : UTigerBufferedAction {
};

// Class Tiger.TigerBuffExtraArtifacts
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffExtraArtifacts : UTigerBuff {
};

// Class Tiger.TigerBuffExtraArtifactsInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffExtraArtifactsInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffFOTTChargeup
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffFOTTChargeup : UTigerBuff {
};

// Class Tiger.TigerBuffFOTTChargeupInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffFOTTChargeupInstance : UTigerBuffInstance {
	struct UTigerBuffFOTTChargeup* FOTTChargeupBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffFOTTKnockbackWallStun
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffFOTTKnockbackWallStun : UTigerBuff {
	float WallStunnedTimer; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Tiger.TigerBuffFOTTKnockbackWallStunInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffFOTTKnockbackWallStunInstance : UTigerBuffInstance {
	struct UTigerBuffFOTTKnockbackWallStun* FOTTKnockbackWallStun; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
	struct ATigerCharacter* Target; // 0x98(0x08)
};

// Class Tiger.TigerBuffFrenzy
// Size: 0x270 (Inherited: 0x260)
struct UTigerBuffFrenzy : UTigerBuff {
	float HPRegenPercentPerSecond; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct UTigerWeapon* WeaponClassToEquip; // 0x268(0x08)
};

// Class Tiger.TigerBuffFrenzyInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffFrenzyInstance : UTigerBuffInstance {
	struct UTigerBuffFrenzy* FrenzyBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffInAirMomentumLossInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffInAirMomentumLossInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)

	void OnLandedDelegate(struct FHitResult& InHit); // Function Tiger.TigerBuffInAirMomentumLossInstance.OnLandedDelegate // (Final|Native|Public|HasOutParms) // @ game+0x139d260
};

// Class Tiger.TigerBuffInAirMomentumLoss
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffInAirMomentumLoss : UTigerBuff {
	float MinimumHorizontalSpeed; // 0x260(0x04)
	float TimeToDecelerate; // 0x264(0x04)
};

// Class Tiger.TigerBuffKindredCharmInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffKindredCharmInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffKindredCharm
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffKindredCharm : UTigerBuff {
};

// Class Tiger.TigerBuffMasqueradeKeepingMovement
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffMasqueradeKeepingMovement : UTigerBuff {
};

// Class Tiger.TigerBuffMasqueradeKeepingMovementInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffMasqueradeKeepingMovementInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerBuffMeleeCharge
// Size: 0x270 (Inherited: 0x260)
struct UTigerBuffMeleeCharge : UTigerBuff {
	float TimeRunningBeforeBuffIsActive; // 0x260(0x04)
	float MaxDeviationAllowedInDegrees; // 0x264(0x04)
	struct UTigerBuff* AttackBuff; // 0x268(0x08)
};

// Class Tiger.TigerBuffMeleeChargeInstance
// Size: 0xb0 (Inherited: 0x88)
struct UTigerBuffMeleeChargeInstance : UTigerBuffInstance {
	struct UTigerBuffMeleeCharge* MeleeChargeBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerBuffMeleeChargeAttack
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffMeleeChargeAttack : UTigerBuff {
	struct UParticleSystem* AttackParticleEffect; // 0x260(0x08)
};

// Class Tiger.TigerBuffMeleeChargeAttackInstance
// Size: 0xa8 (Inherited: 0x88)
struct UTigerBuffMeleeChargeAttackInstance : UTigerBuffInstance {
	struct UTigerBuffMeleeChargeAttack* MeleeChargeAttackBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	struct UParticleSystemComponent* ActiveAttackParticles; // 0x98(0x08)
	char pad_A0[0x8]; // 0xa0(0x08)

	void SwingFinished(); // Function Tiger.TigerBuffMeleeChargeAttackInstance.SwingFinished // (Final|Native|Private) // @ game+0x139d3d0
};

// Class Tiger.TigerBuffApathy
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffApathy : UTigerBuff {
};

// Class Tiger.TigerBuffApathyInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffApathyInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffWrath
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffWrath : UTigerBuff {
};

// Class Tiger.TigerBuffWrathInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffWrathInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffPostProcess
// Size: 0x238 (Inherited: 0x228)
struct ATigerBuffPostProcess : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct UPostProcessComponent* PostProcess; // 0x230(0x08)
};

// Class Tiger.TigerBuffPreventMasqueradeBreak
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffPreventMasqueradeBreak : UTigerBuff {
	struct UAkAudioEvent* ArtifactBreakAudioEvent; // 0x260(0x08)
};

// Class Tiger.TigerBuffPreventMasqueradeBreakInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffPreventMasqueradeBreakInstance : UTigerBuffInstance {
	struct UTigerBuffPreventMasqueradeBreak* PreventMasqueradeBreakBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffRejuvenatingVoiceInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffRejuvenatingVoiceInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerBuffRejuvenatingVoice
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffRejuvenatingVoice : UTigerBuff {

	void OnHealStop(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuffRejuvenatingVoice.OnHealStop // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnHealStart(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuffRejuvenatingVoice.OnHealStart // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerBuffRespawnGhost
// Size: 0x270 (Inherited: 0x260)
struct UTigerBuffRespawnGhost : UTigerBuff {
	struct UMaterialInterface* GhostMaterial; // 0x260(0x08)
	struct UTigerBuffRespawnGhostInstance* BuffInstanceClass; // 0x268(0x08)
};

// Class Tiger.TigerBuffRespawnGhostInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffRespawnGhostInstance : UTigerBuffInstance {

	void OnDeactivatedBP(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerBuffRespawnGhostInstance.OnDeactivatedBP // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnActivatedBP(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerBuffRespawnGhostInstance.OnActivatedBP // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerBuffShackles
// Size: 0x278 (Inherited: 0x260)
struct UTigerBuffShackles : UTigerBuff {
	struct UTigerCharacterEffect* ActiveEffect; // 0x260(0x08)
	struct FName ShacklesStaggerAnimationName; // 0x268(0x08)
	float DamageToDeal; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerBuffShacklesInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffShacklesInstance : UTigerBuffInstance {
	struct UTigerBuffShackles* ShacklesBuff; // 0x88(0x08)
};

// Class Tiger.TigerBuffShark
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffShark : UTigerBuff {
};

// Class Tiger.TigerBuffSharkInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffSharkInstance : UTigerBuffInstance {
	struct UTigerBuffShark* SharkBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffShieldBase
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffShieldBase : UTigerBuff {
	float MaxShield; // 0x260(0x04)
	float InitialShield; // 0x264(0x04)
};

// Class Tiger.TigerBuffShieldAdrenalineRush
// Size: 0x278 (Inherited: 0x268)
struct UTigerBuffShieldAdrenalineRush : UTigerBuffShieldBase {
	float TimeBeforeDecay; // 0x268(0x04)
	float DecayPerSecond; // 0x26c(0x04)
	float DamageToShieldScale; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerBuffShieldBaseInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffShieldBaseInstance : UTigerBuffInstance {
	char pad_88[0x18]; // 0x88(0x18)
};

// Class Tiger.TigerBuffShieldAdrenalineRushInstance
// Size: 0xa8 (Inherited: 0xa0)
struct UTigerBuffShieldAdrenalineRushInstance : UTigerBuffShieldBaseInstance {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class Tiger.TigerBuffSingleSwing
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffSingleSwing : UTigerBuff {
};

// Class Tiger.TigerBuffSingleSwingInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffSingleSwingInstance : UTigerBuffInstance {
	struct ATigerPlayer* Player; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)

	void SwingFinished(); // Function Tiger.TigerBuffSingleSwingInstance.SwingFinished // (Final|Native|Private) // @ game+0x139d3f0
};

// Class Tiger.TigerBuffStunBaton
// Size: 0x280 (Inherited: 0x260)
struct UTigerBuffStunBaton : UTigerBuff {
	float StunBonusDamage; // 0x260(0x04)
	float ChargeGainedOnHit; // 0x264(0x04)
	float ChargeGainedPerUpdate; // 0x268(0x04)
	float PassiveChargeRate; // 0x26c(0x04)
	bool bRegisterMultipleHitsOnChargeUp; // 0x270(0x01)
	bool bRegisterMultipleHitsOnStun; // 0x271(0x01)
	char pad_272[0x6]; // 0x272(0x06)
	struct UTigerBuffInstance* TBPInstanceBuff; // 0x278(0x08)
};

// Class Tiger.TigerBuffStunBatonInstance
// Size: 0xa8 (Inherited: 0x88)
struct UTigerBuffStunBatonInstance : UTigerBuffInstance {
	struct UTigerBuffStunBaton* StunBatonBuff; // 0x88(0x08)
	char pad_90[0x10]; // 0x90(0x10)
	struct ATigerPlayer* Player; // 0xa0(0x08)

	void TargetHitShockConsumed(struct ATigerCharacter* Target); // Function Tiger.TigerBuffStunBatonInstance.TargetHitShockConsumed // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SwingStarted(bool bWasHeavyAttack); // Function Tiger.TigerBuffStunBatonInstance.SwingStarted // (Final|Native|Public) // @ game+0x139d430
	void SwingFinished(); // Function Tiger.TigerBuffStunBatonInstance.SwingFinished // (Final|Native|Public) // @ game+0x139d410
	void MaxChargeReachedEvent(); // Function Tiger.TigerBuffStunBatonInstance.MaxChargeReachedEvent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsStunReady(); // Function Tiger.TigerBuffStunBatonInstance.IsStunReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x139d1b0
	void HitTarget(struct ATigerCharacter* InTarget); // Function Tiger.TigerBuffStunBatonInstance.HitTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x139d120
	void ChargeGainedEvent(float CurrentChargeValue); // Function Tiger.TigerBuffStunBatonInstance.ChargeGainedEvent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void AddCharge(float ValueToAdd); // Function Tiger.TigerBuffStunBatonInstance.AddCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x139d0a0
};

// Class Tiger.TigerBuffThorns
// Size: 0x288 (Inherited: 0x270)
struct UTigerBuffThorns : UTigerBuffDOT {
	float HealInterval; // 0x270(0x04)
	float HealPercentage; // 0x274(0x04)
	struct UTigerCharacterEffect* HealEffect; // 0x278(0x08)
	struct UAkAudioEvent* DOTTriggerEvent; // 0x280(0x08)
};

// Class Tiger.TigerBuffThornsInstance
// Size: 0xb0 (Inherited: 0xa0)
struct UTigerBuffThornsInstance : UTigerBuffDOTInstance {
	char pad_A0[0x8]; // 0xa0(0x08)
	struct UTigerBuffThorns* ThornsBuff; // 0xa8(0x08)
};

// Class Tiger.TigerBuffUnholyStimulant
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffUnholyStimulant : UTigerBuff {
};

// Class Tiger.TigerBuffUnholyStimulantInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffUnholyStimulantInstance : UTigerBuffInstance {

	void OnInsideHolyIncenseChanged(bool bInIsInsideHolyIncense); // Function Tiger.TigerBuffUnholyStimulantInstance.OnInsideHolyIncenseChanged // (Final|Native|Private) // @ game+0x139d1d0
};

// Class Tiger.TigerBuffVanish
// Size: 0x280 (Inherited: 0x260)
struct UTigerBuffVanish : UTigerBuffInvisible {
	float TimeReductionPerMeterMoved; // 0x260(0x04)
	float NoiseNotifyEventRange; // 0x264(0x04)
	struct UCurveFloat* MaterialTransitionIntoCurve; // 0x268(0x08)
	struct UCurveFloat* MaterialTransitionOutFromCurve; // 0x270(0x08)
	struct UParticleSystem* BlendOutParticles; // 0x278(0x08)
};

// Class Tiger.TigerBuffVanishInstance
// Size: 0xb0 (Inherited: 0x88)
struct UTigerBuffVanishInstance : UTigerBuffInstance {
	struct UTigerBuffVanish* VanishBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerBuffVoiceOfInspiration
// Size: 0x260 (Inherited: 0x260)
struct UTigerBuffVoiceOfInspiration : UTigerBuff {
};

// Class Tiger.TigerBuffVoiceOfInspirationInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffVoiceOfInspirationInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuildingWallPreset
// Size: 0x38 (Inherited: 0x28)
struct UTigerBuildingWallPreset : UObject {
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> Meshes; // 0x28(0x10)
};

// Class Tiger.TigerBuildingSystem
// Size: 0x290 (Inherited: 0x228)
struct ATigerBuildingSystem : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USplineComponent* SplineLeft; // 0x230(0x08)
	struct USplineComponent* SplineRight; // 0x238(0x08)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerFrontComponents; // 0x240(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerLeftComponents; // 0x250(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerBackComponents; // 0x260(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerRightComponents; // 0x270(0x10)
	struct FTigerBuildingSystemWallPieceInstancingData WallPieceInstancingDatas; // 0x280(0x10)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerBuildingSystem.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x139d340
};

// Class Tiger.TigerBuildingSystemDepricated
// Size: 0x4b0 (Inherited: 0x290)
struct ATigerBuildingSystemDepricated : ATigerBuildingSystem {
	struct UHierarchicalInstancedStaticMeshComponent* Front_00; // 0x290(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_01; // 0x298(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_02; // 0x2a0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_03; // 0x2a8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_04; // 0x2b0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_05; // 0x2b8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_06; // 0x2c0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_07; // 0x2c8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_00; // 0x2d0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_01; // 0x2d8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_02; // 0x2e0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_03; // 0x2e8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_04; // 0x2f0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_05; // 0x2f8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_06; // 0x300(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_07; // 0x308(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_00; // 0x310(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_01; // 0x318(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_02; // 0x320(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_03; // 0x328(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_04; // 0x330(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_05; // 0x338(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_06; // 0x340(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_07; // 0x348(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_00; // 0x350(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_01; // 0x358(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_02; // 0x360(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_03; // 0x368(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_04; // 0x370(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_05; // 0x378(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_06; // 0x380(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_07; // 0x388(0x08)
	struct UStaticMeshComponent* CornerFL_00; // 0x390(0x08)
	struct UStaticMeshComponent* CornerFL_01; // 0x398(0x08)
	struct UStaticMeshComponent* CornerFL_02; // 0x3a0(0x08)
	struct UStaticMeshComponent* CornerFL_03; // 0x3a8(0x08)
	struct UStaticMeshComponent* CornerFL_04; // 0x3b0(0x08)
	struct UStaticMeshComponent* CornerFL_05; // 0x3b8(0x08)
	struct UStaticMeshComponent* CornerFL_06; // 0x3c0(0x08)
	struct UStaticMeshComponent* CornerFL_07; // 0x3c8(0x08)
	struct UStaticMeshComponent* CornerLB_00; // 0x3d0(0x08)
	struct UStaticMeshComponent* CornerLB_01; // 0x3d8(0x08)
	struct UStaticMeshComponent* CornerLB_02; // 0x3e0(0x08)
	struct UStaticMeshComponent* CornerLB_03; // 0x3e8(0x08)
	struct UStaticMeshComponent* CornerLB_04; // 0x3f0(0x08)
	struct UStaticMeshComponent* CornerLB_05; // 0x3f8(0x08)
	struct UStaticMeshComponent* CornerLB_06; // 0x400(0x08)
	struct UStaticMeshComponent* CornerLB_07; // 0x408(0x08)
	struct UStaticMeshComponent* CornerBR_00; // 0x410(0x08)
	struct UStaticMeshComponent* CornerBR_01; // 0x418(0x08)
	struct UStaticMeshComponent* CornerBR_02; // 0x420(0x08)
	struct UStaticMeshComponent* CornerBR_03; // 0x428(0x08)
	struct UStaticMeshComponent* CornerBR_04; // 0x430(0x08)
	struct UStaticMeshComponent* CornerBR_05; // 0x438(0x08)
	struct UStaticMeshComponent* CornerBR_06; // 0x440(0x08)
	struct UStaticMeshComponent* CornerBR_07; // 0x448(0x08)
	struct UStaticMeshComponent* CornerRF_00; // 0x450(0x08)
	struct UStaticMeshComponent* CornerRF_01; // 0x458(0x08)
	struct UStaticMeshComponent* CornerRF_02; // 0x460(0x08)
	struct UStaticMeshComponent* CornerRF_03; // 0x468(0x08)
	struct UStaticMeshComponent* CornerRF_04; // 0x470(0x08)
	struct UStaticMeshComponent* CornerRF_05; // 0x478(0x08)
	struct UStaticMeshComponent* CornerRF_06; // 0x480(0x08)
	struct UStaticMeshComponent* CornerRF_07; // 0x488(0x08)
	char pad_490[0x20]; // 0x490(0x20)

	void RemoveUnusedParts(); // Function Tiger.TigerBuildingSystemDepricated.RemoveUnusedParts // (Final|Native|Public|BlueprintCallable) // @ game+0x13a20a0
	struct UHierarchicalInstancedStaticMeshComponent* GetFloorMeshComponent(enum class UTigerBuildingSide Side, int32_t FloorNumber); // Function Tiger.TigerBuildingSystemDepricated.GetFloorMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1040
	struct UStaticMeshComponent* GetCornerMeshComponent(enum class UTigerBuildingSide Side, int32_t FloorNumber); // Function Tiger.TigerBuildingSystemDepricated.GetCornerMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0e50
	struct TArray<struct UHierarchicalInstancedStaticMeshComponent*> GetAllFloorMeshComponents(); // Function Tiger.TigerBuildingSystemDepricated.GetAllFloorMeshComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a09c0
	struct TArray<struct UStaticMeshComponent*> GetAllCornerMeshComponents(); // Function Tiger.TigerBuildingSystemDepricated.GetAllCornerMeshComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0990
};

// Class Tiger.TigerBuildingWallStreamingSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerBuildingWallStreamingSettings : USharkLocalDeveloperSettings {
	int32_t WallsToStreamPerFrame; // 0x38(0x04)
	bool bLoggingEnabled; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Tiger.TigerBuildingSystemWallStreamer
// Size: 0x250 (Inherited: 0x228)
struct ATigerBuildingSystemWallStreamer : AActor {
	struct TArray<struct FTigerStreamableBuildingSides> StreamableBuildingParts; // 0x228(0x10)
	struct TArray<struct UStaticMeshComponent*> ComponentsToCreateRenderstateOn; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)
};

// Class Tiger.TigerBuildingWallPreviewer
// Size: 0x230 (Inherited: 0x228)
struct ATigerBuildingWallPreviewer : AActor {
	struct UTigerBuildingWallPreset* Preset; // 0x228(0x08)
};

// Class Tiger.TigerCamarillaDecal
// Size: 0x238 (Inherited: 0x230)
struct ATigerCamarillaDecal : ADecalActor {
	char pad_230[0x8]; // 0x230(0x08)
};

// Class Tiger.TigerCameraPreset
// Size: 0xa8 (Inherited: 0x28)
struct UTigerCameraPreset : UObject {
	float FOV; // 0x28(0x04)
	float SpringArmLength; // 0x2c(0x04)
	struct FVector CameraOffset; // 0x30(0x0c)
	struct FVector TargetOffset; // 0x3c(0x0c)
	struct UCurveFloat* TransitionCurveIn; // 0x48(0x08)
	struct UCurveFloat* TransitionCurveOutOverride; // 0x50(0x08)
	struct UCurveFloat* RotatePawnTransition; // 0x58(0x08)
	float SidewaysCameraMirrorTime; // 0x60(0x04)
	struct FVector CameraLagSpeed; // 0x64(0x0c)
	struct FVector CameraLagMaxDistance; // 0x70(0x0c)
	float CameraRotationLagSpeed; // 0x7c(0x04)
	float CameraSensitivityModifier; // 0x80(0x04)
	bool bUseCameraSensitivtyModifierDuringFade; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	struct UTigerCameraBehavior* CameraBehavior; // 0x88(0x08)
	struct UMatineeCameraShake* CameraShakeBehaviour; // 0x90(0x08)
	bool bShortenSpringArmWhenLookingUp; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float ViewPitchMax; // 0x9c(0x04)
	float ArmLengthInterpSpeed; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Tiger.TigerCapturePointProgressUI
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerCapturePointProgressUI : UTigerWidget {
	struct FText YouCapturingStatusText; // 0x280(0x18)
	struct FText EnemyCapturingStatusText; // 0x298(0x18)
	struct FText ContestedStatusText; // 0x2b0(0x18)
	enum class ETigerCapturePointStatus CaptureStatus; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float PercentageLeft; // 0x2cc(0x04)

	void StatusChanged(); // Function Tiger.TigerCapturePointProgressUI.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnCapturePointEnabled(); // Function Tiger.TigerCapturePointProgressUI.OnCapturePointEnabled // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerChallenge
// Size: 0xe0 (Inherited: 0x28)
struct UTigerChallenge : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate OnValueChangedEvent; // 0x30(0x10)
	struct FMulticastInlineDelegate OnChallengeCompletedEvent; // 0x40(0x10)
	struct FMulticastInlineDelegate OnChallengeTierCompletedEvent; // 0x50(0x10)
	struct UWorld* World; // 0x60(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x68(0x08)
	int32_t PreSessionValue; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct FText ChallengeDisplayName; // 0x78(0x18)
	int32_t DefaultTargetValue; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct TArray<int32_t> DefaultTieredTargetValues; // 0x98(0x10)
	bool bInOneGame; // 0xa8(0x01)
	bool bWithoutDamage; // 0xa9(0x01)
	char pad_AA[0x2]; // 0xaa(0x02)
	int32_t TargetValue; // 0xac(0x04)
	struct FText Description; // 0xb0(0x18)
	uint64_t ChallengeTypeTelemetryID; // 0xc8(0x08)
	bool bChallengeCompleteEventRaised; // 0xd0(0x01)
	bool bTierCompleteEventRaised; // 0xd1(0x01)
	bool bUseTiers; // 0xd2(0x01)
	char pad_D3[0x1]; // 0xd3(0x01)
	uint32_t CurrentTier; // 0xd4(0x04)
	uint32_t NumberOfTiers; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	bool WithoutTakingDamage(); // Function Tiger.TigerChallenge.WithoutTakingDamage // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a2170
	void SetCurrentValue(int32_t NewValue); // Function Tiger.TigerChallenge.SetCurrentValue // (Native|Public|BlueprintCallable) // @ game+0x13a20e0
	void ResetFromTakingDamage(); // Function Tiger.TigerChallenge.ResetFromTakingDamage // (Final|Native|Private) // @ game+0x13a20c0
	void OnValueChangedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnValueChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnChallengeTierCompletedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnChallengeTierCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnChallengeCompletedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnChallengeCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool IsTierComplete(); // Function Tiger.TigerChallenge.IsTierComplete // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1fb0
	bool IsSingleMatch(); // Function Tiger.TigerChallenge.IsSingleMatch // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1f80
	bool IsComplete(); // Function Tiger.TigerChallenge.IsComplete // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1f50
	bool HasTiers(); // Function Tiger.TigerChallenge.HasTiers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1f30
	bool HasCompletedAllTiers(); // Function Tiger.TigerChallenge.HasCompletedAllTiers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1ea0
	struct FText GetVariableName(); // Function Tiger.TigerChallenge.GetVariableName // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1cc0
	int32_t GetTargetValueOfLastTier(); // Function Tiger.TigerChallenge.GetTargetValueOfLastTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1c80
	int32_t GetTargetValueOfCurrentTier(); // Function Tiger.TigerChallenge.GetTargetValueOfCurrentTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1c10
	int32_t GetTargetValueByTier(int32_t InTier); // Function Tiger.TigerChallenge.GetTargetValueByTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1b40
	int32_t GetTargetValue(); // Function Tiger.TigerChallenge.GetTargetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1b20
	struct FTigerQuestIdentifier GetQuestIds(); // Function Tiger.TigerChallenge.GetQuestIds // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a14c0
	float GetProgressAcrossAllTiers(); // Function Tiger.TigerChallenge.GetProgressAcrossAllTiers // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1480
	float GetProgress(); // Function Tiger.TigerChallenge.GetProgress // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1440
	int32_t GetPreSessionValue(); // Function Tiger.TigerChallenge.GetPreSessionValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1420
	int32_t GetNumberOfTiers(); // Function Tiger.TigerChallenge.GetNumberOfTiers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1360
	struct FText GetDescription(); // Function Tiger.TigerChallenge.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0f90
	int32_t GetCurrentValue(); // Function Tiger.TigerChallenge.GetCurrentValue // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0f60
	int32_t GetCurrentTier(); // Function Tiger.TigerChallenge.GetCurrentTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0f20
	struct FText GetClanRequirementsText(); // Function Tiger.TigerChallenge.GetClanRequirementsText // (Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x184a280
	struct FText GetChallengeDisplayName(); // Function Tiger.TigerChallenge.GetChallengeDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0c90
	struct TArray<int32_t> GetAllTargetValues(); // Function Tiger.TigerChallenge.GetAllTargetValues // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0a50
	struct FText BuildDescriptionText(); // Function Tiger.TigerChallenge.BuildDescriptionText // (Event|Protected|BlueprintEvent|Const) // @ game+0x184a280
	void AdvanceTier(); // Function Tiger.TigerChallenge.AdvanceTier // (Final|Native|Public) // @ game+0x13a0970
	void AdvanceChallenge(); // Function Tiger.TigerChallenge.AdvanceChallenge // (Final|Native|Public) // @ game+0x13a0950
};

// Class Tiger.TigerChallengeBreakMasquerade
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeBreakMasquerade : UTigerChallenge {
	char pad_E0[0x8]; // 0xe0(0x08)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeBreakMasquerade.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13a2010
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeBreakMasquerade.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x13a1dd0
};

// Class Tiger.TigerChallengeCollectibles
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeCollectibles : UTigerChallenge {
	char pad_E0[0x8]; // 0xe0(0x08)

	void HandleCollectibleCollected(uint32_t InCollectibleId); // Function Tiger.TigerChallengeCollectibles.HandleCollectibleCollected // (Final|Native|Private) // @ game+0x13a1d40
};

// Class Tiger.TigerChallengeCollection
// Size: 0x48 (Inherited: 0x30)
struct UTigerChallengeCollection : UDataAsset {
	struct TArray<struct FTigerChallengeCollectionEntry> Challenges; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerClientRewardTrackChallenges
// Size: 0x38 (Inherited: 0x28)
struct UTigerClientRewardTrackChallenges : UObject {
	int32_t RewardHighlightIndex; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UTigerPersistentPlayerState* PersistentPlayerState; // 0x30(0x08)

	struct UTigerInventoryItemBase* GetRewardTiedToSpecificChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetRewardTiedToSpecificChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1a80
	struct FTigerItemId GetRewardIdTiedToSpecificChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetRewardIdTiedToSpecificChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1720
	int32_t GetNumCompletedChallenges(); // Function Tiger.TigerClientRewardTrackChallenges.GetNumCompletedChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a12a0
	int32_t GetNumChallenges(); // Function Tiger.TigerClientRewardTrackChallenges.GetNumChallenges // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1110
	int32_t GetCompletionPercentage(); // Function Tiger.TigerClientRewardTrackChallenges.GetCompletionPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0d90
	enum class ETigerChallengeCategory GetChallengeCategory(); // Function Tiger.TigerClientRewardTrackChallenges.GetChallengeCategory // (Native|Public|Const) // @ game+0xe00d40
	struct UTigerChallenge* GetChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0bf0
};

// Class Tiger.TigerClientRewardTrackTransientChallenges
// Size: 0x58 (Inherited: 0x38)
struct UTigerClientRewardTrackTransientChallenges : UTigerClientRewardTrackChallenges {
	struct TArray<struct FTigerChallengeTypeID> ChallengeStorageIDs; // 0x38(0x10)
	struct TArray<struct FTigerItemId> RewardIdForSpecificChallenge; // 0x48(0x10)
};

// Class Tiger.TigerClientRewardTrackDailyChallenges
// Size: 0x70 (Inherited: 0x38)
struct UTigerClientRewardTrackDailyChallenges : UTigerClientRewardTrackChallenges {
	struct TArray<struct FTigerItemId> RewardIds; // 0x38(0x10)
	struct TArray<struct FTigerChallengeTypeID> DailyChallengeIDs; // 0x48(0x10)
	struct FTigerItemId DailyChallengeExpReward; // 0x58(0x08)
	struct FTigerItemId PersistentDailyChallengeTokenReward; // 0x60(0x08)
	bool bIsFirstChallengePersistent; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)

	struct UTigerInventoryItemBase* GetRewardByIndex(int32_t InRewardIndex); // Function Tiger.TigerClientRewardTrackDailyChallenges.GetRewardByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a15b0
};

// Class Tiger.TigerClientRewardTrackWeeklyChallenges
// Size: 0x68 (Inherited: 0x58)
struct UTigerClientRewardTrackWeeklyChallenges : UTigerClientRewardTrackTransientChallenges {
	struct FDateTime UnlockDate; // 0x58(0x08)
	struct FDateTime LockDate; // 0x60(0x08)

	bool IsUnlocked(); // Function Tiger.TigerClientRewardTrackWeeklyChallenges.IsUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1fe0
	bool HasExpired(); // Function Tiger.TigerClientRewardTrackWeeklyChallenges.HasExpired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1f00
};

// Class Tiger.TigerClientRewardTrackMasteryChallenges
// Size: 0x88 (Inherited: 0x38)
struct UTigerClientRewardTrackMasteryChallenges : UTigerClientRewardTrackChallenges {
	struct TMap<enum class ETigerChallengeSubCategory, struct FTigerNestedSubCategoryContainer> Challenges; // 0x38(0x50)

	struct FTigerItemId GetRewardIdTiedToSpecificChallengeByIndexOfSubcategory(enum class ETigerChallengeSubCategory InSubCategory, int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetRewardIdTiedToSpecificChallengeByIndexOfSubcategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a17c0
	int32_t GetNumCompletedChallengesOfSubCategory(enum class ETigerChallengeSubCategory InSubCategory); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetNumCompletedChallengesOfSubCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a12d0
	int32_t GetNumChallengesOfSubCategory(enum class ETigerChallengeSubCategory InSubCategory); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetNumChallengesOfSubCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1210
	struct TMap<enum class ETigerChallengeSubCategory, int32_t> GetNumChallengesBySubCategory(); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetNumChallengesBySubCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1140
	int32_t GetCompletionPercentageOfSubcategory(enum class ETigerChallengeSubCategory InSubCategory); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetCompletionPercentageOfSubcategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0dc0
	struct UTigerChallenge* GetChallengeFromSubCategoryByIndex(enum class ETigerChallengeSubCategory InSubCategory, int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetChallengeFromSubCategoryByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a0cc0
};

// Class Tiger.TigerClientRewardTrackTestChallenges
// Size: 0x58 (Inherited: 0x58)
struct UTigerClientRewardTrackTestChallenges : UTigerClientRewardTrackTransientChallenges {
};

// Class Tiger.TigerClientChallengesCollection
// Size: 0x58 (Inherited: 0x28)
struct UTigerClientChallengesCollection : UObject {
	struct TArray<struct UTigerClientRewardTrackWeeklyChallenges*> WeeklyChallenges; // 0x28(0x10)
	struct UTigerClientRewardTrackDailyChallenges* DailyChallenges; // 0x38(0x08)
	struct TArray<struct UTigerClientRewardTrackMasteryChallenges*> MasteryChallenges; // 0x40(0x10)
	struct UTigerClientRewardTrackTestChallenges* TestChallenges; // 0x50(0x08)

	struct UTigerInventoryItemBase* GetRewardTiedToChallengeOfCategory(enum class ETigerChallengeCategory InCategory, struct UTigerChallenge* InChallenge, int32_t InTier); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToChallengeOfCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1970
	struct UTigerInventoryItemBase* GetRewardTiedToChallenge(struct UTigerChallenge* InChallenge, int32_t InTier); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a18a0
	struct FTigerItemId GetRewardIdTiedToChallenge(struct UTigerChallenge* InChallenge, int32_t InTier); // Function Tiger.TigerClientChallengesCollection.GetRewardIdTiedToChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1650
	int32_t GetPercentageCompletionOfCategory(enum class ETigerChallengeCategory InCategory); // Function Tiger.TigerClientChallengesCollection.GetPercentageCompletionOfCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a1390
	bool AllowTestChallenges(); // Function Tiger.TigerClientChallengesCollection.AllowTestChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb4dde0
};

// Class Tiger.TigerChallengeDealDamage
// Size: 0x150 (Inherited: 0xe0)
struct UTigerChallengeDealDamage : UTigerChallenge {
	bool bNeedsToDamagePlayer; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xe8(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x100(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x110(0x10)
	struct FTigerChallengeRequirementDistance DistanceToEnemyRequirement; // 0x120(0x10)
	struct FTigerChallengeRequirementPowerKit PlayerArchetypeRequirement; // 0x130(0x10)
	char pad_140[0x10]; // 0x140(0x10)
};

// Class Tiger.TigerChallengeDiablerize
// Size: 0x118 (Inherited: 0xe0)
struct UTigerChallengeDiablerize : UTigerChallenge {
	struct FTigerChallengeRequirementClan TargetRequiredClan; // 0xe0(0x10)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf0(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x100(0x10)
	char pad_110[0x8]; // 0x110(0x08)

	void OnDiablerizedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeDiablerize.OnDiablerizedPlayerEvent // (Final|Native|Private) // @ game+0x13a6ba0
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeDiablerize.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13a6810
};

// Class Tiger.TigerChallengeDownPlayer
// Size: 0x140 (Inherited: 0xe0)
struct UTigerChallengeDownPlayer : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xe0(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x108(0x10)
	struct FTigerChallengeRequirementDisciplineSlot DisciplineFailRequirement; // 0x118(0x10)
	struct FTigerChallengeRequirementAirborne AirborneRequirement; // 0x128(0x10)
	bool bIsAirborneRequirementForPlayer; // 0x138(0x01)
	bool bDownWithHeadShot; // 0x139(0x01)
	char pad_13A[0x6]; // 0x13a(0x06)

	void OnDownedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeDownPlayer.OnDownedPlayerEvent // (Final|Native|Private) // @ game+0x13a6d40
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeDownPlayer.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13a68a0
};

// Class Tiger.TigerChallengeDrainNpc
// Size: 0x100 (Inherited: 0xe0)
struct UTigerChallengeDrainNpc : UTigerChallenge {
	bool bSpecificNPCType; // 0xe0(0x01)
	enum class ETigerNPCType TargetNPCType; // 0xe1(0x01)
	enum class ETigerBloodPotency MinimumPotency; // 0xe2(0x01)
	char pad_E3[0x5]; // 0xe3(0x05)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xe8(0x10)
	char pad_F8[0x8]; // 0xf8(0x08)

	bool IsBloodPotencyRelevant(); // Function Tiger.TigerChallengeDrainNpc.IsBloodPotencyRelevant // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13a6b70
	void InitOnPlayerEvent(struct AController* NewPlayer); // Function Tiger.TigerChallengeDrainNpc.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13a6930
	void HandleOnFeedingDoneEvent(bool bTargetIsDrained, struct ATigerCharacter* InTargetFedOn); // Function Tiger.TigerChallengeDrainNpc.HandleOnFeedingDoneEvent // (Final|Native|Private) // @ game+0x13a6370
};

// Class Tiger.TigerChallengeDropOffItem
// Size: 0x110 (Inherited: 0xe0)
struct UTigerChallengeDropOffItem : UTigerChallenge {
	struct TSoftObjectPtr<ATigerInteractiveItemDropOff> DropOffPoint; // 0xe0(0x28)
	char pad_108[0x8]; // 0x108(0x08)

	void HandleDropoffCompleted(struct TSoftObjectPtr<ATigerInteractiveItemDropOff> InDropoffPoint); // Function Tiger.TigerChallengeDropOffItem.HandleDropoffCompleted // (Final|Native|Private) // @ game+0x13a6260
};

// Class Tiger.TigerChallengeEliminateGroup
// Size: 0x140 (Inherited: 0xe0)
struct UTigerChallengeEliminateGroup : UTigerChallenge {
	bool bDownedPlayersOnly; // 0xe0(0x01)
	char pad_E1[0x5f]; // 0xe1(0x5f)

	void OnKilledOrDownedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeEliminateGroup.OnKilledOrDownedPlayerEvent // (Final|Native|Private) // @ game+0x13a6ee0
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeEliminateGroup.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13a69c0
};

// Class Tiger.TigerChallengeGetEatenByShark
// Size: 0xf8 (Inherited: 0xe0)
struct UTigerChallengeGetEatenByShark : UTigerChallenge {
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xe0(0x10)
	char pad_F0[0x8]; // 0xf0(0x08)

	void OnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeGetEatenByShark.OnRestartPlayer // (Final|Native|Public) // @ game+0x13a71f0
	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeGetEatenByShark.OnPlayerEvent // (Final|Native|Private) // @ game+0x13a7120
};

// Class Tiger.TigerChallengeHeadshots
// Size: 0x128 (Inherited: 0xe0)
struct UTigerChallengeHeadshots : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xe0(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x108(0x10)
	bool bOnlyOnPlayers; // 0x118(0x01)
	char pad_119[0xf]; // 0x119(0x0f)
};

// Class Tiger.TigerChallengeHitBullets
// Size: 0x128 (Inherited: 0xe0)
struct UTigerChallengeHitBullets : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xe0(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x108(0x10)
	char pad_118[0x10]; // 0x118(0x10)
};

// Class Tiger.TigerChallengeKillEntity
// Size: 0x108 (Inherited: 0xe0)
struct UTigerChallengeKillEntity : UTigerChallenge {
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xe0(0x10)
	struct FTigerChallengeRequirementClan EnemyClanRequirement; // 0xf0(0x10)
	char pad_100[0x8]; // 0x100(0x08)

	void HandleOnNpcDeathEvent(struct ATigerNPC* NPC, struct AController* Instigator); // Function Tiger.TigerChallengeKillEntity.HandleOnNpcDeathEvent // (Final|Native|Private) // @ game+0x13a6440
};

// Class Tiger.TigerChallengeKillMultipleTimed
// Size: 0x130 (Inherited: 0xe0)
struct UTigerChallengeKillMultipleTimed : UTigerChallenge {
	float TimeToKillGroup; // 0xe0(0x04)
	enum class ETigerEnemyType TypeOfEnemy; // 0xe4(0x01)
	char pad_E5[0x3]; // 0xe5(0x03)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xe8(0x10)
	int32_t NumOfEnemiesToKill; // 0xf8(0x04)
	char pad_FC[0x34]; // 0xfc(0x34)

	void OnKilledPlayer(struct ATigerPlayer* InDeadPlayer, struct FDamageEvent& InDamageEvent); // Function Tiger.TigerChallengeKillMultipleTimed.OnKilledPlayer // (Final|Native|Private|HasOutParms) // @ game+0x13a6fb0
	void OnKilledNpc(struct ATigerNPC* InNpc, struct AController* InInstigator); // Function Tiger.TigerChallengeKillMultipleTimed.OnKilledNpc // (Final|Native|Private) // @ game+0x13a6e10
	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeKillMultipleTimed.HandlePlayerLeft // (Final|Native|Private) // @ game+0x13a6510
};

// Class Tiger.TigerChallengeKillPlayers
// Size: 0x150 (Inherited: 0xe0)
struct UTigerChallengeKillPlayers : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xe0(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x108(0x10)
	struct FTigerChallengeRequirementClan EnemyClanRequirement; // 0x118(0x10)
	bool bKillOnlyDownedStateInstigators; // 0x128(0x01)
	char pad_129[0x27]; // 0x129(0x27)

	void OnDownedByPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeKillPlayers.OnDownedByPlayerEvent // (Final|Native|Protected) // @ game+0x13a6c70
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeKillPlayers.InitOnPlayerEvent // (Final|Native|Protected) // @ game+0x13a6a50
};

// Class Tiger.TigerChallengePlayGames
// Size: 0x110 (Inherited: 0xe0)
struct UTigerChallengePlayGames : UTigerChallenge {
	struct FTigerChallengeRequirementClan RequiredClanCondition; // 0xe0(0x10)
	struct FTigerChallengeRequirementGameMode RequiredGameModeCondition; // 0xf0(0x10)
	bool bWithoutBecomingBloodhunted; // 0x100(0x01)
	bool bResetOnBloodhunted; // 0x101(0x01)
	char pad_102[0xe]; // 0x102(0x0e)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengePlayGames.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13a7350
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengePlayGames.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x13a6630
	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengePlayGames.HandlePlayerLeft // (Final|Native|Private) // @ game+0x13a65a0
};

// Class Tiger.TigerChallengeQuestItemPickup
// Size: 0x110 (Inherited: 0xe0)
struct UTigerChallengeQuestItemPickup : UTigerChallenge {
	struct TSoftObjectPtr<ATigerInteractiveQuestItem> QuestItem; // 0xe0(0x28)
	char pad_108[0x8]; // 0x108(0x08)

	void HandleQuestItemCollected(struct TSoftObjectPtr<ATigerInteractiveQuestItem> InQuestItem); // Function Tiger.TigerChallengeQuestItemPickup.HandleQuestItemCollected // (Final|Native|Private) // @ game+0x13a6700
};

// Class Tiger.TigerChallengeReachLevel
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeReachLevel : UTigerChallenge {
	char pad_E0[0x4]; // 0xe0(0x04)
	enum class ETigerPlayerLevelType LevelType; // 0xe4(0x01)
	bool bIsAnyArchetypeAtTargetLevel; // 0xe5(0x01)
	enum class ETigerPowerKitType ArchetypeLevelType; // 0xe6(0x01)
	char pad_E7[0x1]; // 0xe7(0x01)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeReachLevel.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13a73e0
	void OnLevelChanged(int32_t InLevel); // Function Tiger.TigerChallengeReachLevel.OnLevelChanged // (Final|Native|Private) // @ game+0x13a7090
};

// Class Tiger.TigerChallengeRevive
// Size: 0xf8 (Inherited: 0xe0)
struct UTigerChallengeRevive : UTigerChallenge {
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xe0(0x10)
	char pad_F0[0x8]; // 0xf0(0x08)

	void OnRevivedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeRevive.OnRevivedPlayerEvent // (Final|Native|Private) // @ game+0x13a7280
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeRevive.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13a6ae0
};

// Class Tiger.TigerChallengeSharkAssist
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeSharkAssist : UTigerChallenge {
	char pad_E0[0x8]; // 0xe0(0x08)

	void OnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeSharkAssist.OnRestartPlayer // (Final|Native|Public) // @ game+0x13ad400
	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeSharkAssist.OnPlayerEvent // (Final|Native|Private) // @ game+0x13ad120
};

// Class Tiger.TigerChallengeSpeakToNpc
// Size: 0x140 (Inherited: 0xe0)
struct UTigerChallengeSpeakToNpc : UTigerChallenge {
	struct FText RequiredNpcToSpeakToName; // 0xe0(0x18)
	struct FTigerChallengeRequirementClan PlayerClanRequirment; // 0xf8(0x10)
	bool bTestAgainstSpecificDialogue; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct FString RequiredDialogueBaseKey; // 0x110(0x10)
	struct FString RequiredDialogueKey; // 0x120(0x10)
	char pad_130[0x10]; // 0x130(0x10)

	void HandleNpcSpokenTo(struct FText InNPCName); // Function Tiger.TigerChallengeSpeakToNpc.HandleNpcSpokenTo // (Final|Native|Private|BlueprintCallable) // @ game+0x13ab740
};

// Class Tiger.TigerChallengeSurviveBeingDowned
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeSurviveBeingDowned : UTigerChallenge {
	char pad_E0[0x8]; // 0xe0(0x08)

	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeSurviveBeingDowned.OnPlayerEvent // (Final|Native|Private) // @ game+0x13ad1f0
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeSurviveBeingDowned.InitOnPlayerEvent // (Final|Native|Public) // @ game+0x13abed0
};

// Class Tiger.TigerChallengeSurviveBloodhunt
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeSurviveBloodhunt : UTigerChallenge {
	char pad_E0[0x8]; // 0xe0(0x08)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeSurviveBloodhunt.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13ad490
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeSurviveBloodhunt.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x13ab940
};

// Class Tiger.TigerChallengeSurviveTime
// Size: 0x100 (Inherited: 0xe0)
struct UTigerChallengeSurviveTime : UTigerChallenge {
	char pad_E0[0x20]; // 0xe0(0x20)

	void OnPlayerDeath(struct ATigerPlayer* InDeadPlayer, struct ATigerPlayer* InInstigatorPlayer); // Function Tiger.TigerChallengeSurviveTime.OnPlayerDeath // (Final|Native|Public) // @ game+0x13ad050
	void InitOnPlayerStart(struct AController* InNewPlayer); // Function Tiger.TigerChallengeSurviveTime.InitOnPlayerStart // (Final|Native|Public) // @ game+0x13ac080
};

// Class Tiger.TigerChallengeTopPlayer
// Size: 0x128 (Inherited: 0xe0)
struct UTigerChallengeTopPlayer : UTigerChallenge {
	int32_t TopPlacementRequirement; // 0xe0(0x04)
	bool bWithoutBecomingBloodhunted; // 0xe4(0x01)
	bool bWithoutUsingDiscipline; // 0xe5(0x01)
	char pad_E6[0x2]; // 0xe6(0x02)
	struct FTigerChallengeRequirementPowerKit PlayerRequiredArchetype; // 0xe8(0x10)
	struct FTigerChallengeRequirementWeaponType OnlyUseWeaponTypeConstraint; // 0xf8(0x18)
	char pad_110[0x18]; // 0x110(0x18)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTopPlayer.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13ad520
	void OnPlayerDealtDamage(struct ATigerCharacter* InTargetCharacter, struct FDamageEvent& InDamageEvent, float InActualDamage); // Function Tiger.TigerChallengeTopPlayer.OnPlayerDealtDamage // (Final|Native|Private|HasOutParms) // @ game+0x13acf20
	void OnDisciplineActivated(enum class ETigerDisciplinesEnum InDisciplineActivated); // Function Tiger.TigerChallengeTopPlayer.OnDisciplineActivated // (Final|Native|Private) // @ game+0x13ace20
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeTopPlayer.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13abf60
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeTopPlayer.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x13aba10
	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTopPlayer.HandlePlayerLeft // (Final|Native|Private) // @ game+0x13ab820
};

// Class Tiger.TigerChallengeTravelDistance
// Size: 0xe8 (Inherited: 0xe0)
struct UTigerChallengeTravelDistance : UTigerChallenge {
	char pad_E0[0x8]; // 0xe0(0x08)

	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTravelDistance.HandlePlayerLeft // (Final|Native|Private) // @ game+0x13ab8b0
};

// Class Tiger.TigerChallengeTypeDatabase
// Size: 0x80 (Inherited: 0x28)
struct UTigerChallengeTypeDatabase : UObject {
	bool bFirstDailyChallengeIsPersistent; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TMap<enum class ETigerChallengeCategory, struct FTigerChallengeCollectionArray> ChallengeCategoryCollections; // 0x30(0x50)
};

// Class Tiger.TigerChallengeUseDiscipline
// Size: 0xf8 (Inherited: 0xe0)
struct UTigerChallengeUseDiscipline : UTigerChallenge {
	struct FTigerChallengeRequirementDisciplineSlot DisciplineSlotRequirement; // 0xe0(0x10)
	char pad_F0[0x8]; // 0xf0(0x08)

	void OnDisciplineActivated(enum class ETigerDisciplinesEnum InDisciplineActivated); // Function Tiger.TigerChallengeUseDiscipline.OnDisciplineActivated // (Final|Native|Private) // @ game+0x13acea0
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeUseDiscipline.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13abff0
};

// Class Tiger.TigerChallengeUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerChallengeUtilityBFL : UBlueprintFunctionLibrary {

	bool HasRequirement_WeaponType(struct FTigerChallengeRequirementWeaponType& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_WeaponType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abe20
	bool HasRequirement_TraversalState(struct FTigerChallengeRequirementTraversalState& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_TraversalState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abae0
	bool HasRequirement_PowerKit(struct FTigerChallengeRequirementPowerKit& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_PowerKit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abae0
	bool HasRequirement_GameMode(struct FTigerChallengeRequirementGameMode& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_GameMode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abd80
	bool HasRequirement_Distance(struct FTigerChallengeRequirementDistance& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Distance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abcd0
	bool HasRequirement_DisciplineSlot(struct FTigerChallengeRequirementDisciplineSlot& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_DisciplineSlot // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abc20
	bool HasRequirement_Clan(struct FTigerChallengeRequirementClan& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Clan // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abb80
	bool HasRequirement_Bloodhunted(struct FTigerChallengeRequirementBloodhunted& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Bloodhunted // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abae0
	bool HasRequirement_Airborne(struct FTigerChallengeRequirementAirborne& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Airborne // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13abae0
};

// Class Tiger.TigerChallengeVisitLocation
// Size: 0x140 (Inherited: 0xe0)
struct UTigerChallengeVisitLocation : UTigerChallenge {
	struct TSoftObjectPtr<ATigerVisitLocationTriggerVolume> TriggerVolume; // 0xe0(0x28)
	bool bHasInteraction; // 0x108(0x01)
	bool bHideInteractorUntillVolumeEntered; // 0x109(0x01)
	char pad_10A[0x6]; // 0x10a(0x06)
	struct TSoftObjectPtr<ATigerInteractivePoint> InteractionPoint; // 0x110(0x28)
	char pad_138[0x8]; // 0x138(0x08)

	void HandleLocationEntered(struct ATigerPlayerController* InIntersectingPlayerController); // Function Tiger.TigerChallengeVisitLocation.HandleLocationEntered // (Final|Native|Private) // @ game+0x13ab6b0
	void HandleInteractionComplete(struct TSoftObjectPtr<ATigerInteractivePoint> InInteractedItem); // Function Tiger.TigerChallengeVisitLocation.HandleInteractionComplete // (Final|Native|Private) // @ game+0x13ab5a0
};

// Class Tiger.TigerCharacterCardBase
// Size: 0x288 (Inherited: 0x280)
struct UTigerCharacterCardBase : UTigerWidget {
	struct TWeakObjectPtr<struct ATigerPlayerState> RepresentedPlayer; // 0x280(0x08)

	void OnInit(struct ATigerPlayerState* InRepresentedPlayer); // Function Tiger.TigerCharacterCardBase.OnInit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Init(struct ATigerPlayerState* InRepresentedPlayer); // Function Tiger.TigerCharacterCardBase.Init // (Final|Native|Private|BlueprintCallable) // @ game+0x13b3f60
	struct ATigerPlayerState* GetRepresentedPlayer(); // Function Tiger.TigerCharacterCardBase.GetRepresentedPlayer // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b3f30
	void BuildCharacterCard(); // Function Tiger.TigerCharacterCardBase.BuildCharacterCard // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerCharacterCustomizablePreviewThumbnailUI
// Size: 0x2f0 (Inherited: 0x280)
struct UTigerCharacterCustomizablePreviewThumbnailUI : UTigerWidget {
	struct ATigerThumbnailActor* ThumbnailActorType; // 0x280(0x08)
	bool bIsRealtime; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UMaterialInterface* PostRenderMaterial; // 0x290(0x08)
	char pad_298[0x40]; // 0x298(0x40)
	struct ATigerThumbnailActor* ThumbnailActor; // 0x2d8(0x08)
	float FOV; // 0x2e0(0x04)
	char pad_2E4[0xc]; // 0x2e4(0x0c)

	void TickViewport(float InDeltaTime); // Function Tiger.TigerCharacterCustomizablePreviewThumbnailUI.TickViewport // (Final|Native|Public|BlueprintCallable) // @ game+0x13b3ff0
};

// Class Tiger.TigerInventoryItemBase
// Size: 0x108 (Inherited: 0x28)
struct UTigerInventoryItemBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FText UiName; // 0x30(0x18)
	struct FText UIDescription; // 0x48(0x18)
	struct FText TemporaryVs2CategoryName; // 0x60(0x18)
	struct TSoftObjectPtr<UTexture2D> UITexture; // 0x78(0x28)
	struct TSoftObjectPtr<UTexture2D> UiBackgroundTexture; // 0xa0(0x28)
	struct FLinearColor TintColor; // 0xc8(0x10)
	bool bForceToFrontWhenSorted; // 0xd8(0x01)
	enum class ETigerItemRarity Rarity; // 0xd9(0x01)
	bool bIsAvailableForEveryone; // 0xda(0x01)
	bool bUseCustomOwner; // 0xdb(0x01)
	enum class ETigerOutfitGender OutfitGender; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	struct TArray<struct FTigerInventoryItemOwnerType> PossibleOwners; // 0xe0(0x10)
	struct FString CameraTag; // 0xf0(0x10)
	uint64_t TelemetryID; // 0x100(0x08)

	void TakeTelemetryIDFromCombinedItem(struct UTigerCharacterCombinedItemConfiguration* InCombinedItem); // Function Tiger.TigerInventoryItemBase.TakeTelemetryIDFromCombinedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x145bc20
	void SetUIMaterialParameters(struct UMaterialInstanceDynamic* InMaterial); // Function Tiger.TigerInventoryItemBase.SetUIMaterialParameters // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	struct UMaterialInterface* GetUiMaterialOverride(); // Function Tiger.TigerInventoryItemBase.GetUiMaterialOverride // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	enum class ETigerPersistentStoreCategory GetStoreCategory(); // Function Tiger.TigerInventoryItemBase.GetStoreCategory // (Native|Public|BlueprintCallable|Const) // @ game+0x13f87e0
	bool GetPrimaryOwnerNoArchetype(enum class ETigerClan& OutClan, enum class ETigerGender& OutBodyType); // Function Tiger.TigerInventoryItemBase.GetPrimaryOwnerNoArchetype // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x145b7b0
	bool GetPrimaryOwner(enum class ETigerClan& OutClan, enum class ETigerPowerKitType& OutArchetype, enum class ETigerGender& OutBodyType); // Function Tiger.TigerInventoryItemBase.GetPrimaryOwner // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x145b670
	struct TArray<enum class ETigerClan> GetPossibleOwningClans(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningClans // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x145b5c0
	struct TArray<enum class ETigerGender> GetPossibleOwningBodyTypes(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningBodyTypes // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x145b540
	struct TArray<enum class ETigerPowerKitType> GetPossibleOwningArchetypes(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningArchetypes // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x145b4c0
	enum class ETigerGender GetGender(); // Function Tiger.TigerInventoryItemBase.GetGender // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b460
	bool CanBeOwnedByBodyWithArchetypeRestriction(enum class ETigerGender InBodyType, enum class ETigerPowerKitType InPowerKit); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByBodyWithArchetypeRestriction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b200
	bool CanBeOwnedByBodyType(enum class ETigerGender InBodyType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByBodyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b170
	bool CanBeOwnedByArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b0e0
	bool CanBeOwnedByAnyArchetypeOfClan(struct UTigerPlayerClanData* InClan, enum class ETigerGender BodyType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByAnyArchetypeOfClan // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b010
};

// Class Tiger.TigerCharacterOutfitConfiguration
// Size: 0x2a0 (Inherited: 0x108)
struct UTigerCharacterOutfitConfiguration : UTigerInventoryItemBase {
	struct FTigerLodSplitMesh SplitMesh; // 0x108(0x78)
	struct TSoftObjectPtr<USkeletalMesh> AdditionalMesh; // 0x180(0x28)
	struct TArray<struct FTigerCharacterOutfitHoodieVariation> HoodieVariations; // 0x1a8(0x10)
	struct TMap<int32_t, struct TSoftObjectPtr<UMaterialInterface>> Materials; // 0x1b8(0x50)
	char pad_208[0x8]; // 0x208(0x08)
	struct FTigerCharacterHolsteredWeaponTransforms HolsteredWeaponsTransforms; // 0x210(0x60)
	bool bHoodieUpOnThumbnail; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x278(0x28)
};

// Class Tiger.TigerCharacterCombinedItemConfiguration
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterCombinedItemConfiguration : UTigerInventoryItemBase {
	struct TSoftClassPtr<UObject> CombinedItemClassType; // 0x108(0x28)
	struct TArray<struct FTigerInventoryCombinedItemValue> Items; // 0x130(0x10)

	struct UTigerInventoryItemBase* GetItemFromCombinedContainer(enum class ETigerGender InBodyType, enum class ETigerPowerKitType InPowerKit, enum class ETigerClan InClan); // Function Tiger.TigerCharacterCombinedItemConfiguration.GetItemFromCombinedContainer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b3e10
};

// Class Tiger.TigerCharacterSkinToneCustomization
// Size: 0x158 (Inherited: 0x108)
struct UTigerCharacterSkinToneCustomization : UTigerInventoryItemBase {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
	struct FLinearColor LightColor; // 0x140(0x10)
	float LightIntensity; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
};

// Class Tiger.TigerCharacterBodyTypeCustomization
// Size: 0x130 (Inherited: 0x108)
struct UTigerCharacterBodyTypeCustomization : UTigerInventoryItemBase {
	struct TSoftObjectPtr<UTigerCharacterPreset> CharacterPreset; // 0x108(0x28)
};

// Class Tiger.TigerCharacterPartOfHeadCustomization
// Size: 0x108 (Inherited: 0x108)
struct UTigerCharacterPartOfHeadCustomization : UTigerInventoryItemBase {
};

// Class Tiger.TigerPlayerCardCustomization
// Size: 0x108 (Inherited: 0x108)
struct UTigerPlayerCardCustomization : UTigerInventoryItemBase {
};

// Class Tiger.TigerCharacterHeadConfiguration
// Size: 0x258 (Inherited: 0x108)
struct UTigerCharacterHeadConfiguration : UTigerCharacterPartOfHeadCustomization {
	struct FTigerLodSplitMesh SplitMesh; // 0x108(0x78)
	struct TSoftObjectPtr<UPoseAsset> FacePostAsset; // 0x180(0x28)
	struct TSoftObjectPtr<UAnimSequence> FacePoseSourceAnimation; // 0x1a8(0x28)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> BodySkinMaterials; // 0x1d0(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> SkinTones; // 0x1e0(0x10)
	struct FName HeadgearMaleSocket; // 0x1f0(0x08)
	struct FName HeadgearFemaleSocket; // 0x1f8(0x08)
	struct FName HeadgearOffsetSocketName; // 0x200(0x08)
	struct FName HeadgearOffsetLocator; // 0x208(0x08)
	struct FTigerCharacterHeadHeadgearOffset HeadgearOffset; // 0x210(0x18)
	struct FName EyewearSocket; // 0x228(0x08)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x230(0x28)

	void SetPoseableBeard(struct UTigerCharacterBeardCustomization* InBeard, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPoseableBeard // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
	void SetPiercingSlotLocationAndRotation(struct UTigerCharacterMeshManager* InMeshManager, struct FName InName, struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerCharacterHeadConfiguration.SetPiercingSlotLocationAndRotation // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void SetPiercings(struct UTigerCharacterPiercingSetCustomization* InPiercingSet, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPiercings // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
	void SetEyewearOffset(struct UTigerCharacterMeshManager* MeshManager); // Function Tiger.TigerCharacterHeadConfiguration.SetEyewearOffset // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
	void GetPiercingSlots(struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter, struct TMap<struct FName, struct FTigerCharacterHeadPiercingSocket>& OutSlots); // Function Tiger.TigerCharacterHeadConfiguration.GetPiercingSlots // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
	void DrawDebugPiercingSlots(struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.DrawDebugPiercingSlots // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerCharacterFacePaintCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterFacePaintCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterHeadgearCustomization
// Size: 0x1c8 (Inherited: 0x108)
struct UTigerCharacterHeadgearCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x140(0x28)
	struct TMap<int32_t, struct TSoftObjectPtr<UMaterialInterface>> Materials; // 0x168(0x50)
	struct UTigerAnimationFilter* AnimationFilter; // 0x1b8(0x08)
	bool bHideBeard; // 0x1c0(0x01)
	bool bHideEyewear; // 0x1c1(0x01)
	char pad_1C2[0x6]; // 0x1c2(0x06)

	void GatherPiercingFilter(struct TSet<struct FString>& InOutPiercingFilter); // Function Tiger.TigerCharacterHeadgearCustomization.GatherPiercingFilter // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerCharacterEyewearCustomization
// Size: 0x1b8 (Inherited: 0x108)
struct UTigerCharacterEyewearCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x140(0x28)
	struct TMap<int32_t, struct TSoftObjectPtr<UMaterialInterface>> Materials; // 0x168(0x50)

	void GatherPiercingFilter(struct TSet<struct FString>& InOutPiercingFilter); // Function Tiger.TigerCharacterEyewearCustomization.GatherPiercingFilter // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerCharacterHairStyleCustomization
// Size: 0x1f8 (Inherited: 0x108)
struct UTigerCharacterHairStyleCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
	struct FTigerLodSplitMesh SplitMesh; // 0x140(0x78)
	struct UAnimInstance* Animation; // 0x1b8(0x08)
	struct FName SocketAttachments[0x2]; // 0x1c0(0x10)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x1d0(0x28)
};

// Class Tiger.TigerCharacterHairColorCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterHairColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterEyeColorCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterEyeColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterEyebrowCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterEyebrowCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterEyebrowColorCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterEyebrowColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterBeardCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterBeardCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterBeardColorCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterBeardColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterTattooCustomization
// Size: 0x140 (Inherited: 0x108)
struct UTigerCharacterTattooCustomization : UTigerInventoryItemBase {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x108(0x38)
};

// Class Tiger.TigerCharacterPiercingSetCustomization
// Size: 0x108 (Inherited: 0x108)
struct UTigerCharacterPiercingSetCustomization : UTigerCharacterPartOfHeadCustomization {
};

// Class Tiger.TigerCharacterIconCustomization
// Size: 0x130 (Inherited: 0x108)
struct UTigerCharacterIconCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<UTexture2D> CharacterIcon; // 0x108(0x28)
};

// Class Tiger.TigerCharacterCardShapeCustomization
// Size: 0x130 (Inherited: 0x108)
struct UTigerCharacterCardShapeCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<UTexture2D> CardShapeMask; // 0x108(0x28)
};

// Class Tiger.TigerCharacterCardBackgroundCustomization
// Size: 0x130 (Inherited: 0x108)
struct UTigerCharacterCardBackgroundCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<UTexture2D> CardBackground; // 0x108(0x28)
};

// Class Tiger.TigerCharacterEmoteCustomization
// Size: 0x118 (Inherited: 0x108)
struct UTigerCharacterEmoteCustomization : UTigerInventoryItemBase {
	struct UAnimMontage* EmoteMontage; // 0x108(0x08)
	bool bStopsMovement; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float ThumbnailPoseTime; // 0x114(0x04)
};

// Class Tiger.TigerClanCustomizationOptions
// Size: 0x3a0 (Inherited: 0x28)
struct UTigerClanCustomizationOptions : UObject {
	struct TArray<struct FTigerCharacterCustomizationOutfitData> Outfits; // 0x28(0x10)
	struct TArray<struct FTigerCharacterCustomizationHeadData> Heads; // 0x38(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Hairs; // 0x48(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> HairColors; // 0x58(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> EyeColors; // 0x68(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Tattoos; // 0x78(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> FacePaints; // 0x88(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> PiercingSets; // 0x98(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Headgears; // 0xa8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Eyewears; // 0xb8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Eyebrows; // 0xc8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> EyebrowColors; // 0xd8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Beards; // 0xe8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> BeardColors; // 0xf8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterIcons; // 0x108(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterCardShapes; // 0x118(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterCardTextures; // 0x128(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Emotes; // 0x138(0x10)
	struct TMap<enum class ETigerCustomizationType, struct FTigerCombinedItemCustomizations> CombinedItems; // 0x148(0x50)
	struct FTigerCharacterCardData DefaultPlayerCard; // 0x198(0x78)
	struct TMap<uint64_t, struct TSoftClassPtr<UObject>> TelemetryIdToItemLut; // 0x210(0x50)
	struct TMap<struct TSoftClassPtr<UObject>, uint64_t> ItemToTelemetryIdLut; // 0x260(0x50)
	struct TMap<uint64_t, int32_t> TelemetryIdToIndexLut; // 0x2b0(0x50)
	struct TMap<uint64_t, uint64_t> TelemetryIdToCombinedTelemetryIdMap; // 0x300(0x50)
	struct TSet<uint64_t> StandardSetItemTelemetryIds; // 0x350(0x50)
};

// Class Tiger.TigerCharacterEffect
// Size: 0x28 (Inherited: 0x28)
struct UTigerCharacterEffect : UObject {

	void ApplyWithTarget(struct ATigerCharacter* Character, struct ATigerCharacter* Target); // Function Tiger.TigerCharacterEffect.ApplyWithTarget // (BlueprintCosmetic|Event|Public|BlueprintEvent|Const) // @ game+0x184a280
	void ApplyWithSocket(struct ATigerCharacter* Character, struct FName SocketName); // Function Tiger.TigerCharacterEffect.ApplyWithSocket // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x184a280
	void Apply(struct ATigerCharacter* Character); // Function Tiger.TigerCharacterEffect.Apply // (BlueprintCosmetic|Event|Public|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerCharacterMenuUI
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerCharacterMenuUI : UTigerIngameSubmenuWidget {

	void OnDisciplinesUpdated(); // Function Tiger.TigerCharacterMenuUI.OnDisciplinesUpdated // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerCharacterMeshManager
// Size: 0x1e8 (Inherited: 0xb0)
struct UTigerCharacterMeshManager : UActorComponent {
	struct TArray<struct FTigerStaticMeshData> StaticMeshes; // 0xb0(0x10)
	struct TArray<struct FTigerPoseableMeshData> PoseableMeshes; // 0xc0(0x10)
	struct FTigerCharacterMeshData Mesh[0xb]; // 0xd0(0x108)
	struct UStaticPiercingPhysics* StaticPiercingPhysics; // 0x1d8(0x08)
	char pad_1E0[0x8]; // 0x1e0(0x08)

	void SetVisibilityOnMeshes(bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x13b8100
	void SetVisibilityOnMesh(enum class ETigerCharacterMeshPart InMeshType, bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnMesh // (Native|Public|BlueprintCallable) // @ game+0x13b8020
	void SetVisibilityOnDynamicMesh(enum class ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnDynamicMesh // (Native|Public|BlueprintCallable) // @ game+0x13b7f40
	void SetVisibilityAllowanceOnMeshes(bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x13b7eb0
	void SetVisibilityAllowanceOnMesh(enum class ETigerCharacterMeshPart InMeshType, bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnMesh // (Native|Public|BlueprintCallable) // @ game+0x13b7dd0
	void SetVisibilityAllowanceOnDynamicMesh(enum class ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnDynamicMesh // (Native|Public|BlueprintCallable) // @ game+0x13b7cf0
	void SetSkeletalMesh(enum class ETigerCharacterMeshPart Part, struct USkeletalMesh* Mesh, bool bForceClothNextUpdateTeleport); // Function Tiger.TigerCharacterMeshManager.SetSkeletalMesh // (Native|Public|BlueprintCallable) // @ game+0x13b7be0
	void SetScalarParameterValueOnMeshes(struct FName InParameterName, float InParameterValue); // Function Tiger.TigerCharacterMeshManager.SetScalarParameterValueOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x13b7b00
	void SetMaterial(enum class ETigerCharacterMeshPart Part, int32_t MaterialIndex, struct UMaterialInterface* Material); // Function Tiger.TigerCharacterMeshManager.SetMaterial // (Native|Public|BlueprintCallable) // @ game+0x13b79f0
	void RemoveMeshComponent(struct UStaticMeshComponent* InMesh); // Function Tiger.TigerCharacterMeshManager.RemoveMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x13b7540
	void RegisterMeshComponent(enum class ETigerCharacterMeshPart Part, struct USkeletalMeshComponent* MeshComponent); // Function Tiger.TigerCharacterMeshManager.RegisterMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x13b7470
	struct USkeletalMeshComponent* GetSkeletalMeshComponent(enum class ETigerCharacterMeshPart Part); // Function Tiger.TigerCharacterMeshManager.GetSkeletalMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6be0
	struct TArray<struct UMeshComponent*> GetRegisteredMeshes(); // Function Tiger.TigerCharacterMeshManager.GetRegisteredMeshes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6b60
	void AddPoseableMesh(struct USkeletalMesh* InMesh, struct UTigerCharacterPoseableMeshAnimInstance* InAnimClass, enum class ETigerCharacterDynamicMeshType InType, struct TArray<struct FTigerCharacterPoseableMeshBoneSetupData> InPoseableMeshSetupData); // Function Tiger.TigerCharacterMeshManager.AddPoseableMesh // (Native|Public|BlueprintCallable) // @ game+0x13b6660
	void AddPiercing(struct UStaticMesh* InPiercingMesh, struct FName InFaceSlotName, struct FName InPiercingSlotName, struct FVector InLocalLocation, struct FRotator InLocalRotation); // Function Tiger.TigerCharacterMeshManager.AddPiercing // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x13b64b0
	void AddMeshComponent(struct UStaticMeshComponent* InMesh); // Function Tiger.TigerCharacterMeshManager.AddMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x13b6420
};

// Class Tiger.TigerCharacterMovementComponent
// Size: 0xdc0 (Inherited: 0xb00)
struct UTigerCharacterMovementComponent : UCharacterMovementComponent {
	struct UTigerTraversalFiniteStateMachine* FiniteStateMachine; // 0xb00(0x08)
	char pad_B08[0x18]; // 0xb08(0x18)
	float MaxSprintSpeed; // 0xb20(0x04)
	float SprintSpeedMultiplier; // 0xb24(0x04)
	char pad_B28[0x4]; // 0xb28(0x04)
	float ForwardAngleThreshold; // 0xb2c(0x04)
	char pad_B30[0x8]; // 0xb30(0x08)
	struct UTigerSprintConfig* SprintConfig; // 0xb38(0x08)
	float MaxJumpHeight; // 0xb40(0x04)
	bool bPreventFallingSlide; // 0xb44(0x01)
	char pad_B45[0x3]; // 0xb45(0x03)
	float DownedMaxSpeed; // 0xb48(0x04)
	char pad_B4C[0x4]; // 0xb4c(0x04)
	struct FMulticastInlineDelegate OnDodge; // 0xb50(0x10)
	float WallClimbCombineThresholdSquared; // 0xb60(0x04)
	char pad_B64[0x4]; // 0xb64(0x04)
	struct UTigerImpendingCollisionCalculator* ImpendingCollisionCalculator; // 0xb68(0x08)
	float TimeUntilCollision; // 0xb70(0x04)
	float AngleToImpendingCollisionWithClimbableSurface; // 0xb74(0x04)
	float CharacterAngleToImpendingCollisionWithClimbableSurface; // 0xb78(0x04)
	bool bAboutToCollideWithClimbableSurface; // 0xb7c(0x01)
	char pad_B7D[0x17]; // 0xb7d(0x17)
	uint32_t ElysiumBlockedTraversalStates; // 0xb94(0x04)
	bool bEnableRestrictedElysiumMobility; // 0xb98(0x01)
	bool bIsInLedgeGrab; // 0xb99(0x01)
	bool bContinueToUseClimbCameraDuringLedgeGrab; // 0xb9a(0x01)
	bool bWasLastLandingHard; // 0xb9b(0x01)
	char pad_B9C[0x8]; // 0xb9c(0x08)
	struct FName RightHandBoneName; // 0xba4(0x08)
	struct FName LeftHandBoneName; // 0xbac(0x08)
	struct FName RightFootBoneName; // 0xbb4(0x08)
	struct FName LeftFootBoneName; // 0xbbc(0x08)
	float JumpCapsuleHeightReduction; // 0xbc4(0x04)
	char pad_BC8[0x48]; // 0xbc8(0x48)
	struct FTigerDeltaCorrectionData CurrentDeltaCorrectedAnimationData; // 0xc10(0x40)
	bool bUseCustomCurvesExclusivelyForInclineSpeedModification; // 0xc50(0x01)
	char pad_C51[0x7]; // 0xc51(0x07)
	struct UCurveFloat* InclineMovementMultiplierCurve; // 0xc58(0x08)
	struct UCurveFloat* DeclineMovementMultiplierCurve; // 0xc60(0x08)
	struct UCurveFloat* BackwardsMovementMultiplierCurve; // 0xc68(0x08)
	float BackwardsAngleThreshold; // 0xc70(0x04)
	char pad_C74[0x14]; // 0xc74(0x14)
	struct UTigerSprintConfig* SprintConfigClass; // 0xc88(0x08)
	struct UCurveFloat* AimGlideProgressCurve; // 0xc90(0x08)
	struct UCurveFloat* AimGlideDragOverVelocityCurve; // 0xc98(0x08)
	struct UCurveFloat* AimGlideLateralDragCurve; // 0xca0(0x08)
	struct UCurveFloat* AimGlideAirControlCurve; // 0xca8(0x08)
	bool bResetAimGlideOnDoubleJump; // 0xcb0(0x01)
	char pad_CB1[0x7]; // 0xcb1(0x07)
	struct UAnimMontage* PendingPreMovementMontage; // 0xcb8(0x08)
	char pad_CC0[0x44]; // 0xcc0(0x44)
	struct FVector LastWallJumpedNormal; // 0xd04(0x0c)
	char pad_D10[0xb0]; // 0xd10(0xb0)

	void TigerDelegateOnDodged__DelegateSignature(struct FVector RelativeLaunchDirection); // DelegateFunction Tiger.TigerCharacterMovementComponent.TigerDelegateOnDodged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x184a280
	bool ShouldUseClimbingCamera(); // Function Tiger.TigerCharacterMovementComponent.ShouldUseClimbingCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b8220
	bool ShouldRestrictMobility(enum class ETigerTraversalState InPotentialActionToRestrict); // Function Tiger.TigerCharacterMovementComponent.ShouldRestrictMobility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b8190
	void Server_SetDeltaCorrectionEndPoint(struct FVector EndPosition); // Function Tiger.TigerCharacterMovementComponent.Server_SetDeltaCorrectionEndPoint // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x13b77c0
	void Server_NetworkDesyncDetected(float InDistanceFromPlayer, float InTeleportingDistance, float InVelocitySize, float InTimeSinceLastServerUpdate, float InClientDeltaTime); // Function Tiger.TigerCharacterMovementComponent.Server_NetworkDesyncDetected // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13b75d0
	void PlayDeltaCorrectedAnimation(struct UAnimMontage* AnimMontageToCorrect, struct FVector PositionToCorrectTo, bool bShouldAdjustAnimationPlayRate); // Function Tiger.TigerCharacterMovementComponent.PlayDeltaCorrectedAnimation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x13b7350
	void Multicast_WallJump(); // Function Tiger.TigerCharacterMovementComponent.Multicast_WallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13b7330
	void Multicast_UpdateWallJump(enum class ESharkFourWayDirection InDesiredWallJumpDirection, char InDesiredWallJumpAnimState, struct FVector InWallNormal, struct FVector InWallJumpVelocity); // Function Tiger.TigerCharacterMovementComponent.Multicast_UpdateWallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x13b71a0
	void Multicast_StopClimb(); // Function Tiger.TigerCharacterMovementComponent.Multicast_StopClimb // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13b7180
	void Multicast_ReplicateState(enum class ETigerTraversalState InTraversalStateType, enum class ETigerTraversalTransitionAction InAction); // Function Tiger.TigerCharacterMovementComponent.Multicast_ReplicateState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13b70b0
	void Multicast_FinishWallJump(); // Function Tiger.TigerCharacterMovementComponent.Multicast_FinishWallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13b7090
	void Multicast_BeginClimb(struct AActor* InTargetClimbObject, struct FVector InClimbStartLocation); // Function Tiger.TigerCharacterMovementComponent.Multicast_BeginClimb // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x13b6fb0
	void Multicast_AirDash(enum class ESharkFourWayDirection InDashDirection, float InAirDashAngleInDegrees); // Function Tiger.TigerCharacterMovementComponent.Multicast_AirDash // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13b6ee0
	bool IsSprintingAtFullSpeed(); // Function Tiger.TigerCharacterMovementComponent.IsSprintingAtFullSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6eb0
	bool IsSprinting(); // Function Tiger.TigerCharacterMovementComponent.IsSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6e80
	bool IsSliding(); // Function Tiger.TigerCharacterMovementComponent.IsSliding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6e50
	bool IsSlideJumping(); // Function Tiger.TigerCharacterMovementComponent.IsSlideJumping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6e20
	bool IsInWallJump(); // Function Tiger.TigerCharacterMovementComponent.IsInWallJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6df0
	bool IsInWallHang(); // Function Tiger.TigerCharacterMovementComponent.IsInWallHang // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6dc0
	bool IsInWallGrind(); // Function Tiger.TigerCharacterMovementComponent.IsInWallGrind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6d90
	bool IsInLowVault(); // Function Tiger.TigerCharacterMovementComponent.IsInLowVault // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6d60
	bool IsInLedgeGrab(); // Function Tiger.TigerCharacterMovementComponent.IsInLedgeGrab // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6d30
	bool IsInAirDash(); // Function Tiger.TigerCharacterMovementComponent.IsInAirDash // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6d00
	bool IsAimGliding(); // Function Tiger.TigerCharacterMovementComponent.IsAimGliding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6cd0
	float GetTimeSinceStartedMovingFreely(); // Function Tiger.TigerCharacterMovementComponent.GetTimeSinceStartedMovingFreely // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6ca0
	float GetSlideSurfacePitch(); // Function Tiger.TigerCharacterMovementComponent.GetSlideSurfacePitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6c70
	float GetLastDodgeTime(); // Function Tiger.TigerCharacterMovementComponent.GetLastDodgeTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb4ddc0
	float GetFloorPitch(); // Function Tiger.TigerCharacterMovementComponent.GetFloorPitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6b00
	float GetAimGlideStrength(); // Function Tiger.TigerCharacterMovementComponent.GetAimGlideStrength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6ad0
	void FreezeMovement(); // Function Tiger.TigerCharacterMovementComponent.FreezeMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x13b6ab0
	void DoForcedMove(struct FVector& TargetLocation, float TravelTime, bool bInAir, float ExitVelocityScale, bool bAllowPlayerBreak, bool bAllowCancelOnArrival); // Function Tiger.TigerCharacterMovementComponent.DoForcedMove // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13b6890
	void ApplyKnockback(struct FVector& InVelocity); // Function Tiger.TigerCharacterMovementComponent.ApplyKnockback // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13b6800
};

// Class Tiger.TigerSceneRenderItemWidget
// Size: 0x2f0 (Inherited: 0x280)
struct UTigerSceneRenderItemWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnItemSpawned; // 0x280(0x10)
	struct FVector ItemSpawnLocation; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct TSoftClassPtr<UObject> DefaultItemClass; // 0x2a0(0x28)
	struct UMaterialInterface* RenderTargetMaterial; // 0x2c8(0x08)
	bool bOverrideItemRenderTarget; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct AActor* SpawnedItem; // 0x2d8(0x08)
	char pad_2E0[0x10]; // 0x2e0(0x10)

	void SpawnItem(struct AActor* InActorClass); // Function Tiger.TigerSceneRenderItemWidget.SpawnItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b3350
	void OverrideRenderTextureTarget(struct AActor* InActor); // Function Tiger.TigerSceneRenderItemWidget.OverrideRenderTextureTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b2cf0
	void OnItemSpawned__DelegateSignature(struct AActor* InSpawnedItem); // DelegateFunction Tiger.TigerSceneRenderItemWidget.OnItemSpawned__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	struct UTextureRenderTarget2D* GetRenderTextureFromMaterial(); // Function Tiger.TigerSceneRenderItemWidget.GetRenderTextureFromMaterial // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b2990
};

// Class Tiger.TigerCharacterPaperDollWidget
// Size: 0x3c0 (Inherited: 0x2f0)
struct UTigerCharacterPaperDollWidget : UTigerSceneRenderItemWidget {
	struct FTigerCharacterAppearance Appearance; // 0x2f0(0xc0)
	struct UTigerPlayerClanData* ClanData; // 0x3b0(0x08)
	bool bUseSharedPaperDoll; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)

	void SetFromApperance(struct FTigerPreviewerData& InAppearance, struct UTigerPlayerClanData* InClanData, struct FDelegate InDelegate); // Function Tiger.TigerCharacterPaperDollWidget.SetFromApperance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13b7890
	void OnCharacterAppearanceUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerCharacterPaperDollWidget.OnCharacterAppearanceUpdated__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	struct ATigerPaperDoll* GetPaperDoll(); // Function Tiger.TigerCharacterPaperDollWidget.GetPaperDoll // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b6b30
};

// Class Tiger.TigerPhysicalInteractionAnimationAsset
// Size: 0xf0 (Inherited: 0x30)
struct UTigerPhysicalInteractionAnimationAsset : UDataAsset {
	struct FTigerPhysicalInteractionMontages FeedingDataByVampireGender[0x2]; // 0x30(0xc0)
};

// Class Tiger.TigerPhysicalInteraction
// Size: 0x40 (Inherited: 0x28)
struct UTigerPhysicalInteraction : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TWeakObjectPtr<struct ATigerPlayer> OtherPlayer; // 0x38(0x08)
};

// Class Tiger.TigerPhysicalInteractionDiablerize
// Size: 0xa0 (Inherited: 0x40)
struct UTigerPhysicalInteractionDiablerize : UTigerPhysicalInteraction {
	float DiablerizeTime; // 0x40(0x04)
	bool bInstantInterrupt; // 0x44(0x01)
	bool bResetPowerCooldownsOnSuccess; // 0x45(0x01)
	char pad_46[0x2]; // 0x46(0x02)
	struct UTigerPhysicalInteractionAnimationAsset* DiablerizeAnimationAsset; // 0x48(0x08)
	char pad_50[0x50]; // 0x50(0x50)
};

// Class Tiger.TigerPhysicalInteractionRevive
// Size: 0x48 (Inherited: 0x40)
struct UTigerPhysicalInteractionRevive : UTigerPhysicalInteraction {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerCharacterPoseableMeshAnimInstance
// Size: 0x310 (Inherited: 0x2c0)
struct UTigerCharacterPoseableMeshAnimInstance : UAnimInstance {
	struct UTigerCharacterMeshManager* MeshManager; // 0x2b8(0x08)
	struct TMap<struct FName, struct FTigerCharacterPoseableMeshBoneData> NameToDataLut; // 0x2c0(0x50)

	void GetBoneOffsetTransform(struct FName InName, struct FVector& OutLocation, struct FRotator& OutRotation); // Function Tiger.TigerCharacterPoseableMeshAnimInstance.GetBoneOffsetTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13bb720
};

// Class Tiger.TigerCharacterPoseableMesh
// Size: 0x38 (Inherited: 0x28)
struct UTigerCharacterPoseableMesh : UObject {
	struct USkeletalMesh* Mesh; // 0x28(0x08)
	struct UTigerCharacterPoseableMeshAnimInstance* AnimClass; // 0x30(0x08)
};

// Class Tiger.TigerCharCustomizationComponent
// Size: 0x108 (Inherited: 0xb0)
struct UTigerCharCustomizationComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAppearanceChanged; // 0xb0(0x10)
	char pad_C0[0x10]; // 0xc0(0x10)
	struct UTigerCharacterMeshManager* MeshManager; // 0xd0(0x08)
	struct UTigerClanCustomizationOptions* CustomizationOptions; // 0xd8(0x08)
	struct TArray<struct FTigerCharacterCustomizationParameters> AdditionalParametersToApply; // 0xe0(0x10)
	char pad_F0[0x11]; // 0xf0(0x11)
	enum class ETigerLodSplitMeshQuality MeshQuality; // 0x101(0x01)
	char pad_102[0x6]; // 0x102(0x06)

	void SetOutfitFromSetup(struct FTigerPersistentOutfitSetup& OutfitSetup); // Function Tiger.TigerCharCustomizationComponent.SetOutfitFromSetup // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x13bc160
	void SetMeshManager(struct UTigerCharacterMeshManager* MeshManager); // Function Tiger.TigerCharCustomizationComponent.SetMeshManager // (Final|Native|Public|BlueprintCallable) // @ game+0x13bc0d0
	void SetAppearanceByPreviewDataAsync(struct FTigerPreviewerData& NewAppearance); // Function Tiger.TigerCharCustomizationComponent.SetAppearanceByPreviewDataAsync // (Final|Native|Public|HasOutParms) // @ game+0x13bc020
	void SetAppearanceByPreviewData(struct FTigerPreviewerData& NewAppearance); // Function Tiger.TigerCharCustomizationComponent.SetAppearanceByPreviewData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13bbf70
	void OnAppearanceChangedMulticast__DelegateSignature(); // DelegateFunction Tiger.TigerCharCustomizationComponent.OnAppearanceChangedMulticast__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool HasAppearanceBeenSet(); // Function Tiger.TigerCharCustomizationComponent.HasAppearanceBeenSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bba50
	struct UTigerCharacterTattooCustomization* GetTattoo(int32_t TattooIndex, bool& bIsValid); // Function Tiger.TigerCharCustomizationComponent.GetTattoo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bb970
	struct UTigerCharacterOutfitConfiguration* GetOutfitConfigurationByPath(struct TSoftClassPtr<UObject>& OutfitClassPath); // Function Tiger.TigerCharCustomizationComponent.GetOutfitConfigurationByPath // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bb8a0
	struct FTigerPreviewerData GetAppearanceData(); // Function Tiger.TigerCharCustomizationComponent.GetAppearanceData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bb6f0
};

// Class Tiger.TigerChatComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerChatComponent : UActorComponent {
	struct FSharkTokenBucket ClientMessageTokenBucket; // 0xb0(0x0c)
	struct FSharkTokenBucket ServerMessageTokenBucket; // 0xbc(0x0c)
	bool bIsChatBanned; // 0xc8(0x01)
	bool bIsChatAllowed; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)

	bool TryGetMessageToken(float& OutTimeUntilTokenAvailable); // Function Tiger.TigerChatComponent.TryGetMessageToken // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13bd420
	void Server_SetChatMessageCategoryMuteStatus(enum class ETigerChatMessageCategory InCategory, bool bInShouldMute); // Function Tiger.TigerChatComponent.Server_SetChatMessageCategoryMuteStatus // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x13bbe90
	void Server_MuteChatForRestrictedPlayer(bool bInShouldMute); // Function Tiger.TigerChatComponent.Server_MuteChatForRestrictedPlayer // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x13bbe00
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerChatComponent.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x13bbd70
	void OnMuteStatusChanged(struct FTigerMuteInfo& InMuteInfo); // Function Tiger.TigerChatComponent.OnMuteStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x13bbcc0
	void OnLeftPartyDueToBlockedPlayerJoinBlueprint(bool bInWasKicked); // Function Tiger.TigerChatComponent.OnLeftPartyDueToBlockedPlayerJoinBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnLeftPartyDueToBlockedPlayerJoin(struct UTigerPartyManager* InPartyManager); // Function Tiger.TigerChatComponent.OnLeftPartyDueToBlockedPlayerJoin // (Final|Native|Protected) // @ game+0x13bbc30
	void OnFailedToJoinParty(enum class ETigerJoinedPartyFailedReason InJoinedPartyFailedReason); // Function Tiger.TigerChatComponent.OnFailedToJoinParty // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnChatMessageReceived(struct FTigerChatMessage& InMessage); // Function Tiger.TigerChatComponent.OnChatMessageReceived // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnBlockedPlayerWasRemovedFromParty(bool bInWasBlockedByMe); // Function Tiger.TigerChatComponent.OnBlockedPlayerWasRemovedFromParty // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBanStatusUpdated(struct FTigerMuteInfo& InMuteInfo); // Function Tiger.TigerChatComponent.OnBanStatusUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	bool IsSoloMatch(); // Function Tiger.TigerChatComponent.IsSoloMatch // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bbaa0
	bool IsGeneralChatMuted(); // Function Tiger.TigerChatComponent.IsGeneralChatMuted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bba70
	struct FTigerMuteInfo GetMutedInfo(); // Function Tiger.TigerChatComponent.GetMutedInfo // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13bb850
	void CreateChatWindow(); // Function Tiger.TigerChatComponent.CreateChatWindow // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Client_ReceiveServerMessage(struct FString InServerMessage); // Function Tiger.TigerChatComponent.Client_ReceiveServerMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13bb650
	void Client_ReceiveChatMessage(struct FTigerChatMessage InMessage); // Function Tiger.TigerChatComponent.Client_ReceiveChatMessage // (Net|Native|Event|Public|NetClient) // @ game+0x13bb510
};

// Class Tiger.TigerCheatManager
// Size: 0x88 (Inherited: 0x78)
struct UTigerCheatManager : UCheatManager {
	struct ATigerVideoCameraController* TigerVideoCameraControllerClass; // 0x78(0x08)
	struct ATigerVideoCameraController* TigerVideoCameraController; // 0x80(0x08)

	void TigerUpdateSeasonProgress(int32_t ExpToAdd, int32_t LevelsToAdd); // Function Tiger.TigerCheatManager.TigerUpdateSeasonProgress // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bd350
	void TigerUnlockVanityItem(struct FString InItemName); // Function Tiger.TigerCheatManager.TigerUnlockVanityItem // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerUnlockThrall(enum class ETigerThrallId InThrallId); // Function Tiger.TigerCheatManager.TigerUnlockThrall // (Final|Exec|Native|Public) // @ game+0x13bcde0
	void TigerUnlockAllThralls(); // Function Tiger.TigerCheatManager.TigerUnlockAllThralls // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerUnlockAllPerks(); // Function Tiger.TigerCheatManager.TigerUnlockAllPerks // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerUnlockAllItemsInDatabase(); // Function Tiger.TigerCheatManager.TigerUnlockAllItemsInDatabase // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleVisualLogger(); // Function Tiger.TigerCheatManager.TigerToggleVisualLogger // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleNoAggro(); // Function Tiger.TigerCheatManager.TigerToggleNoAggro // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerToggleClientSideHitDetectionRanged(); // Function Tiger.TigerCheatManager.TigerToggleClientSideHitDetectionRanged // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleClientSideHitDetectionMelee(); // Function Tiger.TigerCheatManager.TigerToggleClientSideHitDetectionMelee // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerThrallTickAllStatModifiers(); // Function Tiger.TigerCheatManager.TigerThrallTickAllStatModifiers // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerThrallMissionUpdateAll(); // Function Tiger.TigerCheatManager.TigerThrallMissionUpdateAll // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerThrallMissionStatusChange(int32_t InThrallMissionId, bool bIsActive); // Function Tiger.TigerCheatManager.TigerThrallMissionStatusChange // (Final|Exec|Native|Public) // @ game+0x13bce60
	void TigerThrallMissionAdvanceTurns(int32_t InThrallMissionId, uint32_t InTurns); // Function Tiger.TigerCheatManager.TigerThrallMissionAdvanceTurns // (Final|Exec|Native|Public) // @ game+0x13bd280
	void TigerThrallAddStatModifier(char InSlotIndex, struct FName InModifierName); // Function Tiger.TigerCheatManager.TigerThrallAddStatModifier // (Final|Exec|Native|Public) // @ game+0x13bd1b0
	void TigerTeleportToCameraLink(struct FString InUrl); // Function Tiger.TigerCheatManager.TigerTeleportToCameraLink // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerSubmitChallengeProgress(); // Function Tiger.TigerCheatManager.TigerSubmitChallengeProgress // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerStartQuest(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerStartQuest // (Final|Exec|Native|Public) // @ game+0x13bc720
	void TigerSpawnNpcsAroundPlayer(struct FName& InNpcType, int32_t InCount); // Function Tiger.TigerCheatManager.TigerSpawnNpcsAroundPlayer // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13bd0e0
	void TigerSpawnNpcAtCursorWithPotency(struct FName& NPCType, enum class ETigerBloodPotency InPotency, enum class ETigerBloodType InBloodType); // Function Tiger.TigerCheatManager.TigerSpawnNpcAtCursorWithPotency // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13bcfc0
	void TigerSpawnNpcAtCursor(struct FName& NPCType); // Function Tiger.TigerCheatManager.TigerSpawnNpcAtCursor // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13bcf30
	void TigerSleep(float SleepMs); // Function Tiger.TigerCheatManager.TigerSleep // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc900
	void TigerSkipPsoCaching(); // Function Tiger.TigerCheatManager.TigerSkipPsoCaching // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerShowPlayerLevel(); // Function Tiger.TigerCheatManager.TigerShowPlayerLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerShowMatchTimer(); // Function Tiger.TigerCheatManager.TigerShowMatchTimer // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerShowDoNotUseMeshes(); // Function Tiger.TigerCheatManager.TigerShowDoNotUseMeshes // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerShowArchetypeLevel(); // Function Tiger.TigerCheatManager.TigerShowArchetypeLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerShowActiveAnimationsOnActors(bool bShouldShow); // Function Tiger.TigerCheatManager.TigerShowActiveAnimationsOnActors // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x139d430
	void TigerSetWeatherScenario(struct FString InScenarioName); // Function Tiger.TigerCheatManager.TigerSetWeatherScenario // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerSetSessionProgressToBattlepassLevel(int32_t InLevel, bool bInShouldOwnBattlepass); // Function Tiger.TigerCheatManager.TigerSetSessionProgressToBattlepassLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bce60
	void TigerSetPlayerLevel(int32_t InPlayerLevel); // Function Tiger.TigerCheatManager.TigerSetPlayerLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc400
	void TigerSetMatchesPlayed(int32_t InNumberMatches); // Function Tiger.TigerCheatManager.TigerSetMatchesPlayed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc400
	void TigerSetFov(float InFov); // Function Tiger.TigerCheatManager.TigerSetFov // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSetCinematicQuality(enum class ETigerCinematicQuality InQualityLevel); // Function Tiger.TigerCheatManager.TigerSetCinematicQuality // (Final|Exec|Native|Public) // @ game+0x13bcde0
	void TigerSetCinematicOutfit(struct FString InCharacterName); // Function Tiger.TigerCheatManager.TigerSetCinematicOutfit // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerSetCharacterData(struct FString ClanText, int32_t PowerKitIndex, struct FString GenderText); // Function Tiger.TigerCheatManager.TigerSetCharacterData // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bcca0
	void TigerSetArchetypeLevel(int32_t InArchetypeLevel); // Function Tiger.TigerCheatManager.TigerSetArchetypeLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc400
	void TigerSetAppearanceItemById(struct FString InDatabaseId); // Function Tiger.TigerCheatManager.TigerSetAppearanceItemById // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc230
	void TigerSetAppearance(struct FString AppearanceText); // Function Tiger.TigerCheatManager.TigerSetAppearance // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc230
	void TigerServerCrash(); // Function Tiger.TigerCheatManager.TigerServerCrash // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerSerializeStatistics(); // Function Tiger.TigerCheatManager.TigerSerializeStatistics // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerResetQuests(); // Function Tiger.TigerCheatManager.TigerResetQuests // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerReportSelf(int32_t InReportReason); // Function Tiger.TigerCheatManager.TigerReportSelf // (Final|Exec|Native|Public) // @ game+0x13bc400
	void TigerRemoveThrall(char InSlot); // Function Tiger.TigerCheatManager.TigerRemoveThrall // (Final|Exec|Native|Public) // @ game+0x13bcc20
	void TigerRemoveHolyIncense(); // Function Tiger.TigerCheatManager.TigerRemoveHolyIncense // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerRemoveAllThralls(); // Function Tiger.TigerCheatManager.TigerRemoveAllThralls // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRegisterGrimoireEntryAsUnread(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsUnread // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerRegisterGrimoireEntryAsUnlocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsUnlocked // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerRegisterGrimoireEntryAsRead(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsRead // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerRegisterGrimoireEntryAsLocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsLocked // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerRegisterAllGrimoireEntriesAsUnread(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsUnread // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRegisterAllGrimoireEntriesAsUnlocked(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsUnlocked // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRegisterAllGrimoireEntriesAsRead(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsRead // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRegisterAllGrimoireEntriesAsLocked(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsLocked // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRainAmount(float RainAmount); // Function Tiger.TigerCheatManager.TigerRainAmount // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc900
	void TigerQuitTutorial(); // Function Tiger.TigerCheatManager.TigerQuitTutorial // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerPrintCompleteQuestInfo(); // Function Tiger.TigerCheatManager.TigerPrintCompleteQuestInfo // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerPrintActiveQuestInfo(); // Function Tiger.TigerCheatManager.TigerPrintActiveQuestInfo // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerMatchAddPlayerExp(int32_t InPlayerExp); // Function Tiger.TigerCheatManager.TigerMatchAddPlayerExp // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc400
	void TigerMatchAddArchetypeExp(int32_t InArchetypeExp); // Function Tiger.TigerCheatManager.TigerMatchAddArchetypeExp // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc400
	void TigerListThrallTrueStats(); // Function Tiger.TigerCheatManager.TigerListThrallTrueStats // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerListThralls(); // Function Tiger.TigerCheatManager.TigerListThralls // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerListSoftCurrencies(); // Function Tiger.TigerCheatManager.TigerListSoftCurrencies // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerListPlayerCharacters(); // Function Tiger.TigerCheatManager.TigerListPlayerCharacters // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerKickByMod(); // Function Tiger.TigerCheatManager.TigerKickByMod // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerJumpToLink(struct FString InUrl); // Function Tiger.TigerCheatManager.TigerJumpToLink // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerIncrementPremiumCurrency(uint64_t InAmountToAdd); // Function Tiger.TigerCheatManager.TigerIncrementPremiumCurrency // (Final|Exec|Native|Public) // @ game+0x13bcaa0
	void TigerFreeReload(); // Function Tiger.TigerCheatManager.TigerFreeReload // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerExportMetadata(); // Function Tiger.TigerCheatManager.TigerExportMetadata // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerEnableVideoFreeCamPlayerController(); // Function Tiger.TigerCheatManager.TigerEnableVideoFreeCamPlayerController // (Exec|Native|Public) // @ game+0x13bca80
	void TigerEnableStatisticsGathering(bool bShouldBeEnabled); // Function Tiger.TigerCheatManager.TigerEnableStatisticsGathering // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x139d430
	void TigerDisableDisciplineCost(); // Function Tiger.TigerCheatManager.TigerDisableDisciplineCost // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerDestroyNpcWithinRadiusIgnoreDebugTarget(float InRadius); // Function Tiger.TigerCheatManager.TigerDestroyNpcWithinRadiusIgnoreDebugTarget // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bca00
	void TigerDestroyNpcWithinRadius(float Radius); // Function Tiger.TigerCheatManager.TigerDestroyNpcWithinRadius // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc980
	void TigerDemoStop(); // Function Tiger.TigerCheatManager.TigerDemoStop // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerDemoRec(struct FString InRecordingName); // Function Tiger.TigerCheatManager.TigerDemoRec // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerDemoPlay(struct FString InRecordingName); // Function Tiger.TigerCheatManager.TigerDemoPlay // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerDebugHolyIncenseProgressBetweenServerAndClient(bool bInEnable); // Function Tiger.TigerCheatManager.TigerDebugHolyIncenseProgressBetweenServerAndClient // (Final|Exec|Native|Public) // @ game+0x139d430
	void TigerDebugHolyIncenseDrawServerAndClientVertices(float InDuration); // Function Tiger.TigerCheatManager.TigerDebugHolyIncenseDrawServerAndClientVertices // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerDebugDrawPlayerGrid(float DebugDrawLifetime); // Function Tiger.TigerCheatManager.TigerDebugDrawPlayerGrid // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerDeactivateEvent(struct FString InEventName); // Function Tiger.TigerCheatManager.TigerDeactivateEvent // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerCreateDefaultCharacterAtSlot(struct FString InArchetypeName, char InCharacterSlot); // Function Tiger.TigerCheatManager.TigerCreateDefaultCharacterAtSlot // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc820
	void TigerCrash(); // Function Tiger.TigerCheatManager.TigerCrash // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerCopyPlayerId(); // Function Tiger.TigerCheatManager.TigerCopyPlayerId // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerCompleteQuestActiveObjectiveSet(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerCompleteQuestActiveObjectiveSet // (Final|Exec|Native|Public) // @ game+0x13bc720
	void TigerCompleteQuest(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerCompleteQuest // (Final|Exec|Native|Public) // @ game+0x13bc720
	void TigerCompleteNextTierMastery(); // Function Tiger.TigerCheatManager.TigerCompleteNextTierMastery // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerCompleteNextChallengeWeekly(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeWeekly // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerCompleteNextChallengeMastery(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeMastery // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerCompleteNextChallengeDaily(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeDaily // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerClearQuest(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerClearQuest // (Final|Exec|Native|Public) // @ game+0x13bc720
	void TigerChangeThrallStats(char InSlotIndex, int32_t InPerception, int32_t InCommitment, int32_t InDominance, int32_t InSociability, int32_t InProficiency, int32_t InStealth, int32_t InStamina, int32_t InCombat); // Function Tiger.TigerCheatManager.TigerChangeThrallStats // (Final|Exec|Native|Public) // @ game+0x13bc490
	void TigerChangeRespawnTokenCount(int32_t InChange); // Function Tiger.TigerCheatManager.TigerChangeRespawnTokenCount // (Final|Exec|Native|Public) // @ game+0x13bc400
	void TigerBringMeHome(); // Function Tiger.TigerCheatManager.TigerBringMeHome // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerBreakMasquerade(); // Function Tiger.TigerCheatManager.TigerBreakMasquerade // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerBanMeForProfanity(); // Function Tiger.TigerCheatManager.TigerBanMeForProfanity // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerBanMeForLoadData(); // Function Tiger.TigerCheatManager.TigerBanMeForLoadData // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerBanMeForAntiCheat(); // Function Tiger.TigerCheatManager.TigerBanMeForAntiCheat // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerAddSoftCurrency(int32_t InAmount, struct FString InCurrencyIdAsString); // Function Tiger.TigerCheatManager.TigerAddSoftCurrency // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc2d0
	void TigerActivateEvent(struct FString InEventName); // Function Tiger.TigerCheatManager.TigerActivateEvent // (Final|Exec|Native|Public) // @ game+0x13bc230
	void OnGetPlayerCharactersRsp(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // Function Tiger.TigerCheatManager.OnGetPlayerCharactersRsp // (Final|Native|Public|HasOutParms) // @ game+0x13bbad0
};

// Class Tiger.TigerCinematicGameMode
// Size: 0x2d8 (Inherited: 0x2c8)
struct ATigerCinematicGameMode : AGameModeBase {
	enum class ETigerCinematicQuality Quality; // 0x2c8(0x01)
	bool bHideMouse; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	int32_t NumShadowCastingLights; // 0x2cc(0x04)
	char pad_2D0[0x8]; // 0x2d0(0x08)
};

// Class Tiger.TigerCinematicQualitySettings
// Size: 0x78 (Inherited: 0x38)
struct UTigerCinematicQualitySettings : UDeveloperSettings {
	struct TArray<struct FString> GlobalCommands; // 0x38(0x10)
	struct TArray<struct FString> CinematicQualityCommands; // 0x48(0x10)
	struct TArray<struct FString> LowQualityCommands; // 0x58(0x10)
	struct TArray<struct FTigerCharacterCinematicTemplate> CharacterTemplates; // 0x68(0x10)
};

// Class Tiger.TigerClanLevelWidget
// Size: 0x268 (Inherited: 0x260)
struct UTigerClanLevelWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)

	void UpdateClanLevel(enum class ETigerClan Clan); // Function Tiger.TigerClanLevelWidget.UpdateClanLevel // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2df0
	void OnClanLevelUpdated(int32_t NewClanLevel); // Function Tiger.TigerClanLevelWidget.OnClanLevelUpdated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	int32_t GetCurrentClanLevel(); // Function Tiger.TigerClanLevelWidget.GetCurrentClanLevel // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c1f10
};

// Class Tiger.TigerInteractiveObject
// Size: 0x280 (Inherited: 0x228)
struct ATigerInteractiveObject : AActor {
	bool bHasInteractionTrigger; // 0x228(0x01)
	bool bHasEnterVolumeTrigger; // 0x229(0x01)
	bool bHasShootingTrigger; // 0x22a(0x01)
	char pad_22B[0x5]; // 0x22b(0x05)
	struct FText InteractionText; // 0x230(0x18)
	struct UBoxComponent* InteractionVolume; // 0x248(0x08)
	struct UBoxComponent* EnterVolume; // 0x250(0x08)
	struct UBoxComponent* ShootingVolume; // 0x258(0x08)
	float InteractionTime; // 0x260(0x04)
	bool bIsInteractibleFromBehind; // 0x264(0x01)
	char pad_265[0x3]; // 0x265(0x03)
	struct USceneComponent* SceneRoot; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
	enum class EInteractiveObjectState InteractionState; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float CurrentInteractionTimeLeft; // 0x27c(0x04)

	void UpdateDuration(float DeltaSeconds); // Function Tiger.TigerInteractiveObject.UpdateDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x1415bc0
	void SleepInteraction(); // Function Tiger.TigerInteractiveObject.SleepInteraction // (Native|Public|BlueprintCallable) // @ game+0x1415ad0
	void OnRep_Interaction(enum class EInteractiveObjectState OldState); // Function Tiger.TigerInteractiveObject.OnRep_Interaction // (Final|Native|Public) // @ game+0x1415040
	void OnJumpToFinalState(); // Function Tiger.TigerInteractiveObject.OnJumpToFinalState // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnInteract(enum class EInteractiveObjectState ActivatedTrigger); // Function Tiger.TigerInteractiveObject.OnInteract // (Native|Event|Public|BlueprintEvent) // @ game+0x1414fc0
	void Multicast_SetInteractionState(enum class EInteractiveObjectState NewState); // Function Tiger.TigerInteractiveObject.Multicast_SetInteractionState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1414cb0
	void Interact(enum class EInteractiveObjectState ActivatedTrigger, struct UTigerInteractionControllerComponent* Interacter); // Function Tiger.TigerInteractiveObject.Interact // (Native|Public|BlueprintCallable) // @ game+0x1414840
	bool HasDuration(); // Function Tiger.TigerInteractiveObject.HasDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14147f0
	enum class EInteractiveObjectState GetInteractionState(); // Function Tiger.TigerInteractiveObject.GetInteractionState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414730
	void CancelInteraction(struct UTigerInteractionControllerComponent* Interacter); // Function Tiger.TigerInteractiveObject.CancelInteraction // (Native|Public|BlueprintCallable) // @ game+0x14144c0
	void BeginOverlappedProjectile(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerInteractiveObject.BeginOverlappedProjectile // (Final|Native|Private|HasOutParms) // @ game+0x1414200
	void BeginOverlappedCharacter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerInteractiveObject.BeginOverlappedCharacter // (Final|Native|Private|HasOutParms) // @ game+0x1413fd0
};

// Class Tiger.TigerClientInteractiveObject
// Size: 0x290 (Inherited: 0x280)
struct ATigerClientInteractiveObject : ATigerInteractiveObject {
	char pad_280[0x10]; // 0x280(0x10)
};

// Class Tiger.TigerClientInteractiveSpawner
// Size: 0x328 (Inherited: 0x228)
struct ATigerClientInteractiveSpawner : AActor {
	char pad_228[0xb0]; // 0x228(0xb0)
	struct TMap<uint32_t, struct FClientSpawnData> PendingCreationQueue; // 0x2d8(0x50)

	void Server_ValidateInteraction(struct UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Server_ValidateInteraction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13c2d00
	void Server_OnIntercationComplete(uint32_t InClientObjectId); // Function Tiger.TigerClientInteractiveSpawner.Server_OnIntercationComplete // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13c2c70
	void Server_DropOffItemLocationStartInteraction(uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Server_DropOffItemLocationStartInteraction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13c2be0
	void OnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerClientInteractiveSpawner.OnRestartPlayer // (Final|Native|Private) // @ game+0x13c25c0
	void OnClientObjectDestroyed(struct AActor* InDestroyedActor); // Function Tiger.TigerClientInteractiveSpawner.OnClientObjectDestroyed // (Final|Native|Private) // @ game+0x13c24f0
	void Client_SpawnInteractiveObjects(struct TArray<struct FClientSpawnData> InSpawnList); // Function Tiger.TigerClientInteractiveSpawner.Client_SpawnInteractiveObjects // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13c1c20
	void Client_RestartLevel(); // Function Tiger.TigerClientInteractiveSpawner.Client_RestartLevel // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13c1c00
	void Client_ResetInteraction(uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Client_ResetInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13c1b70
	void Client_OnInteractionValidated(struct UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID, bool InSuccess); // Function Tiger.TigerClientInteractiveSpawner.Client_OnInteractionValidated // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13c19d0
	void Client_DropOffItemLocationDropOffComplete(uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Client_DropOffItemLocationDropOffComplete // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13c1940
	void Client_DestroyInteractiveObjects(struct TArray<uint32_t> InDestroyList); // Function Tiger.TigerClientInteractiveSpawner.Client_DestroyInteractiveObjects // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13c18a0
};

// Class Tiger.TigerPushConnectionManager
// Size: 0xa8 (Inherited: 0x28)
struct UTigerPushConnectionManager : UObject {
	struct UTigerGameInstance* GameInstance; // 0x28(0x08)
	char pad_30[0x78]; // 0x30(0x78)
};

// Class Tiger.TigerClientPushConnectionManager
// Size: 0xf8 (Inherited: 0xa8)
struct UTigerClientPushConnectionManager : UTigerPushConnectionManager {
	char pad_A8[0x50]; // 0xa8(0x50)
};

// Class Tiger.TigerClimbablePipe
// Size: 0x230 (Inherited: 0x228)
struct ATigerClimbablePipe : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerCollectibleProgressCache
// Size: 0x78 (Inherited: 0x28)
struct UTigerCollectibleProgressCache : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Tiger.TigerCollectibleData
// Size: 0x90 (Inherited: 0x30)
struct UTigerCollectibleData : UDataAsset {
	uint32_t CollectibleId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FText CollectibleName; // 0x38(0x18)
	struct FText CollectibleDescription; // 0x50(0x18)
	int32_t TotalRequired; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct UTigerGrimoireEntry* GrimoireEntryToUnlock; // 0x70(0x08)
	struct UTigerCollectibleGrimoireEntrySet* GrimoireEntrySet; // 0x78(0x08)
	struct TArray<struct FTigerItemId> RewardIds; // 0x80(0x10)
};

// Class Tiger.TigerCollectibleGrimoireEntrySet
// Size: 0x40 (Inherited: 0x30)
struct UTigerCollectibleGrimoireEntrySet : UDataAsset {
	struct TArray<struct UTigerGrimoireEntry*> Set; // 0x30(0x10)
};

// Class Tiger.TigerCollectibleSystem
// Size: 0x150 (Inherited: 0xb0)
struct UTigerCollectibleSystem : UActorComponent {
	struct UTigerExperienceEvent* CollectiblePickupExpEvent; // 0xb0(0x08)
	struct UTigerItemAsset* GenericCollectibleItemAsset; // 0xb8(0x08)
	char pad_C0[0x90]; // 0xc0(0x90)

	void Server_AwardCollectible(struct UTigerCollectibleData* InCollectible); // Function Tiger.TigerCollectibleSystem.Server_AwardCollectible // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x137b600
	void ProcessCollectible(struct FText& InCollectibleId); // Function Tiger.TigerCollectibleSystem.ProcessCollectible // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13c2770
	struct UTigerCollectibleData* GetCollectibleWithName(struct FText& InCollectibleName); // Function Tiger.TigerCollectibleSystem.GetCollectibleWithName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13c1e00
	void Client_ProcessCollectible(uint32_t InCollectibleId); // Function Tiger.TigerCollectibleSystem.Client_ProcessCollectible // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13c1ae0
};

// Class Tiger.TigerCollectibleSystemSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerCollectibleSystemSettings : UDeveloperSettings {
	struct TSoftObjectPtr<UDataTable> CollectiblesTable; // 0x38(0x28)

	bool IsTableReady(); // Function Tiger.TigerCollectibleSystemSettings.IsTableReady // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13c22f0
	struct UDataTable* GetCollectiblesTable(); // Function Tiger.TigerCollectibleSystemSettings.GetCollectiblesTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13c1ee0
};

// Class Tiger.TigerMaxIntAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerMaxIntAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(int32_t Value); // Function Tiger.TigerMaxIntAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2b00
	void AddValue(int32_t Value); // Function Tiger.TigerMaxIntAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c1540
};

// Class Tiger.TigerFloatMinAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatMinAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatMinAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2920
	void AddValue(float Value); // Function Tiger.TigerFloatMinAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c13e0
};

// Class Tiger.TigerFloatAverageAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatAverageAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatAverageAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2920
	void AddValue(float Value); // Function Tiger.TigerFloatAverageAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c13e0
};

// Class Tiger.TigerFloatMultiplierAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatMultiplierAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatMultiplierAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2920
	void AddValue(float Value); // Function Tiger.TigerFloatMultiplierAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c13e0
};

// Class Tiger.TigerBoolAnyAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerBoolAnyAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(bool Value); // Function Tiger.TigerBoolAnyAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2840
	void AddValue(bool Value); // Function Tiger.TigerBoolAnyAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c1330
};

// Class Tiger.TigerFloatCurveMultiplierAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatCurveMultiplierAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(struct UCurveFloat* Value); // Function Tiger.TigerFloatCurveMultiplierAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2a00
	void AddValue(struct UCurveFloat* Value); // Function Tiger.TigerFloatCurveMultiplierAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x13c1490
};

// Class Tiger.TigerCombatComponent
// Size: 0x158 (Inherited: 0xb0)
struct UTigerCombatComponent : UActorComponent {
	struct FMulticastInlineDelegate OnEnterCombat; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnLeaveCombat; // 0xc0(0x10)
	struct UTigerWeapon* DefaultUnarmedWeaponClass; // 0xd0(0x08)
	struct UTigerItemAsset* DefaultMeleeItemAsset; // 0xd8(0x08)
	struct UTigerItemAsset* DefaultRangedItemAsset; // 0xe0(0x08)
	uint32_t DefaultRangedStartingAmmo; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct TArray<struct UTigerItemAsset*> DefaultMeleeItemAssetOverride; // 0xf0(0x10)
	struct TArray<struct UTigerItemAsset*> DefaultRangedItemAssetOverride; // 0x100(0x10)
	struct UTigerWeapon* CurrentWeaponClass; // 0x110(0x08)
	struct UTigerMeleeWeapon* CurrentMeleeWeaponClass; // 0x118(0x08)
	struct UTigerWeapon* CurrentVisibleWeaponClass; // 0x120(0x08)
	float OutOfCombatTime; // 0x128(0x04)
	char pad_12C[0xc]; // 0x12c(0x0c)
	float EntityDetectionSphere; // 0x138(0x04)
	char pad_13C[0x8]; // 0x13c(0x08)
	char CombatState; // 0x144(0x01)
	char pad_145[0x13]; // 0x145(0x13)

	void OverrideDefaultRangedItem(struct UTigerItemAsset* InRangedItemAsset); // Function Tiger.TigerCombatComponent.OverrideDefaultRangedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x13c26e0
	void OverrideDefaultMeleeItem(struct UTigerItemAsset* InMeleeItemAsset); // Function Tiger.TigerCombatComponent.OverrideDefaultMeleeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x13c2650
	void OnRep_CombatStateChanged(); // Function Tiger.TigerCombatComponent.OnRep_CombatStateChanged // (Final|Native|Private) // @ game+0x13c25a0
	void OnCombatAction(); // Function Tiger.TigerCombatComponent.OnCombatAction // (Final|Native|Private|BlueprintCallable) // @ game+0x13c2580
	void Multicast_SetCurrentMeleeWeaponClass(struct UTigerMeleeWeapon* MeleeWeaponClass); // Function Tiger.TigerCombatComponent.Multicast_SetCurrentMeleeWeaponClass // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13c2460
	void Multicast_OnDesiredWeaponChanged(struct UTigerWeapon* WeaponClass, struct UTigerWeapon* MeleeWeaponClass, bool bInstantSwitch); // Function Tiger.TigerCombatComponent.Multicast_OnDesiredWeaponChanged // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x13c2320
	bool IsInCombat(); // Function Tiger.TigerCombatComponent.IsInCombat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c22c0
	bool HasEquippedWeapon(); // Function Tiger.TigerCombatComponent.HasEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c2270
	enum class ETigerEquippedWeaponType GetEquippedWeaponType(); // Function Tiger.TigerCombatComponent.GetEquippedWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c20b0
	struct UTigerWeapon* GetDefaultUnarmedWeaponClass(); // Function Tiger.TigerCombatComponent.GetDefaultUnarmedWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c2070
	int32_t GetDefaultRangedStartingAmmo(); // Function Tiger.TigerCombatComponent.GetDefaultRangedStartingAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c2040
	struct UTigerItemAsset* GetDefaultRangedItem(); // Function Tiger.TigerCombatComponent.GetDefaultRangedItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c2010
	struct UTigerItemAsset* GetDefaultMeleeItem(); // Function Tiger.TigerCombatComponent.GetDefaultMeleeItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c1fe0
	struct UTigerWeapon* GetCurrentWeaponClassDefaultObject(); // Function Tiger.TigerCombatComponent.GetCurrentWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c1fb0
	struct UTigerWeapon* GetCurrentWeaponClass(); // Function Tiger.TigerCombatComponent.GetCurrentWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c1f90
	struct UTigerMeleeWeapon* GetCurrentMeleeWeaponClassDefaultObject(); // Function Tiger.TigerCombatComponent.GetCurrentMeleeWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c1f60
	struct UTigerMeleeWeapon* GetCurrentMeleeWeaponClass(); // Function Tiger.TigerCombatComponent.GetCurrentMeleeWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c1f40
	bool EquipWeapon(enum class ETigerWeaponSlot Slot, struct UTigerWeapon* WeaponClass, bool bInstantSwitch); // Function Tiger.TigerCombatComponent.EquipWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x13c1cf0
	void ClearDefaultItemOverrides(); // Function Tiger.TigerCombatComponent.ClearDefaultItemOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x13c1880
	void CheckForCombat(); // Function Tiger.TigerCombatComponent.CheckForCombat // (Final|Native|Public|BlueprintCallable) // @ game+0x13c1860
};

// Class Tiger.TigerCompassMarkerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerCompassMarkerComponent : UActorComponent {
	struct UTigerCompassMarkerWidget* CompassMarkerWidget; // 0xb0(0x08)
	struct UTexture2D* MarkerTexture; // 0xb8(0x08)
	bool bShouldShowByDefault; // 0xc0(0x01)
	char pad_C1[0x17]; // 0xc1(0x17)

	void Show(); // Function Tiger.TigerCompassMarkerComponent.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x13c2dd0
	void Hide(); // Function Tiger.TigerCompassMarkerComponent.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x13c22a0
};

// Class Tiger.TigerCompassMarkerWidget
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerCompassMarkerWidget : UTigerWidget {
	struct FVector MarkerWorldLocation; // 0x280(0x0c)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UTexture2D* MarkerTexture; // 0x290(0x08)
	enum class ETigerCompassMarkerType MarkerType; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)

	void SetColorBasedOnPlayerIndex(char InIndex); // Function Tiger.TigerCompassMarkerWidget.SetColorBasedOnPlayerIndex // (Event|Public|BlueprintEvent) // @ game+0x184a280
	float GetRelativeAngleOnCompass(); // Function Tiger.TigerCompassMarkerWidget.GetRelativeAngleOnCompass // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c2240
};

// Class Tiger.TigerCompassUI
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerCompassUI : UTigerWidget {
	struct TArray<struct FText> HeadingText; // 0x280(0x10)
	char pad_290[0x10]; // 0x290(0x10)

	void ShowCompassObject(struct UTigerCompassMarkerWidget* CompassObject); // Function Tiger.TigerCompassUI.ShowCompassObject // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void HideCompassObject(struct UTigerCompassMarkerWidget* CompassObject); // Function Tiger.TigerCompassUI.HideCompassObject // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void GetHeadingText(float InDegreeRangeCardinalAndOrdinalVisible, struct FText& OutHeadingText, float& OutZYaw); // Function Tiger.TigerCompassUI.GetHeadingText // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c20e0
	void CalculateTextWidgetPositions(struct TMap<struct UTigerStyledRichTextBlock*, float>& InDegreeOffsetsByTextWidget, struct UPanelWidget* InTextWidgetCanvasParent, struct TMap<struct UTigerStyledRichTextBlock*, struct FVector2D>& OutNewPositionsByTextWidget); // Function Tiger.TigerCompassUI.CalculateTextWidgetPositions // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c15f0
};

// Class Tiger.TigerConfigService
// Size: 0x48 (Inherited: 0x28)
struct UTigerConfigService : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTigerRequestUtility* TigerRequestUtility; // 0x38(0x08)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerConsequenceBroadcastCoordinator
// Size: 0x40 (Inherited: 0x28)
struct UTigerConsequenceBroadcastCoordinator : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerConsoleService
// Size: 0x40 (Inherited: 0x28)
struct UTigerConsoleService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerItemAsset
// Size: 0x128 (Inherited: 0x30)
struct UTigerItemAsset : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct UStaticMesh* StaticMesh; // 0x38(0x08)
	enum class ETigerInventoryItemType ItemType; // 0x40(0x01)
	enum class ETigerItemRarity ItemRarity; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
	struct FText Name; // 0x48(0x18)
	struct FText ShortName; // 0x60(0x18)
	int32_t MaxStackSize; // 0x78(0x04)
	int32_t DropFromStackCount; // 0x7c(0x04)
	struct FText Description; // 0x80(0x18)
	struct UTigerItemAsset* LowerRarity; // 0x98(0x08)
	int32_t SortWithinCategoryAscending; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct FText TooltipItemType; // 0xa8(0x18)
	struct UTexture2D* UIIcon; // 0xc0(0x08)
	struct UTexture2D* HUDIcon; // 0xc8(0x08)
	struct UTigerWeapon* WeaponClass; // 0xd0(0x08)
	struct UTigerBuff* ItemBuff; // 0xd8(0x08)
	bool bShouldAutoPickUpItem; // 0xe0(0x01)
	bool bTriggerBuffOnItemPickup; // 0xe1(0x01)
	bool bRemoveBuffOnItemDropped; // 0xe2(0x01)
	char pad_E3[0x5]; // 0xe3(0x05)
	struct UAkAudioEvent* PingWantVoiceAudioEvent; // 0xe8(0x08)
	struct UAkAudioEvent* PingHaveVoiceAudioEvent; // 0xf0(0x08)
	struct UAkAudioEvent* PingHereVoiceAudioEvent; // 0xf8(0x08)
	struct UAkAudioEvent* PickUpAudioEvent; // 0x100(0x08)
	uint64_t PersistentTelemetryID; // 0x108(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x110(0x08)
	struct FString EntryId; // 0x118(0x10)

	enum class ETigerWeaponType GetWeaponType(); // Function Tiger.TigerItemAsset.GetWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425600
	struct UTigerWeapon* GetWeaponClassDefaultObject(); // Function Tiger.TigerItemAsset.GetWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14254d0
	struct UTexture2D* GetHUDIcon(); // Function Tiger.TigerItemAsset.GetHUDIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14251b0
	struct FText GetDescription(); // Function Tiger.TigerItemAsset.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425120
	bool CanBeDropped(); // Function Tiger.TigerItemAsset.CanBeDropped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425010
};

// Class Tiger.TigerConsumableAsset
// Size: 0x170 (Inherited: 0x128)
struct UTigerConsumableAsset : UTigerItemAsset {
	struct UAnimMontage* Montage; // 0x128(0x08)
	bool bCanBeUsedWhileMoving; // 0x130(0x01)
	char pad_131[0x3]; // 0x131(0x03)
	float UseTime; // 0x134(0x04)
	int32_t MaxStack; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct UAkAudioEvent* BeginUseAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* UseSuccessfulAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* UseFailedAudioEvent; // 0x150(0x08)
	struct UTigerCharacterEffect* SuccessfulUseCharacterEffect; // 0x158(0x08)
	struct ATigerBuffPostProcess* BeginUsePostProcess; // 0x160(0x08)
	struct ATigerBuffPostProcess* SuccessfulBuffPostProcess; // 0x168(0x08)
};

// Class Tiger.TigerHealingConsumableAsset
// Size: 0x178 (Inherited: 0x170)
struct UTigerHealingConsumableAsset : UTigerConsumableAsset {
	float HealAmount; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerBuffingConsumableAsset
// Size: 0x178 (Inherited: 0x170)
struct UTigerBuffingConsumableAsset : UTigerConsumableAsset {
	struct UTigerBuff* BuffToApply; // 0x170(0x08)
};

// Class Tiger.TigerRevealItemConsumableAsset
// Size: 0x178 (Inherited: 0x170)
struct UTigerRevealItemConsumableAsset : UTigerConsumableAsset {
	float MaxDistanceToItem; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerSupplyDropConsumableAsset
// Size: 0x188 (Inherited: 0x170)
struct UTigerSupplyDropConsumableAsset : UTigerConsumableAsset {
	struct AActor* SupplyDropFlare; // 0x170(0x08)
	struct AActor* SupplyDropHelicopterActor; // 0x178(0x08)
	float DistanceFromPlayer; // 0x180(0x04)
	float Height; // 0x184(0x04)
};

// Class Tiger.TigerConsumablesComponent
// Size: 0x188 (Inherited: 0xb0)
struct UTigerConsumablesComponent : UActorComponent {
	struct FMulticastInlineDelegate OnUseConsumableFinished; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnUseConsumableStarted; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnUseConsumableCancelled; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnUseConsumablePrevented; // 0xe0(0x10)
	struct UAnimMontage* FallbackUseMontage; // 0xf0(0x08)
	struct UTigerConsumableAsset* QuickUseConsumable; // 0xf8(0x08)
	struct UTigerBuff* MovableBuffClass; // 0x100(0x08)
	int32_t CancelConsumableUseOnTraversalAction; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct ATigerPlayer* Player; // 0x110(0x08)
	struct UAnimMontage* CurrentMontage; // 0x118(0x08)
	struct UTigerConsumableAsset* CurrentConsumable; // 0x120(0x08)
	struct UTigerConsumableAsset* QuickConsumables[0x6]; // 0x128(0x30)
	char pad_158[0x30]; // 0x158(0x30)

	void UseCallback(); // Function Tiger.TigerConsumablesComponent.UseCallback // (Final|Native|Private) // @ game+0x13c80d0
	bool TriggerUseQuickUseConsumable(); // Function Tiger.TigerConsumablesComponent.TriggerUseQuickUseConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x13c80a0
	bool TriggerUseConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.TriggerUseConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x13c8000
	bool TriggerDropConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.TriggerDropConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x13c7f60
	void TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateConsumableStartedUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableStartedUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateConsumablePrevented__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumablePrevented__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateConsumableCancelledUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableCancelledUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Server_UseConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.Server_UseConsumable // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x13c7b10
	void Server_StopUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Server_StopUseConsumable // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x13c7a50
	void OnTraversalAction(struct ATigerPlayer* InPlayer, enum class ETigerTraversalAction InTraversalAction); // Function Tiger.TigerConsumablesComponent.OnTraversalAction // (Final|Native|Private) // @ game+0x13c7830
	void Multicast_StopUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Multicast_StopUseConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13c7710
	void Multicast_SimulateUseConsumable(struct UTigerConsumableAsset* Consumable, float UseTime); // Function Tiger.TigerConsumablesComponent.Multicast_SimulateUseConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13c7640
	bool IsUsingConsumable(); // Function Tiger.TigerConsumablesComponent.IsUsingConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c7610
	bool IsPlayingConsumableMontage(); // Function Tiger.TigerConsumablesComponent.IsPlayingConsumableMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c75e0
	float GetUseProgress(); // Function Tiger.TigerConsumablesComponent.GetUseProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c7500
	struct UTigerConsumableAsset* GetCurrentlyUsingConsumable(); // Function Tiger.TigerConsumablesComponent.GetCurrentlyUsingConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c73c0
	bool GetConsumableAtIndex(int32_t Index, struct UTigerConsumableAsset*& Consumable, int32_t& Stack); // Function Tiger.TigerConsumablesComponent.GetConsumableAtIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c7220
	void Client_UseConsumableFailed(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Client_UseConsumableFailed // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13c70c0
	void Client_ClearConsumable(); // Function Tiger.TigerConsumablesComponent.Client_ClearConsumable // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13c70a0
	bool CanPickUpConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.CanPickUpConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c6f50
	bool CanBePickedup(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.CanBePickedup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c6f50
};

// Class Tiger.TigerWheelWidget
// Size: 0x2a8 (Inherited: 0x298)
struct UTigerWheelWidget : UTigerMenuWidget {
	float LockCameraForGamepadAfterUseTime; // 0x298(0x04)
	bool bShouldSetMouseLocation; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	struct UTigerWheelInterfaceWidget* Interface; // 0x2a0(0x08)

	void PrimaryAction(int32_t Index); // Function Tiger.TigerWheelWidget.PrimaryAction // (Native|Protected) // @ game+0x14fbd10
	bool OpenWheel(); // Function Tiger.TigerWheelWidget.OpenWheel // (Native|Public|BlueprintCallable) // @ game+0x14fbc50
	struct UTigerWheelInterfaceWidget* GetInterfaceWidget(); // Function Tiger.TigerWheelWidget.GetInterfaceWidget // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool CloseWheel(bool bTriggerAction); // Function Tiger.TigerWheelWidget.CloseWheel // (Native|Public|BlueprintCallable) // @ game+0x14fb160
	void AlternateAction(int32_t Index); // Function Tiger.TigerWheelWidget.AlternateAction // (Native|Protected) // @ game+0x14faf80
};

// Class Tiger.TigerConsumableWheelWidget
// Size: 0x330 (Inherited: 0x2a8)
struct UTigerConsumableWheelWidget : UTigerWheelWidget {
	struct ATigerPlayer* Player; // 0x2a8(0x08)
	struct UTigerConsumablesComponent* ConsumablesComponent; // 0x2b0(0x08)
	struct UTigerInventoryComponent* InventoryComponent; // 0x2b8(0x08)
	struct TArray<struct UTigerConsumableAsset*> DefaultSortOrder; // 0x2c0(0x10)
	struct TMap<struct UTigerConsumableAsset*, int32_t> DefaultSortOrderMap; // 0x2d0(0x50)
	struct TArray<struct UTigerConsumableAsset*> SortedMenuItems; // 0x320(0x10)

	bool GetSortedMenuItem(int32_t InIndex, struct UTigerConsumableAsset*& OutConsumable, int32_t& OutQuantityAvailable); // Function Tiger.TigerConsumableWheelWidget.GetSortedMenuItem // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13c73e0
};

// Class Tiger.TigerContextualHelp
// Size: 0xb0 (Inherited: 0x28)
struct UTigerContextualHelp : UObject {
	float LifeTimeInSeconds; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FText HeaderText; // 0x30(0x18)
	struct FText DescriptionText; // 0x48(0x18)
	struct FName InputAction; // 0x60(0x08)
	bool bShouldHideOnInput; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct TSoftObjectPtr<UTexture2D> Icon; // 0x70(0x28)
	int32_t MatchesPlayedLimit; // 0x98(0x04)
	bool bWantsToShow; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float CooldownInSeconds; // 0xa0(0x04)
	enum class ETigerContextualHelpType ContextualHelpType; // 0xa4(0x01)
	enum class ETigerContextualHelpShouldShowInGameMode ShouldShowInGameMode; // 0xa5(0x01)
	char ShouldShowInGameModeFlags; // 0xa6(0x01)
	char pad_A7[0x9]; // 0xa7(0x09)

	void SetupTriggerConditions(struct FTigerContextualHelpContext& InContext); // Function Tiger.TigerContextualHelp.SetupTriggerConditions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	bool SatisfiesCustomCondition(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerContextualHelp.SatisfiesCustomCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x13c79b0
	void OnPlayerSpawned(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerContextualHelp.OnPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnHide(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerContextualHelp.OnHide // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool HasReachedMaxMatchesPlayedLimit(struct FTigerContextualHelpContext& InContext); // Function Tiger.TigerContextualHelp.HasReachedMaxMatchesPlayedLimit // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c7530
	void ExtendLifetime(float InLifeTimeInSeconds, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelp.ExtendLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x13c7150
	bool CanEverShow(struct FTigerContextualHelpContext& InContext); // Function Tiger.TigerContextualHelp.CanEverShow // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x13c6ff0
};

// Class Tiger.TigerContextualHelpComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerContextualHelpComponent : UActorComponent {
	struct ATigerPlayerController* TigerPlayerController; // 0xb0(0x08)
	struct UTigerContextualHelpUI* ContextualHelpUI; // 0xb8(0x08)
	struct TArray<struct FTigerCurrentContextualHelp> ActiveContextualHelps; // 0xc0(0x10)
	struct TArray<struct UTigerContextualHelp*> ContextualHelpCandidates; // 0xd0(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> ContextualHelpTypes; // 0xe0(0x10)
	float CooldownTime; // 0xf0(0x04)
	float MinimumDisplayTime; // 0xf4(0x04)
	char pad_F8[0x8]; // 0xf8(0x08)

	void PrepareContextualHelpComponentsForCurrentSession(struct FTigerContextualHelpContext InContext); // Function Tiger.TigerContextualHelpComponent.PrepareContextualHelpComponentsForCurrentSession // (Final|Native|Protected) // @ game+0x13c7900
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerContextualHelpComponent.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x13c77a0
	struct TArray<struct UTigerContextualHelp*> GetCurrentContextualHelpCandidates(); // Function Tiger.TigerContextualHelpComponent.GetCurrentContextualHelpCandidates // (Final|Native|Public|BlueprintCallable) // @ game+0x13c7340
};

// Class Tiger.TigerContextualHelpUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerContextualHelpUI : UTigerWidget {

	void OnShowHelpWidget(struct UTigerContextualHelp* InData, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelpUI.OnShowHelpWidget // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnHideHelpWidget(struct UTigerContextualHelp* InData, float& OutAnimationDuration, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelpUI.OnHideHelpWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerCrosshairWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerCrosshairWidget : UTigerWidget {
	enum class ETargetInteraction PreviousInteraction; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UObject* PreviousInteractionObject; // 0x288(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> PreviousInteractionCharacter; // 0x290(0x08)
	struct UTigerInventoryComponent* Inventory; // 0x298(0x08)
	struct UMaterialInstanceDynamic* ProgressBarMaterial; // 0x2a0(0x08)
	struct UCanvasPanel* RootPanel; // 0x2a8(0x08)
	struct ATigerPlayer* TigerPlayer; // 0x2b0(0x08)
	struct UTigerWeaponCrosshairWidget* CurrentWeaponCrosshair; // 0x2b8(0x08)
	struct TArray<struct UTigerWeaponCrosshairWidget*> PreviousWeaponCrosshairs; // 0x2c0(0x10)
	float ProgressValue; // 0x2d0(0x04)
	enum class ETigerUIColor CurrentProgressBarColor; // 0x2d4(0x01)
	char pad_2D5[0xb]; // 0x2d5(0x0b)

	void UpdateInteraction(enum class ETargetInteraction Interaction, struct UObject* InteractionObject); // Function Tiger.TigerCrosshairWidget.UpdateInteraction // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void SetProgressBarColor(enum class ETigerUIColor UIColor); // Function Tiger.TigerCrosshairWidget.SetProgressBarColor // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnShowHitMarker(struct FLinearColor& HitmarkerColor, bool bWasDownedOrKilled); // Function Tiger.TigerCrosshairWidget.OnShowHitMarker // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnInventoryUpdatedBP(); // Function Tiger.TigerCrosshairWidget.OnInventoryUpdatedBP // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerCrowdAgentComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerCrowdAgentComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class Tiger.TigerCSVTable
// Size: 0x40 (Inherited: 0x28)
struct UTigerCSVTable : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void WriteToFile(struct FString Filename, struct FString Path); // Function Tiger.TigerCSVTable.WriteToFile // (Final|Native|Public|BlueprintCallable) // @ game+0x13c80f0
	void SetValueString(int32_t Row, int32_t Column, struct FString Value); // Function Tiger.TigerCSVTable.SetValueString // (Final|Native|Public|BlueprintCallable) // @ game+0x13c7d10
	void SetValueFloat(int32_t Row, int32_t Column, float Value); // Function Tiger.TigerCSVTable.SetValueFloat // (Final|Native|Public|BlueprintCallable) // @ game+0x13c7bd0
	int32_t AddColumn(struct FString ColumnName); // Function Tiger.TigerCSVTable.AddColumn // (Final|Native|Public|BlueprintCallable) // @ game+0x13c6e00
	void AccumulateValue(int32_t Row, int32_t Column, float Value); // Function Tiger.TigerCSVTable.AccumulateValue // (Final|Native|Public|BlueprintCallable) // @ game+0x13c6c90
};

// Class Tiger.TigerDamageFeedbackComponent
// Size: 0x110 (Inherited: 0xb0)
struct UTigerDamageFeedbackComponent : UActorComponent {
	struct TSet<struct UDamageType*> ProjectileFeedbackDamageTypes; // 0xb0(0x50)
	char pad_100[0x10]; // 0x100(0x10)

	struct FLinearColor GetHitmarkerColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent); // Function Tiger.TigerDamageFeedbackComponent.GetHitmarkerColor // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x13cd510
	struct FLinearColor GetDamageTextColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent); // Function Tiger.TigerDamageFeedbackComponent.GetDamageTextColor // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x13cd300
	void Client_ShowOutgoingValidatedFeedback(struct FTigerDamageNumberData InData, struct FDamageEvent InDamageEvent, struct ATigerCharacter* InDamagedCharacter); // Function Tiger.TigerDamageFeedbackComponent.Client_ShowOutgoingValidatedFeedback // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13cd060
};

// Class Tiger.TigerDamageTriggerVolume
// Size: 0x280 (Inherited: 0x260)
struct ATigerDamageTriggerVolume : ATriggerVolume {
	float DamagePerSecond; // 0x260(0x04)
	bool bOnlyDamageKindred; // 0x264(0x01)
	bool bDoNotDamageDowned; // 0x265(0x01)
	char pad_266[0x2]; // 0x266(0x02)
	float DamageRate; // 0x268(0x04)
	bool bEnableDamage; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	struct TArray<struct FDamageTriggerOverlapData> OverlappingCharacters; // 0x270(0x10)

	void OnEndOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerDamageTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x13cdba0
	void OnBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerDamageTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x13cdad0
};

// Class Tiger.TigerDamageBase
// Size: 0x40 (Inherited: 0x40)
struct UTigerDamageBase : UDamageType {
};

// Class Tiger.DmgType_Ranged
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Ranged : UTigerDamageBase {
};

// Class Tiger.DmgType_RangedCritical
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_RangedCritical : UDmgType_Ranged {
};

// Class Tiger.DmgType_Melee
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Melee : UTigerDamageBase {
};

// Class Tiger.DmgType_Discipline
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Discipline : UTigerDamageBase {
};

// Class Tiger.DmgType_DisciplineFOTT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_DisciplineFOTT : UDmgType_Discipline {
};

// Class Tiger.DmgType_DOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_DOT : UTigerDamageBase {
};

// Class Tiger.DmgType_FireDOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_FireDOT : UDmgType_DOT {
};

// Class Tiger.DmgType_ToreadorDOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_ToreadorDOT : UDmgType_DOT {
};

// Class Tiger.DmgType_GameInflicted
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_GameInflicted : UTigerDamageBase {
};

// Class Tiger.DmgType_Environmental
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Environmental : UDmgType_GameInflicted {
};

// Class Tiger.DmgType_Mosquito
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Mosquito : UDmgType_GameInflicted {
};

// Class Tiger.DmgType_OutOfBoundsMosquito
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_OutOfBoundsMosquito : UDmgType_GameInflicted {
};

// Class Tiger.TigerDataDependentWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerDataDependentWidget : UTigerWidget {

	void OnDataLoaded(); // Function Tiger.TigerDataDependentWidget.OnDataLoaded // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ListenToDataLoadingEvent(); // Function Tiger.TigerDataDependentWidget.ListenToDataLoadingEvent // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsDataLoaded(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerDataDependentWidget.IsDataLoaded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void CheckDataLoaded(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerDataDependentWidget.CheckDataLoaded // (Final|Native|Private) // @ game+0x13ccfd0
};

// Class Tiger.TigerDeathScreen
// Size: 0x2f0 (Inherited: 0x298)
struct UTigerDeathScreen : UTigerMenuWidget {
	char pad_298[0x8]; // 0x298(0x08)
	struct TMap<enum class ETigerKillerType, struct FText> KillerTypeNames; // 0x2a0(0x50)

	bool ShouldReturnToElysium(); // Function Tiger.TigerDeathScreen.ShouldReturnToElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cdc70
	void SetInformation(int32_t InPlayerPlacement, int32_t InNumGroupsAtStart, struct FTigerPlayerStateGameData& InPlayerStateGameData, enum class ETigerKillerType InKillerType); // Function Tiger.TigerDeathScreen.SetInformation // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	bool CanStartSpectating(); // Function Tiger.TigerDeathScreen.CanStartSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ccfa0
};

// Class Tiger.TigerDebugCameraHUD
// Size: 0x318 (Inherited: 0x318)
struct ATigerDebugCameraHUD : ADebugCameraHUD {
};

// Class Tiger.TigerDeferredGroupRetainerBox
// Size: 0x150 (Inherited: 0x150)
struct UTigerDeferredGroupRetainerBox : URetainerBox {

	void Construct(); // Function Tiger.TigerDeferredGroupRetainerBox.Construct // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerDeferredRenderBox
// Size: 0x130 (Inherited: 0x120)
struct UTigerDeferredRenderBox : UContentWidget {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class Tiger.TigerDestroySessionAsync
// Size: 0x78 (Inherited: 0x30)
struct UTigerDestroySessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0x28]; // 0x50(0x28)

	struct UTigerDestroySessionAsync* DestroySession(struct UObject* WorldContextObject, enum class ESessionType SESSIONTYPE); // Function Tiger.TigerDestroySessionAsync.DestroySession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13cd1a0
};

// Class Tiger.TigerDialogueInteractionScreen
// Size: 0x2b8 (Inherited: 0x298)
struct UTigerDialogueInteractionScreen : UTigerMenuWidget {
	float TransitionTime; // 0x298(0x04)
	struct TWeakObjectPtr<struct ATigerBaseNPC> VendorNPC; // 0x29c(0x08)
	struct TWeakObjectPtr<struct UTigerAnimInstance> TargetAnimationInstance; // 0x2a4(0x08)
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x2ac(0x08)
	char pad_2B4[0x4]; // 0x2b4(0x04)

	void TransitionToPlayerCamera(); // Function Tiger.TigerDialogueInteractionScreen.TransitionToPlayerCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x13cdd80
	void TransitionToInteractionCamera(); // Function Tiger.TigerDialogueInteractionScreen.TransitionToInteractionCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x13cdd60
};

// Class Tiger.TigerNpcDialogueList
// Size: 0x90 (Inherited: 0x30)
struct UTigerNpcDialogueList : UDataAsset {
	struct FString DialogueIdBase; // 0x30(0x10)
	struct TMap<struct FString, struct FTigerNpcDialogue> DialogueLines; // 0x40(0x50)
};

// Class Tiger.TigerDialogueManager
// Size: 0x100 (Inherited: 0x28)
struct UTigerDialogueManager : UObject {
	char pad_28[0xd8]; // 0x28(0xd8)

	void SortDialogueLines(struct ATigerPlayerState* InState); // Function Tiger.TigerDialogueManager.SortDialogueLines // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdcd0
	bool HasQuestDialogue(); // Function Tiger.TigerDialogueManager.HasQuestDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cdaa0
	bool HasMoreDialogue(); // Function Tiger.TigerDialogueManager.HasMoreDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cda40
	bool HasHighPriorityDialogue(); // Function Tiger.TigerDialogueManager.HasHighPriorityDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cda10
	enum class ETigerClan GetSpeakerClan(); // Function Tiger.TigerDialogueManager.GetSpeakerClan // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd970
	struct FTigerNpcDialogue GetNextDialoguePack(); // Function Tiger.TigerDialogueManager.GetNextDialoguePack // (Final|Native|Public|BlueprintCallable) // @ game+0x13cd8d0
	bool GetNextDialogueLine(struct FText& OutText, struct FText& OutQuestDescription); // Function Tiger.TigerDialogueManager.GetNextDialogueLine // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13cd750
	int32_t GetCurrentDialogueId(); // Function Tiger.TigerDialogueManager.GetCurrentDialogueId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd2d0
	bool CanInteract(); // Function Tiger.TigerDialogueManager.CanInteract // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ccf70
};

// Class Tiger.TigerDisciplineBase
// Size: 0x78 (Inherited: 0x28)
struct UTigerDisciplineBase : UObject {
	struct ATigerCharacter* Owner; // 0x28(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x30(0x08)
	struct UTigerActiveDisciplineConfig* BaseConfig; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)
	int32_t PowerLevel; // 0x58(0x04)
	char pad_5C[0x8]; // 0x5c(0x08)
	float AIUseDuration; // 0x64(0x04)
	float AIMinCooldownDuration; // 0x68(0x04)
	float AIMaxCooldownDuration; // 0x6c(0x04)
	char pad_70[0x8]; // 0x70(0x08)

	bool UsesChargesUI(); // Function Tiger.TigerDisciplineBase.UsesChargesUI // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cddd0
	bool UsesCharges(); // Function Tiger.TigerDisciplineBase.UsesCharges // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cdda0
	bool ShouldUseCameraPresetWhenActive(); // Function Tiger.TigerDisciplineBase.ShouldUseCameraPresetWhenActive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cdca0
	bool HasPreparationCameraPreset(); // Function Tiger.TigerDisciplineBase.HasPreparationCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cda70
	bool HasCharge(); // Function Tiger.TigerDisciplineBase.HasCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd9f0
	bool HasCameraPreset(); // Function Tiger.TigerDisciplineBase.HasCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd9c0
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerDisciplineBase.GetTigerPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd990
	bool GetShouldDisplayActiveTimeLeft(); // Function Tiger.TigerDisciplineBase.GetShouldDisplayActiveTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd950
	struct UTigerCameraPreset* GetPreparationCameraPreset(); // Function Tiger.TigerDisciplineBase.GetPreparationCameraPreset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd910
	int32_t GetMaxCharges(); // Function Tiger.TigerDisciplineBase.GetMaxCharges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd720
	int32_t GetCharges(); // Function Tiger.TigerDisciplineBase.GetCharges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd2b0
	struct UTigerCameraPreset* GetCameraPreset(); // Function Tiger.TigerDisciplineBase.GetCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cd270
};

// Class Tiger.TigerDisciplineAnimTriggered
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineAnimTriggered : UTigerDisciplineBase {
	struct UTigerDisciplineAnimTriggeredConfig* AnimConfig; // 0x78(0x08)
	char pad_80[0x10]; // 0x80(0x10)
	struct UAnimMontage* LastPlayingMontage; // 0x90(0x08)
	struct TMap<struct UAnimMontage*, float> TriggerTimes; // 0x98(0x50)
	char pad_E8[0x8]; // 0xe8(0x08)
};

// Class Tiger.TigerDisciplineConfigBase
// Size: 0xe8 (Inherited: 0x28)
struct UTigerDisciplineConfigBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UTexture2D* UIIcon; // 0x30(0x08)
	struct FText DisciplineName; // 0x38(0x18)
	struct FText DisciplineDescription; // 0x50(0x18)
	bool bIsClanAbility; // 0x68(0x01)
	bool bEnablesGroupMemberHealthBars; // 0x69(0x01)
	enum class ETigerAIPlayerAction ActivationActionReported; // 0x6a(0x01)
	char pad_6B[0x5]; // 0x6b(0x05)
	struct UTigerDisciplineBase* DisciplineClass; // 0x70(0x08)
	enum class ETigerActionAllowed AllowedActions[0xf]; // 0x78(0x3c)
	uint16_t ActionsThatShouldCancelDiscipline; // 0xb4(0x02)
	bool bShouldAutomaticallyUseCameraPreset; // 0xb6(0x01)
	char pad_B7[0x1]; // 0xb7(0x01)
	struct UTigerCameraPreset* PreparationCameraPreset; // 0xb8(0x08)
	struct UTigerCameraPreset* CameraPreset; // 0xc0(0x08)
	struct UTigerCameraPreset* CameraPresetIndoor; // 0xc8(0x08)
	struct UTigerWeaponCrosshairWidget* Crosshair; // 0xd0(0x08)
	struct UMediaSource* PreviewVideo; // 0xd8(0x08)
	uint64_t PersistentTelemetryID; // 0xe0(0x08)

	void GetLevelInfo(struct TArray<struct FTigerDisciplineLevelInfo>& LevelInfo); // Function Tiger.TigerDisciplineConfigBase.GetLevelInfo // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13d5970
};

// Class Tiger.TigerActiveDisciplineConfig
// Size: 0x160 (Inherited: 0xe8)
struct UTigerActiveDisciplineConfig : UTigerDisciplineConfigBase {
	int32_t MaxLevel; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct FText CooldownText; // 0xf0(0x18)
	struct FText CooldownSuffix; // 0x108(0x18)
	int32_t MaxCharges; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct TArray<float> RechargeTimes; // 0x128(0x10)
	struct TArray<float> CooldownTimes; // 0x138(0x10)
	bool bShouldRotateTowardsCameraOnActivation; // 0x148(0x01)
	bool bShouldRotateTowardsCameraOnRelease; // 0x149(0x01)
	char pad_14A[0x2]; // 0x14a(0x02)
	float MovementMultiplier; // 0x14c(0x04)
	float GravityMultiplier; // 0x150(0x04)
	float PrimaryAINoiseEventRange; // 0x154(0x04)
	float SecondaryAINoiseEventRange; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
};

// Class Tiger.TigerBlindingBeautyConfig
// Size: 0x1d8 (Inherited: 0x160)
struct UTigerBlindingBeautyConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x160(0x08)
	struct ATigerBlindingBeautyEffectActor* BlueprintActor; // 0x168(0x08)
	float BlueprintActorLifetime; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct UTigerBuff* BlindingDebuff; // 0x178(0x08)
	struct UTigerBuff* CharmDebuffPlayer; // 0x180(0x08)
	struct UTigerBuff* CharmDebuffNpc; // 0x188(0x08)
	struct TArray<float> BlindDuration; // 0x190(0x10)
	float CharmPlayerDuration; // 0x1a0(0x04)
	float CharmNpcDuration; // 0x1a4(0x04)
	float TriggerTime; // 0x1a8(0x04)
	float ActiveTimeAfterTrigger; // 0x1ac(0x04)
	float GuaranteedBlindRange; // 0x1b0(0x04)
	float LookBlindRange; // 0x1b4(0x04)
	float LookDotProductHitThreshold; // 0x1b8(0x04)
	char pad_1BC[0x4]; // 0x1bc(0x04)
	struct TArray<float> BlindDamage; // 0x1c0(0x10)
	bool bShouldDamageCivilians; // 0x1d0(0x01)
	bool bUseCameraAsLookDirection; // 0x1d1(0x01)
	char pad_1D2[0x6]; // 0x1d2(0x06)
};

// Class Tiger.TigerDisciplineBlindingBeauty
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineBlindingBeauty : UTigerDisciplineBase {
	struct UTigerBlindingBeautyConfig* Config; // 0x78(0x08)
	struct ATigerBlindingBeautyEffectActor* BlueprintActor; // 0x80(0x08)
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerDisciplineAnimTriggeredConfig
// Size: 0x170 (Inherited: 0x160)
struct UTigerDisciplineAnimTriggeredConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x160(0x08)
	enum class ETigerDisciplinesEnum DisciplineType; // 0x168(0x01)
	char pad_169[0x3]; // 0x169(0x03)
	float ActiveTimeAfterTrigger; // 0x16c(0x04)
};

// Class Tiger.TigerCharmConfig
// Size: 0x1d8 (Inherited: 0x170)
struct UTigerCharmConfig : UTigerDisciplineAnimTriggeredConfig {
	float Damage; // 0x170(0x04)
	float BondMaxDistance; // 0x174(0x04)
	float BackgroundFindTargetInterval; // 0x178(0x04)
	float BondPlayerDuration; // 0x17c(0x04)
	float BondNPCDuration; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct TArray<struct UTigerMajestyBuff*> CharmedBuff; // 0x188(0x10)
	struct TArray<struct UTigerBondingBuff*> BondingBuff; // 0x198(0x10)
	struct UTigerCharacterEffect* OnHitEffect; // 0x1a8(0x08)
	struct UTigerBuff* ThornsBuff; // 0x1b0(0x08)
	bool bShowDebugInfo; // 0x1b8(0x01)
	char pad_1B9[0x3]; // 0x1b9(0x03)
	float MaxDistance; // 0x1bc(0x04)
	float MinDistance; // 0x1c0(0x04)
	float PlayerTargetMultiplier; // 0x1c4(0x04)
	struct UCurveFloat* AimAxisValueCurve; // 0x1c8(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x1d0(0x08)
};

// Class Tiger.TigerBondingBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBondingBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBondingBuff
// Size: 0x260 (Inherited: 0x260)
struct UTigerBondingBuff : UTigerBuff {
};

// Class Tiger.TigerDisciplineCharm
// Size: 0x118 (Inherited: 0xf0)
struct UTigerDisciplineCharm : UTigerDisciplineAnimTriggered {
	char pad_F0[0x18]; // 0xf0(0x18)
	struct UTigerCharmConfig* Config; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void OnTickBond(struct ATigerCharacter* Player, struct ATigerCharacter* TargetNpc); // Function Tiger.TigerDisciplineCharm.OnTickBond // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStoppedBond(); // Function Tiger.TigerDisciplineCharm.OnStoppedBond // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStartedBond(struct ATigerCharacter* Player, struct ATigerCharacter* TargetNpc); // Function Tiger.TigerDisciplineCharm.OnStartedBond // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerDisciplineComponent
// Size: 0x268 (Inherited: 0xb0)
struct UTigerDisciplineComponent : UActorComponent {
	struct UTigerDisciplineConfigs* DisciplineConfigs; // 0xb0(0x08)
	struct USoundBase* DisciplineFailSound; // 0xb8(0x08)
	struct FMulticastInlineDelegate OnDisciplineUsedDelegate; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnActivatedDisciplineDelegate; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnDeactivatedDisciplineDelegate; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnDisciplineUnlocked; // 0xf0(0x10)
	struct UAkAudioEvent* TraversalSkillCameOffCooldownAkAudioEvent; // 0x100(0x08)
	struct UAkAudioEvent* ArchetypeSkillCameOffCooldownAkAudioEvent; // 0x108(0x08)
	struct FTigerScouterCharacterData ScouterCharacterData; // 0x110(0x30)
	struct UTigerBuffShackles* PrimaryShacklesBuff; // 0x140(0x08)
	struct UTigerBuff* SecondaryShacklesBuff; // 0x148(0x08)
	float WeaponRarityDamageMultipliers[0x5]; // 0x150(0x14)
	char pad_164[0x4]; // 0x164(0x04)
	struct ATigerPlayer* Player; // 0x168(0x08)
	char pad_170[0x88]; // 0x170(0x88)
	struct TMap<enum class ETigerDisciplinesEnum, struct UTigerDisciplineBase*> Disciplines; // 0x1f8(0x50)
	char pad_248[0x20]; // 0x248(0x20)

	bool WantsToStrafe(); // Function Tiger.TigerDisciplineComponent.WantsToStrafe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d2640
	void UnlockDisciplineSlot(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplineComponent.UnlockDisciplineSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x13d25c0
	void UnlockDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.UnlockDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d2540
	enum class ETigerInputActionResult TryUseDiscipline(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.TryUseDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d24b0
	void TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.TryToAbortHoldingDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d2490
	void TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.TryToAbortChannelingDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d2470
	enum class ETigerInputActionResult TryReleaseDiscipline(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplineComponent.TryReleaseDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d23e0
	void TigerDelegateDisciplineUsed__DelegateSignature(enum class ETigerDisciplineSlot InDisciplineSlot); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDisciplineUsed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateDisciplineUnlocked__DelegateSignature(enum class ETigerDisciplineSlot InDisciplineSlot); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDisciplineUnlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateDeactivatedDiscipline__DelegateSignature(enum class ETigerDisciplinesEnum InDiscipline); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDeactivatedDiscipline__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateActivatedDiscipline__DelegateSignature(enum class ETigerDisciplinesEnum InDiscipline); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateActivatedDiscipline__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Server_UseDiscipline(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_UseDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13d22e0
	void Server_TryToInterruptActiveDiscipline(enum class ETigerCharacterActions InAction); // Function Tiger.TigerDisciplineComponent.Server_TryToInterruptActiveDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13d2230
	void Server_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13d21e0
	void Server_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13d2190
	void Server_SetPreparingDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.Server_SetPreparingDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13d20e0
	void Server_SetCrosshairHitLocation(struct FVector InLocation); // Function Tiger.TigerDisciplineComponent.Server_SetCrosshairHitLocation // (Final|Net|Native|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x13d2040
	void Server_ReleaseDiscipline(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_ReleaseDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13d1f40
	void Server_ForceInterruptActiveDiscipline(enum class ETigerDisciplinesEnum InDiscipline); // Function Tiger.TigerDisciplineComponent.Server_ForceInterruptActiveDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13d1e90
	void Server_AnimTriggerNotify(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_AnimTriggerNotify // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13d1d90
	void NotifyDisciplineEvent(enum class ETigerDisciplinesEnum Discipline, enum class ETigerDisciplineEvent Event); // Function Tiger.TigerDisciplineComponent.NotifyDisciplineEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x13d1cc0
	void Multicast_UseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Multicast_UseSucceeded // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13d1be0
	void Multicast_TryToInterruptActiveDiscipline(enum class ETigerCharacterActions InAction); // Function Tiger.TigerDisciplineComponent.Multicast_TryToInterruptActiveDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13d1b50
	void Multicast_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13d1b30
	void Multicast_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13d1b10
	void Multicast_SucceededAdditional(struct FDisciplineUse InDisciplineUse, bool bInSendReliableToAllTargets, char InEventFlags); // Function Tiger.TigerDisciplineComponent.Multicast_SucceededAdditional // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13d19b0
	void Multicast_ReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Multicast_ReleaseSucceeded // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13d18d0
	void Multicast_ForceInterruptActiveDiscipline(enum class ETigerDisciplinesEnum InDiscipline); // Function Tiger.TigerDisciplineComponent.Multicast_ForceInterruptActiveDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13d1850
	void LockDisciplineSlot(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplineComponent.LockDisciplineSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x13d17d0
	void LockDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.LockDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d1750
	bool IsRecharging(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.IsRecharging // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d16c0
	bool IsOnGlobalCoolDown(); // Function Tiger.TigerDisciplineComponent.IsOnGlobalCoolDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1690
	bool IsDisciplineUnlocked(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1600
	bool IsDisciplineAtMaxPowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineAtMaxPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1570
	bool IsDisciplineActive(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d14e0
	bool IsAnyWeaponAbilityActive(); // Function Tiger.TigerDisciplineComponent.IsAnyWeaponAbilityActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d14b0
	bool IsAnyDisciplinePreparing(); // Function Tiger.TigerDisciplineComponent.IsAnyDisciplinePreparing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1480
	bool IsAnyDisciplineActive(); // Function Tiger.TigerDisciplineComponent.IsAnyDisciplineActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1450
	void GetUnlockedDisciplines(struct TArray<enum class ETigerDisciplinesEnum>& OutUnlockedDisciplines); // Function Tiger.TigerDisciplineComponent.GetUnlockedDisciplines // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13d13a0
	struct UTexture2D* GetUIIconForSlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetUIIconForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x13d1310
	struct UTexture2D* GetUIIconForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetUIIconForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d1280
	enum class ETigerDisciplineSlot GetSlotForDiscipline(struct UTigerDisciplineBase* Discipline); // Function Tiger.TigerDisciplineComponent.GetSlotForDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d11e0
	float GetRechargeSecondsLeft(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetRechargeSecondsLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1150
	float GetRechargePercentage(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetRechargePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d10c0
	struct UTigerDisciplineBase* GetPreparingDiscipline(); // Function Tiger.TigerDisciplineComponent.GetPreparingDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d1090
	struct FText GetNameForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetNameForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d0fa0
	int32_t GetDisciplinePowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.GetDisciplinePowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0f10
	int32_t GetDisciplineMaxPowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.GetDisciplineMaxPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0e80
	enum class ETigerDisciplinesEnum GetDisciplineForSlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetDisciplineForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0df0
	struct UTigerDisciplineConfigBase* GetDisciplineConfigBySlot(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplineComponent.GetDisciplineConfigBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0d60
	struct UTigerDisciplineConfigBase* GetDisciplineConfig(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetDisciplineConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0cd0
	struct UTigerDisciplineBase* GetDiscipline(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0c40
	struct FText GetDescriptionForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetDescriptionForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d0b50
	float GetCooldownSecondsLeft(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetCooldownSecondsLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0ac0
	float GetCooldownPercentageBySlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetCooldownPercentageBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13d0a30
	float GetCooldownPercentage(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetCooldownPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d09a0
	struct TArray<enum class ETigerDisciplinesEnum> GetClanDisciplinesSortedByUnlockLevel(); // Function Tiger.TigerDisciplineComponent.GetClanDisciplinesSortedByUnlockLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d0910
	enum class ETigerDisciplinesEnum GetBlockingDiscipline(); // Function Tiger.TigerDisciplineComponent.GetBlockingDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d08f0
	struct UTigerDisciplineBase* GetActiveDiscipline(); // Function Tiger.TigerDisciplineComponent.GetActiveDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d08c0
	void EquipDiscipline(enum class ETigerDisciplineSlot Slot, enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.EquipDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x13d07f0
	void Client_UseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseSucceeded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d0710
	void Client_UseFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d0630
	void Client_UseAnimTriggeredFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseAnimTriggeredFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d0550
	void Client_UpdateDisciplineLevel(enum class ETigerDisciplinesEnum DisciplineType, int32_t PowerLevel); // Function Tiger.TigerDisciplineComponent.Client_UpdateDisciplineLevel // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13d0480
	void Client_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Client_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13d0460
	void Client_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Client_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13d0440
	void Client_SucceededAdditional(struct FDisciplineUse DisciplineUse, char EventFlags, struct ATigerPlayer* DisciplineOwner); // Function Tiger.TigerDisciplineComponent.Client_SucceededAdditional // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d02f0
	void Client_SendScoutedCharacterToGroupMember(struct ATigerCharacter* InScoutedCharacter, float InTime); // Function Tiger.TigerDisciplineComponent.Client_SendScoutedCharacterToGroupMember // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13d0220
	void Client_ReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_ReleaseSucceeded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d0140
	void Client_ReleaseFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_ReleaseFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d0060
	void Client_ReduceCooldowns(float InMultiplierToReduceBy, enum class ETigerDisciplineCooldownReductionType InReductionTypes); // Function Tiger.TigerDisciplineComponent.Client_ReduceCooldowns // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13cff90
	void Client_MomentumUpdateCooldowns(); // Function Tiger.TigerDisciplineComponent.Client_MomentumUpdateCooldowns // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13cff70
	void Client_LockDiscipline(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.Client_LockDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13cfef0
	void Client_LockAllDisciplines(); // Function Tiger.TigerDisciplineComponent.Client_LockAllDisciplines // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13cfed0
	void Client_CancelCooldown(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.Client_CancelCooldown // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13cfe50
	void AuthorityReduceCooldowns(float InAmount, enum class ETigerDisciplineCooldownReductionType InReductionType); // Function Tiger.TigerDisciplineComponent.AuthorityReduceCooldowns // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x13cfd80
	void AddScoutedCharacter(struct ATigerCharacter* InScoutedCharacter, float InTime); // Function Tiger.TigerDisciplineComponent.AddScoutedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x13cfcb0
};

// Class Tiger.TigerDisciplineConfigs
// Size: 0x78 (Inherited: 0x28)
struct UTigerDisciplineConfigs : UObject {
	struct TMap<enum class ETigerDisciplinesEnum, struct UTigerActiveDisciplineConfig*> Configs; // 0x28(0x50)
};

// Class Tiger.TigerDisplacementConfig
// Size: 0x1d8 (Inherited: 0x170)
struct UTigerDisplacementConfig : UTigerDisciplineAnimTriggeredConfig {
	bool bShowDebugInfo; // 0x170(0x01)
	char pad_171[0x3]; // 0x171(0x03)
	float AttackingRange; // 0x174(0x04)
	float AttackingRadius; // 0x178(0x04)
	float PlayerTargetMultiplier; // 0x17c(0x04)
	float MeleeAreaMultiplier; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UCurveFloat* AimAxisValueCurve; // 0x188(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x190(0x08)
	float Damage; // 0x198(0x04)
	float BackgroundFindTargetInterval; // 0x19c(0x04)
	float PlayerToScoutedTargetDotProductCutoff; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct USoundBase* ActivationSound; // 0x1a8(0x08)
	struct UTigerBuffDOT* DOTToApply; // 0x1b0(0x08)
	struct UTigerBuff* BuffToApplyOnCasterWhenTeleporting; // 0x1b8(0x08)
	struct UTigerWidget* TargetMarkerWidgetClass; // 0x1c0(0x08)
	struct UAnimMontage* AirMontage; // 0x1c8(0x08)
	bool bInterruptClimbOnTarget; // 0x1d0(0x01)
	char pad_1D1[0x7]; // 0x1d1(0x07)
};

// Class Tiger.TigerDisciplineDisplacement
// Size: 0x148 (Inherited: 0xf0)
struct UTigerDisciplineDisplacement : UTigerDisciplineAnimTriggered {
	struct UTigerWidget* TargetMarker; // 0xf0(0x08)
	struct UTigerDisplacementConfig* Config; // 0xf8(0x08)
	char pad_100[0x10]; // 0x100(0x10)
	struct ATigerCharacter* ClientSidePotentialTarget; // 0x110(0x08)
	char pad_118[0x30]; // 0x118(0x30)

	void OnLockTarget(); // Function Tiger.TigerDisciplineDisplacement.OnLockTarget // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerEarthshockConfig
// Size: 0x250 (Inherited: 0x160)
struct UTigerEarthshockConfig : UTigerActiveDisciplineConfig {
	struct FText EffectRadiusText; // 0x160(0x18)
	struct FText EffectRadiusSuffix; // 0x178(0x18)
	float SurfaceAngleThreshold; // 0x190(0x04)
	float KnockupInitialVelocity; // 0x194(0x04)
	float HitboxConeHalfAngleInDegrees; // 0x198(0x04)
	float TerrainBlockTraceHeightGrace; // 0x19c(0x04)
	float ConeDamageRadius; // 0x1a0(0x04)
	float InnerHitSphereRadius; // 0x1a4(0x04)
	float ConeForwardOffset; // 0x1a8(0x04)
	float SphereTraceRadius; // 0x1ac(0x04)
	float MaxRangeAngleDeviationThreshold; // 0x1b0(0x04)
	float MaximumRange; // 0x1b4(0x04)
	float MaximumHeight; // 0x1b8(0x04)
	float DownTraceLength; // 0x1bc(0x04)
	float InitialJumpApexHeight; // 0x1c0(0x04)
	bool bUseSurfaceProjectedForward; // 0x1c4(0x01)
	char pad_1C5[0x3]; // 0x1c5(0x03)
	float AirAttackSpeed; // 0x1c8(0x04)
	float MaxTargetEffectDistanceUp; // 0x1cc(0x04)
	float MaxTargetEffectDistanceDown; // 0x1d0(0x04)
	float StunTime; // 0x1d4(0x04)
	struct UCurveFloat* TravelDistanceDamageMultiplierCurve; // 0x1d8(0x08)
	float Damage; // 0x1e0(0x04)
	float WallAngleLandingAnimationThreshold; // 0x1e4(0x04)
	float StartLandingAnimationOffsetGround; // 0x1e8(0x04)
	float StartLandingAnimationOffsetWall; // 0x1ec(0x04)
	struct UAnimMontage* AirAttackAnimationJump; // 0x1f0(0x08)
	struct UAnimMontage* AirAttackAnimationMidAir; // 0x1f8(0x08)
	struct UAnimMontage* AirAttackAnimationLandGround; // 0x200(0x08)
	struct UAnimMontage* AirAttackAnimationLandWall; // 0x208(0x08)
	struct UAkAudioEvent* TakeOffAudioEvent; // 0x210(0x08)
	struct UAkAudioEvent* LaunchAudioEvent; // 0x218(0x08)
	struct UAkAudioEvent* HitGroundSound; // 0x220(0x08)
	struct UAkAudioEvent* ImpactWarningSound; // 0x228(0x08)
	float CameraShakeBoundaryHeight; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct UMatineeCameraShake* CameraLowEffectShake; // 0x238(0x08)
	struct UMatineeCameraShake* CameraHighEffectShake; // 0x240(0x08)
	struct UMatineeCameraShake* CameraAirEffectShake; // 0x248(0x08)
};

// Class Tiger.TigerDisciplineEarthshock
// Size: 0x178 (Inherited: 0x78)
struct UTigerDisciplineEarthshock : UTigerDisciplineBase {
	struct FEarthshockUseDataNetworked EarthshockUseData; // 0x78(0x34)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UTigerEarthshockConfig* EarthshockConfig; // 0xb0(0x08)
	char pad_B8[0xc0]; // 0xb8(0xc0)

	void OnTargetIndicatorUpdated(bool bInHasTargetLocation, struct FVector InTargetLocation, struct FVector InSurfaceNormal, bool bInTargetIsWall); // Function Tiger.TigerDisciplineEarthshock.OnTargetIndicatorUpdated // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnSpawnTargetIndicator(); // Function Tiger.TigerDisciplineEarthshock.OnSpawnTargetIndicator // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRemoveTargetIndicator(); // Function Tiger.TigerDisciplineEarthshock.OnRemoveTargetIndicator // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnOwnerLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineEarthshock.OnOwnerLifeStatusChanged // (Final|Native|Protected) // @ game+0x13d5d20
	void OnLanded(struct FVector InLocation, struct FVector InSurfaceNormal, bool bInTargetIsWall); // Function Tiger.TigerDisciplineEarthshock.OnLanded // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnEnemyCharacterHit(struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerDisciplineEarthshock.OnEnemyCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDescentForcedMoveDone(enum class ETigerForcedMoveResult ForcedMoveResult); // Function Tiger.TigerDisciplineEarthshock.OnDescentForcedMoveDone // (Final|Native|Private) // @ game+0x13d5ca0
	void Multicast_SimulatedProxyImpact(struct FVector InConeDirection); // Function Tiger.TigerDisciplineEarthshock.Multicast_SimulatedProxyImpact // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x13d5c20
	float GetLeapTime(struct FVector& InLeapVector); // Function Tiger.TigerDisciplineEarthshock.GetLeapTime // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x13d58d0
	struct FVector GetConeDirection(); // Function Tiger.TigerDisciplineEarthshock.GetConeDirection // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d58a0
	bool EvaluateIsTargetLocationValid(bool bIsWall, struct FHitResult& InHitSurface); // Function Tiger.TigerDisciplineEarthshock.EvaluateIsTargetLocationValid // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x184a280
	struct FVector CalculateKnockbackForce(struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerDisciplineEarthshock.CalculateKnockbackForce // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x13d5570
	struct FVector CalculateConeDirection(); // Function Tiger.TigerDisciplineEarthshock.CalculateConeDirection // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x13d5530
};

// Class Tiger.TigerFlowerOfDeathConfig
// Size: 0x190 (Inherited: 0x160)
struct UTigerFlowerOfDeathConfig : UTigerActiveDisciplineConfig {
	bool ShowDebugCapsule; // 0x160(0x01)
	char pad_161[0x3]; // 0x161(0x03)
	float TargetRadius; // 0x164(0x04)
	float OverrideDuration; // 0x168(0x04)
	float Damage; // 0x16c(0x04)
	struct UObject* EffectBlueprint; // 0x170(0x08)
	struct UAnimMontage* AttackerAnimation; // 0x178(0x08)
	struct USoundBase* ActivationSound; // 0x180(0x08)
	struct UTigerBuff* SpeedBuff; // 0x188(0x08)
};

// Class Tiger.TigerDisciplineFlowerOfDeath
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineFlowerOfDeath : UTigerDisciplineBase {
	struct UTigerFlowerOfDeathConfig* Config; // 0x78(0x08)
	char pad_80[0x18]; // 0x80(0x18)
};

// Class Tiger.TigerFOTTConfig
// Size: 0x2b0 (Inherited: 0x160)
struct UTigerFOTTConfig : UTigerActiveDisciplineConfig {
	bool bDebugHitboxVisualization; // 0x160(0x01)
	bool bDebugWallhitAngle; // 0x161(0x01)
	char pad_162[0x2]; // 0x162(0x02)
	struct FVector HitBoxExtents; // 0x164(0x0c)
	struct FVector HitBoxOffset; // 0x170(0x0c)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct FText KnockbackDistanceText; // 0x180(0x18)
	struct TArray<float> KnockbackDistanceTooltipValues; // 0x198(0x10)
	struct FText KnockbackDistanceSuffix; // 0x1a8(0x18)
	float KnockbackTime; // 0x1c0(0x04)
	float TimeBeforeRagdollOnDeadNPCs; // 0x1c4(0x04)
	float RagdollKnockbackForceMultiplier; // 0x1c8(0x04)
	float KnockbackStunDuration; // 0x1cc(0x04)
	float KnockbackAngle; // 0x1d0(0x04)
	float MaxChargeDuration; // 0x1d4(0x04)
	float AttackDuration; // 0x1d8(0x04)
	float MaxWallStunAnglePitchDiff; // 0x1dc(0x04)
	float MaxWallStunAngleYawDiff; // 0x1e0(0x04)
	float MinimumChargeupTime; // 0x1e4(0x04)
	float EndOfAttackPercentageSpeedKept; // 0x1e8(0x04)
	float HitTargetsPercentageSpeedKept; // 0x1ec(0x04)
	struct UTigerBuff* SelfbuffWhileCharging; // 0x1f0(0x08)
	struct UTigerBuff* TargetKnockedIntoWallBuff; // 0x1f8(0x08)
	struct UCurveFloat* TravelDistance; // 0x200(0x08)
	struct TArray<struct UCurveFloat*> KnockbackDistance; // 0x208(0x10)
	struct UCurveFloat* FistDamage; // 0x218(0x08)
	struct UCurveFloat* TargetWallHitDamage; // 0x220(0x08)
	struct UCurveFloat* TargetWallHitStun; // 0x228(0x08)
	float WallEffectRadius; // 0x230(0x04)
	float WallEffectStayTime; // 0x234(0x04)
	float WallEffectFadeTime; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct UTigerAnimationSetAsset* ChargeupBlendspaceAnimationSet; // 0x240(0x08)
	struct UAnimMontage* TargetKnockbackAnimation; // 0x248(0x08)
	struct UCurveFloat* KnockbackAnimationPlayrate; // 0x250(0x08)
	struct UAnimMontage* ChargeupAnimation; // 0x258(0x08)
	struct UAnimMontage* ChargeupAnimationAir; // 0x260(0x08)
	float ChargeupAnimationSpeed; // 0x268(0x04)
	struct FName FullyChargedSectionName; // 0x26c(0x08)
	char pad_274[0x4]; // 0x274(0x04)
	struct UAnimMontage* AttackerAnimation; // 0x278(0x08)
	struct UAnimMontage* AttackerAnimationAir; // 0x280(0x08)
	float AttackAnimationSpeed; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UAnimMontage* RecoverAnimation; // 0x290(0x08)
	struct UAnimMontage* RecoverAnimationAir; // 0x298(0x08)
	struct UAnimMontage* WallHitStunAnimation; // 0x2a0(0x08)
	struct UAkAudioEvent* WallHitAudioEvent; // 0x2a8(0x08)
};

// Class Tiger.TigerDisciplineFOTT
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineFOTT : UTigerDisciplineBase {
	struct UTigerFOTTConfig* Config; // 0x78(0x08)
	char pad_80[0x30]; // 0x80(0x30)
	struct UParticleSystemComponent* PlayerChargeupParticles; // 0xb0(0x08)
	struct UParticleSystemComponent* PlayerAttackParticles; // 0xb8(0x08)
	struct UParticleSystemComponent* PlayerAttackEndParticles; // 0xc0(0x08)
	char pad_C8[0x28]; // 0xc8(0x28)

	void TickDisciplineEvent(float DeltaTime); // Function Tiger.TigerDisciplineFOTT.TickDisciplineEvent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OwnerCollided(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerDisciplineFOTT.OwnerCollided // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x13d5da0
	void OnTargetHitSomething(struct ATigerCharacter* Target, struct FVector& HitLocation, struct FVector& HitNormal); // Function Tiger.TigerDisciplineFOTT.OnTargetHitSomething // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnStartedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnStartedChargeup // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnReleasedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnReleasedChargeup // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnHitSomething(bool bHitACharacter); // Function Tiger.TigerDisciplineFOTT.OnHitSomething // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnCollidedWithWall(struct FVector& HitLocation, struct FVector& HitNormal); // Function Tiger.TigerDisciplineFOTT.OnCollidedWithWall // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnAbortedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnAbortedChargeup // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_FOTTKnockback(struct ATigerCharacter* TigerChar, struct FVector HitLocation, struct FVector EndLocation, bool bWasKilledByHit); // Function Tiger.TigerDisciplineFOTT.Multicast_FOTTKnockback // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x13d5ad0
	float GetChargeupProgress(bool ClampProgressAtOne); // Function Tiger.TigerDisciplineFOTT.GetChargeupProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d5800
	void CharacterCollided(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerDisciplineFOTT.CharacterCollided // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x13d5620
	void ApplyFOTT(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerDisciplineFOTT.ApplyFOTT // (Final|Native|Private|HasOutParms) // @ game+0x13d5440
};

// Class Tiger.TigerFrenzyConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerFrenzyConfig : UTigerActiveDisciplineConfig {
	float RoarRadius; // 0x160(0x04)
	float RoarDamage; // 0x164(0x04)
	float GroundedTime; // 0x168(0x04)
	float ImmobilizeTime; // 0x16c(0x04)
	float DelayBeforeRoarEffect; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct UTigerBuff* FrenzyBuff; // 0x178(0x08)
	struct UAnimMontage* RoarAnimation; // 0x180(0x08)
	struct USoundBase* RoarSound; // 0x188(0x08)
	struct USoundBase* BuffActiveSound; // 0x190(0x08)
	struct UParticleSystem* RoarParticles; // 0x198(0x08)
};

// Class Tiger.TigerDisciplineFrenzy
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineFrenzy : UTigerDisciplineBase {
	char pad_78[0x10]; // 0x78(0x10)
	struct UTigerFrenzyConfig* Config; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerGuardBreakConfig
// Size: 0x198 (Inherited: 0x160)
struct UTigerGuardBreakConfig : UTigerActiveDisciplineConfig {
	float DashDistance; // 0x160(0x04)
	float StartupTime; // 0x164(0x04)
	float DashTime; // 0x168(0x04)
	float StrikeDelay; // 0x16c(0x04)
	float StrikeDuration; // 0x170(0x04)
	float OnHitDamage; // 0x174(0x04)
	float BlockedOnHitDamage; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct UTigerBuff* OnHitDebuff; // 0x180(0x08)
	struct FVector HitBoxSize; // 0x188(0x0c)
	bool DrawDebugInfo; // 0x194(0x01)
	char pad_195[0x3]; // 0x195(0x03)

	void OnTargetsHitByStrike(struct TArray<struct ATigerCharacter*>& Targets); // Function Tiger.TigerGuardBreakConfig.OnTargetsHitByStrike // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnStrike(struct ATigerCharacter* Character); // Function Tiger.TigerGuardBreakConfig.OnStrike // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStartup(struct ATigerCharacter* Character); // Function Tiger.TigerGuardBreakConfig.OnStartup // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnDash(struct ATigerCharacter* Character, struct FVector& Location, struct FVector& Direction); // Function Tiger.TigerGuardBreakConfig.OnDash // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerDisciplineGuardBreak
// Size: 0xa8 (Inherited: 0x78)
struct UTigerDisciplineGuardBreak : UTigerDisciplineBase {
	struct UTigerGuardBreakConfig* Config; // 0x78(0x08)
	char pad_80[0x28]; // 0x80(0x28)
};

// Class Tiger.TigerDisciplineIcon
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerDisciplineIcon : UTigerWidget {
	enum class ETigerDisciplinesEnum DisciplineType; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UTexture2D* UiIconPtr; // 0x288(0x08)
	bool DisciplineUnlocked; // 0x290(0x01)
	bool CanBeUsed; // 0x291(0x01)
	bool HasCharges; // 0x292(0x01)
	bool bHasFinishedSetup; // 0x293(0x01)
	int32_t ChargeCount; // 0x294(0x04)
	bool bIsOnCooldown; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	int32_t CooldownSeconds; // 0x29c(0x04)
	float CooldownPercentage; // 0x2a0(0x04)
	float OldCooldownPercentage; // 0x2a4(0x04)
	bool bIsActive; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	int32_t ActiveTimeLeft; // 0x2ac(0x04)
	bool bIsRecharging; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	int32_t RechargeRemainingSeconds; // 0x2b4(0x04)
	float RechargePercentage; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)

	void SetupSkillData(enum class ETigerDisciplinesEnum& InEnum, struct UTexture2D* InTexture); // Function Tiger.TigerDisciplineIcon.SetupSkillData // (Final|Native|Public|HasOutParms) // @ game+0x13da740
	void SetSkillIcon(struct UTexture2D* InTexture); // Function Tiger.TigerDisciplineIcon.SetSkillIcon // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SetSkillData(bool bInIsUnlocked, bool bInHasCharge, bool bInCanBeUsed, int32_t InChargeCount, int32_t InCooldownSecondsLeft, float inCooldownPercentage, int32_t InActiveTimeLeft, float InRechargePercentage, int32_t InRechargeRemainingSeconds); // Function Tiger.TigerDisciplineIcon.SetSkillData // (Final|Native|Public) // @ game+0x13da480
	void OnInterrupted(); // Function Tiger.TigerDisciplineIcon.OnInterrupted // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerIncitePainConfig
// Size: 0x180 (Inherited: 0x170)
struct UTigerIncitePainConfig : UTigerDisciplineAnimTriggeredConfig {
	float DamageAmount; // 0x170(0x04)
	float Radius; // 0x174(0x04)
	float Reach; // 0x178(0x04)
	bool bDebugDraw; // 0x17c(0x01)
	char pad_17D[0x3]; // 0x17d(0x03)
};

// Class Tiger.TigerDisciplineIncitePain
// Size: 0xf8 (Inherited: 0xf0)
struct UTigerDisciplineIncitePain : UTigerDisciplineAnimTriggered {
	struct UTigerIncitePainConfig* Config; // 0xf0(0x08)
};

// Class Tiger.TigerJumpConfig
// Size: 0x1f0 (Inherited: 0x170)
struct UTigerJumpConfig : UTigerDisciplineAnimTriggeredConfig {
	bool bDebugJumpline; // 0x170(0x01)
	bool bDebugBlockJump; // 0x171(0x01)
	char pad_172[0x2]; // 0x172(0x02)
	float JumpVelocity; // 0x174(0x04)
	bool bAllowDoublejumpAfterDiscipline; // 0x178(0x01)
	bool bShouldDelayJumpInAir; // 0x179(0x01)
	char pad_17A[0x6]; // 0x17a(0x06)
	struct UAnimMontage* LaunchMontage; // 0x180(0x08)
	struct UAnimMontage* GroundAnticipationMontage; // 0x188(0x08)
	float CameraPresetDuration; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UMaterial* JumpFullscreenPostFX; // 0x198(0x08)
	struct UMaterialParameterCollection* JumpPostFXCollection; // 0x1a0(0x08)
	struct FName JumpPostFXStrengthParameterName; // 0x1a8(0x08)
	float JumpPostFXMaxStrength; // 0x1b0(0x04)
	float JumpEffectsDuration; // 0x1b4(0x04)
	float JumpEffectsLerpInTime; // 0x1b8(0x04)
	float JumpEffectsLerpOutTime; // 0x1bc(0x04)
	struct UAkAudioEvent* LeapStartedAudio; // 0x1c0(0x08)
	struct FVector FeetObstacleOffset; // 0x1c8(0x0c)
	float ObstacleDistanceCheck; // 0x1d4(0x04)
	float PartiallyBlockedJumpModifier; // 0x1d8(0x04)
	float BackLeapPitch; // 0x1dc(0x04)
	struct UCurveFloat* LeapPitchCurve; // 0x1e0(0x08)
	bool bCanLeapBackward; // 0x1e8(0x01)
	char pad_1E9[0x3]; // 0x1e9(0x03)
	float AnimationBlendoutTime; // 0x1ec(0x04)
};

// Class Tiger.TigerDisciplineJump
// Size: 0x168 (Inherited: 0xf0)
struct UTigerDisciplineJump : UTigerDisciplineAnimTriggered {
	char pad_F0[0x8]; // 0xf0(0x08)
	struct UTigerJumpConfig* Config; // 0xf8(0x08)
	struct UCapsuleComponent* CapsuleOverlapComponent; // 0x100(0x08)
	struct FMulticastInlineDelegate LeapConfirmed; // 0x108(0x10)
	char pad_118[0x40]; // 0x118(0x40)
	struct TArray<struct AActor*> ActorsThatOverlapped; // 0x158(0x10)

	void TigerLeapConfirmedMulticastDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerDisciplineJump.TigerLeapConfirmedMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnLeapStarted(); // Function Tiger.TigerDisciplineJump.OnLeapStarted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnLeapEnded(); // Function Tiger.TigerDisciplineJump.OnLeapEnded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_OnLeapConfirmed(); // Function Tiger.TigerDisciplineJump.Multicast_OnLeapConfirmed // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13da130
	struct FVector GetTargetPosition(struct FVector& PlayerEyeLocation, struct FRotator& CameraRotation, float JumpCheckDistance); // Function Tiger.TigerDisciplineJump.GetTargetPosition // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x13d9bf0
};

// Class Tiger.TigerLaceratingThrowConfig
// Size: 0x1c8 (Inherited: 0x170)
struct UTigerLaceratingThrowConfig : UTigerDisciplineAnimTriggeredConfig {
	struct ATigerLaceratingThrowProjectile* KnifeActor; // 0x170(0x08)
	struct TArray<struct UTigerBuff*> BuffToApplyOnHit; // 0x178(0x10)
	float ProjectileSpeed; // 0x188(0x04)
	float DamageOnHit; // 0x18c(0x04)
	float Reach; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct FText SlowText; // 0x198(0x18)
	struct FText SlowSuffix; // 0x1b0(0x18)
};

// Class Tiger.TigerDisciplineLaceratingThrow
// Size: 0xf8 (Inherited: 0xf0)
struct UTigerDisciplineLaceratingThrow : UTigerDisciplineAnimTriggered {
	struct UTigerLaceratingThrowConfig* Config; // 0xf0(0x08)
};

// Class Tiger.TigerMajestyConfig
// Size: 0x1c0 (Inherited: 0x160)
struct UTigerMajestyConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x160(0x08)
	float ApplyEffectTime; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct FText CharmDurationText; // 0x170(0x18)
	struct FText CharmDurationSuffix; // 0x188(0x18)
	struct TArray<struct UTigerMajestyBuff*> CharmedBuff; // 0x1a0(0x10)
	bool bDoFacingCheckOnNPCs; // 0x1b0(0x01)
	bool bIsEntityImmune; // 0x1b1(0x01)
	bool bRequireLineOfSight; // 0x1b2(0x01)
	char pad_1B3[0x1]; // 0x1b3(0x01)
	float Radius; // 0x1b4(0x04)
	float FacingAllowedYawDifference; // 0x1b8(0x04)
	bool bDebugDraw; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)
};

// Class Tiger.TigerMajestyBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerMajestyBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerMajestyBuff
// Size: 0x268 (Inherited: 0x260)
struct UTigerMajestyBuff : UTigerBuff {
	float NPCDuration; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Tiger.TigerDisciplineMajesty
// Size: 0x88 (Inherited: 0x78)
struct UTigerDisciplineMajesty : UTigerDisciplineBase {
	struct UTigerMajestyConfig* Config; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerParticleStrategy
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategy : UObject {
};

// Class Tiger.TigerParticleStrategyPostSpawn
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategyPostSpawn : UTigerParticleStrategy {

	void ExecutePostSpawnStrategy(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator); // Function Tiger.TigerParticleStrategyPostSpawn.ExecutePostSpawnStrategy // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1454a10
};

// Class Tiger.TigerDisciplineParticleStrategy
// Size: 0x58 (Inherited: 0x28)
struct UTigerDisciplineParticleStrategy : UTigerParticleStrategyPostSpawn {
	struct FLinearColor StandardColorOverride; // 0x28(0x10)
	struct FLinearColor EnemyColorOverride; // 0x38(0x10)
	enum class ETigerDisciplineParticleStrategyColorModes ColorOverrideMode; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	struct FName ColorParameterName; // 0x4c(0x08)
	char pad_54[0x4]; // 0x54(0x04)

	void PickColors(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator, struct FLinearColor& OutStandardColorOverride, struct FLinearColor& OutEnemyColorOverride); // Function Tiger.TigerDisciplineParticleStrategy.PickColors // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x13da250
	void ApplyColors(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator, struct FLinearColor& InStandardColorOverride, struct FLinearColor& InEnemyColorOverride); // Function Tiger.TigerDisciplineParticleStrategy.ApplyColors // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x13d9a10
};

// Class Tiger.TigerPassionConfig
// Size: 0x280 (Inherited: 0x160)
struct UTigerPassionConfig : UTigerActiveDisciplineConfig {
	float ProjectileMinLengthScale; // 0x160(0x04)
	float ProjectileMaxLengthScale; // 0x164(0x04)
	float ProjectileMinWidthScale; // 0x168(0x04)
	float ProjectileMaxWidthScale; // 0x16c(0x04)
	float ProjectileMinHeightScale; // 0x170(0x04)
	float ProjectileMaxHeightScale; // 0x174(0x04)
	float ProjectileMinSpeed; // 0x178(0x04)
	float ProjectileMaxSpeed; // 0x17c(0x04)
	float ProjectileMinRange; // 0x180(0x04)
	float ProjectileMaxRange; // 0x184(0x04)
	float PanicMinDuration; // 0x188(0x04)
	float PanicMaxDuration; // 0x18c(0x04)
	float ApathyMinDuration; // 0x190(0x04)
	float ApathyMaxDuration; // 0x194(0x04)
	float ApathyStartSlowMultiplier; // 0x198(0x04)
	float ApathyEndSlowMultiplier; // 0x19c(0x04)
	float WrathMinDuration; // 0x1a0(0x04)
	float WrathMaxDuration; // 0x1a4(0x04)
	float WrathMinAdditionalDamageMultiplier; // 0x1a8(0x04)
	float WrathMaxAdditionalDamageMultiplier; // 0x1ac(0x04)
	struct UAnimMontage* ChooseEffectAnimation; // 0x1b0(0x08)
	struct UAnimMontage* ChargeEffectAnimation; // 0x1b8(0x08)
	struct UAnimMontage* ReleaseEffectAnimation; // 0x1c0(0x08)
	struct TMap<enum class ETigerPassionEffect, struct UTigerBuff*> EffectBuffs; // 0x1c8(0x50)
	struct TMap<enum class ETigerPassionEffect, struct UParticleSystem*> ProjectileParticles; // 0x218(0x50)
	struct ATigerPassionProjectile* ProjectileActor; // 0x268(0x08)
	float TimeBetweenEffectChange; // 0x270(0x04)
	float ChooseEffectTimeOut; // 0x274(0x04)
	float MaxChargeTime; // 0x278(0x04)
	float UsageCooldown; // 0x27c(0x04)
};

// Class Tiger.TigerDisciplinePassion
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplinePassion : UTigerDisciplineBase {
	struct UTigerPassionConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerProjectionDashConfig
// Size: 0x1f0 (Inherited: 0x170)
struct UTigerProjectionDashConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* DownedMontage; // 0x170(0x08)
	struct UAnimMontage* DashStartMontage; // 0x178(0x08)
	struct UAnimMontage* DashEnterMontage; // 0x180(0x08)
	struct UAnimMontage* DashExitMontage; // 0x188(0x08)
	struct UTexture2D* DashIcon; // 0x190(0x08)
	struct UTigerBuff* DashBuff; // 0x198(0x08)
	struct UTigerBuff* ThornsBuff; // 0x1a0(0x08)
	struct ATigerProjectionDashProjectile* ProjectionActor; // 0x1a8(0x08)
	struct AActor* TargetIndicatorActor; // 0x1b0(0x08)
	struct FVector TargetingRayStartOffset; // 0x1b8(0x0c)
	float DelayBeforeDashIsPossible; // 0x1c4(0x04)
	float DashSpeed; // 0x1c8(0x04)
	float DashExitVelocityScale; // 0x1cc(0x04)
	float DashEnterDuration; // 0x1d0(0x04)
	float DashExitDuration; // 0x1d4(0x04)
	float ProjectionMaxDistance; // 0x1d8(0x04)
	float ProjectionAutoDespawnDistance; // 0x1dc(0x04)
	float ProjectionSpeed; // 0x1e0(0x04)
	float ProjectionStoppedLifetime; // 0x1e4(0x04)
	float TargetIndicatorLerpSpeed; // 0x1e8(0x04)
	bool bDashMoveToExit; // 0x1ec(0x01)
	enum class ETigerProjectionDashCooldownStart CooldownStart; // 0x1ed(0x01)
	char pad_1EE[0x2]; // 0x1ee(0x02)
};

// Class Tiger.TigerDisciplineProjectionDash
// Size: 0x170 (Inherited: 0xf0)
struct UTigerDisciplineProjectionDash : UTigerDisciplineAnimTriggered {
	struct FVector DashStartLocation; // 0xf0(0x0c)
	struct FVector DashEnterLocation; // 0xfc(0x0c)
	struct FVector DashExitLocation; // 0x108(0x0c)
	struct FVector DashEndLocation; // 0x114(0x0c)
	struct UTigerProjectionDashConfig* Config; // 0x120(0x08)
	struct ATigerProjectionDashProjectile* SpawnedProjection; // 0x128(0x08)
	char pad_130[0x18]; // 0x130(0x18)
	struct AActor* TargetIndicator; // 0x148(0x08)
	char pad_150[0x20]; // 0x150(0x20)

	void Server_StopProjection(float InLerpAlpha); // Function Tiger.TigerDisciplineProjectionDash.Server_StopProjection // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13da3c0
	void OnProjectionDestroyedOnClient(enum class ETigerProjectionDashEndReason InReason); // Function Tiger.TigerDisciplineProjectionDash.OnProjectionDestroyedOnClient // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnOwnerLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineProjectionDash.OnOwnerLifeStatusChanged // (Final|Native|Protected) // @ game+0x13da1d0
	void OnForcedMoveResult(enum class ETigerForcedMoveResult InForcedMoveResult); // Function Tiger.TigerDisciplineProjectionDash.OnForcedMoveResult // (Final|Native|Private) // @ game+0x13da150
	void OnDashStart(); // Function Tiger.TigerDisciplineProjectionDash.OnDashStart // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDashExit(); // Function Tiger.TigerDisciplineProjectionDash.OnDashExit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDashEnter(); // Function Tiger.TigerDisciplineProjectionDash.OnDashEnter // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDashEnd(); // Function Tiger.TigerDisciplineProjectionDash.OnDashEnd // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_DashStart(struct FVector InStartLocation, struct FVector InEnterLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashStart // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x13d9ff0
	void Multicast_DashExit(struct FVector InExitLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashExit // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x13d9f00
	void Multicast_DashEnter(); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashEnter // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13d9ee0
	void Multicast_DashEnd(struct FVector InStartLocation, struct FVector InEnterLocation, struct FVector InExitLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashEnd // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x13d9d50
	float GetCurrentProjectionMaxDistanceRatio(); // Function Tiger.TigerDisciplineProjectionDash.GetCurrentProjectionMaxDistanceRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d9bc0
	void Client_TimeoutProjection(); // Function Tiger.TigerDisciplineProjectionDash.Client_TimeoutProjection // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13d9ba0
	void Client_DespawnProjectionDueToRange(); // Function Tiger.TigerDisciplineProjectionDash.Client_DespawnProjectionDueToRange // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13d9b80
};

// Class Tiger.TigerRejuvenatingVoiceConfig
// Size: 0x1d0 (Inherited: 0x160)
struct UTigerRejuvenatingVoiceConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* DownedMontage; // 0x160(0x08)
	struct UAnimMontage* DownedCancelMontage; // 0x168(0x08)
	struct UAnimMontage* DownedInterruptMontage; // 0x170(0x08)
	struct UAnimMontage* NormalMontage; // 0x178(0x08)
	struct UAnimMontage* CancelMontage; // 0x180(0x08)
	struct UAnimMontage* InterruptMontage; // 0x188(0x08)
	struct UTigerBuff* HealingBuff; // 0x190(0x08)
	float ReceivedDamageThreshold; // 0x198(0x04)
	float ActiveTimeAfterStop; // 0x19c(0x04)
	float FailNormalMontageResetTime; // 0x1a0(0x04)
	float CasterHealRange; // 0x1a4(0x04)
	float ProjectionHealRange; // 0x1a8(0x04)
	float ProjectionHealMultiplier; // 0x1ac(0x04)
	float FirstHealMultiplier; // 0x1b0(0x04)
	float SelfHealFlat; // 0x1b4(0x04)
	float SelfHealPercent; // 0x1b8(0x04)
	float TeamHealFlat; // 0x1bc(0x04)
	float TeamHealPercent; // 0x1c0(0x04)
	float HealTickRate; // 0x1c4(0x04)
	bool bOnlyHealRecentDamage; // 0x1c8(0x01)
	bool bRecentDamageVisibleForGroup; // 0x1c9(0x01)
	bool bShouldGlideWhenActive; // 0x1ca(0x01)
	char pad_1CB[0x5]; // 0x1cb(0x05)
};

// Class Tiger.TigerDisciplineRejuvenatingVoice
// Size: 0xe0 (Inherited: 0x78)
struct UTigerDisciplineRejuvenatingVoice : UTigerDisciplineBase {
	struct UTigerRejuvenatingVoiceConfig* Config; // 0x78(0x08)
	char pad_80[0x5c]; // 0x80(0x5c)
	bool bIsChanneling; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)

	void PulseHeal(float InHealMultiplier, bool bInOnCaster, bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.PulseHeal // (Final|Native|Public|BlueprintCallable) // @ game+0x13defa0
	void OnSilencedChanged(bool bInIsSilenced); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnSilencedChanged // (Final|Native|Public) // @ game+0x13def10
	void OnPlayerExit(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerExit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPlayerEnter(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerEnter // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPlayerDamageTaken(struct AActor* InDamagedActor, float InDamage, struct UDamageType* InDamageType, struct AController* InInstigatedBy, struct AActor* InDamageCauser); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerDamageTaken // (Final|Native|Public) // @ game+0x13ded60
	void OnHealStop(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealStop // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnHealStart(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealStart // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnHealPulse(bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealPulse // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_PlayerExit(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_PlayerExit // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13dec20
	void Multicast_PlayerEnter(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_PlayerEnter // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13deb90
	void Multicast_InterruptChanneling(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_InterruptChanneling // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13deb70
	void Multicast_HealStop(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealStop // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13deb50
	void Multicast_HealStart(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealStart // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13deb30
	void Multicast_HealPulse(bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealPulse // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13deaa0
	void Multicast_BuffHealTick(struct ATigerPlayer* InBuffOwner, char InHealAmount); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_BuffHealTick // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13de9d0
	bool HasProjection(); // Function Tiger.TigerDisciplineRejuvenatingVoice.HasProjection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13de9a0
	struct FVector GetProjectionLocation(); // Function Tiger.TigerDisciplineRejuvenatingVoice.GetProjectionLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13de840
	struct AActor* GetProjectionActor(); // Function Tiger.TigerDisciplineRejuvenatingVoice.GetProjectionActor // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13de810
};

// Class Tiger.TigerRepositionConfig
// Size: 0x188 (Inherited: 0x160)
struct UTigerRepositionConfig : UTigerActiveDisciplineConfig {
	struct ATigerRepositionTracer* TracerActor; // 0x160(0x08)
	struct UTigerBuffReposition* RewindBuff; // 0x168(0x08)
	float RewindTimeSeconds; // 0x170(0x04)
	float SampleRate; // 0x174(0x04)
	float RewindSpeed; // 0x178(0x04)
	float RewindPlaybackTimeMin; // 0x17c(0x04)
	float RewindPlaybackTimeMax; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
};

// Class Tiger.TigerBuffRepositionInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffRepositionInstance : UTigerBuffInstance {
	struct UPrimitiveComponent* Root; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffReposition
// Size: 0x268 (Inherited: 0x260)
struct UTigerBuffReposition : UTigerBuffStun {
	float NoiseNotifyEventRange; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Tiger.TigerRepositionTracer
// Size: 0x228 (Inherited: 0x228)
struct ATigerRepositionTracer : AActor {

	void Trace(struct TArray<struct FVector>& PreviousLocations, float Duration); // Function Tiger.TigerRepositionTracer.Trace // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerDisciplineReposition
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplineReposition : UTigerDisciplineBase {
	struct UTigerRepositionConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerScoutsConfig
// Size: 0x1c0 (Inherited: 0x170)
struct UTigerScoutsConfig : UTigerDisciplineAnimTriggeredConfig {
	struct ATigerFamiliarScout* ScoutActor; // 0x170(0x08)
	struct UTigerFamiliarScoutPassive* PassiveClass; // 0x178(0x08)
	float RevealDuration; // 0x180(0x04)
	float PassiveScanRadius; // 0x184(0x04)
	float ActiveScanRadius; // 0x188(0x04)
	float ScoutDespawnDistance; // 0x18c(0x04)
	float ScoutLifetime; // 0x190(0x04)
	float Reach; // 0x194(0x04)
	float ScoutingMaxDistanceFromOwner; // 0x198(0x04)
	float TargetLocationNormalOffset; // 0x19c(0x04)
	struct UAnimMontage* AirMontage; // 0x1a0(0x08)
	struct UAkAudioEvent* RevealedCharacterAudioEvent; // 0x1a8(0x08)
	struct FName BoneToSpawnFrom; // 0x1b0(0x08)
	bool bShouldAlwaysStartFromPlayer; // 0x1b8(0x01)
	char pad_1B9[0x7]; // 0x1b9(0x07)
};

// Class Tiger.TigerDisciplineScouts
// Size: 0x118 (Inherited: 0xf0)
struct UTigerDisciplineScouts : UTigerDisciplineAnimTriggered {
	struct UTigerFamiliarScoutPassive* Server_PassiveComponent; // 0xf0(0x08)
	struct ATigerFamiliarScout* Server_SpawnedFamiliar; // 0xf8(0x08)
	struct UTigerScoutsConfig* Config; // 0x100(0x08)
	char pad_108[0x10]; // 0x108(0x10)

	void Multicast_ScoutSpawnedResult(bool bInAreScoutsOut); // Function Tiger.TigerDisciplineScouts.Multicast_ScoutSpawnedResult // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13decb0
};

// Class Tiger.TigerShacklesConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerShacklesConfig : UTigerActiveDisciplineConfig {
	struct UMaterialInterface* ShacklesAimingDecal; // 0x160(0x08)
	float MaxRange; // 0x168(0x04)
	float ShacklesAoeSize; // 0x16c(0x04)
	float ExplosionDepth; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct TArray<float> ExplosionDamage; // 0x178(0x10)
	struct ATigerShacklesMine* ShackleMine; // 0x188(0x08)
	float MineLifeTime; // 0x190(0x04)
	float DelayBeforeShackleActivation; // 0x194(0x04)
	struct FName CastAnimationName; // 0x198(0x08)
};

// Class Tiger.TigerDisciplineShackles
// Size: 0x90 (Inherited: 0x78)
struct UTigerDisciplineShackles : UTigerDisciplineBase {
	char pad_78[0x8]; // 0x78(0x08)
	struct UTigerShacklesConfig* Config; // 0x80(0x08)
	struct ADecalActor* ClientAimDecal; // 0x88(0x08)
};

// Class Tiger.TigerShockwavePunchConfig
// Size: 0x1f0 (Inherited: 0x170)
struct UTigerShockwavePunchConfig : UTigerDisciplineAnimTriggeredConfig {
	struct TArray<struct UAnimMontage*> PunchMontages; // 0x170(0x10)
	struct TArray<struct ATigerShockwaveWall*> ShockwaveActorToSpawn; // 0x180(0x10)
	struct FTigerShockwaveWallData ShockwaveWallData; // 0x190(0x60)
};

// Class Tiger.TigerDisciplineShockwavePunch
// Size: 0x120 (Inherited: 0xf0)
struct UTigerDisciplineShockwavePunch : UTigerDisciplineAnimTriggered {
	char pad_F0[0x20]; // 0xf0(0x20)
	struct UTigerShockwavePunchConfig* DisciplineConfig; // 0x110(0x08)
	struct UAnimMontage* PickedMontage; // 0x118(0x08)
};

// Class Tiger.TigerStunConfig
// Size: 0x168 (Inherited: 0x160)
struct UTigerStunConfig : UTigerActiveDisciplineConfig {
	float StunTime; // 0x160(0x04)
	float StunRadius; // 0x164(0x04)
};

// Class Tiger.TigerDisciplineStun
// Size: 0x80 (Inherited: 0x78)
struct UTigerDisciplineStun : UTigerDisciplineBase {
	struct UTigerStunConfig* Config; // 0x78(0x08)
};

// Class Tiger.TigerDisciplinesUi
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerDisciplinesUi : UTigerWidget {
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x280(0x08)
	struct UTigerFeedingComponent* FeedingComponent; // 0x288(0x08)
	struct UTigerDisciplineBase* DisciplineForSlot[0x3]; // 0x290(0x18)
	enum class ETigerDisciplinesEnum DisciplineTypeForSlot[0x3]; // 0x2a8(0x03)
	char pad_2AB[0x15]; // 0x2ab(0x15)

	void UpdateSlots(struct UTigerDisciplineIcon* InSlotOneDisciplineIcon, struct UTigerDisciplineIcon* InSlotTwoDisciplineIcon, struct UUserWidget* InSlotOneChargesWidget, struct UUserWidget* InSlotTwoChargesWidget, bool InHasPassiveFinalAct, float InDeltaTime, float InAlhpaLerpSpeed); // Function Tiger.TigerDisciplinesUi.UpdateSlots // (Final|Native|Protected|BlueprintCallable) // @ game+0x13df150
	void OnUpdatePassiveUI(); // Function Tiger.TigerDisciplinesUi.OnUpdatePassiveUI // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnSetNumberOfCharges(enum class ETigerDisciplineSlot DisciplineSlot); // Function Tiger.TigerDisciplinesUi.OnSetNumberOfCharges // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnInitializeDisciplineUi(); // Function Tiger.TigerDisciplinesUi.OnInitializeDisciplineUi // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDisciplineInterrupted(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplinesUi.OnDisciplineInterrupted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool HasChargesIfApplicable(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.HasChargesIfApplicable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13de910
	struct UTigerDisciplineBase* GetSkill(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.GetSkill // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13de880
	enum class ETigerDisciplinesEnum GetDisciplineTypeForSlot(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.GetDisciplineTypeForSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x13de780
	int32_t GetChargesForSlot(enum class ETigerDisciplineSlot DisciplineSlot); // Function Tiger.TigerDisciplinesUi.GetChargesForSlot // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13de6f0
	void GetActiveTimeLeftForDiscipline(enum class ETigerDisciplinesEnum InDisciplineType, bool& OutIsActive, float& OutTimeLeft); // Function Tiger.TigerDisciplinesUi.GetActiveTimeLeftForDiscipline // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x13de5c0
};

// Class Tiger.TigerSwiftStrikeConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerSwiftStrikeConfig : UTigerActiveDisciplineConfig {
	float DashDistance; // 0x160(0x04)
	float StartupTime; // 0x164(0x04)
	float DashTime; // 0x168(0x04)
	float DashDamage; // 0x16c(0x04)
	struct FVector2D DashHitBoxSize; // 0x170(0x08)
	float StrikeDelay; // 0x178(0x04)
	float StrikeDuration; // 0x17c(0x04)
	float StrikeDamage; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UTigerBuff* StrikeDebuff; // 0x188(0x08)
	struct FVector StrikeHitBoxSize; // 0x190(0x0c)
	bool DrawDebugInfo; // 0x19c(0x01)
	char pad_19D[0x3]; // 0x19d(0x03)

	void OnTargetsHitByStrike(struct TArray<struct ATigerCharacter*>& Targets); // Function Tiger.TigerSwiftStrikeConfig.OnTargetsHitByStrike // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnTargetsHitByDash(struct TArray<struct ATigerCharacter*>& Targets); // Function Tiger.TigerSwiftStrikeConfig.OnTargetsHitByDash // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnStrike(struct ATigerCharacter* Character); // Function Tiger.TigerSwiftStrikeConfig.OnStrike // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStartup(struct ATigerCharacter* Character); // Function Tiger.TigerSwiftStrikeConfig.OnStartup // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnDash(struct ATigerCharacter* Character, struct FVector& Location, struct FVector& Direction); // Function Tiger.TigerSwiftStrikeConfig.OnDash // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerDisciplineSwiftStrike
// Size: 0xa8 (Inherited: 0x78)
struct UTigerDisciplineSwiftStrike : UTigerDisciplineBase {
	struct UTigerSwiftStrikeConfig* Config; // 0x78(0x08)
	char pad_80[0x28]; // 0x80(0x28)
};

// Class Tiger.TigerTeleportConfig
// Size: 0x168 (Inherited: 0x160)
struct UTigerTeleportConfig : UTigerActiveDisciplineConfig {
	float TeleportDistance; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
};

// Class Tiger.TigerDisciplineTeleport
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplineTeleport : UTigerDisciplineBase {
	struct UTigerTeleportConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerTrapsConfig
// Size: 0x308 (Inherited: 0x170)
struct UTigerTrapsConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAkAudioEvent* ThrowAudioEvent; // 0x170(0x08)
	struct UAkAudioEvent* LandAudioEvent; // 0x178(0x08)
	struct UAkAudioEvent* ArmingAudioEvent; // 0x180(0x08)
	struct UAkAudioEvent* ExplosionAudioEvent; // 0x188(0x08)
	struct UAkAudioEvent* FizzleAudioEvent; // 0x190(0x08)
	struct UAkAudioEvent* StartGasAudioEvent; // 0x198(0x08)
	struct UAkAudioEvent* StopGasAudioEvent; // 0x1a0(0x08)
	struct UCurveFloat* PitchCurve; // 0x1a8(0x08)
	struct UCurveFloat* EmissiveCurve; // 0x1b0(0x08)
	float EmissiveCurveLoopTime; // 0x1b8(0x04)
	struct FLinearColor AllyStatusColor; // 0x1bc(0x10)
	struct FLinearColor EnemyStatusColor; // 0x1cc(0x10)
	float MaxEmissiveBoost; // 0x1dc(0x04)
	struct UMaterialInterface* DecalMaterial; // 0x1e0(0x08)
	struct UAnimMontage* AimMontage; // 0x1e8(0x08)
	struct FName AimTrapSpawnSocket; // 0x1f0(0x08)
	float FailAimMontageResetTime; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct AActor* AimTrapType; // 0x200(0x08)
	struct ATigerTrap* TrapType; // 0x208(0x08)
	struct TArray<struct UTigerBuff*> GasBuff; // 0x210(0x10)
	struct TArray<int32_t> MaxTrapsActive; // 0x220(0x10)
	struct FVector SpawnOffset; // 0x230(0x0c)
	float TerminalVelocity; // 0x23c(0x04)
	float GravitationalPull; // 0x240(0x04)
	float AirFriction; // 0x244(0x04)
	float ThrowForce; // 0x248(0x04)
	float ThrowMaxForce; // 0x24c(0x04)
	float ThrowPlayerVelocityForceScale; // 0x250(0x04)
	float ThrowPitchOffset; // 0x254(0x04)
	float ThrowMinPitch; // 0x258(0x04)
	float ThrowMaxPitch; // 0x25c(0x04)
	float LifeTime; // 0x260(0x04)
	float TriggerDelay; // 0x264(0x04)
	float ReleaseDelay; // 0x268(0x04)
	float DecalFadeDuration; // 0x26c(0x04)
	float ArmingDuration; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct TArray<float> GasDuration; // 0x278(0x10)
	struct TArray<float> TriggerRadius; // 0x288(0x10)
	struct TArray<float> ExplosionRadius; // 0x298(0x10)
	struct TArray<float> GasRadius; // 0x2a8(0x10)
	float DecalTriggerRadiusScale; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct TArray<float> AreaEffectScale; // 0x2c0(0x10)
	struct TArray<float> ExplosionEffectScale; // 0x2d0(0x10)
	struct TArray<float> GasEffectScale; // 0x2e0(0x10)
	struct TArray<float> ExplosionDamage; // 0x2f0(0x10)
	bool bHostileNpcTriggersTrap; // 0x300(0x01)
	bool bAllyAreaVisible; // 0x301(0x01)
	bool bAllyImmunityExplosion; // 0x302(0x01)
	bool bAllyImmunityGas; // 0x303(0x01)
	bool bClearGasBuffOnExit; // 0x304(0x01)
	bool bDrawDebugSpheres; // 0x305(0x01)
	char pad_306[0x2]; // 0x306(0x02)
};

// Class Tiger.TigerDisciplineTraps
// Size: 0x128 (Inherited: 0xf0)
struct UTigerDisciplineTraps : UTigerDisciplineAnimTriggered {
	struct UTigerTrapsConfig* Config; // 0xf0(0x08)
	struct AActor* AimTrapActor; // 0xf8(0x08)
	struct TArray<struct ATigerTrap*> CurrentTraps; // 0x100(0x10)
	struct TArray<int32_t> FreeTrapIndices; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	void RemoveActiveTrap(struct ATigerTrap* InTrap); // Function Tiger.TigerDisciplineTraps.RemoveActiveTrap // (Final|Native|Public) // @ game+0x13df0c0
	void Multicast_StopDiscipline(); // Function Tiger.TigerDisciplineTraps.Multicast_StopDiscipline // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13ded40
};

// Class Tiger.TigerVanishConfig
// Size: 0x1a8 (Inherited: 0x160)
struct UTigerVanishConfig : UTigerActiveDisciplineConfig {
	struct TArray<struct UTigerBuff*> VanishBuff; // 0x160(0x10)
	float AttackDelayAfterBuff; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct FText MovementSpeedText; // 0x178(0x18)
	struct FText MovementSpeedSuffix; // 0x190(0x18)
};

// Class Tiger.TigerDisciplineVanish
// Size: 0x90 (Inherited: 0x78)
struct UTigerDisciplineVanish : UTigerDisciplineBase {
	struct UTigerVanishConfig* Config; // 0x78(0x08)
	char pad_80[0x10]; // 0x80(0x10)

	void OnBuffRemoved(struct UTigerBuff* InBuffType, int32_t InID, float InDuration); // Function Tiger.TigerDisciplineVanish.OnBuffRemoved // (Final|Native|Private) // @ game+0x13e3720
};

// Class Tiger.TigerVentrueClanConfig
// Size: 0x188 (Inherited: 0x160)
struct UTigerVentrueClanConfig : UTigerActiveDisciplineConfig {
	struct UTigerBuff* BuffType; // 0x160(0x08)
	struct UAnimMontage* Montage; // 0x168(0x08)
	float TriggerTime; // 0x170(0x04)
	float ActiveTimeAfterTrigger; // 0x174(0x04)
	float CooldownReductionPerDamageMitigated; // 0x178(0x04)
	float CooldownReductionSecondsPerDamageMitigated; // 0x17c(0x04)
	bool bIncludeArchetypeDisciplineMitigation; // 0x180(0x01)
	char pad_181[0x7]; // 0x181(0x07)
};

// Class Tiger.TigerDisciplineVentrueClan
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineVentrueClan : UTigerDisciplineBase {
	char pad_78[0x20]; // 0x78(0x20)

	void OnDamageMitigatedCosmetic(); // Function Tiger.TigerDisciplineVentrueClan.OnDamageMitigatedCosmetic // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDamageMitigated(float InTotalDamage, float InDamageMitigated); // Function Tiger.TigerDisciplineVentrueClan.OnDamageMitigated // (Final|Native|Private) // @ game+0x13e3840
	void Multicast_OnDamageMitigatedCosmetic(); // Function Tiger.TigerDisciplineVentrueClan.Multicast_OnDamageMitigatedCosmetic // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13deb70
};

// Class Tiger.TigerVentrueOneConfig
// Size: 0x1c8 (Inherited: 0x160)
struct UTigerVentrueOneConfig : UTigerActiveDisciplineConfig {
	struct UTigerBuff* DashStartBuffType; // 0x160(0x08)
	struct UTigerBuff* DashEndBuffType; // 0x168(0x08)
	struct UTigerBuff* DebuffType; // 0x170(0x08)
	struct UAnimMontage* OnHitStopMontage; // 0x178(0x08)
	struct UAnimMontage* Montage; // 0x180(0x08)
	float DashDistance; // 0x188(0x04)
	float DashDuration; // 0x18c(0x04)
	float DashExitVelocity; // 0x190(0x04)
	float DashMaxUpAngle; // 0x194(0x04)
	float DashMaxDownAngle; // 0x198(0x04)
	float ActiveTimeAfterDash; // 0x19c(0x04)
	struct FVector DashHitboxExtents; // 0x1a0(0x0c)
	float DashEndHitRadius; // 0x1ac(0x04)
	float SurfaceStopThreshold; // 0x1b0(0x04)
	float HitDamage; // 0x1b4(0x04)
	float KnockbackPitch; // 0x1b8(0x04)
	float KnockbackForce; // 0x1bc(0x04)
	bool bDepleteShield; // 0x1c0(0x01)
	bool bDashEndBuffRequiresHit; // 0x1c1(0x01)
	bool bShouldStopDashOnHit; // 0x1c2(0x01)
	bool bShouldStopMontageWhenDashStops; // 0x1c3(0x01)
	bool bShouldPlayOnHitMontageOnTerrainHit; // 0x1c4(0x01)
	char pad_1C5[0x3]; // 0x1c5(0x03)
};

// Class Tiger.TigerDisciplineVentrueOne
// Size: 0xc8 (Inherited: 0x78)
struct UTigerDisciplineVentrueOne : UTigerDisciplineBase {
	struct TArray<struct AActor*> PreviouslyHitCharacters; // 0x78(0x10)
	struct FVector TargetLocation; // 0x88(0x0c)
	char pad_94[0x4]; // 0x94(0x04)
	struct UTigerVentrueOneConfig* Config; // 0x98(0x08)
	char pad_A0[0x28]; // 0xa0(0x28)

	void OnTerrainHit(struct UPrimitiveComponent* InHitComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, struct FVector InNormalImpulse, struct FHitResult& InHit); // Function Tiger.TigerDisciplineVentrueOne.OnTerrainHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x13e39f0
	void OnHitTerrain(struct FHitResult& InHitResult); // Function Tiger.TigerDisciplineVentrueOne.OnHitTerrain // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnHitCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerDisciplineVentrueOne.OnHitCharacter // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDashStart(); // Function Tiger.TigerDisciplineVentrueOne.OnDashStart // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDashEnd(); // Function Tiger.TigerDisciplineVentrueOne.OnDashEnd // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_PlayOnHitStopMontage(); // Function Tiger.TigerDisciplineVentrueOne.Multicast_PlayOnHitStopMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13deb70
};

// Class Tiger.TigerDistrictComponent
// Size: 0x118 (Inherited: 0xb0)
struct UTigerDistrictComponent : UActorComponent {
	struct FMulticastInlineDelegate OnInsideHolyIncenseChanged; // 0xb0(0x10)
	bool bIsInsideHolyIncense; // 0xc0(0x01)
	bool bIsOutOfBounds; // 0xc1(0x01)
	char pad_C2[0x2]; // 0xc2(0x02)
	float DistanceToHolyIncense; // 0xc4(0x04)
	struct FVector2D ClosestGasLocation; // 0xc8(0x08)
	struct FVector2D ClosestGasNormal; // 0xd0(0x08)
	float OutOfBoundsDamagePerTick; // 0xd8(0x04)
	float OutOfBoundsDamageTickInterval; // 0xdc(0x04)
	char pad_E0[0x8]; // 0xe0(0x08)
	struct UCurveFloat* EffectStrengthScaling; // 0xe8(0x08)
	bool bDebugEffectStrength; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct ATigerCharacter* TigerCharacter; // 0xf8(0x08)
	struct ATigerLevelScriptActor* TigerLevelScriptActor; // 0x100(0x08)
	struct FTimerHandle DamageTimerHandle; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void TigerOnInsideHolyIncenseChanged__DelegateSignature(bool bIsInsideHolyIncense); // DelegateFunction Tiger.TigerDistrictComponent.TigerOnInsideHolyIncenseChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool ShouldTakeDamage(); // Function Tiger.TigerDistrictComponent.ShouldTakeDamage // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3e00
	void Server_RequestServerVerticesForDebugging(float InDuration); // Function Tiger.TigerDistrictComponent.Server_RequestServerVerticesForDebugging // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13e3d70
	void Server_EnableHolyIncenseProgressDebugging(bool bInEnable); // Function Tiger.TigerDistrictComponent.Server_EnableHolyIncenseProgressDebugging // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13e3ce0
	void OnWaveStopped(); // Function Tiger.TigerDistrictComponent.OnWaveStopped // (Final|Native|Private) // @ game+0x13e3bd0
	float GetEffectStrength(); // Function Tiger.TigerDistrictComponent.GetEffectStrength // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3510
	void Client_SendHolyIncenseServerProgressData(float InProgress, float InAssaultTime, float InTimeUntilWaveEnds, int32_t InWaveVerticesCount, bool bIsInside); // Function Tiger.TigerDistrictComponent.Client_SendHolyIncenseServerProgressData // (Final|Net|Native|Event|Private|NetClient) // @ game+0x13e3270
	void Client_SendHolyIncenceVerticesForDebugging(struct TArray<struct FVector2D> InServerVertices, float InDuration); // Function Tiger.TigerDistrictComponent.Client_SendHolyIncenceVerticesForDebugging // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13e3180
};

// Class Tiger.TigerDistrictData
// Size: 0x60 (Inherited: 0x30)
struct UTigerDistrictData : UDataAsset {
	struct UTexture2D* MapTexture; // 0x30(0x08)
	struct FDistrictDataAnchor FirstAnchor; // 0x38(0x10)
	struct FDistrictDataAnchor SecondAnchor; // 0x48(0x10)
	bool bSpawnHighPotenceBlood; // 0x58(0x01)
	bool bSpawnSuperHighPotenceBlood; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// Class Tiger.TigerDodgeBuff
// Size: 0x268 (Inherited: 0x260)
struct UTigerDodgeBuff : UTigerBuff {
	struct UCurveFloat* MaxSpeedCurve; // 0x260(0x08)
};

// Class Tiger.TigerDodgeBuffInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerDodgeBuffInstance : UTigerBuffInstance {
	struct UTigerDodgeBuff* BuffClassDefaultObject; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerDoor
// Size: 0x288 (Inherited: 0x280)
struct ATigerDoor : ATigerInteractiveObject {
	struct ATigerPlayer* InteractingPlayer; // 0x280(0x08)

	bool IsOpen(); // Function Tiger.TigerDoor.IsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3640
};

// Class Tiger.TigerDownedEnemyPromptUi
// Size: 0x378 (Inherited: 0x2a8)
struct UTigerDownedEnemyPromptUi : UTigerSimpleTextPrompt {
	struct FTigerPlayerStateGameData PlayerStateData; // 0x2a8(0xd0)
};

// Class Tiger.TigerDsBackendAgent
// Size: 0x50 (Inherited: 0x28)
struct UTigerDsBackendAgent : UObject {
	struct FString DsAgentType; // 0x28(0x10)
	float HeartbeatIntervalSeconds; // 0x38(0x04)
	char pad_3C[0x14]; // 0x3c(0x14)
};

// Class Tiger.TigerDsPresenceSubsystem
// Size: 0x38 (Inherited: 0x30)
struct UTigerDsPresenceSubsystem : UGameInstanceSubsystem {
	struct UTigerPresenceService* PresenceService; // 0x30(0x08)
};

// Class Tiger.TigerDsReliableTimeSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerDsReliableTimeSubSystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)

	bool IsReliableDateTimeSet(); // Function Tiger.TigerDsReliableTimeSubSystem.IsReliableDateTimeSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x94aa40
	struct FDateTime GetCurrentDateTimeUtc(struct UObject* InWorldContextObject); // Function Tiger.TigerDsReliableTimeSubSystem.GetCurrentDateTimeUtc // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13e3480
};

// Class Tiger.TigerDynamicObject
// Size: 0x258 (Inherited: 0x228)
struct ATigerDynamicObject : AActor {
	struct FComponentReference MeshComponentRef; // 0x228(0x28)
	float PlayerImpactMultiplier; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
};

// Class Tiger.TigerEditorGameSettings
// Size: 0xe8 (Inherited: 0x38)
struct UTigerEditorGameSettings : USharkLocalDeveloperSettings {
	bool bMatchWaitsForMultipleGroupsInEditor; // 0x38(0x01)
	bool bMatchWaitsForReadyStatesInEditor; // 0x39(0x01)
	bool bEnableSpawnCountdownInEditor; // 0x3a(0x01)
	bool bForceRespawnPlayerOnDeath; // 0x3b(0x01)
	bool bEnableNpcSpawningInEditor; // 0x3c(0x01)
	bool bUseLocalVendorCategories; // 0x3d(0x01)
	char pad_3E[0x2]; // 0x3e(0x02)
	struct TSoftObjectPtr<UTigerSeasonConfigAsset> SeasonConfigOverride; // 0x40(0x28)
	bool bShowGeneratedMeshActorsInOutliner; // 0x68(0x01)
	bool bSimulateParticlesInEditor; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	struct TSoftClassPtr<UObject> PreviewerClass; // 0x70(0x28)
	struct FColor IndoorVolumeColor; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct TSoftObjectPtr<UTigerEventConfigAsset> EventConfigOverrideAsset; // 0xa0(0x28)
	struct FString EventConfigOverridePath; // 0xc8(0x10)
	struct FString GAMEMODEID; // 0xd8(0x10)
};

// Class Tiger.TigerEliminationPromptUi
// Size: 0x378 (Inherited: 0x2a8)
struct UTigerEliminationPromptUi : UTigerSimpleTextPrompt {
	struct FTigerPlayerStateGameData PlayerStateData; // 0x2a8(0xd0)
};

// Class Tiger.TigerGameMode
// Size: 0x808 (Inherited: 0x2c8)
struct ATigerGameMode : AGameModeBase {
	char pad_2C8[0x10]; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnRestartPlayer; // 0x2d8(0x10)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x2e8(0x08)
	struct UTigerSoloCoordinator* SoloCoordinator; // 0x2f0(0x08)
	struct UTigerMasqueradeCoordinator* MasqueradeCoordinator; // 0x2f8(0x08)
	char pad_300[0x70]; // 0x300(0x70)
	struct TSoftClassPtr<UObject> SpawnMechanicClass; // 0x370(0x28)
	struct UTigerAICoordinator* AICoordinator; // 0x398(0x08)
	struct UTigerNPCSpawningCoordinator* NPCSpawner; // 0x3a0(0x08)
	enum class ESessionType SessionTraveledFrom; // 0x3a8(0x01)
	enum class ETigerGameType GameType; // 0x3a9(0x01)
	char pad_3AA[0x362]; // 0x3aa(0x362)
	enum class ETigerMatchMode MatchMode; // 0x70c(0x01)
	char pad_70D[0x23]; // 0x70d(0x23)
	struct UTigerSpawnMechanic* SpawnMechanic; // 0x730(0x08)
	struct UTigerSessionService* TigerSessionService; // 0x738(0x08)
	char pad_740[0x50]; // 0x740(0x50)
	struct ATigerItemCluster* ItemClusterClass; // 0x790(0x08)
	char pad_798[0x4]; // 0x798(0x04)
	float LootSpawnFrameBudget; // 0x79c(0x04)
	float ServerLoadScalabilityUpdateFrequency; // 0x7a0(0x04)
	float ServerLoadScalability30HzTarget; // 0x7a4(0x04)
	float ServerLoadScalability20HzTarget; // 0x7a8(0x04)
	bool ServerLoadScalabilityEnabled; // 0x7ac(0x01)
	char pad_7AD[0x1b]; // 0x7ad(0x1b)
	struct UTigerPlayerServerLoginProcess* PlayerServerLoginProcess; // 0x7c8(0x08)
	struct TArray<struct ATigerLootSpawner*> PendingLootSpawners; // 0x7d0(0x10)
	char pad_7E0[0x18]; // 0x7e0(0x18)
	float NetworkProfileOnPlayerConnectionDuration; // 0x7f8(0x04)
	char pad_7FC[0xc]; // 0x7fc(0x0c)

	bool TryRestartPlayerIfNeeded(struct ATigerPlayerController* Player); // Function Tiger.TigerGameMode.TryRestartPlayerIfNeeded // (Final|Native|Public|BlueprintCallable) // @ game+0x13fd330
	void TigerEnableServerScalability(bool InEnabled); // Function Tiger.TigerGameMode.TigerEnableServerScalability // (Final|Exec|Native|Public) // @ game+0x139d430
	void ShutdownServer(); // Function Tiger.TigerGameMode.ShutdownServer // (Final|Native|Public|BlueprintCallable) // @ game+0x13fd0c0
	void SetPlayerIsReadyToPlay(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerGameMode.SetPlayerIsReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x13fd030
	void SendChatMessageToGroupMembers(struct UTigerChatComponent* InMessageSender, struct FText& InMessageText); // Function Tiger.TigerGameMode.SendChatMessageToGroupMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13fce50
	void SendChatMessageToAllClients(struct UTigerChatComponent* InMessageSender, struct FText& InMessageText); // Function Tiger.TigerGameMode.SendChatMessageToAllClients // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13fcd40
	void OnRestartPlayer__DelegateSignature(struct AController* NewPlayer); // DelegateFunction Tiger.TigerGameMode.OnRestartPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnNpcDeathEvent__DelegateSignature(struct ATigerNPC* NPC, struct AController* InstigatorController); // DelegateFunction Tiger.TigerGameMode.OnNpcDeathEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	enum class ETigerMatchMode GetMatchMode(); // Function Tiger.TigerGameMode.GetMatchMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fc6d0
	struct UTigerAICoordinator* GetAICoordinator(); // Function Tiger.TigerGameMode.GetAICoordinator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fc3b0
	void CreateClientSpawners(struct AController* InNewPlayer); // Function Tiger.TigerGameMode.CreateClientSpawners // (Final|Native|Private) // @ game+0x13fc320
};

// Class Tiger.TigerElysiumGameMode
// Size: 0x828 (Inherited: 0x808)
struct ATigerElysiumGameMode : ATigerGameMode {
	char pad_808[0x20]; // 0x808(0x20)

	void OnShowAdminMessages(); // Function Tiger.TigerElysiumGameMode.OnShowAdminMessages // (Final|Native|Private) // @ game+0x13e39d0
	void OnReloadAdminMessages(); // Function Tiger.TigerElysiumGameMode.OnReloadAdminMessages // (Final|Native|Private) // @ game+0x13e3930
};

// Class Tiger.TigerGameSession
// Size: 0x298 (Inherited: 0x240)
struct ATigerGameSession : AGameSession {
	char pad_240[0x58]; // 0x240(0x58)
};

// Class Tiger.TigerElysiumGameSession
// Size: 0x298 (Inherited: 0x298)
struct ATigerElysiumGameSession : ATigerGameSession {
};

// Class Tiger.TigerElysiumGameState
// Size: 0x4e0 (Inherited: 0x380)
struct ATigerElysiumGameState : ATigerGameState {
	char pad_380[0x60]; // 0x380(0x60)
	struct FTigerMetaStoreEntriesKeeper FlashStoreStoreEntries; // 0x3e0(0x40)
	char pad_420[0x10]; // 0x420(0x10)
	struct FTigerMetaStoreEntriesKeeper BattlepassStoreEntries; // 0x430(0x40)
	struct FTigerMetaStoreEntriesKeeper RankSkipStoreEntries; // 0x470(0x40)
	bool PartyMaintenanceMode; // 0x4b0(0x01)
	char pad_4B1[0x2f]; // 0x4b1(0x2f)

	void OnRep_RankSkipEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_RankSkipEntriesChanged // (Final|Native|Private) // @ game+0x13e39b0
	void OnRep_PartyMaintenanceModeChanged(); // Function Tiger.TigerElysiumGameState.OnRep_PartyMaintenanceModeChanged // (Final|Native|Private) // @ game+0x13e3990
	void OnRep_FlashStoreEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_FlashStoreEntriesChanged // (Final|Native|Private) // @ game+0x13e3970
	void OnRep_BattlepassEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_BattlepassEntriesChanged // (Final|Native|Private) // @ game+0x13e3950
};

// Class Tiger.TigerHUD
// Size: 0x420 (Inherited: 0x318)
struct ATigerHUD : AHUD {
	struct FMulticastInlineDelegate OnInGameMenuToggled; // 0x318(0x10)
	struct FMulticastInlineDelegate OnMenuOpened; // 0x328(0x10)
	struct FMulticastInlineDelegate OnMenuClosed; // 0x338(0x10)
	struct UTigerIngameMenuWidget* IngameMenuUI; // 0x348(0x08)
	struct UTigerGroupUIWidget* GroupStatus; // 0x350(0x08)
	struct UTigerEmoteWheelWidget* EmoteWheel; // 0x358(0x08)
	struct UTigerNotificationsUI* NotificationsUI; // 0x360(0x08)
	struct UTigerContextualHelpUI* ContextualHelpUI; // 0x368(0x08)
	struct UTigerWidget* PerformanceIndicatorUi; // 0x370(0x08)
	char pad_378[0x18]; // 0x378(0x18)
	struct ATigerPlayerController* TigerPlayerController; // 0x390(0x08)
	struct UTigerCrosshairWidget* Crosshair; // 0x398(0x08)
	struct TArray<struct FAutoInitializedWidget> AutoInitializedWidgets; // 0x3a0(0x10)
	char pad_3B0[0x10]; // 0x3b0(0x10)
	struct TArray<struct UTigerMenuWidget*> CurrentlyOpenMenus; // 0x3c0(0x10)
	char pad_3D0[0x10]; // 0x3d0(0x10)
	struct TArray<struct UUserWidget*> HiddenWidgets; // 0x3e0(0x10)
	struct TArray<struct TWeakObjectPtr<struct UWidgetComponent>> HiddenWidgetComponents; // 0x3f0(0x10)
	char pad_400[0x20]; // 0x400(0x20)

	void ShowOnScreenUI(); // Function Tiger.TigerHUD.ShowOnScreenUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14115e0
	void RemoveOnScreenWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.RemoveOnScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1411550
	void OpenMenuWidget(struct UTigerMenuWidget* InMenuWidget, int32_t InZOrder); // Function Tiger.TigerHUD.OpenMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1411340
	void OnStreamerOptionChanged(); // Function Tiger.TigerHUD.OnStreamerOptionChanged // (Final|Native|Private) // @ game+0x1411320
	void OnPawnPossessed(); // Function Tiger.TigerHUD.OnPawnPossessed // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnMenuWidgetOpened__DelegateSignature(struct UTigerMenuWidget* InMenuWidget); // DelegateFunction Tiger.TigerHUD.OnMenuWidgetOpened__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnInGameMenuToggled__DelegateSignature(bool bIsOpen); // DelegateFunction Tiger.TigerHUD.OnInGameMenuToggled__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool IsAnyMenuWidgetOpen(); // Function Tiger.TigerHUD.IsAnyMenuWidgetOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1410b20
	void HideOnScreenUI(); // Function Tiger.TigerHUD.HideOnScreenUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1410b00
	int32_t GetDefaultZOrderForAutoInitializedWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.GetDefaultZOrderForAutoInitializedWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1410a10
	void CloseMenuWidget(struct UTigerMenuWidget* InMenuWidget); // Function Tiger.TigerHUD.CloseMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1410820
	void CloseIngameMenu(); // Function Tiger.TigerHUD.CloseIngameMenu // (Native|Public|BlueprintCallable) // @ game+0x1410800
	void AddOnScreenWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.AddOnScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1410360
};

// Class Tiger.TigerElysiumHUD
// Size: 0x5f0 (Inherited: 0x420)
struct ATigerElysiumHUD : ATigerHUD {
	struct UTigerDialogueInteractionScreen* DialogueInteractionWidget; // 0x420(0x08)
	struct TSoftClassPtr<UObject> SoftPromotionalUiClass; // 0x428(0x28)
	struct UTigerPromotionalUI* PromotionalUi; // 0x450(0x08)
	struct TSoftClassPtr<UObject> SoftRewardsPopupClass; // 0x458(0x28)
	struct UTigerRewardsPopup* RewardsPopup; // 0x480(0x08)
	struct UTigerDialogueInteractionScreen* CurrentVendorUI; // 0x488(0x08)
	struct TSoftClassPtr<UObject> DialogueInteractionCameraPreset; // 0x490(0x28)
	struct UTigerWidget* ElysiumPlayerInfoUI; // 0x4b8(0x08)
	struct UTigerWidget* InGameQueueIndicatorUI; // 0x4c0(0x08)
	struct UTigerWidget* Watermark; // 0x4c8(0x08)
	struct UTigerWidget* ProgressHUD; // 0x4d0(0x08)
	struct UTigerInputMenuUI* SettingsMenuUi; // 0x4d8(0x08)
	struct UTigerMenuWidget* GameModeSelectionUI; // 0x4e0(0x08)
	struct UTigerWidget* OnboardingUi; // 0x4e8(0x08)
	struct TSoftClassPtr<UObject> SoftOnboardingUiClass; // 0x4f0(0x28)
	struct TArray<struct FAutoInitializedWidget> OpenMenuHiddenWidgets; // 0x518(0x10)
	struct TArray<struct UTigerWidget*> OpenMenuWidgetIgnoreList; // 0x528(0x10)
	struct TArray<struct TWeakObjectPtr<struct UTigerWidget>> HiddenTigerWidgets; // 0x538(0x10)
	int32_t VendorUIZOrder; // 0x548(0x04)
	char pad_54C[0x4]; // 0x54c(0x04)
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x550(0x10)
	char pad_560[0x8]; // 0x560(0x08)
	struct FMulticastInlineDelegate OnLastPreGamePopupClosed; // 0x568(0x10)
	char pad_578[0x28]; // 0x578(0x28)
	struct TMap<struct FString, int32_t> TimeSpentPerMenu; // 0x5a0(0x50)

	void ToggleVanityInventory(); // Function Tiger.TigerElysiumHUD.ToggleVanityInventory // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e3fe0
	void ToggleElysiumGameMenuSubmenu(struct UTigerIngameSubmenuWidget* InSubwidgetClass); // Function Tiger.TigerElysiumHUD.ToggleElysiumGameMenuSubmenu // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3f50
	void ToggleElysiumGameMenu(); // Function Tiger.TigerElysiumHUD.ToggleElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3f30
	void ShowRewardsPopup(struct FTigerRewardsWithReasons& InRewards); // Function Tiger.TigerElysiumHUD.ShowRewardsPopup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13e3e70
	void ShowLastMatchRewardsPopup(); // Function Tiger.TigerElysiumHUD.ShowLastMatchRewardsPopup // (Final|Native|Protected) // @ game+0x13e3e50
	void ShowHiddenWidgets(); // Function Tiger.TigerElysiumHUD.ShowHiddenWidgets // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e3e30
	void RemoveOnboardingUi(); // Function Tiger.TigerElysiumHUD.RemoveOnboardingUi // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3cc0
	void PromotionalPopupClosed(); // Function Tiger.TigerElysiumHUD.PromotionalPopupClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3ca0
	void OpenGameModeSelectionMenu(); // Function Tiger.TigerElysiumHUD.OpenGameModeSelectionMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3c80
	void OpenElysiumGameMenu(struct UTigerIngameSubmenuWidget* InSubwidgetClass); // Function Tiger.TigerElysiumHUD.OpenElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3bf0
	void OnWidgetClosed__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnWidgetClosed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnSeasonConfigUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnSeasonConfigUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPreloadingDoneMulti__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPreloadingDoneMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPreloadingDone__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPreloadingDone__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void OnEnteredElysium(); // Function Tiger.TigerElysiumHUD.OnEnteredElysium // (Final|Native|Protected) // @ game+0x13e3910
	void IsPreloadingDoneAsync(struct FDelegate& InDelegate); // Function Tiger.TigerElysiumHUD.IsPreloadingDoneAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13e3670
	bool IsElysiumGameMenuOpen(); // Function Tiger.TigerElysiumHUD.IsElysiumGameMenuOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3610
	void HideCreatedWidgets(); // Function Tiger.TigerElysiumHUD.HideCreatedWidgets // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e35f0
	void HandlePersistentPlayerInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerElysiumHUD.HandlePersistentPlayerInitialized // (Final|Native|Protected) // @ game+0x13e3560
	void HandleLastPreGamePopupClosed(); // Function Tiger.TigerElysiumHUD.HandleLastPreGamePopupClosed // (Final|Native|Protected) // @ game+0x13e3540
	void FadeInHiddenWidgets(); // Function Tiger.TigerElysiumHUD.FadeInHiddenWidgets // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x13e3460
	void CloseGameModeSelectionMenu(); // Function Tiger.TigerElysiumHUD.CloseGameModeSelectionMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3440
	void CloseElysiumGameMenu(); // Function Tiger.TigerElysiumHUD.CloseElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x13e3420
};

// Class Tiger.TigerElysiumNpcBase
// Size: 0x420 (Inherited: 0x228)
struct ATigerElysiumNpcBase : AActor {
	bool bAllowCollision; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct UCapsuleComponent* CapsuleComponent; // 0x230(0x08)
	struct USkeletalMeshComponent* BodyMesh; // 0x238(0x08)
	struct USkeletalMeshComponent* HeadMesh; // 0x240(0x08)
	struct USkeletalMeshComponent* HairMesh; // 0x248(0x08)
	struct USkeletalMeshComponent* HoodieMesh; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)
	struct FTigerElysiumNpcData NpcData; // 0x260(0x190)
	struct UStaticMeshComponent* FirstPropSm; // 0x3f0(0x08)
	struct USkeletalMeshComponent* FirstPropSk; // 0x3f8(0x08)
	struct UStaticMeshComponent* SecondPropSm; // 0x400(0x08)
	struct USkeletalMeshComponent* SecondPropSk; // 0x408(0x08)
	char pad_410[0x10]; // 0x410(0x10)

	void LoadAssetsCompleted(); // Function Tiger.TigerElysiumNpcBase.LoadAssetsCompleted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void LoadAssets(); // Function Tiger.TigerElysiumNpcBase.LoadAssets // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e7bc0
	void CreatePropFromNonActorAsset(struct FTigerElysiumNpcProp& InPropStructure); // Function Tiger.TigerElysiumNpcBase.CreatePropFromNonActorAsset // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x13e7560
};

// Class Tiger.TigerElysiumNpcNameplateWidget
// Size: 0x288 (Inherited: 0x280)
struct UTigerElysiumNpcNameplateWidget : UTigerWidget {
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x280(0x08)

	bool DoesPlayerHaveObjectiveToTalkToNPC(); // Function Tiger.TigerElysiumNpcNameplateWidget.DoesPlayerHaveObjectiveToTalkToNPC // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x13e7680
};

// Class Tiger.TigerPlayerState
// Size: 0x970 (Inherited: 0x328)
struct ATigerPlayerState : APlayerState {
	bool bGhostModeOnInit; // 0x328(0x01)
	bool bIsGroupLeader; // 0x329(0x01)
	char pad_32A[0x6]; // 0x32a(0x06)
	struct UEOSUserComponent* EOSUserComponent; // 0x330(0x08)
	struct UTigerGroupStateComponent* GroupStateComponent; // 0x338(0x08)
	struct UTigerPlayerMasqueradeComponent* PlayerMasqueradeComponent; // 0x340(0x08)
	struct UTigerMatchRecapComponent* MatchRecapComponent; // 0x348(0x08)
	bool bIsGroupFull; // 0x350(0x01)
	char pad_351[0x7]; // 0x351(0x07)
	struct UTigerPersistentPlayerState* PersistentPlayerState; // 0x358(0x08)
	bool bStreamerModeIsScramblingEnabled; // 0x360(0x01)
	char pad_361[0x7]; // 0x361(0x07)
	struct FMulticastInlineDelegate OnGroupChangedDelegate; // 0x368(0x10)
	struct FMulticastInlineDelegate OnGroupFullnessChangedDelegate; // 0x378(0x10)
	struct FMulticastInlineDelegate OnNameChangedDelegate; // 0x388(0x10)
	struct FMulticastInlineDelegate OnApperanceChanged; // 0x398(0x10)
	struct FMulticastInlineDelegate OnPlayerCardLoaded; // 0x3a8(0x10)
	struct FMulticastInlineDelegate OnNumSpectatorsChanged; // 0x3b8(0x10)
	struct FMulticastInlineDelegate OnLeaderStatusChangedDelegate; // 0x3c8(0x10)
	enum class ETigerPowerKitType ArchetypeType; // 0x3d8(0x01)
	enum class ETigerGroupingMode GroupingMode; // 0x3d9(0x01)
	char pad_3DA[0x6]; // 0x3da(0x06)
	struct FMulticastInlineDelegate OnPawnChanged; // 0x3e0(0x10)
	struct FMulticastInlineDelegate OnArchetypeChanged; // 0x3f0(0x10)
	struct FMulticastInlineDelegate OnSeasonLevelChanged; // 0x400(0x10)
	struct FMulticastInlineDelegate OnArchetypeLevelChanged; // 0x410(0x10)
	struct FMulticastInlineDelegate OnPlayerLevelChanged; // 0x420(0x10)
	struct UTigerCollectibleProgressCache* CollectibleProgressCache; // 0x430(0x08)
	char pad_438[0x4]; // 0x438(0x04)
	struct FTigerGroupId GroupID; // 0x43c(0x10)
	int32_t CurrentSeasonLevel; // 0x44c(0x04)
	int32_t CurrentArchetypeLevel; // 0x450(0x04)
	int32_t CurrentPlayerLevel; // 0x454(0x04)
	struct FTigerPreviewerData AppearanceAsPreviewerData; // 0x458(0x2b0)
	struct FTigerCharacterAppearance CharacterAppearance; // 0x708(0xc0)
	bool bHasLoadedAppearance; // 0x7c8(0x01)
	char pad_7C9[0x7]; // 0x7c9(0x07)
	struct FTigerPersistentPlayerCardData PlayerCardData; // 0x7d0(0x18)
	char pad_7E8[0x18]; // 0x7e8(0x18)
	bool bHasLoadedPlayerCard; // 0x800(0x01)
	char pad_801[0x8b]; // 0x801(0x8b)
	struct TWeakObjectPtr<struct APawn> OwningPawn; // 0x88c(0x08)
	struct TWeakObjectPtr<struct APawn> PreviousOwningPawn; // 0x894(0x08)
	char pad_89C[0x4]; // 0x89c(0x04)
	struct ATigerPlayerAppearanceCache* AppearanceCache; // 0x8a0(0x08)
	struct AActor* Killer; // 0x8a8(0x08)
	struct TArray<struct ATigerPlayer*> AssistPlayers; // 0x8b0(0x10)
	char pad_8C0[0x10]; // 0x8c0(0x10)
	struct FString FakePlayerName; // 0x8d0(0x10)
	char pad_8E0[0x78]; // 0x8e0(0x78)
	bool bIsVoipEnabled; // 0x958(0x01)
	bool bIsVoipInputDeviceEnabled; // 0x959(0x01)
	char pad_95A[0x16]; // 0x95a(0x16)

	void UpdatePlayerStateGameDataInt(int32_t InValue); // Function Tiger.TigerPlayerState.UpdatePlayerStateGameDataInt // (Final|Native|Public) // @ game+0x1495d60
	void UpdatePlayerStateGameData(); // Function Tiger.TigerPlayerState.UpdatePlayerStateGameData // (Final|Native|Public) // @ game+0x1495d40
	bool ShouldShowSpeakerIcon(); // Function Tiger.TigerPlayerState.ShouldShowSpeakerIcon // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1495bf0
	bool SharesGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerPlayerState.SharesGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1495b50
	void SetAppearanceFromPreviewerDataLocally(struct FTigerPreviewerData& InPreviewerData); // Function Tiger.TigerPlayerState.SetAppearanceFromPreviewerDataLocally // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1495aa0
	void Server_UpdatePlayerMutedStatus(struct FTigerPersistentPlayerID InMutedPlayer, bool bInWasMuted); // Function Tiger.TigerPlayerState.Server_UpdatePlayerMutedStatus // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14959b0
	void Server_UpdatePlayerBlockedStatus(struct FTigerPersistentPlayerID InBlockedPlayer, bool bInWasBlocked); // Function Tiger.TigerPlayerState.Server_UpdatePlayerBlockedStatus // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14958c0
	void Server_SetIsVoipInputDeviceEnabled(bool bInIsVoipInputDeviceEnabled); // Function Tiger.TigerPlayerState.Server_SetIsVoipInputDeviceEnabled // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14957a0
	void Server_SetIsVoipEnabled(bool bInIsVoipInputDeviceEnabled); // Function Tiger.TigerPlayerState.Server_SetIsVoipEnabled // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1495710
	void Server_SetCharacterAppearance(struct FTigerCharacterAppearance NewCharacterAppearance); // Function Tiger.TigerPlayerState.Server_SetCharacterAppearance // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1495630
	void Server_SetBlockedAndMutedPlayers(struct TArray<struct FTigerPersistentPlayerID> InBlockedPlayers, struct TArray<struct FTigerPersistentPlayerID> InMutedPlayers); // Function Tiger.TigerPlayerState.Server_SetBlockedAndMutedPlayers // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14954e0
	void Server_SetArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPlayerState.Server_SetArchetype // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1495430
	void Server_ReportPlayer(enum class ETigerReportReason InReason, int32_t InReportTargetID); // Function Tiger.TigerPlayerState.Server_ReportPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1495360
	void Server_OnStreamerSettingsChanged(bool bIsScramblingPlayers); // Function Tiger.TigerPlayerState.Server_OnStreamerSettingsChanged // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14952a0
	void Server_LeaveGroup(); // Function Tiger.TigerPlayerState.Server_LeaveGroup // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1495250
	void RandomizeCharacterMeshes(); // Function Tiger.TigerPlayerState.RandomizeCharacterMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x1495230
	void OptionallyLeavePartyAndLeaveGroupIfNotInAParty(bool bInShouldLeaveParty); // Function Tiger.TigerPlayerState.OptionallyLeavePartyAndLeaveGroupIfNotInAParty // (Final|Native|Public|BlueprintCallable) // @ game+0x14951a0
	void OnTigerNumSpectatorsChanged__DelegateSignature(int32_t InSpectators); // DelegateFunction Tiger.TigerPlayerState.OnTigerNumSpectatorsChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnSeasonLevelChanged__DelegateSignature(int32_t InSeasonLevel); // DelegateFunction Tiger.TigerPlayerState.OnSeasonLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_PlayerCardData(); // Function Tiger.TigerPlayerState.OnRep_PlayerCardData // (Final|Native|Protected) // @ game+0x1495180
	void OnRep_IsVoipInputDeviceEnabledChanged(); // Function Tiger.TigerPlayerState.OnRep_IsVoipInputDeviceEnabledChanged // (Final|Native|Protected) // @ game+0xb5ee20
	void OnRep_IsVoipEnabledChanged(); // Function Tiger.TigerPlayerState.OnRep_IsVoipEnabledChanged // (Final|Native|Protected) // @ game+0x1495160
	void OnRep_GroupLeader(); // Function Tiger.TigerPlayerState.OnRep_GroupLeader // (Final|Native|Protected) // @ game+0x1495140
	void OnRep_GroupIsFull(); // Function Tiger.TigerPlayerState.OnRep_GroupIsFull // (Final|Native|Protected) // @ game+0x1495120
	void OnRep_GroupChanged(); // Function Tiger.TigerPlayerState.OnRep_GroupChanged // (Final|Native|Protected) // @ game+0x1495100
	void OnRep_CurrentSeasonLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentSeasonLevel // (Final|Native|Protected) // @ game+0x14950e0
	void OnRep_CurrentPlayerLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentPlayerLevel // (Final|Native|Protected) // @ game+0x14950c0
	void OnRep_CurrentArchetypeLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentArchetypeLevel // (Final|Native|Protected) // @ game+0x14950a0
	void OnRep_CharacterAppearance(); // Function Tiger.TigerPlayerState.OnRep_CharacterAppearance // (Final|Native|Protected) // @ game+0x1495080
	void OnRep_ArchetypeType(); // Function Tiger.TigerPlayerState.OnRep_ArchetypeType // (Final|Native|Public) // @ game+0x1495060
	void OnPlayerMutedStatusChanged(struct FTigerPersistentPlayerID& InMutedPlayer, bool bInWasMuted); // Function Tiger.TigerPlayerState.OnPlayerMutedStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1494f60
	void OnPlayerLevelChanged__DelegateSignature(int32_t InPlayerLevel); // DelegateFunction Tiger.TigerPlayerState.OnPlayerLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPlayerKilledBy(struct AActor* InKiller, struct ATigerPlayer* InKilledPlayer); // Function Tiger.TigerPlayerState.OnPlayerKilledBy // (Final|Native|Protected) // @ game+0x1494e90
	void OnPlayerCardLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnPlayerCardLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPlayerBlockedStatusChanged(struct FTigerPersistentPlayerID& InBlockedPlayer, bool bInWasBlocked); // Function Tiger.TigerPlayerState.OnPlayerBlockedStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1494d90
	void OnPlayerApperanceChanged__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPlayerState.OnPlayerApperanceChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPersistentPlayerDataInitialized(); // Function Tiger.TigerPlayerState.OnPersistentPlayerDataInitialized // (Native|Protected) // @ game+0x1494d70
	void OnPawnChanged__DelegateSignature(struct APawn* NewPawn); // DelegateFunction Tiger.TigerPlayerState.OnPawnChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnNameChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnNameChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnLeaderStatusChanged__DelegateSignature(bool bInIsLeader); // DelegateFunction Tiger.TigerPlayerState.OnLeaderStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnGroupModifiedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnGroupModifiedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnGroupChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnGroupChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnArchetypeTypeChangedDelegate__DelegateSignature(struct UTigerPlayerClanData* InClanData, struct UTigerPowerKit* InArchetypeData); // DelegateFunction Tiger.TigerPlayerState.OnArchetypeTypeChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnArchetypeLevelChanged__DelegateSignature(int32_t InArchetypeLevel); // DelegateFunction Tiger.TigerPlayerState.OnArchetypeLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void LeaveGroup(); // Function Tiger.TigerPlayerState.LeaveGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x1494b60
	bool IsVoipOutputDeviceEnabled(); // Function Tiger.TigerPlayerState.IsVoipOutputDeviceEnabled // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1494b30
	bool IsVoipInputDeviceEnabled(); // Function Tiger.TigerPlayerState.IsVoipInputDeviceEnabled // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1494b00
	bool IsVoipEnabled(); // Function Tiger.TigerPlayerState.IsVoipEnabled // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1494ad0
	bool IsPlayerTalking(); // Function Tiger.TigerPlayerState.IsPlayerTalking // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1494960
	bool IsGroupLeader(); // Function Tiger.TigerPlayerState.IsGroupLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1494930
	bool IsGroupFull(); // Function Tiger.TigerPlayerState.IsGroupFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1494900
	bool HasGroup(); // Function Tiger.TigerPlayerState.HasGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14948d0
	bool HasAnySpectators(); // Function Tiger.TigerPlayerState.HasAnySpectators // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14948a0
	void HandleOnDailyChallengesInitializedEvent(); // Function Tiger.TigerPlayerState.HandleOnDailyChallengesInitializedEvent // (Final|Native|Protected) // @ game+0xb5ee20
	void HandleAssistPlayerKilled(struct AActor* InKiller, struct ATigerPlayer* InKilledPlayer); // Function Tiger.TigerPlayerState.HandleAssistPlayerKilled // (Final|Native|Protected) // @ game+0x14947d0
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerPlayerState.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14947a0
	struct FTigerPlayerMatchStats GetPlayerMatchStats(); // Function Tiger.TigerPlayerState.GetPlayerMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1494530
	struct FTigerPlayerMatchMetaStats GetPlayerMatchMetaStats(); // Function Tiger.TigerPlayerState.GetPlayerMatchMetaStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14944b0
	struct FTigerCharacterCardData GetPlayerCardCustomizations(); // Function Tiger.TigerPlayerState.GetPlayerCardCustomizations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1494470
	struct UTigerPowerKit* GetPlayerArchetypeData(); // Function Tiger.TigerPlayerState.GetPlayerArchetypeData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1494440
	enum class ESharkPlatformType GetPlatformType(); // Function Tiger.TigerPlayerState.GetPlatformType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1494410
	struct APawn* GetOwningPawn(); // Function Tiger.TigerPlayerState.GetOwningPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14943d0
	enum class ETigerClan GetClanFromArchetype(); // Function Tiger.TigerPlayerState.GetClanFromArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14943a0
	void Client_OnRecievedReward(); // Function Tiger.TigerPlayerState.Client_OnRecievedReward // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1494380
	void Client_OnCollectibleAwardsReceived(struct UTigerCollectibleData* InCollectible, struct FTigerRewardsCollection InRewards); // Function Tiger.TigerPlayerState.Client_OnCollectibleAwardsReceived // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1494290
	void ApplyPlayerCard(); // Function Tiger.TigerPlayerState.ApplyPlayerCard // (Final|Native|Public|BlueprintCallable) // @ game+0x1494270
	void ApplyOutfitSetup(struct FTigerPersistentOutfitSetup& InOutfitSetup); // Function Tiger.TigerPlayerState.ApplyOutfitSetup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14941a0
	void ApplyCharacterAppearance(); // Function Tiger.TigerPlayerState.ApplyCharacterAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x1494180
};

// Class Tiger.TigerElysiumPlayerState
// Size: 0xa18 (Inherited: 0x970)
struct ATigerElysiumPlayerState : ATigerPlayerState {
	char pad_970[0x8]; // 0x970(0x08)
	struct FMulticastInlineDelegate OnIsInPartyChanged; // 0x978(0x10)
	struct FMulticastInlineDelegate OnSelectedGameModeChanged; // 0x988(0x10)
	struct FMulticastInlineDelegate OnPartySizeChanged; // 0x998(0x10)
	struct FMulticastInlineDelegate OnAppearanceChanged; // 0x9a8(0x10)
	bool bIsInParty; // 0x9b8(0x01)
	int8_t PartySize; // 0x9b9(0x01)
	char pad_9BA[0x16]; // 0x9ba(0x16)
	bool bIsReadyForMatchmaking; // 0x9d0(0x01)
	char pad_9D1[0x7]; // 0x9d1(0x07)
	struct FMulticastInlineDelegate OnDisplayGroupNotReady; // 0x9d8(0x10)
	struct FMulticastInlineDelegate OnGroupReadyStateChanged; // 0x9e8(0x10)
	struct FMulticastInlineDelegate OnLocalPlayerReadyStateChanged; // 0x9f8(0x10)
	struct UTigerGrimoireEntry* TrainingVideoGrimoireEntry; // 0xa08(0x08)
	char pad_A10[0x8]; // 0xa10(0x08)

	void TryInvitePlayerToGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerElysiumPlayerState.TryInvitePlayerToGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x13e9020
	void ToggleReadyState(bool& bOutNewReadyState); // Function Tiger.TigerElysiumPlayerState.ToggleReadyState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13e8f90
	void TigerOnAppearanceChanged__DelegateSignature(enum class ETigerPlayerApperanceChangeReason InReason); // DelegateFunction Tiger.TigerElysiumPlayerState.TigerOnAppearanceChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SetSelectedGameMode(struct FString InSelectedGameModeId); // Function Tiger.TigerElysiumPlayerState.SetSelectedGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x13e8ef0
	void SetReadyState(bool bInNewReadyState); // Function Tiger.TigerElysiumPlayerState.SetReadyState // (Final|Native|Public|BlueprintCallable) // @ game+0x13e8e60
	void Server_TryInvitePlayerToGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerElysiumPlayerState.Server_TryInvitePlayerToGroup // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13e8da0
	void Server_SetSelectedGameMode(struct FString InSelectedGameModeId); // Function Tiger.TigerElysiumPlayerState.Server_SetSelectedGameMode // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13e8c90
	void Server_SetPartySize(int8_t InPartySize); // Function Tiger.TigerElysiumPlayerState.Server_SetPartySize // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x13e8be0
	void Server_SetJoinReadyState(bool bInIsReady); // Function Tiger.TigerElysiumPlayerState.Server_SetJoinReadyState // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13e8b20
	void Server_PersistPlayerCardChanges(); // Function Tiger.TigerElysiumPlayerState.Server_PersistPlayerCardChanges // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13e8900
	void Server_PersistCharacterChanges(); // Function Tiger.TigerElysiumPlayerState.Server_PersistCharacterChanges // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13e88b0
	void Server_GetStoreCategories(); // Function Tiger.TigerElysiumPlayerState.Server_GetStoreCategories // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13e8860
	void Server_EquipItem(struct TSoftClassPtr<UObject> InItemPath, struct TSoftClassPtr<UObject> InPotentialCombinedItemPath, int32_t InSlot); // Function Tiger.TigerElysiumPlayerState.Server_EquipItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x13e86e0
	void Server_EquipCardItem(struct TSoftClassPtr<UObject> InItemPath); // Function Tiger.TigerElysiumPlayerState.Server_EquipCardItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x13e8600
	void Server_DeclineInvitation(struct FTigerGroupInvitation GroupInvitation); // Function Tiger.TigerElysiumPlayerState.Server_DeclineInvitation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x13e8550
	void Server_BlockedPlayerJoinedParty(struct ATigerElysiumPlayerState* InBlockedPlayer); // Function Tiger.TigerElysiumPlayerState.Server_BlockedPlayerJoinedParty // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13e84c0
	void Server_AddPlayerToGroup(struct FTigerPartyId InPartyId, bool bInAssignLeader); // Function Tiger.TigerElysiumPlayerState.Server_AddPlayerToGroup // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x13e83b0
	void Server_AcceptInvitation(struct FTigerGroupInvitation GroupInvitation); // Function Tiger.TigerElysiumPlayerState.Server_AcceptInvitation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x13e8300
	void RemoveBlockedPlayerFromGroup(struct UTigerPlayerGroup* InGroup, struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerElysiumPlayerState.RemoveBlockedPlayerFromGroup // (Final|Native|Public) // @ game+0x13e8230
	void PartyMemberJoinedOrLeft(struct FTigerPartyId& InPartyId, struct FString InPlayerId); // Function Tiger.TigerElysiumPlayerState.PartyMemberJoinedOrLeft // (Final|Native|Private|HasOutParms) // @ game+0x13e8080
	void OnSelectedGameModeChanged__DelegateSignature(struct FString InSelectedGameModeId); // DelegateFunction Tiger.TigerElysiumPlayerState.OnSelectedGameModeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_PartySize(); // Function Tiger.TigerElysiumPlayerState.OnRep_PartySize // (Final|Native|Protected) // @ game+0x13e7f20
	void OnPartySizeChanged__DelegateSignature(int32_t InPartySize); // DelegateFunction Tiger.TigerElysiumPlayerState.OnPartySizeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnNewPlayerCard(struct FTigerPersistentPlayerCardData& InCard); // Function Tiger.TigerElysiumPlayerState.OnNewPlayerCard // (Final|Native|Private|HasOutParms) // @ game+0x13e7e80
	void OnNewCharacterAppearanceFromPreview(struct FTigerPreviewerData& InAppearance); // Function Tiger.TigerElysiumPlayerState.OnNewCharacterAppearanceFromPreview // (Final|Native|Private|HasOutParms) // @ game+0x13e7dd0
	void OnIsInPartyChanged__DelegateSignature(bool bInIsInParty); // DelegateFunction Tiger.TigerElysiumPlayerState.OnIsInPartyChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnGroupReadyStateChanged__DelegateSignature(bool bInIsGroupReady); // DelegateFunction Tiger.TigerElysiumPlayerState.OnGroupReadyStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnDisplayGroupNotReady__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumPlayerState.OnDisplayGroupNotReady__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Multicast_OnAppearanceChanged(enum class ETigerPlayerApperanceChangeReason InReason); // Function Tiger.TigerElysiumPlayerState.Multicast_OnAppearanceChanged // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13e7cd0
	void LeftPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerElysiumPlayerState.LeftPartyDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void LeftParty(struct FTigerParty& InParty); // Function Tiger.TigerElysiumPlayerState.LeftParty // (Final|Native|Private|HasOutParms) // @ game+0x13e7ad0
	void LeaveGroupByGroupId(struct FTigerGroupId& InGroupId); // Function Tiger.TigerElysiumPlayerState.LeaveGroupByGroupId // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13e7a30
	void JoinedPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerElysiumPlayerState.JoinedPartyDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void JoinedParty(struct FTigerParty& InParty); // Function Tiger.TigerElysiumPlayerState.JoinedParty // (Final|Native|Private|HasOutParms) // @ game+0x13e7940
	bool IsFirstTimeMatchMaking(); // Function Tiger.TigerElysiumPlayerState.IsFirstTimeMatchMaking // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7910
	int32_t GetPartySize(); // Function Tiger.TigerElysiumPlayerState.GetPartySize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e77b0
	void Client_ReceiveOutfitVendorCategories(struct TArray<struct FTigerClientCategoryDefinition> ClientCategories); // Function Tiger.TigerElysiumPlayerState.Client_ReceiveOutfitVendorCategories // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13e7470
	void Client_ReceiveGroupInvitation(struct FTigerGroupInvitation GroupInvitation, struct ATigerPlayerState* Inviter); // Function Tiger.TigerElysiumPlayerState.Client_ReceiveGroupInvitation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13e7390
	void Client_OnSelectedGameModeChanged(struct FString InSelectedGameModeId); // Function Tiger.TigerElysiumPlayerState.Client_OnSelectedGameModeChanged // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13e72f0
	void Client_OnGroupMemberReadyStateChanged(struct ATigerElysiumPlayerState* InGroupMember, bool bInNewReadyState, bool bInIsEveryoneReady); // Function Tiger.TigerElysiumPlayerState.Client_OnGroupMemberReadyStateChanged // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13e71d0
	void Client_LeavePartyDueToBlocked(); // Function Tiger.TigerElysiumPlayerState.Client_LeavePartyDueToBlocked // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x13e71b0
	void Client_DisplayWaitingForGroupUi(); // Function Tiger.TigerElysiumPlayerState.Client_DisplayWaitingForGroupUi // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13e7170
	void Client_BlockedPlayerWasRemovedFromParty(bool bWasBlockedByMe); // Function Tiger.TigerElysiumPlayerState.Client_BlockedPlayerWasRemovedFromParty // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x13e70e0
};

// Class Tiger.TigerEmoteControllerComponent
// Size: 0x140 (Inherited: 0xb0)
struct UTigerEmoteControllerComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	char SelectableEmoteCount; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct ATigerPlayerController* PlayerController; // 0xd0(0x08)
	char pad_D8[0x10]; // 0xd8(0x10)
	struct TMap<struct FGuid, struct UTigerQuestAnimation*> QuestAnims; // 0xe8(0x50)
	char pad_138[0x8]; // 0x138(0x08)

	void Server_StopEmote(); // Function Tiger.TigerEmoteControllerComponent.Server_StopEmote // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13e8d50
	void Server_PlayQuestMontage(struct FGuid InID, uint32_t InClientObjId); // Function Tiger.TigerEmoteControllerComponent.Server_PlayQuestMontage // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x13e8a00
	void Server_PlayEmote(char InIndex); // Function Tiger.TigerEmoteControllerComponent.Server_PlayEmote // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13e8950
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerEmoteControllerComponent.OnSelectedCharacterChanged // (Final|Native|Private) // @ game+0x13e7ff0
	void OnIconsLoaded__DelegateSignature(struct TArray<struct UTexture2D*>& InIcons); // DelegateFunction Tiger.TigerEmoteControllerComponent.OnIconsLoaded__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void LoadEmoteIcons(struct FDelegate& InDelegate); // Function Tiger.TigerEmoteControllerComponent.LoadEmoteIcons // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7be0
	bool HasEmoteAtIndex(char InIndex); // Function Tiger.TigerEmoteControllerComponent.HasEmoteAtIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7880
	struct TArray<struct UTigerCharacterEmoteCustomization*> GetSelectedEmotes(); // Function Tiger.TigerEmoteControllerComponent.GetSelectedEmotes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7800
	void GetEmoteNames(struct TArray<struct FText>& OutEmoteNames); // Function Tiger.TigerEmoteControllerComponent.GetEmoteNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e76b0
	void Client_StopEmote(); // Function Tiger.TigerEmoteControllerComponent.Client_StopEmote // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13e7540
	void Client_EmoteFailed(); // Function Tiger.TigerEmoteControllerComponent.Client_EmoteFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13e7190
};

// Class Tiger.TigerEmotePlayerComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerEmotePlayerComponent : UActorComponent {
	struct FTigerPlayingEmote PlayingEmote; // 0xb0(0x10)

	void OnRep_PlayingEmote(struct FTigerPlayingEmote& InOldEmote); // Function Tiger.TigerEmotePlayerComponent.OnRep_PlayingEmote // (Final|Native|Private|HasOutParms) // @ game+0x13e7f40
};

// Class Tiger.TigerEmoteWheelWidget
// Size: 0x2b8 (Inherited: 0x2a8)
struct UTigerEmoteWheelWidget : UTigerWheelWidget {
	struct ATigerPlayer* Player; // 0x2a8(0x08)
	struct UTigerEmoteControllerComponent* EmoteController; // 0x2b0(0x08)

	void PopulateLoadedEmotes(struct TArray<struct UTexture2D*>& InEmoteIcons); // Function Tiger.TigerEmoteWheelWidget.PopulateLoadedEmotes // (Final|Native|Private|HasOutParms) // @ game+0x13e8180
};

// Class Tiger.TigerEmptyActorWithChild
// Size: 0x230 (Inherited: 0x228)
struct ATigerEmptyActorWithChild : AActor {
	struct UChildActorComponent* ChildActorComponent; // 0x228(0x08)
};

// Class Tiger.TigerEngineSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerEngineSettings : UDeveloperSettings {
	bool bVerifyGc; // 0x38(0x01)
	bool bCreateGameInstanceGcCluster; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float AcousticPortalAutoCloseDistance; // 0x3c(0x04)
};

// Class Tiger.TigerEnragedEffectActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerEnragedEffectActor : AActor {
	bool bIsActive; // 0x228(0x01)
	bool bHasDamageBuff; // 0x229(0x01)
	bool bIsRegenerating; // 0x22a(0x01)
	char pad_22B[0x5]; // 0x22b(0x05)

	void OnRegenStopped(); // Function Tiger.TigerEnragedEffectActor.OnRegenStopped // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRegenStarted(); // Function Tiger.TigerEnragedEffectActor.OnRegenStarted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnEnragedDeactivated(); // Function Tiger.TigerEnragedEffectActor.OnEnragedDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnEnragedActivated(); // Function Tiger.TigerEnragedEffectActor.OnEnragedActivated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDamageBuffRemoved(); // Function Tiger.TigerEnragedEffectActor.OnDamageBuffRemoved // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnCharacterAction(enum class ETigerCharacterAction InAction); // Function Tiger.TigerEnragedEffectActor.OnCharacterAction // (Final|Native|Protected) // @ game+0x13e7d50
	void Multicast_RegenStopped(); // Function Tiger.TigerEnragedEffectActor.Multicast_RegenStopped // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13c1c00
	void Multicast_RegenStarted(); // Function Tiger.TigerEnragedEffectActor.Multicast_RegenStarted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xba5780
	void Multicast_EnragedDeactivated(); // Function Tiger.TigerEnragedEffectActor.Multicast_EnragedDeactivated // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13e7cb0
	void Multicast_EnragedActivated(); // Function Tiger.TigerEnragedEffectActor.Multicast_EnragedActivated // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xcc78e0
	void Multicast_DamageBuffRemoved(); // Function Tiger.TigerEnragedEffectActor.Multicast_DamageBuffRemoved // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13e7c90
	struct ATigerPlayer* GetPlayer(); // Function Tiger.TigerEnragedEffectActor.GetPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e77d0
};

// Class Tiger.TigerEnteringNewAreaPrompt
// Size: 0x2c8 (Inherited: 0x2a8)
struct UTigerEnteringNewAreaPrompt : UTigerSimpleTextPrompt {
	struct FText SubText; // 0x2a8(0x18)
	struct UTexture2D* TextBackground; // 0x2c0(0x08)
};

// Class Tiger.TigerEntityCheckpointActorSpawner
// Size: 0x200 (Inherited: 0x200)
struct UTigerEntityCheckpointActorSpawner : USceneComponent {
	struct AActor* ActorToSpawn; // 0x1f8(0x08)
};

// Class Tiger.TigerNPCInstantSpawner
// Size: 0x270 (Inherited: 0x270)
struct ATigerNPCInstantSpawner : ATigerNPCSpawningBase {

	struct ATigerBaseNPC* SpawnNpcAtLocation(struct FVector& Location, struct UTigerNPCAsset* NpcAssetToUse, struct FRotator& Rotation, bool bIgnoreSpawnSetting); // Function Tiger.TigerNPCInstantSpawner.SpawnNpcAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x144cd50
};

// Class Tiger.TigerEntityLeaderSpawner
// Size: 0x270 (Inherited: 0x270)
struct ATigerEntityLeaderSpawner : ATigerNPCInstantSpawner {

	struct ATigerBaseNPC* SpawnEntityLeader(); // Function Tiger.TigerEntityLeaderSpawner.SpawnEntityLeader // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerEntityCheckpointSupplyDropLocation
// Size: 0x230 (Inherited: 0x228)
struct ATigerEntityCheckpointSupplyDropLocation : AActor {
	struct USceneComponent* SupplyRoot; // 0x228(0x08)
};

// Class Tiger.TigerNPCPointSpawner
// Size: 0x298 (Inherited: 0x270)
struct ATigerNPCPointSpawner : ATigerNPCSpawningBase {
	struct TArray<struct FTigerNPCSpawningPoint> SpawningPoints; // 0x270(0x10)
	int32_t MaxNPCsToSpawn; // 0x280(0x04)
	int32_t MinNPCsToSpawn; // 0x284(0x04)
	int32_t MaxNPCsToSpawnGroup; // 0x288(0x04)
	int32_t MinNPCsToSpawnGroup; // 0x28c(0x04)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class Tiger.TigerEntityCheckpoint
// Size: 0x2c0 (Inherited: 0x298)
struct ATigerEntityCheckpoint : ATigerNPCPointSpawner {
	struct ATigerBaseNPC* EntityLeader; // 0x298(0x08)
	struct AActor* SupplyDropLocation; // 0x2a0(0x08)
	struct UTigerSupplyDropConsumableAsset* SupplyDropConsumable; // 0x2a8(0x08)
	struct UActorComponent* SupplyDropComponent; // 0x2b0(0x08)
	bool bIsAcknowledged; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)

	void OnRep_Acknowledged(bool bOldIsAcknowledged); // Function Tiger.TigerEntityCheckpoint.OnRep_Acknowledged // (Final|Native|Private) // @ game+0x13ed010
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerEntityCheckpoint.MatchStateChanged // (Final|Native|Private) // @ game+0x13eceb0
};

// Class Tiger.TigerEntityCombatComponent
// Size: 0x138 (Inherited: 0xb0)
struct UTigerEntityCombatComponent : UActorComponent {
	float TimeBeforeAttackingNewPlayer; // 0xb0(0x04)
	float ClosestAllowedDistanceToBeSprinting; // 0xb4(0x04)
	float SprintingCooldownDuration; // 0xb8(0x04)
	float MaxLaserLength; // 0xbc(0x04)
	float MaxAngleFromOriginalWeapon; // 0xc0(0x04)
	float LaserInterpolateSpeed; // 0xc4(0x04)
	float LaserInterpolateRuberbandSpeedMultiplier; // 0xc8(0x04)
	struct FName MaterialScaleName; // 0xcc(0x08)
	struct FName MaterialFadeLaserName; // 0xd4(0x08)
	bool bHideLaserDuringReload; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	float NotInCombatFadedLaserLength; // 0xe0(0x04)
	float ReloadingFadedLaserLength; // 0xe4(0x04)
	struct ATigerNPC* NpcOwner; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)
	struct UStaticMeshComponent* LaserPointer; // 0x100(0x08)
	struct UParticleSystemComponent* LaserPointerOriginGlowParticleSystem; // 0x108(0x08)
	char pad_110[0x28]; // 0x110(0x28)

	void Multicast_EntityEvent(enum class ETigerEntityEvent InEntityEvent); // Function Tiger.TigerEntityCombatComponent.Multicast_EntityEvent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1391b40
	void BeginProjectileOverlap(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerEntityCombatComponent.BeginProjectileOverlap // (Final|Native|Private|HasOutParms) // @ game+0x13ec8c0
};

// Class Tiger.TigerEntityHelicopter
// Size: 0x2e0 (Inherited: 0x228)
struct ATigerEntityHelicopter : AActor {
	struct UAkAudioEvent* PreparingToFireSound; // 0x228(0x08)
	struct UAkAudioEvent* TargetEnteredSpotlightSound; // 0x230(0x08)
	struct UAkAudioEvent* TargetLeftSpotlightSound; // 0x238(0x08)
	struct ATigerProjectile* ProjectileClass; // 0x240(0x08)
	struct UTigerRangedWeapon* WeaponType; // 0x248(0x08)
	struct UTigerRangedWeapon* Weapon; // 0x250(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> TargetedPlayer; // 0x268(0x08)
	struct USceneComponent* LineOfSightStart; // 0x270(0x08)
	char pad_278[0xc]; // 0x278(0x0c)
	struct FVector_NetQuantize10 SpotlightEndTarget; // 0x284(0x0c)
	struct USceneComponent* SceneRoot; // 0x290(0x08)
	struct UChildActorComponent* HelicopterChildActor; // 0x298(0x08)
	float SpotlightMovementSpeed; // 0x2a0(0x04)
	char pad_2A4[0x14]; // 0x2a4(0x14)
	float TargetSpottedDelayBeforeFiring; // 0x2b8(0x04)
	char pad_2BC[0x24]; // 0x2bc(0x24)

	void SetSpotlightForLos(struct USceneComponent* SpotLightPosition); // Function Tiger.TigerEntityHelicopter.SetSpotlightForLos // (Final|Native|Protected|BlueprintCallable) // @ game+0x13ed2f0
	void Multicast_PlayAudio(struct UAkAudioEvent* AudioEventToPlay); // Function Tiger.TigerEntityHelicopter.Multicast_PlayAudio // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13ecf80
	void Multicast_FireProjectile(); // Function Tiger.TigerEntityHelicopter.Multicast_FireProjectile // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13c1c00
	void GetLookAtRotatorForSpotLight(struct FVector& SpotLightPosition, float& OutDistance, struct FRotator& OutLookAtRotator); // Function Tiger.TigerEntityHelicopter.GetLookAtRotatorForSpotLight // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ecd40
};

// Class Tiger.TigerEntityJudgeHelicopter
// Size: 0x320 (Inherited: 0x2e0)
struct ATigerEntityJudgeHelicopter : ATigerEntityHelicopter {
	struct ATigerJudge* Judge; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	float DesiredForwardOffsetFromJudge; // 0x2f0(0x04)
	float DesiredHeight; // 0x2f4(0x04)
	float MaxSpeed; // 0x2f8(0x04)
	float MaxTargetDistance2DFromJudge; // 0x2fc(0x04)
	float MinimumTargetHeight; // 0x300(0x04)
	float MinimumHeightOverJudge; // 0x304(0x04)
	float LoseTargetTime; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct FTimerHandle KillSelfHandle; // 0x310(0x08)
	enum class ETigerJudgeHelicopterSpotlightState CurrentSpotlightState; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)

	bool ShouldFlyAway(); // Function Tiger.TigerEntityJudgeHelicopter.ShouldFlyAway // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ed380
	void SelectNewTarget(struct TArray<struct ATigerPlayer*> PossibleTargets); // Function Tiger.TigerEntityJudgeHelicopter.SelectNewTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13ed200
	bool HasTarget(); // Function Tiger.TigerEntityJudgeHelicopter.HasTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ece80
};

// Class Tiger.TigerEntityPatrollingHelicopter
// Size: 0x498 (Inherited: 0x2e0)
struct ATigerEntityPatrollingHelicopter : ATigerEntityHelicopter {
	struct FTigerAISplinePathData PathData; // 0x2e0(0xa0)
	struct TArray<struct FVector> GeneratedCirclularPath; // 0x380(0x10)
	struct TMap<enum class ETigerPatrollingHelicopterSpotlightState, struct FColor> SpotlightColours; // 0x390(0x50)
	struct FVector CurrentTrackingFlightTarget; // 0x3e0(0x0c)
	char pad_3EC[0x18]; // 0x3ec(0x18)
	int32_t NumberOfPointsInCirclularPath; // 0x404(0x04)
	int32_t CurrentSplineWaypointIndex; // 0x408(0x04)
	int32_t CurrentTrackingIndex; // 0x40c(0x04)
	char pad_410[0x4]; // 0x410(0x04)
	float IdleRotationSpeed; // 0x414(0x04)
	float HoverRotationSpeed; // 0x418(0x04)
	float IdleFlightSpeed; // 0x41c(0x04)
	float HoverFlightSpeed; // 0x420(0x04)
	float LostPlayerStateNewSpotlightTargetRadius; // 0x424(0x04)
	float MaxTimeToSearchForLostPlayer; // 0x428(0x04)
	float CurrentTimeUntilReturnToPatrol; // 0x42c(0x04)
	float MasqueradePointGainFromSpotlightPerSecond; // 0x430(0x04)
	float SpaceBetweenMeshes; // 0x434(0x04)
	float MovementDistanceThresholdSquared; // 0x438(0x04)
	float BelowRoofHeightCutOffTime; // 0x43c(0x04)
	float TimeCurrentTargetWasBelowRoofHeight; // 0x440(0x04)
	float TargetedPlayerHoverCircleRadius; // 0x444(0x04)
	float LostPlayerHoverCircleRadius; // 0x448(0x04)
	char pad_44C[0x4]; // 0x44c(0x04)
	float CircleGrowthRate; // 0x450(0x04)
	float MaxTimeToFindGunFireEventCulprit; // 0x454(0x04)
	char pad_458[0x14]; // 0x458(0x14)
	float TimeToLoseInvisibleBloodhuntTarget; // 0x46c(0x04)
	float DelayUntilPlayTargetSpottingSounds; // 0x470(0x04)
	enum class ETigerPatrollingHelicopterState CurrentState; // 0x474(0x01)
	enum class ETigerPatrollingHelicopterSpotlightState CurrentSpotlightState; // 0x475(0x01)
	bool bHasReachedTarget; // 0x476(0x01)
	bool bNeedToCalculateEntryVectorForTracking; // 0x477(0x01)
	bool bWasLastTargetedPlayerBloodHunted; // 0x478(0x01)
	bool bHasActiveTask; // 0x479(0x01)
	bool bIsFiring; // 0x47a(0x01)
	char pad_47B[0x5]; // 0x47b(0x05)
	struct UTigerAICoordinator* AICoordinator; // 0x480(0x08)
	struct USplineComponent* Spline; // 0x488(0x08)
	char pad_490[0x8]; // 0x490(0x08)

	void UpdateSpotlightPositionFromPatrollingLightSweep(); // Function Tiger.TigerEntityPatrollingHelicopter.UpdateSpotlightPositionFromPatrollingLightSweep // (Final|Native|Protected|BlueprintCallable) // @ game+0x13ed3d0
	void UpdateClientSpotlight(); // Function Tiger.TigerEntityPatrollingHelicopter.UpdateClientSpotlight // (Final|Native|Protected|BlueprintCallable) // @ game+0x13ed3b0
	void OnStoppedShooting(); // Function Tiger.TigerEntityPatrollingHelicopter.OnStoppedShooting // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnStartedShooting(); // Function Tiger.TigerEntityPatrollingHelicopter.OnStartedShooting // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRep_IsFiring(); // Function Tiger.TigerEntityPatrollingHelicopter.OnRep_IsFiring // (Final|Native|Protected) // @ game+0x13ed0a0
	float GetSpotlightRadius(); // Function Tiger.TigerEntityPatrollingHelicopter.GetSpotlightRadius // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerEquipWheelWidget
// Size: 0x2a8 (Inherited: 0x2a8)
struct UTigerEquipWheelWidget : UTigerWheelWidget {

	void Populate(struct TArray<struct UTigerInventoryItemBase*>& InItemArray, int32_t InMaxItemCount); // Function Tiger.TigerEquipWheelWidget.Populate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13ed100
};

// Class Tiger.TigerEventConfigAsset
// Size: 0x1b0 (Inherited: 0x30)
struct UTigerEventConfigAsset : UDataAsset {
	struct FTigerEventConfig EventConfig; // 0x30(0x178)
	char pad_1A8[0x8]; // 0x1a8(0x08)
};

// Class Tiger.TigerEventSystem
// Size: 0x120 (Inherited: 0x28)
struct UTigerEventSystem : UObject {
	char pad_28[0x50]; // 0x28(0x50)
	struct TMap<struct FString, struct FTigerEventConfig> EventConfigsMap; // 0x78(0x50)
	char pad_C8[0x58]; // 0xc8(0x58)
};

// Class Tiger.TigerExperienceEvent
// Size: 0x50 (Inherited: 0x28)
struct UTigerExperienceEvent : UObject {
	int32_t BaseExperienceGain[0x2]; // 0x28(0x08)
	struct UTexture2D* EventIcon; // 0x30(0x08)
	struct FText Description; // 0x38(0x18)

	void GetExperienceAmount(struct ATigerPlayer* Player, struct ATigerCharacter* EventTiedCharacter, enum class EMatchBalanceMode BalanceMode, int32_t& OutOwnPlayerExperienceGain, int32_t& OutExperienceToAddToEveryGroupMemberIncludingSelf); // Function Tiger.TigerExperienceEvent.GetExperienceAmount // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x13ecb80
	int32_t GetBalanceModeExperience(enum class EMatchBalanceMode InBalanceMode); // Function Tiger.TigerExperienceEvent.GetBalanceModeExperience // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ecaf0
};

// Class Tiger.TigerCheatExperienceEvent
// Size: 0x50 (Inherited: 0x50)
struct UTigerCheatExperienceEvent : UTigerExperienceEvent {
};

// Class Tiger.TigerEyewearAnimInstance
// Size: 0x450 (Inherited: 0x3c0)
struct UTigerEyewearAnimInstance : UTigerAnimInstance {
	struct FTransform NoseTransform; // 0x3c0(0x30)
	struct FTransform EarRightTransform; // 0x3f0(0x30)
	struct FTransform EarLeftTransform; // 0x420(0x30)
};

// Class Tiger.TigerFamiliarScout
// Size: 0x2b8 (Inherited: 0x228)
struct ATigerFamiliarScout : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USphereComponent* ScanSphereComponent; // 0x230(0x08)
	float MoveSpeed; // 0x238(0x04)
	float RecallMoveSpeed; // 0x23c(0x04)
	struct FVector TargetLocation; // 0x240(0x0c)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct FTimerHandle ArrivalTimerHandle; // 0x250(0x08)
	struct FVector ManuallyScoutAtLocation; // 0x258(0x0c)
	int32_t Rank; // 0x264(0x04)
	bool bIsMoving; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	struct FVector Velocity; // 0x26c(0x0c)
	float ScoutTimeToReachTarget; // 0x278(0x04)
	float RevealDurationMultiplier; // 0x27c(0x04)
	char pad_280[0x38]; // 0x280(0x38)

	void OnTargetLocationChanged(); // Function Tiger.TigerFamiliarScout.OnTargetLocationChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnScoutStartedReturnToOwner(); // Function Tiger.TigerFamiliarScout.OnScoutStartedReturnToOwner // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnRep_TargetLocation(); // Function Tiger.TigerFamiliarScout.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x13ed0e0
	void OnRep_ManuallyScoutAtLocation(); // Function Tiger.TigerFamiliarScout.OnRep_ManuallyScoutAtLocation // (Final|Native|Private) // @ game+0x13ed0c0
	void OnArrivedAtOwner(); // Function Tiger.TigerFamiliarScout.OnArrivedAtOwner // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void DeactivateScouting(); // Function Tiger.TigerFamiliarScout.DeactivateScouting // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void AttachToCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerFamiliarScout.AttachToCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x13ec830
	void AddCachedAchievementTarget(struct ATigerPlayerState* InTargetPlayerState); // Function Tiger.TigerFamiliarScout.AddCachedAchievementTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x13ec7a0
	void ActivateScouting(); // Function Tiger.TigerFamiliarScout.ActivateScouting // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerFamiliarScoutPassive
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerFamiliarScoutPassive : UActorComponent {
	struct TArray<struct ATigerCharacter*> OverlappingCharacters; // 0xb0(0x10)
	struct UParticleSystemComponent* OrbitingParticles; // 0xc0(0x08)
	struct USphereComponent* ScanSphere; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	struct UTigerScoutsConfig* Config; // 0xd8(0x08)
	bool bIsPassiveActivated; // 0xe0(0x01)
	bool bPlayerIsVisible; // 0xe1(0x01)
	char pad_E2[0xe]; // 0xe2(0x0e)

	void ScoutSpawned(struct ATigerFamiliarScout* SpawnedScout); // Function Tiger.TigerFamiliarScoutPassive.ScoutSpawned // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnComponentEndOverlapScanSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerFamiliarScoutPassive.OnComponentEndOverlapScanSphere // (Final|Native|Private) // @ game+0x13f23d0
	void OnComponentBeginOverlapScanSphere(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerFamiliarScoutPassive.OnComponentBeginOverlapScanSphere // (Final|Native|Private|HasOutParms) // @ game+0x13f21a0
	void EvaluateVisibility(); // Function Tiger.TigerFamiliarScoutPassive.EvaluateVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	struct UParticleSystemComponent* CreateOrbitingParticles(); // Function Tiger.TigerFamiliarScoutPassive.CreateOrbitingParticles // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerFeedingAnimationAsset
// Size: 0x4b0 (Inherited: 0x30)
struct UTigerFeedingAnimationAsset : UDataAsset {
	struct FTigerFeedingDataByGender FeedingDataByClan[0x4]; // 0x30(0x480)
};

// Class Tiger.TigerFeedingComponent
// Size: 0x1f8 (Inherited: 0xb0)
struct UTigerFeedingComponent : UActorComponent {
	bool bIsBloodDrained; // 0xb0(0x01)
	bool bIsBeingFedOn; // 0xb1(0x01)
	bool bDidAttackEndFeed; // 0xb2(0x01)
	char pad_B3[0x5]; // 0xb3(0x05)
	struct FMulticastInlineDelegate OnStoppedFeeding; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnFeedingDoneEvent; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnStartedFeedingApproach; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnStartedFeeding; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnFeedingApproachDone; // 0xf8(0x10)
	float MaximumFeedingDistance; // 0x108(0x04)
	int32_t MaxFeedingTicks; // 0x10c(0x04)
	float FeedTickTime; // 0x110(0x04)
	float PartRequiredForBloodDrainedState; // 0x114(0x04)
	float FeedHealthAmount; // 0x118(0x04)
	float TravelSpeed; // 0x11c(0x04)
	int32_t FeedingTicksLeft; // 0x120(0x04)
	int32_t CurrentFeedingTicksLeft; // 0x124(0x04)
	struct TWeakObjectPtr<struct ATigerNPC> DesiredFeedingTarget; // 0x128(0x08)
	struct TWeakObjectPtr<struct ATigerNPC> CurrentTarget; // 0x130(0x08)
	struct UMatineeCameraShake* FeedingCameraShake; // 0x138(0x08)
	struct UTigerFeedingAnimationAsset* FeedingAnimationAsset; // 0x140(0x08)
	float FeedingCameraDecoupleDelay; // 0x148(0x04)
	float ApproachUIProgress; // 0x14c(0x04)
	float CapsuleDistanceCompensator; // 0x150(0x04)
	bool bFeedingDebug; // 0x154(0x01)
	char pad_155[0x7b]; // 0x155(0x7b)
	struct UAnimMontage* FedOnApproachAnim; // 0x1d0(0x08)
	struct UAnimMontage* FedOnFeedingAnim; // 0x1d8(0x08)
	struct UAnimMontage* FedOnDecoupleAnim; // 0x1e0(0x08)
	struct FTimerHandle DecoupleTimerCamera; // 0x1e8(0x08)
	char pad_1F0[0x8]; // 0x1f0(0x08)

	void TigerStartedFeedingApproach__DelegateSignature(float TravelTime); // DelegateFunction Tiger.TigerFeedingComponent.TigerStartedFeedingApproach__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerFeedingMulticastDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerFeedingComponent.TigerFeedingMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateStoppedFeeding__DelegateSignature(bool bWasAttacked); // DelegateFunction Tiger.TigerFeedingComponent.TigerDelegateStoppedFeeding__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Server_StartFeeding(struct ATigerNPC* InTarget, struct FVector InDesiredAttackerFeedingLocation); // Function Tiger.TigerFeedingComponent.Server_StartFeeding // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x13f2ea0
	void RestoreFeedingTicks(); // Function Tiger.TigerFeedingComponent.RestoreFeedingTicks // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2a10
	void OnRep_DesiredFeedingTargetChanged(); // Function Tiger.TigerFeedingComponent.OnRep_DesiredFeedingTargetChanged // (Final|Native|Private) // @ game+0x13f26d0
	void OnFeedingDoneEvent__DelegateSignature(bool bTargetIsDrained, struct ATigerCharacter* InTargetFedOn); // DelegateFunction Tiger.TigerFeedingComponent.OnFeedingDoneEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Multicast_AttackerAbortFeeding(bool bInWasAttacked); // Function Tiger.TigerFeedingComponent.Multicast_AttackerAbortFeeding // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13bbe00
	bool IsFeeding(); // Function Tiger.TigerFeedingComponent.IsFeeding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1ef0
	bool IsFedOn(); // Function Tiger.TigerFeedingComponent.IsFedOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1ec0
	bool IsDecoupling(); // Function Tiger.TigerFeedingComponent.IsDecoupling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1e90
	bool IsBloodDrained(); // Function Tiger.TigerFeedingComponent.IsBloodDrained // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1e60
	float GetNormalizedFeedingAmount(); // Function Tiger.TigerFeedingComponent.GetNormalizedFeedingAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1c20
	float GetFeedingProgress(); // Function Tiger.TigerFeedingComponent.GetFeedingProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1a80
	void Client_AttackerAbortFeeding(bool bInWasAttacked); // Function Tiger.TigerFeedingComponent.Client_AttackerAbortFeeding // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13f1680
};

// Class Tiger.TigerFindSessionAsync
// Size: 0x108 (Inherited: 0x30)
struct UTigerFindSessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0xb8]; // 0x50(0xb8)

	struct FTigerBpFindSessionSelectedSession SelectSession(struct FTigerBpFindSessionResultList& FindSessionResult, int32_t Index); // Function Tiger.TigerFindSessionAsync.SelectSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x13f2ad0
	void ReportMatchFoundSuccessfully(struct FTigerBpFindSessionResultList& InResult); // Function Tiger.TigerFindSessionAsync.ReportMatchFoundSuccessfully // (Final|Native|Protected|HasOutParms) // @ game+0x13f2900
	struct UTigerFindSessionAsync* FindSession(struct UObject* WorldContextObject, struct APlayerController* InPlayerController, struct FString InGameModeId, int32_t InGameModeIndex, enum class ESessionType InSessionType); // Function Tiger.TigerFindSessionAsync.FindSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13f1770
};

// Class Tiger.TigerFirstTimeArchetypeSelectionUI
// Size: 0x480 (Inherited: 0x3c0)
struct UTigerFirstTimeArchetypeSelectionUI : UTigerSceneBackgroundUI {
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x3c0(0x10)
	struct FMulticastInlineDelegate OnSelectedArchetypeChanged; // 0x3d0(0x10)
	struct FName CameraSocketName; // 0x3e0(0x08)
	struct FName AnimationSequenceName; // 0x3e8(0x08)
	struct UAkAudioEvent* CharacterSelectedAudioEvent; // 0x3f0(0x08)
	struct UAkAudioEvent* CharacterHoveredAudioEvent; // 0x3f8(0x08)
	struct UAkAudioEvent* EnterElysiumAudioEvent; // 0x400(0x08)
	enum class ETigerPowerKitType DefaultSelectedArchetype; // 0x408(0x01)
	char pad_409[0x7]; // 0x409(0x07)
	struct TSoftClassPtr<UObject> PaperDollClass; // 0x410(0x28)
	struct ATigerPaperDoll* CachedPaperDollClass; // 0x438(0x08)
	struct ATigerPaperDoll* PaperDoll; // 0x440(0x08)
	int32_t SelectedAppearanceIndex; // 0x448(0x04)
	enum class ETigerPowerKitType SelectedArchetypeType; // 0x44c(0x01)
	char pad_44D[0x3]; // 0x44d(0x03)
	struct UTigerPlayerClanData* CurrentClanData; // 0x450(0x08)
	struct TArray<struct FTigerCharacterAppearance> ArchetypeApperances; // 0x458(0x10)
	char pad_468[0x18]; // 0x468(0x18)

	void PreviewArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.PreviewArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x13f2710
	void OnStartGameNative(); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.OnStartGameNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x13f26f0
	void OnStartGame(struct FTigerPersistentCharacterID InSelectedCharacterId); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.OnStartGame // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPreloadingDone__DelegateSignature(); // DelegateFunction Tiger.TigerFirstTimeArchetypeSelectionUI.OnPreloadingDone__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void ArchetypeSelectionDelegate__DelegateSignature(struct UTigerPowerKit* InArchetypeData, struct FTigerCharacterAppearance InCharacterAppearance); // DelegateFunction Tiger.TigerFirstTimeArchetypeSelectionUI.ArchetypeSelectionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
};

// Class Tiger.TigerFriend
// Size: 0xa8 (Inherited: 0x28)
struct UTigerFriend : UObject {
	struct FMulticastInlineDelegate OnOnlineStatusChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnLocationChanged; // 0x38(0x10)
	struct FString DISPLAYNAME; // 0x48(0x10)
	struct FTigerPersistentPlayerID PlayerId; // 0x58(0x10)
	struct FSharkUserId SharkmobUserId; // 0x68(0x10)
	struct FString PlatformUserId; // 0x78(0x10)
	enum class EShAccountChannel Channel; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct FString Location; // 0x90(0x10)
	char pad_A0[0x8]; // 0xa0(0x08)

	void OnOnlineStatusChanged__DelegateSignature(bool bInOnline); // DelegateFunction Tiger.TigerFriend.OnOnlineStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnLocationChanged__DelegateSignature(struct FString InLocation); // DelegateFunction Tiger.TigerFriend.OnLocationChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	struct FSharkUserId GetSharkmobUserId(); // Function Tiger.TigerFriend.GetSharkmobUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1d60
	struct FTigerPersistentPlayerID GetPlayerId(); // Function Tiger.TigerFriend.GetPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1d20
	enum class EShAccountChannel GetPlayerChannel(); // Function Tiger.TigerFriend.GetPlayerChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1cf0
	struct FString GetPlatformUserId(); // Function Tiger.TigerFriend.GetPlatformUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1cb0
	bool GetOnline(); // Function Tiger.TigerFriend.GetOnline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1c80
	struct FString GetLocation(); // Function Tiger.TigerFriend.GetLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1be0
	bool GetIsSharkmobFriend(); // Function Tiger.TigerFriend.GetIsSharkmobFriend // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1740
	struct FString GetDisplayName(); // Function Tiger.TigerFriend.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1a00
	bool CouldRemove(); // Function Tiger.TigerFriend.CouldRemove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1740
	bool CouldInviteToParty(); // Function Tiger.TigerFriend.CouldInviteToParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1710
};

// Class Tiger.TigerFriendInvite
// Size: 0x70 (Inherited: 0x28)
struct UTigerFriendInvite : UObject {
	struct FString DISPLAYNAME; // 0x28(0x10)
	struct FTigerPersistentPlayerID PlayerId; // 0x38(0x10)
	struct FSharkUserId SharkmobUserId; // 0x48(0x10)
	struct FString PlatformUserId; // 0x58(0x10)
	enum class EShAccountChannel Channel; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)

	struct FString GetDisplayName(); // Function Tiger.TigerFriendInvite.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1a40
};

// Class Tiger.TigerFriendService
// Size: 0x1c0 (Inherited: 0x28)
struct UTigerFriendService : UObject {
	char pad_28[0x198]; // 0x28(0x198)
};

// Class Tiger.TigerFriendSubsystem
// Size: 0x1b8 (Inherited: 0x30)
struct UTigerFriendSubsystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)
	struct TArray<struct UTigerFriend*> Friends; // 0x50(0x10)
	struct TArray<struct UTigerFriendInvite*> Invites; // 0x60(0x10)
	enum class ETigerOnlineServiceStatus ServiceStatus; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct TArray<struct FTigerPersistentPlayerID> BlockedPlayers; // 0x78(0x10)
	struct TArray<struct FTigerPersistentPlayerID> MutedPlayers; // 0x88(0x10)
	char pad_98[0xf0]; // 0x98(0xf0)
	struct UTigerPresenceSubsystem* PresenceSubsystem; // 0x188(0x08)
	char pad_190[0x10]; // 0x190(0x10)
	struct FString FriendSubsystemType; // 0x1a0(0x10)
	struct UTigerFriendSubsystemImpl* Impl; // 0x1b0(0x08)

	void TigerFriendSetServiceStatus(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerFriendSubsystem.TigerFriendSetServiceStatus // (Final|Exec|Native|Public) // @ game+0x13bcde0
	void TigerFriendListFriends(); // Function Tiger.TigerFriendSubsystem.TigerFriendListFriends // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerDebugUnmutePlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugUnmutePlayer // (Final|Exec|Native|Protected) // @ game+0x13bc230
	void TigerDebugUnblockPlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugUnblockPlayer // (Final|Exec|Native|Protected) // @ game+0x13bc230
	void TigerDebugMutePlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugMutePlayer // (Final|Exec|Native|Protected) // @ game+0x13bc230
	void TigerDebugBlockPlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugBlockPlayer // (Final|Exec|Native|Protected) // @ game+0x13bc230
	void SortFriends(); // Function Tiger.TigerFriendSubsystem.SortFriends // (Final|Native|Public|BlueprintCallable) // @ game+0x13f30a0
	void SetPlayerMuteStatus(struct FTigerPersistentPlayerID& InPlayerId, bool bInMute); // Function Tiger.TigerFriendSubsystem.SetPlayerMuteStatus // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13f2fa0
	void SendInvite(struct FSharkUserId& InInviteeSharkmobUserId, struct FTigerPersistentPlayerID& InInviteePlayerId); // Function Tiger.TigerFriendSubsystem.SendInvite // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13f2d80
	void SendChatNotification(struct FString InRecipientPlayerId, struct FString InChatNotificationCommand); // Function Tiger.TigerFriendSubsystem.SendChatNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2c80
	void SearchPlayer(struct FString InUsername); // Function Tiger.TigerFriendSubsystem.SearchPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2a30
	void RemoveFriend(struct FSharkUserId& InFriendSharkmobUserId); // Function Tiger.TigerFriendSubsystem.RemoveFriend // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13f2850
	void RejectInvite(struct FSharkUserId& InFromSharkmobUserId); // Function Tiger.TigerFriendSubsystem.RejectInvite // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13f27a0
	void OnPlayerToPlayerStatusChanged__DelegateSignature(struct FTigerPersistentPlayerID& InPlayerId, bool bInBool); // DelegateFunction Tiger.TigerFriendSubsystem.OnPlayerToPlayerStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnPlayersPresenceChange(struct TArray<struct FTigerPlayerPresenceInfo>& InPlayersPresenceInfo); // Function Tiger.TigerFriendSubsystem.OnPlayersPresenceChange // (Final|Native|Private|HasOutParms) // @ game+0x13f25f0
	void OnPlayerPresenceChange(struct FTigerPlayerPresenceInfo& InPlayerPresenceInfo); // Function Tiger.TigerFriendSubsystem.OnPlayerPresenceChange // (Final|Native|Private|HasOutParms) // @ game+0x13f2530
	void LoadInvites(); // Function Tiger.TigerFriendSubsystem.LoadInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2180
	void LoadFriends(); // Function Tiger.TigerFriendSubsystem.LoadFriends // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2160
	bool IsMuted(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerFriendSubsystem.IsMuted // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f20a0
	bool IsFriendOrInvited(struct FSharkUserId& InSharkmobUserId); // Function Tiger.TigerFriendSubsystem.IsFriendOrInvited // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1fe0
	bool IsFriend(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerFriendSubsystem.IsFriend // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1f20
	bool IsBlocked(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerFriendSubsystem.IsBlocked // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1da0
	int32_t GetNumFriendsOnline(); // Function Tiger.TigerFriendSubsystem.GetNumFriendsOnline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1c50
	bool GetIsEnabled(); // Function Tiger.TigerFriendSubsystem.GetIsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1bb0
	struct FText GetInvitesUnsupportedReason(); // Function Tiger.TigerFriendSubsystem.GetInvitesUnsupportedReason // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1b10
	enum class ETigerFriendLoadStatus GetInvitesLoadStatus(); // Function Tiger.TigerFriendSubsystem.GetInvitesLoadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1ae0
	enum class ETigerFriendLoadStatus GetFriendsLoadStatus(); // Function Tiger.TigerFriendSubsystem.GetFriendsLoadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1ab0
	struct FText GetDisabledReason(); // Function Tiger.TigerFriendSubsystem.GetDisabledReason // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1960
	bool GetAreInvitesSupported(); // Function Tiger.TigerFriendSubsystem.GetAreInvitesSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1930
	void AcceptInvite(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerFriendSubsystem.AcceptInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x13f15f0
};

// Class Tiger.TigerFriendSubsystemImpl
// Size: 0x30 (Inherited: 0x28)
struct UTigerFriendSubsystemImpl : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerFriendSubsystemMockImpl
// Size: 0x30 (Inherited: 0x30)
struct UTigerFriendSubsystemMockImpl : UTigerFriendSubsystemImpl {
};

// Class Tiger.TigerFriendSubsystemSharkmobImpl
// Size: 0xa0 (Inherited: 0x30)
struct UTigerFriendSubsystemSharkmobImpl : UTigerFriendSubsystemImpl {
	char pad_30[0x8]; // 0x30(0x08)
	struct UTigerFriendService* FriendService; // 0x38(0x08)
	struct UTigerGetSharkmobAccountIdsBatcher* GetSharkmobAccountIdsBatcher; // 0x40(0x08)
	char pad_48[0x58]; // 0x48(0x58)

	void TigerFriendReadPlatformFriends(); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendReadPlatformFriends // (Final|Exec|Native|Public) // @ game+0x13f8a90
	void TigerFriendGetUserInfo(struct FString InOpenId); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendGetUserInfo // (Final|Exec|Native|Public) // @ game+0x13f89f0
	void TigerFriendForceReloadInvites(); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendForceReloadInvites // (Final|Exec|Native|Public) // @ game+0x13f89d0
	void TigerFriendForceReloadFriends(); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendForceReloadFriends // (Final|Exec|Native|Public) // @ game+0x13f89b0
};

// Class Tiger.TigerFullscreenFXManager
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerFullscreenFXManager : UActorComponent {
	struct ATigerPlayerController* Controller; // 0xb0(0x08)
	char pad_B8[0x8]; // 0xb8(0x08)
	struct UMaterial* TimedPostFXMaterial; // 0xc0(0x08)
	struct UMaterialParameterCollection* TimedPostFXCollection; // 0xc8(0x08)
	struct FName TimedPostFXCollectionName; // 0xd0(0x08)
	char pad_D8[0x18]; // 0xd8(0x18)
};

// Class Tiger.TigerGameActivitySubsystem
// Size: 0x48 (Inherited: 0x30)
struct UTigerGameActivitySubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnSoloOrGroupGameActivityRequestedWhileStayingInElysium; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)

	void SoloOrGroupGameActivityRequestedWhileStayingInElysium__DelegateSignature(enum class ETigerGameActivityType InGameActivityType); // DelegateFunction Tiger.TigerGameActivitySubsystem.SoloOrGroupGameActivityRequestedWhileStayingInElysium__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void HandleTutorialStarted(); // Function Tiger.TigerGameActivitySubsystem.HandleTutorialStarted // (Final|Native|Protected) // @ game+0x13f86a0
};

// Class Tiger.TigerGameActivityStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameActivityStatics : UBlueprintFunctionLibrary {

	bool GetGameModeIdForActivity(struct UObject* InWorldContextObject, enum class ETigerGameActivityType InGameActivityType, struct FString& OutGameModeId); // Function Tiger.TigerGameActivityStatics.GetGameModeIdForActivity // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13f8060
};

// Class Tiger.TigerGameFlowState
// Size: 0x40 (Inherited: 0x30)
struct UTigerGameFlowState : UBlueprintAsyncActionBase {
	char pad_30[0x10]; // 0x30(0x10)

	void OnEnter(); // Function Tiger.TigerGameFlowState.OnEnter // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct ATigerPlayerController* GetPlayerController(); // Function Tiger.TigerGameFlowState.GetPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8310
};

// Class Tiger.TigerGameFlowStateMap
// Size: 0x80 (Inherited: 0x30)
struct UTigerGameFlowStateMap : UDataAsset {
	struct TMap<struct UTigerGameFlowState*, struct UTigerGameFlowState*> FlowStateMap; // 0x30(0x50)
};

// Class Tiger.TigerGameFlowStateBoot
// Size: 0x80 (Inherited: 0x40)
struct UTigerGameFlowStateBoot : UTigerGameFlowState {
	struct FMulticastInlineDelegate OnLaunchTutorial; // 0x40(0x10)
	struct FMulticastInlineDelegate OnEnterElysiumFirstTime; // 0x50(0x10)
	struct FMulticastInlineDelegate OnEnterElysium; // 0x60(0x10)
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x70(0x10)

	bool IsLandingPageEnabled(); // Function Tiger.TigerGameFlowStateBoot.IsLandingPageEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f87e0
	bool IsIntroEnabled(); // Function Tiger.TigerGameFlowStateBoot.IsIntroEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8790
	struct UTigerGameFlowStateBoot* EnterBoot(struct UObject* InWorldContextObject); // Function Tiger.TigerGameFlowStateBoot.EnterBoot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13f79a0
	bool CommandlineSkipTutorial(); // Function Tiger.TigerGameFlowStateBoot.CommandlineSkipTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f75b0
	bool CommandlineForceTutorial(); // Function Tiger.TigerGameFlowStateBoot.CommandlineForceTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7580
};

// Class Tiger.TigerGameGCClusterSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerGameGCClusterSubSystem : UGameInstanceSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct AActor*> CurrentActorsToProcess; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)

	void FillClusterFromLevels(); // Function Tiger.TigerGameGCClusterSubSystem.FillClusterFromLevels // (Final|Native|Public) // @ game+0x13f7a30
};

// Class Tiger.TigerExpRequirements
// Size: 0x40 (Inherited: 0x28)
struct UTigerExpRequirements : UObject {
	struct FTigerExpLevelRequirements ExpLevelRequirements; // 0x28(0x18)

	int32_t GetSeasonLevelCount(); // Function Tiger.TigerExpRequirements.GetSeasonLevelCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8500
	int32_t GetLevelFromExp(int32_t Exp); // Function Tiger.TigerExpRequirements.GetLevelFromExp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8200
	int32_t GetExpFromLevel(int32_t Level); // Function Tiger.TigerExpRequirements.GetExpFromLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7fc0
	bool ClampAtMaxLevel(); // Function Tiger.TigerExpRequirements.ClampAtMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x94aa40
};

// Class Tiger.TigerPreloadedNiagaraSystems
// Size: 0x68 (Inherited: 0x30)
struct UTigerPreloadedNiagaraSystems : UDataAsset {
	struct FMulticastInlineDelegate OnLoadedAllAssetsEvent; // 0x30(0x10)
	struct TArray<struct TSoftObjectPtr<UNiagaraSystem>> Systems; // 0x40(0x10)
	char pad_50[0x18]; // 0x50(0x18)
};

// Class Tiger.TigerPreloadedClasses
// Size: 0x38 (Inherited: 0x28)
struct UTigerPreloadedClasses : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerGameModeLoadingScreens
// Size: 0x80 (Inherited: 0x30)
struct UTigerGameModeLoadingScreens : UDataAsset {
	struct TMap<struct TSoftClassPtr<UObject>, struct UTigerLoadingScreenAsset*> LoadingScreenAssets; // 0x30(0x50)
};

// Class Tiger.TigerGCClusterObject
// Size: 0x28 (Inherited: 0x28)
struct UTigerGCClusterObject : UObject {
};

// Class Tiger.TigerGameInstance
// Size: 0x9a0 (Inherited: 0x1a8)
struct UTigerGameInstance : UGameInstance {
	struct UAkAudioEvent* MusicPlayAkEvent; // 0x1a8(0x08)
	struct FMulticastInlineDelegate OnTitleScreenClosed; // 0x1b0(0x10)
	struct FMulticastInlineDelegate OnGameStateSetEvent; // 0x1c0(0x10)
	struct FMulticastInlineDelegate OnGameModesUpdated; // 0x1d0(0x10)
	struct FMulticastInlineDelegate OnRankConfigSet; // 0x1e0(0x10)
	struct FString JoinErrorString; // 0x1f0(0x10)
	enum class ETigerGameActivityType ForceGameActivityOnJoiningElysium; // 0x200(0x01)
	char pad_201[0x7]; // 0x201(0x07)
	struct TSoftClassPtr<UObject> DisciplineConfigsClassPtr; // 0x208(0x28)
	struct UObject* DisciplineConfigsClass; // 0x230(0x08)
	struct TArray<struct UTigerPlayerClanData*> AvailablePlayerClans; // 0x238(0x10)
	struct UTigerExpRequirements* SeasonExpRequirements; // 0x248(0x08)
	struct UTigerExpRequirements* ArchetypeExpRequirements; // 0x250(0x08)
	struct UTigerExpRequirements* PlayerExpRequirements; // 0x258(0x08)
	struct UTigerTitleListAsset* TitleList; // 0x260(0x08)
	struct UTigerOnlineStatusMessages* OnlineStatusMessagesClass; // 0x268(0x08)
	struct UTigerSaveGame* CurrentSaveGame; // 0x270(0x08)
	struct UTigerPreloadedNiagaraSystems* PreloadedNiagaraSystems; // 0x278(0x08)
	struct UTigerLoadingScreenUI* LoadingScreen; // 0x280(0x08)
	char pad_288[0x50]; // 0x288(0x50)
	struct TArray<struct UTigerCharacterPreset*> BotCharacterPresets; // 0x2d8(0x10)
	bool bBotsIgnorePlayer; // 0x2e8(0x01)
	bool bEnableBotsAsClients; // 0x2e9(0x01)
	bool bOnlyBotsAliveEndsMatch; // 0x2ea(0x01)
	bool bIsJoiningMatch; // 0x2eb(0x01)
	bool bHasShownTitleScreen; // 0x2ec(0x01)
	bool bIsRetryingTutorial; // 0x2ed(0x01)
	char pad_2EE[0x2]; // 0x2ee(0x02)
	struct FString BotAutoJoinServer; // 0x2f0(0x10)
	int32_t LoadingScreenZValue; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)
	struct UTigerGameModeLoadingScreens* GameModeLoadingScreens; // 0x308(0x08)
	struct UDataTable* SoftCurrencies; // 0x310(0x08)
	struct FMulticastInlineDelegate OnFindMatchFailed; // 0x318(0x10)
	struct UTigerGeneralUserSettings* GeneralUserSettingsClass; // 0x328(0x08)
	struct UTigerGeneralUserSettings* GeneralUserSettings; // 0x330(0x08)
	struct UTigerSessionSeeker* SessionSeekerClass; // 0x338(0x08)
	struct UTigerQuestCollection* QuestCollection; // 0x340(0x08)
	struct UTigerMasterChallengesConfigAsset* MasteryChallenges; // 0x348(0x08)
	struct UTigerTestChallengesConfigAsset* TestChallenges; // 0x350(0x08)
	struct UTigerMatchStatMedalRequirements* MatchStatMedalRequirements; // 0x358(0x08)
	struct UTigerRankConfigAsset* RankConfig; // 0x360(0x08)
	struct UTigerPartyService* PartyService; // 0x368(0x08)
	struct UTigerPlayerDataService* PlayerDataService; // 0x370(0x08)
	struct UTigerConfigService* ConfigService; // 0x378(0x08)
	struct UTigerInboxService* InboxService; // 0x380(0x08)
	struct UTigerStoreService* StoreService; // 0x388(0x08)
	struct UTigerConsoleService* ConsoleService; // 0x390(0x08)
	char pad_398[0x8]; // 0x398(0x08)
	struct UTigerPremiumCurrencyManager* PremiumCurrencyManager; // 0x3a0(0x08)
	struct TWeakObjectPtr<struct UTigerWidget> SoftwareCursor; // 0x3a8(0x08)
	struct UTigerPartyManager* PartyManager; // 0x3b0(0x08)
	struct UTigerAuthenticationManager* AuthenticationManager; // 0x3b8(0x08)
	struct UTigerTelemetryEventHandler* TelemetryEventHandler; // 0x3c0(0x08)
	struct ATigerStatisticsGatherer* StatisticsGatherer; // 0x3c8(0x08)
	struct UTigerPushConnectionManager* PushConnectionManager; // 0x3d0(0x08)
	struct UTigerPlatformEntitlementsManager* PlatformEntitlementsManager; // 0x3d8(0x08)
	struct UTigerGameModesConfigCache* GameModesConfigCache; // 0x3e0(0x08)
	struct UTigerArchetypeRewardData* ArchetypePerkRewards; // 0x3e8(0x08)
	char pad_3F0[0x108]; // 0x3f0(0x108)
	struct UTigerPreloadedClasses* PreloadedClasses; // 0x4f8(0x08)
	enum class ETigerGroupingMode LastSelectedGroupingMode; // 0x500(0x01)
	char pad_501[0x3]; // 0x501(0x03)
	int32_t LastPlayedMatchGameModeIndex; // 0x504(0x04)
	struct FString LastPlayedMatchGameModeId; // 0x508(0x10)
	struct TMap<struct FString, enum class ETigerTelemetryMapIds> MapNamesToMapIDs; // 0x518(0x50)
	struct FString SharkmobUserName; // 0x568(0x10)
	struct UDataTable* BotNameTable; // 0x578(0x08)
	char pad_580[0x28]; // 0x580(0x28)
	struct UTigerDsBackendAgent* DsBackendAgent; // 0x5a8(0x08)
	struct USharkAccounts* AccountSystem; // 0x5b0(0x08)
	struct TArray<struct UTigerAmmoAsset*> AmmoPickupItems; // 0x5b8(0x10)
	struct FTigerSeasonConfig ClientSeasonConfig; // 0x5c8(0x350)
	char pad_918[0x18]; // 0x918(0x18)
	struct UTigerSessionSeeker* SessionSeeker; // 0x930(0x08)
	char pad_938[0x58]; // 0x938(0x58)
	struct UTigerEventSystem* EventSystem; // 0x990(0x08)
	char pad_998[0x8]; // 0x998(0x08)

	void WaitForCurrentMatchStats(int32_t TimeoutSecs, struct FDelegate& Delegate); // Function Tiger.TigerGameInstance.WaitForCurrentMatchStats // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13f8bb0
	bool TravelToSession(struct FString InSessionURL, enum class ESessionType& InSessionType); // Function Tiger.TigerGameInstance.TravelToSession // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13f8ab0
	void TransferToPartyElysium(); // Function Tiger.TigerGameInstance.TransferToPartyElysium // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void TransferToElysium(); // Function Tiger.TigerGameInstance.TransferToElysium // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ToggleTutorialMenu(); // Function Tiger.TigerGameInstance.ToggleTutorialMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ToggleMatchMeny(); // Function Tiger.TigerGameInstance.ToggleMatchMeny // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void TigerSetPlatformType(enum class ESharkPlatformType InPlatformType); // Function Tiger.TigerGameInstance.TigerSetPlatformType // (Final|Exec|Native|Public|Const) // @ game+0x13bcde0
	void TigerSetDemoCinematicOutfit(struct FString InOutfitName); // Function Tiger.TigerGameInstance.TigerSetDemoCinematicOutfit // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerOnTitleScreenClosed__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.TigerOnTitleScreenClosed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnRankConfigSet__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.TigerOnRankConfigSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerFakeGameActivity(struct FString InGameActivityType); // Function Tiger.TigerGameInstance.TigerFakeGameActivity // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void StartPushConnection(); // Function Tiger.TigerGameInstance.StartPushConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8990
	void ShowWinScreen(); // Function Tiger.TigerGameInstance.ShowWinScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ShowPostMatchScreen(bool bInShouldLeaveParty); // Function Tiger.TigerGameInstance.ShowPostMatchScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	bool ShouldDebugGameFlow(); // Function Tiger.TigerGameInstance.ShouldDebugGameFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8970
	void SetLastPlayedMatchGameMode(struct FString InLastPlayedMatchGameModeId, int32_t InLastPlayedMatchGameModeIndex); // Function Tiger.TigerGameInstance.SetLastPlayedMatchGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8890
	void ReturnToElysium(); // Function Tiger.TigerGameInstance.ReturnToElysium // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ReturnToCharacterSelectionDispatcher(); // Function Tiger.TigerGameInstance.ReturnToCharacterSelectionDispatcher // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ReturnToBootWithError(struct FString InError); // Function Tiger.TigerGameInstance.ReturnToBootWithError // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void RetryTutorial(); // Function Tiger.TigerGameInstance.RetryTutorial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ReceivePartyInvitation(struct UTigerPartyInvite* Invite, struct UTigerUser* Host); // Function Tiger.TigerGameInstance.ReceivePartyInvitation // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void ReceiveInvitation(struct FTigerGroupInvitation& Invitation, struct ATigerPlayerState* Inviter); // Function Tiger.TigerGameInstance.ReceiveInvitation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void PostLoadMapWithWorld(); // Function Tiger.TigerGameInstance.PostLoadMapWithWorld // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void PostEndOfLoadingTelemetry(); // Function Tiger.TigerGameInstance.PostEndOfLoadingTelemetry // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8870
	void OnMatchStatsReceivedMulticastDelegate__DelegateSignature(bool bTimedOut); // DelegateFunction Tiger.TigerGameInstance.OnMatchStatsReceivedMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMatchStatsReceivedDelegate__DelegateSignature(bool bTimedOut); // DelegateFunction Tiger.TigerGameInstance.OnMatchStatsReceivedDelegate__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void OnLoadingScreenHidden(); // Function Tiger.TigerGameInstance.OnLoadingScreenHidden // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8850
	void OnGameStateSet__DelegateSignature(struct ATigerGameState* InGameState); // DelegateFunction Tiger.TigerGameInstance.OnGameStateSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnGameModesUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.OnGameModesUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnFindMatchFailed__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.OnFindMatchFailed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void LaunchTutorialNative(); // Function Tiger.TigerGameInstance.LaunchTutorialNative // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8830
	void LaunchTransferFromMatch(); // Function Tiger.TigerGameInstance.LaunchTransferFromMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8810
	void KickToLoginScreen(); // Function Tiger.TigerGameInstance.KickToLoginScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void JoinSessionThroughUrl(struct FString SessionURL); // Function Tiger.TigerGameInstance.JoinSessionThroughUrl // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsJoiningMatch(); // Function Tiger.TigerGameInstance.IsJoiningMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f87c0
	bool IsAllowedToOpenMainMenu(); // Function Tiger.TigerGameInstance.IsAllowedToOpenMainMenu // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool HasCurrentMatchStats(); // Function Tiger.TigerGameInstance.HasCurrentMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8760
	bool HasCompletedBattlepass(int32_t InCurrentSeasonLevel); // Function Tiger.TigerGameInstance.HasCompletedBattlepass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f86c0
	void HandleOnDisplaySettingsApplied(); // Function Tiger.TigerGameInstance.HandleOnDisplaySettingsApplied // (Final|Native|Private) // @ game+0x13f8680
	struct ATigerWeatherController* GetWeatherController(); // Function Tiger.TigerGameInstance.GetWeatherController // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13f8650
	struct UTigerVoipTalkerState* GetVoipTalkerState(); // Function Tiger.TigerGameInstance.GetVoipTalkerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8600
	struct FLinearColor GetUIColor(enum class ETigerUIColor UIColor, enum class ETigerColourSpace ColorSpace); // Function Tiger.TigerGameInstance.GetUIColor // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x184a280
	struct UTigerTitleListAsset* GetTitleList(); // Function Tiger.TigerGameInstance.GetTitleList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f85e0
	struct UTigerTestChallengesConfigAsset* GetTestChallengeConfig(); // Function Tiger.TigerGameInstance.GetTestChallengeConfig // (Final|Native|Public|Const) // @ game+0x13f85c0
	struct UTigerTelemetryEventHandler* GetTelemetryEventHandler(); // Function Tiger.TigerGameInstance.GetTelemetryEventHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8590
	struct ATigerStatisticsGatherer* GetStatisticsGatherer(); // Function Tiger.TigerGameInstance.GetStatisticsGatherer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8560
	struct FString GetSharkmobUserName(); // Function Tiger.TigerGameInstance.GetSharkmobUserName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8530
	struct UTigerExpRequirements* GetSeasonExpRequirements(); // Function Tiger.TigerGameInstance.GetSeasonExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f84e0
	struct FDateTime GetSeasonEndDate(); // Function Tiger.TigerGameInstance.GetSeasonEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f84a0
	struct TSoftObjectPtr<UTexture2D> GetSeasonBannerTexture(); // Function Tiger.TigerGameInstance.GetSeasonBannerTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f83b0
	struct UTigerRankConfigAsset* GetRankConfig(); // Function Tiger.TigerGameInstance.GetRankConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8390
	struct UTigerQuestCollection* GetQuestCollection(); // Function Tiger.TigerGameInstance.GetQuestCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8370
	struct UTigerPremiumCurrencyManager* GetPremiumCurrencyManager(); // Function Tiger.TigerGameInstance.GetPremiumCurrencyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8340
	struct UTigerExpRequirements* GetPlayerExpRequirements(); // Function Tiger.TigerGameInstance.GetPlayerExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1376d90
	struct UTigerPartyManager* GetPartyManager(); // Function Tiger.TigerGameInstance.GetPartyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f82e0
	struct UTigerMatchStatMedalRequirements* GetMatchStatMedalRequirements(); // Function Tiger.TigerGameInstance.GetMatchStatMedalRequirements // (Final|Native|Public|Const) // @ game+0x13f82c0
	struct UTigerMasterChallengesConfigAsset* GetMasteryChallengeConfig(); // Function Tiger.TigerGameInstance.GetMasteryChallengeConfig // (Final|Native|Public|Const) // @ game+0x13f82a0
	struct FTigerMatchStats GetLastMatchStats(); // Function Tiger.TigerGameInstance.GetLastMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f81c0
	bool GetHasSetRankConfig(); // Function Tiger.TigerGameInstance.GetHasSetRankConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8190
	struct FString GetDefaultPartyGameModeId(); // Function Tiger.TigerGameInstance.GetDefaultPartyGameModeId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7f40
	struct FTigerCharacterAppearance GetDefaultCharacterAppearanceForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetDefaultCharacterAppearanceForArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7ea0
	enum class ESessionType GetCurrentSessionType(); // Function Tiger.TigerGameInstance.GetCurrentSessionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7e70
	enum class ETigerClan GetClanTypeFromArchetypeType(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetClanTypeFromArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7de0
	struct UTigerPlayerClanData* GetClanDataFromArchetypeType(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetClanDataFromArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7d50
	struct UTigerPlayerClanData* GetClanData(enum class ETigerClan Clan); // Function Tiger.TigerGameInstance.GetClanData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7cc0
	struct FDateTime GetBattlepassStartDate(); // Function Tiger.TigerGameInstance.GetBattlepassStartDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7c50
	struct FTigerItemId GetBattlepassItemId(); // Function Tiger.TigerGameInstance.GetBattlepassItemId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7c30
	struct FDateTime GetBattlepassEndDate(); // Function Tiger.TigerGameInstance.GetBattlepassEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7bf0
	enum class ETigerBattlepassActiveState GetBattlepassActiveState(); // Function Tiger.TigerGameInstance.GetBattlepassActiveState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7bc0
	struct TArray<struct UTigerPlayerClanData*> GetAvailableClans(); // Function Tiger.TigerGameInstance.GetAvailableClans // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7b40
	struct UTigerAuthenticationManager* GetAuthenticationManager(); // Function Tiger.TigerGameInstance.GetAuthenticationManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7b20
	struct UTigerArchetypeRewardData* GetArchetypePerkRewards(); // Function Tiger.TigerGameInstance.GetArchetypePerkRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7b00
	struct UTigerExpRequirements* GetArchetypeExpRequirements(); // Function Tiger.TigerGameInstance.GetArchetypeExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7ae0
	struct UTigerPowerKit* GetArchetypeData(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetArchetypeData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7a50
	void GameStateSet(); // Function Tiger.TigerGameInstance.GameStateSet // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void DebugOnWorldCleanup(struct UWorld* World, bool bSessionEnded, bool bCleanupResources); // Function Tiger.TigerGameInstance.DebugOnWorldCleanup // (Final|Native|Protected) // @ game+0x13f7890
	void DebugOnWorldBeginTearDown(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnWorldBeginTearDown // (Final|Native|Protected) // @ game+0x13f7800
	void DebugOnStreamingStarted(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerGameInstance.DebugOnStreamingStarted // (Final|Native|Protected) // @ game+0x13f7800
	void DebugOnPreWorldFinishDestroy(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnPreWorldFinishDestroy // (Final|Native|Protected) // @ game+0x13f7800
	void DebugOnPostWorldCreation(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnPostWorldCreation // (Final|Native|Protected) // @ game+0x13f7800
	void DebugOnPostWorldCleanUp(struct UWorld* World, bool bSessionEnded, bool bCleanupResources); // Function Tiger.TigerGameInstance.DebugOnPostWorldCleanUp // (Final|Native|Protected) // @ game+0x13f7890
	void DebugOnMapPreLoad(struct FString InNameOfMapToLoad); // Function Tiger.TigerGameInstance.DebugOnMapPreLoad // (Final|Native|Protected) // @ game+0x13bc230
	void DebugOnMapPostLoad(struct UWorld* InNewWorld); // Function Tiger.TigerGameInstance.DebugOnMapPostLoad // (Final|Native|Protected) // @ game+0x13f7800
	void DebugOnInitialStreamingFinished(); // Function Tiger.TigerGameInstance.DebugOnInitialStreamingFinished // (Final|Native|Protected) // @ game+0xb5ee20
	void DebugOnGameStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerGameInstance.DebugOnGameStateChanged // (Final|Native|Protected) // @ game+0x13f7730
	void DebugOnCharacterStartedLoading(); // Function Tiger.TigerGameInstance.DebugOnCharacterStartedLoading // (Final|Native|Protected) // @ game+0xb5ee20
	void DebugOnCharacterFinishedLoading(); // Function Tiger.TigerGameInstance.DebugOnCharacterFinishedLoading // (Final|Native|Protected) // @ game+0xb5ee20
	void CreateLoadingScreenWidget(float InFadeInTime, struct UTigerLoadingScreenAsset* InLoadingScreenAsset, struct UTigerLoadingScreenUI* InWidgetClass); // Function Tiger.TigerGameInstance.CreateLoadingScreenWidget // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void CreateLoadingScreenForGameMode(struct TSoftClassPtr<UObject> InGameModePath, float InFadeInTime); // Function Tiger.TigerGameInstance.CreateLoadingScreenForGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x13f75e0
	struct FTigerRewardsWithReasons CollectPendingMatchRewards(); // Function Tiger.TigerGameInstance.CollectPendingMatchRewards // (Final|Native|Public|BlueprintCallable) // @ game+0x13f74c0
	void CloseWinScreen(); // Function Tiger.TigerGameInstance.CloseWinScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void CloseMatchMenu(); // Function Tiger.TigerGameInstance.CloseMatchMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void CheckOnlyBotsAliveEndsMatch(); // Function Tiger.TigerGameInstance.CheckOnlyBotsAliveEndsMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x13f74a0
	void CheckForBotsAsClients(); // Function Tiger.TigerGameInstance.CheckForBotsAsClients // (Final|Native|Public|BlueprintCallable) // @ game+0x13f7480
	void CheckBotsIgnorePlayer(); // Function Tiger.TigerGameInstance.CheckBotsIgnorePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x13f7460
	void Cheat_QuitTutorial(); // Function Tiger.TigerGameInstance.Cheat_QuitTutorial // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void CharacterCustomizationLoadingStarted__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.CharacterCustomizationLoadingStarted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void CharacterCustomizationLoadingFinished__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.CharacterCustomizationLoadingFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void CallOnTitleScreenClosed(); // Function Tiger.TigerGameInstance.CallOnTitleScreenClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x13f7440
};

// Class Tiger.TigerGameSettings
// Size: 0x2b8 (Inherited: 0x38)
struct UTigerGameSettings : USharkLocalDeveloperSettings {
	struct FSoftObjectPath QuestCollection; // 0x38(0x18)
	bool bEnableNpcSpawning; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float NpcLocationCorrectionInterval; // 0x54(0x04)
	float ItemClusterSize; // 0x58(0x04)
	float ItemClusterExtraReplicationRange; // 0x5c(0x04)
	int32_t BuildingSystemVersion; // 0x60(0x04)
	int32_t RoofSystemVersion; // 0x64(0x04)
	int32_t RoofSystemFreeTransformableVersion; // 0x68(0x04)
	struct FVector SideVolumeExtents; // 0x6c(0x0c)
	float BelowSideMargin; // 0x78(0x04)
	float BelowDepthMargin; // 0x7c(0x04)
	float BelowVolumeHeight; // 0x80(0x04)
	float ShallowBalconyDepth; // 0x84(0x04)
	bool bEnableApartments; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct ATigerBuildingWallPreviewer* BuildingWallPreviewerClass; // 0x90(0x08)
	bool bEnableStatisticsGathering; // 0x98(0x01)
	bool bEnableLandingPage; // 0x99(0x01)
	bool bEnableIntro; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
	struct FSoftObjectPath TutorialLevel; // 0xa0(0x18)
	struct FSoftObjectPath TransferFromMatchLevel; // 0xb8(0x18)
	struct TSoftClassPtr<UObject> CustomizationOptions; // 0xd0(0x28)
	struct TSoftClassPtr<UObject> ItemsDatabase; // 0xf8(0x28)
	struct TSoftClassPtr<UObject> GrimoireTree; // 0x120(0x28)
	struct TSoftClassPtr<UObject> GrimoireSeasonDatabase; // 0x148(0x28)
	struct TSoftObjectPtr<UTigerGrimoireEntry> TrainingVideoGrimoireEntry; // 0x170(0x28)
	struct TSoftClassPtr<UObject> ChallengeDatabase; // 0x198(0x28)
	struct TSoftClassPtr<UObject> LogPopUp; // 0x1c0(0x28)
	struct FSoftObjectPath MasteryChallenges; // 0x1e8(0x18)
	struct FSoftObjectPath TestChallenges; // 0x200(0x18)
	struct FSoftObjectPath MatchStatMedalRequirements; // 0x218(0x18)
	struct FSoftObjectPath RankConfig; // 0x230(0x18)
	struct FString PromotionalPopupConfigUrl; // 0x248(0x10)
	struct TSoftObjectPtr<UMaterial> AssetStatusDoNotUseMaterial; // 0x258(0x28)
	bool bLogNetworkMovementFlagsOnServer; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FRotator SavedPlayerRotation; // 0x284(0x0c)
	struct FVector SavedPlayerLocation; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct FSoftObjectPath ArchetypePerkRewards; // 0x2a0(0x18)

	struct UTigerChallengeTypeDatabase* GetChallengeDatabaseMutable(); // Function Tiger.TigerGameSettings.GetChallengeDatabaseMutable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7c90
};

// Class Tiger.TigerGameModeDescriptorStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameModeDescriptorStatics : UBlueprintFunctionLibrary {

	void SetLastPlayedGameModeId(struct UObject* InWorldContextObject, struct FString InGameModeId); // Function Tiger.TigerGameModeDescriptorStatics.SetLastPlayedGameModeId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13fcf60
	bool GetLastPlayedGameModeId(struct UObject* InWorldContextObject, struct FString& OutLastPlayedGameModeId); // Function Tiger.TigerGameModeDescriptorStatics.GetLastPlayedGameModeId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13fc5b0
	enum class ETigerGameModeAvailability GetGameModeAvailability(struct UObject* InWorldContextObject, struct FTigerGameModeDescriptor& InGameModeDescriptor); // Function Tiger.TigerGameModeDescriptorStatics.GetGameModeAvailability // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13fc460
};

// Class Tiger.TigerRespawnStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerRespawnStatics : UBlueprintFunctionLibrary {

	bool IsFirstTimePlayingWithRespawnFeature(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerRespawnStatics.IsFirstTimePlayingWithRespawnFeature // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13fcb10
	struct UTigerGameModeFeatureRespawn* GetFeatureComponentForPlayer(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerRespawnStatics.GetFeatureComponentForPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13fc3d0
};

// Class Tiger.TigerGameModeFeatureRespawn
// Size: 0x1d8 (Inherited: 0xb0)
struct UTigerGameModeFeatureRespawn : UActorComponent {
	struct FTigerGameModeFeatureWidget FeatureWidgetClass; // 0xb0(0x30)
	struct UTigerRespawnFeatureWidget* WidgetInstance; // 0xe0(0x08)
	struct FTigerRespawnFeatureSettings Settings; // 0xe8(0x90)
	struct ATigerPlayerController* OwningController; // 0x178(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x180(0x08)
	int32_t LifeTokenCount; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct FMulticastInlineDelegate OnLifeTokensChanged; // 0x190(0x10)
	char pad_1A0[0x28]; // 0x1a0(0x28)
	struct FMulticastInlineDelegate OnRespawnEnabled; // 0x1c8(0x10)

	void Server_NotifyReady(); // Function Tiger.TigerGameModeFeatureRespawn.Server_NotifyReady // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1396e40
	void PlayerLifeTokensChanged__DelegateSignature(int32_t InLifeTokenCount, int32_t InMaxTokenCount); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.PlayerLifeTokensChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void IsRespawnFeatureEnabledAsync(struct FDelegate& InDelegate); // Function Tiger.TigerGameModeFeatureRespawn.IsRespawnFeatureEnabledAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13fcba0
	void IsRespawnEnabledDelegateMulti__DelegateSignature(bool bIsFeatureEnabled); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.IsRespawnEnabledDelegateMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void IsRespawnEnabledDelegate__DelegateSignature(bool bIsFeatureEnabled); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.IsRespawnEnabledDelegate__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void HandleWaveStartMovement(); // Function Tiger.TigerGameModeFeatureRespawn.HandleWaveStartMovement // (Final|Native|Protected) // @ game+0x13fcaf0
	void HandleMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerGameModeFeatureRespawn.HandleMatchStateChanged // (Final|Native|Protected) // @ game+0x13fca20
	void HandleGameStateAvailable(struct ATigerGameState* InGameState); // Function Tiger.TigerGameModeFeatureRespawn.HandleGameStateAvailable // (Final|Native|Protected) // @ game+0x13fc990
	void HandleBuffRemoved(struct UTigerBuff* InBuff, int32_t InID, float InDuration); // Function Tiger.TigerGameModeFeatureRespawn.HandleBuffRemoved // (Final|Native|Protected) // @ game+0x13fc870
	void Client_UpdatePlayerLifeTokens(int32_t InLifeTokens, float InSyncedRespawnTime); // Function Tiger.TigerGameModeFeatureRespawn.Client_UpdatePlayerLifeTokens // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13fc250
	void Client_OnPlayerRespawned(); // Function Tiger.TigerGameModeFeatureRespawn.Client_OnPlayerRespawned // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13e7540
	void Client_Initialize(struct FTigerRespawnFeatureSettings InSettings); // Function Tiger.TigerGameModeFeatureRespawn.Client_Initialize // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13fc160
	void Client_DisableRespawn(); // Function Tiger.TigerGameModeFeatureRespawn.Client_DisableRespawn // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13e7190
};

// Class Tiger.TigerGameModesConfigCache
// Size: 0xb0 (Inherited: 0x28)
struct UTigerGameModesConfigCache : UObject {
	struct FTigerGameModesConfigBranch BranchConfiguration; // 0x28(0x30)
	struct FString GameModesConfigBranchName; // 0x58(0x10)
	char pad_68[0x48]; // 0x68(0x48)
};

// Class Tiger.TigerGamepad
// Size: 0xa0 (Inherited: 0x28)
struct UTigerGamepad : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct ATigerPlayerController* PlayerController; // 0x48(0x08)
	float RegularTriggerPullThreshold; // 0x50(0x04)
	float MeleeAdaptiveTriggerPullThreshold; // 0x54(0x04)
	char WeaponRightTriggerResistanceStart; // 0x58(0x01)
	char WeaponRightTriggerResistanceEnd; // 0x59(0x01)
	char WeaponRightTriggerResistanceStrength; // 0x5a(0x01)
	char WeaponLeftTriggerResistanceStart; // 0x5b(0x01)
	char WeaponLeftTriggerResistanceStrength; // 0x5c(0x01)
	char MeleeRightTriggerResistanceStart; // 0x5d(0x01)
	char MeleeRightTriggerResistanceStrength; // 0x5e(0x01)
	char pad_5F[0x41]; // 0x5f(0x41)
};

// Class Tiger.TigerLocalAIControllerBase
// Size: 0x4e0 (Inherited: 0x330)
struct ATigerLocalAIControllerBase : AAIController {
	struct UBehaviorTree* BehaviorTree; // 0x330(0x08)
	struct UTigerInteractionControllerComponent* InteractionControllerComponent; // 0x338(0x08)
	float LowShieldThreshold; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct ATigerPlayerController* LocalPlayerController; // 0x348(0x08)
	float SightRange; // 0x350(0x04)
	float LoseSightModifier; // 0x354(0x04)
	float VisionAngleDegrees; // 0x358(0x04)
	float AimOffsetAmount; // 0x35c(0x04)
	float AimAccuracy; // 0x360(0x04)
	float MinimumAcceptableDamageMultiplier; // 0x364(0x04)
	struct ATigerPlayerCameraManager* TigerPlayerCameraManager; // 0x368(0x08)
	struct UBehaviorTreeComponent* BehaviorComp; // 0x370(0x08)
	struct UAIPerceptionComponent* AIPerceptionComp; // 0x378(0x08)
	struct UBlackboardComponent* BlackboardComp; // 0x380(0x08)
	struct UMovementComponent* PlayerMovComp; // 0x388(0x08)
	struct UPathFollowingComponent* PathFollowingComp; // 0x390(0x08)
	struct APawn* LocalPawn; // 0x398(0x08)
	struct ATigerPlayer* PlayerPawn; // 0x3a0(0x08)
	char pad_3A8[0x18]; // 0x3a8(0x18)
	struct AActor* BotHasJustBeenHitBy; // 0x3c0(0x08)
	char pad_3C8[0x18]; // 0x3c8(0x18)
	struct TMap<struct AActor*, float> TemporaryIgnoredTargets; // 0x3e0(0x50)
	char pad_430[0x10]; // 0x430(0x10)
	struct ATigerCharacter* FocusCharacter; // 0x440(0x08)
	char pad_448[0x24]; // 0x448(0x24)
	float LowHealthThreshold; // 0x46c(0x04)
	char pad_470[0x18]; // 0x470(0x18)
	float BotDifficulty; // 0x488(0x04)
	char pad_48C[0x54]; // 0x48c(0x54)

	void SetTargetPosition(struct FVector InNewPosition, enum class ETigerAIPlayerTargetType TargetType); // Function Tiger.TigerLocalAIControllerBase.SetTargetPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x142af00
	void SetLureTarget(struct UObject* InNewLureTarget, enum class ETigerAIPlayerTargetType TargetType); // Function Tiger.TigerLocalAIControllerBase.SetLureTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x142add0
	void LocalUnPossess(); // Function Tiger.TigerLocalAIControllerBase.LocalUnPossess // (Native|Public|BlueprintCallable) // @ game+0x142aab0
	void LocalPossess(struct APawn* InPawn); // Function Tiger.TigerLocalAIControllerBase.LocalPossess // (Native|Public|BlueprintCallable) // @ game+0x142aa20
	struct ATigerPlayerController* GetPlayerController(); // Function Tiger.TigerLocalAIControllerBase.GetPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x13f82a0
};

// Class Tiger.TigerGameplayPerfBenchmarkController
// Size: 0x4e0 (Inherited: 0x4e0)
struct ATigerGameplayPerfBenchmarkController : ATigerLocalAIControllerBase {

	void StartBehaviorTree(struct UBehaviorTree* InBehaviorTree); // Function Tiger.TigerGameplayPerfBenchmarkController.StartBehaviorTree // (Final|Native|Public|BlueprintCallable) // @ game+0x13fd0e0
};

// Class Tiger.TigerGameplayStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameplayStatics : UGameplayStatics {
};

// Class Tiger.TigerGameSingleton
// Size: 0x78 (Inherited: 0x28)
struct UTigerGameSingleton : UObject {
	struct TMap<struct UAnimSequence*, struct UAnimMontage*> GeneratedMontages; // 0x28(0x50)
};

// Class Tiger.TigerGameViewportClient
// Size: 0x380 (Inherited: 0x360)
struct UTigerGameViewportClient : UGameViewportClient {
	char pad_360[0x20]; // 0x360(0x20)
};

// Class Tiger.TigerGasOverlay
// Size: 0x340 (Inherited: 0x108)
struct UTigerGasOverlay : UWidget {
	struct FSlateBrush WaveTextureBrush; // 0x108(0x88)
	struct FSlateBrush TargetTextureBrush; // 0x190(0x88)
	struct FSlateBrush WavePolyTextureBrush; // 0x218(0x88)
	struct FSlateBrush TargetPolyTextureBrush; // 0x2a0(0x88)
	struct ATigerPlayerController* PlayerController; // 0x328(0x08)
	char pad_330[0x10]; // 0x330(0x10)

	void UpdateGeomtery(); // Function Tiger.TigerGasOverlay.UpdateGeomtery // (Final|Native|Public|BlueprintCallable) // @ game+0x1402780
};

// Class Tiger.TigerGeneralUserSettings
// Size: 0x468 (Inherited: 0x28)
struct UTigerGeneralUserSettings : UObject {
	struct FMulticastInlineDelegate OnStreamerOptionChanged; // 0x28(0x10)
	struct UAkAudioEvent* EnableAtmosMixEvent; // 0x38(0x08)
	struct UAkAudioEvent* EnableHeadphonesEvent; // 0x40(0x08)
	struct FMulticastInlineDelegate OnQualityOptionChanged; // 0x48(0x10)
	struct FMulticastInlineDelegate OnDisplaySettingsApplied; // 0x58(0x10)
	struct FMulticastInlineDelegate OnGraphicsSettingsApplied; // 0x68(0x10)
	struct FMulticastInlineDelegate OnLanguageTextSettingChanged; // 0x78(0x10)
	struct FMulticastInlineDelegate OnGameplaySettingsChanged; // 0x88(0x10)
	char pad_98[0x8]; // 0x98(0x08)
	struct UTigerSaveSubSystem* SaveSubSystem; // 0xa0(0x08)
	struct FTigerStreamerModeSettings UserStreamerModeSettings; // 0xa8(0x10)
	struct FTigerStreamerModeSettings DefaultStreamerModeSettings; // 0xb8(0x10)
	struct FTigerAudioSettings UserAudioSettings; // 0xc8(0x70)
	struct FTigerAudioSettings DefaultAudioSettings; // 0x138(0x70)
	struct FTigerLanguageSettings UserLanguageSettings; // 0x1a8(0x28)
	struct FTigerLanguageSettings DefaultLanguageSettings; // 0x1d0(0x28)
	struct FTigerGameplaySettings UserGameplaySettings; // 0x1f8(0x08)
	struct FTigerGameplaySettings DefaultGameplaySettings; // 0x200(0x08)
	struct TArray<struct FString> AvailableTextLanguages; // 0x208(0x10)
	struct TArray<struct FString> AvailableAudioLanguages; // 0x218(0x10)
	struct TMap<struct FString, struct FString> LanguageDisplayName; // 0x228(0x50)
	char pad_278[0x10]; // 0x278(0x10)
	struct FTigerDisplaySettings TempDisplaySettings; // 0x288(0x2c)
	struct FTigerDisplaySettings UserDisplaySettings; // 0x2b4(0x2c)
	struct FTigerDisplaySettings DefaultDisplaySettings; // 0x2e0(0x2c)
	char pad_30C[0x3c]; // 0x30c(0x3c)
	struct FTigerGraphicsSettings TempGraphicsSettings; // 0x348(0x48)
	struct FTigerGraphicsSettings UserGraphicsSettings; // 0x390(0x48)
	struct FTigerGraphicsSettings DefaultGraphicsSettings; // 0x3d8(0x48)
	struct FTigerGraphicsSettingsPS5 TempGraphicsSettingsPS5; // 0x420(0x10)
	struct FTigerGraphicsSettingsPS5 UserGraphicsSettingsPS5; // 0x430(0x10)
	struct FTigerGraphicsSettingsPS5 DefaultGraphicsSettingsPS5; // 0x440(0x10)
	char pad_450[0x18]; // 0x450(0x18)

	bool WillNeedRestart(); // Function Tiger.TigerGeneralUserSettings.WillNeedRestart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14027a0
	void UpdateAvailableResolutions(); // Function Tiger.TigerGeneralUserSettings.UpdateAvailableResolutions // (Final|Native|Public|BlueprintCallable) // @ game+0x1402760
	void ToggleUseCrossplay(); // Function Tiger.TigerGeneralUserSettings.ToggleUseCrossplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1402740
	void ToggleSwapOutDefaultWeapon(); // Function Tiger.TigerGeneralUserSettings.ToggleSwapOutDefaultWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1402720
	void ToggleRotateMinimap(); // Function Tiger.TigerGeneralUserSettings.ToggleRotateMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x1402700
	void ToggleMuteGeneralChat(); // Function Tiger.TigerGeneralUserSettings.ToggleMuteGeneralChat // (Final|Native|Public|BlueprintCallable) // @ game+0x14026e0
	bool ShouldUseCrossplay(); // Function Tiger.TigerGeneralUserSettings.ShouldUseCrossplay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14026b0
	bool ShouldPromptRevertTimer(); // Function Tiger.TigerGeneralUserSettings.ShouldPromptRevertTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402680
	void SetWindowMode(int32_t InWindowMode); // Function Tiger.TigerGeneralUserSettings.SetWindowMode // (Final|Native|Public|BlueprintCallable) // @ game+0x14025f0
	void SetVolumetricFogQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetVolumetricFogQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1402560
	void SetVoipOutputDevice(struct FString InVoipOutputDevice); // Function Tiger.TigerGeneralUserSettings.SetVoipOutputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x14024c0
	void SetVoipInputDevice(struct FString InVoipInputDevice); // Function Tiger.TigerGeneralUserSettings.SetVoipInputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x1402420
	void SetVoiceChatVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetVoiceChatVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x14023a0
	void SetVisualEffectQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetVisualEffectQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1402310
	void SetViewDistanceQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetViewDistanceQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1402280
	void SetVideoVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetVideoVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1402200
	void SetUseSubtitles(bool bInUsed); // Function Tiger.TigerGeneralUserSettings.SetUseSubtitles // (Final|Native|Public|BlueprintCallable) // @ game+0x1402170
	void SetUsePushToTalk(bool bInUse); // Function Tiger.TigerGeneralUserSettings.SetUsePushToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x14020e0
	void SetUseLightShafts(bool bInUseLightShaft); // Function Tiger.TigerGeneralUserSettings.SetUseLightShafts // (Final|Native|Public|BlueprintCallable) // @ game+0x1402050
	void SetUseFilmGrain(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetUseFilmGrain // (Final|Native|Public|BlueprintCallable) // @ game+0x1401fc0
	void SetUseChromaticAberration(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetUseChromaticAberration // (Final|Native|Public|BlueprintCallable) // @ game+0x1401f30
	void SetTextureQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetTextureQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401ea0
	void SetTextureFilteringQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetTextureFilteringQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401e10
	void SetTextLanguage(struct FString InLanguage); // Function Tiger.TigerGeneralUserSettings.SetTextLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x1401d70
	void SetSubSurfaceScatteringQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetSubSurfaceScatteringQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401ce0
	void SetStreamerModeLevel(enum class ETigerStreamerModeLevel InStreamerModeLevel); // Function Tiger.TigerGeneralUserSettings.SetStreamerModeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1401c60
	void SetShadowQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetShadowQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401bd0
	void SetSfxVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetSfxVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1401b50
	void SetScreenSpaceReflectionQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetScreenSpaceReflectionQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401ac0
	void SetScramblePlayersMode(bool bInEnablePlayerScramble); // Function Tiger.TigerGeneralUserSettings.SetScramblePlayersMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1401a30
	void SetResolutionScale(float InScale); // Function Tiger.TigerGeneralUserSettings.SetResolutionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x14019b0
	void SetResolution(struct FIntPoint& InResolution); // Function Tiger.TigerGeneralUserSettings.SetResolution // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1401920
	void SetQualityPreset(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetQualityPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x1401890
	void SetMusicVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMusicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1401810
	void SetMotionBlurQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetMotionBlurQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401780
	void SetMicVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1401700
	void SetMaterialQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetMaterialQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401670
	void SetMasterVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMasterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x14015f0
	void SetLightingQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetLightingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401560
	void SetLensFlareQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetLensFlareQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x14014d0
	void SetHideMatchId(bool bInHideMatchId); // Function Tiger.TigerGeneralUserSettings.SetHideMatchId // (Final|Native|Public|BlueprintCallable) // @ game+0x1401440
	void SetHideCurrency(bool bInHideCurrency); // Function Tiger.TigerGeneralUserSettings.SetHideCurrency // (Final|Native|Public|BlueprintCallable) // @ game+0x14013b0
	void SetGamma(float InGamma); // Function Tiger.TigerGeneralUserSettings.SetGamma // (Final|Native|Public|BlueprintCallable) // @ game+0x1401330
	void SetFsrSharpening(float InSharpeningAmount); // Function Tiger.TigerGeneralUserSettings.SetFsrSharpening // (Final|Native|Public|BlueprintCallable) // @ game+0x14012b0
	void SetFsrQualityLevel(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetFsrQualityLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1401220
	void SetFrameRateLimit(float InFrameRateLimit); // Function Tiger.TigerGeneralUserSettings.SetFrameRateLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x14011a0
	void SetFoliageQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetFoliageQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1401110
	void SetEnableVSync(bool bInEnableVSync); // Function Tiger.TigerGeneralUserSettings.SetEnableVSync // (Final|Native|Public|BlueprintCallable) // @ game+0x1400ff0
	void SetEnableVoiceChat(bool bInEnabled); // Function Tiger.TigerGeneralUserSettings.SetEnableVoiceChat // (Final|Native|Public|BlueprintCallable) // @ game+0x1401080
	void SetEnableFrameRateSmoothing(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetEnableFrameRateSmoothing // (Final|Native|Public|BlueprintCallable) // @ game+0x1400f60
	void SetEnableDolbyAtmos(bool bInShouldEnableDolbyAtmos); // Function Tiger.TigerGeneralUserSettings.SetEnableDolbyAtmos // (Final|Native|Public|BlueprintCallable) // @ game+0x1400ed0
	void SetDisablePlayerMessages(bool bInDisablePlayerMessages); // Function Tiger.TigerGeneralUserSettings.SetDisablePlayerMessages // (Final|Native|Public|BlueprintCallable) // @ game+0x1400e40
	void SetDisableNotifications(bool bInDisableNotifications); // Function Tiger.TigerGeneralUserSettings.SetDisableNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x1400db0
	void SetDisableMiniMap(bool bInDisableMiniMap); // Function Tiger.TigerGeneralUserSettings.SetDisableMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1400d20
	void SetDisableKillFeed(bool bInDisableKillFeed); // Function Tiger.TigerGeneralUserSettings.SetDisableKillFeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1400c90
	void SetDialogueVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetDialogueVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1400c10
	void SetControllerSpeakerVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetControllerSpeakerVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1400b90
	void SetBloomQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetBloomQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1400b00
	void SetAudioOutputDevice(struct FString InDeviceInfo); // Function Tiger.TigerGeneralUserSettings.SetAudioOutputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x1400a60
	void SetAudioMixPreset(struct FString InMixPresetName); // Function Tiger.TigerGeneralUserSettings.SetAudioMixPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x14009c0
	void SetAudioLanguage(struct FString InLanguage); // Function Tiger.TigerGeneralUserSettings.SetAudioLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x1400920
	void SetAntiAliasingQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetAntiAliasingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1400890
	void SetAnonymousMode(bool bInEnableAnonymousMode); // Function Tiger.TigerGeneralUserSettings.SetAnonymousMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1400800
	void SetAmbientOcclusionQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetAmbientOcclusionQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x1400770
	void SetAllowBackgroundAudio(bool bInShouldAllowBackgroundAudio); // Function Tiger.TigerGeneralUserSettings.SetAllowBackgroundAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x14006e0
	void SaveSelectedAudioOutput(); // Function Tiger.TigerGeneralUserSettings.SaveSelectedAudioOutput // (Final|Native|Public|BlueprintCallable) // @ game+0x14006c0
	void SaveGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.SaveGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x14006a0
	void SaveDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.SaveDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400680
	void SaveAudioSettings(); // Function Tiger.TigerGeneralUserSettings.SaveAudioSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400660
	void ResetStreamerModeSettings(); // Function Tiger.TigerGeneralUserSettings.ResetStreamerModeSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400640
	void ResetLanguageSettings(); // Function Tiger.TigerGeneralUserSettings.ResetLanguageSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400620
	void ResetGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.ResetGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400600
	void ResetGameplaySettings(); // Function Tiger.TigerGeneralUserSettings.ResetGameplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x14005e0
	void ResetDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.ResetDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x14005c0
	void ResetAudioSettings(); // Function Tiger.TigerGeneralUserSettings.ResetAudioSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x14005a0
	void ResetAudioOutputDevice(); // Function Tiger.TigerGeneralUserSettings.ResetAudioOutputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x1400580
	void ReapplyUserGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.ReapplyUserGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400560
	void ReapplyUserDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.ReapplyUserDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400540
	bool IsResolutionAvailable(struct FIntPoint& InResolution, enum class EWindowMode InWindowMode); // Function Tiger.TigerGeneralUserSettings.IsResolutionAvailable // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400460
	bool IsPlatformPS5(); // Function Tiger.TigerGeneralUserSettings.IsPlatformPS5 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400430
	bool HasNonDefaultGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.HasNonDefaultGraphicsSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400400
	bool HasNonDefaultDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.HasNonDefaultDisplaySettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14003d0
	bool HasGraphicsChanges(); // Function Tiger.TigerGeneralUserSettings.HasGraphicsChanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14003a0
	bool HasDisplayChanges(); // Function Tiger.TigerGeneralUserSettings.HasDisplayChanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400370
	enum class EWindowMode GetTempWindowMode(); // Function Tiger.TigerGeneralUserSettings.GetTempWindowMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400340
	struct TArray<struct FString> GetNonDefaultGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.GetNonDefaultGraphicsSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14002c0
	struct TArray<struct FString> GetNonDefaultDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.GetNonDefaultDisplaySettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400240
	int32_t GetCurrentFrameRateLimitOption(); // Function Tiger.TigerGeneralUserSettings.GetCurrentFrameRateLimitOption // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400210
	bool GetAvailableResolutionsForWindowMode(struct TArray<struct FIntPoint>& OutResolutions, enum class EWindowMode InWindowMode); // Function Tiger.TigerGeneralUserSettings.GetAvailableResolutionsForWindowMode // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1400110
	int32_t FindCurrentQualityPreset(); // Function Tiger.TigerGeneralUserSettings.FindCurrentQualityPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14000e0
	void DiscardResolutionChanges(); // Function Tiger.TigerGeneralUserSettings.DiscardResolutionChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x14000c0
	void DiscardGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.DiscardGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x14000a0
	void DiscardDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.DiscardDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1400080
	void ApplyStreamerSettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyStreamerSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x13ffff0
	void ApplyGraphicsSettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x13fff60
	void ApplyDisplaySettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x13ffed0
};

// Class Tiger.TigerGeneralUserSettingsPS5
// Size: 0x28 (Inherited: 0x28)
struct UTigerGeneralUserSettingsPS5 : UObject {
};

// Class Tiger.TigerGetSharkmobAccountIdsBatcher
// Size: 0x30 (Inherited: 0x28)
struct UTigerGetSharkmobAccountIdsBatcher : UObject {
	struct UTigerFriendService* FriendService; // 0x28(0x08)
};

// Class Tiger.TigerGhostCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerGhostCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.GrimoireCardMaterialPreset
// Size: 0x90 (Inherited: 0x30)
struct UGrimoireCardMaterialPreset : UDataAsset {
	float Roughness; // 0x30(0x04)
	float Damage; // 0x34(0x04)
	float ExtraDamage; // 0x38(0x04)
	float ExtraDamageOnEdges; // 0x3c(0x04)
	struct FVector ExtraDamageMoveScale; // 0x40(0x0c)
	struct FVector BorderRoughnessSpecularity; // 0x4c(0x0c)
	float BorderAmount; // 0x58(0x04)
	struct FColor BorderColor; // 0x5c(0x04)
	float BorderRaisedAmount; // 0x60(0x04)
	struct FVector BorderRoughnessSpecularityMetalic; // 0x64(0x0c)
	struct FVector DirtMaps; // 0x70(0x0c)
	struct FColor DirtColor; // 0x7c(0x04)
	struct FVector DirtMoveXYScale; // 0x80(0x0c)
	float DirtHardness; // 0x8c(0x04)
};

// Class Tiger.TigerGrimoireCard
// Size: 0x248 (Inherited: 0x228)
struct ATigerGrimoireCard : AActor {
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	struct UTexture* FrontTexture; // 0x230(0x08)
	struct UTexture* BackfaceTextureDMNR; // 0x238(0x08)
	bool bIsFloating; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)

	void RestartFloatingAnimation(); // Function Tiger.TigerGrimoireCard.RestartFloatingAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void PlayFloatingAnimation(); // Function Tiger.TigerGrimoireCard.PlayFloatingAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	int32_t GenerateSeed(struct UTigerGrimoireEntry* InEntry); // Function Tiger.TigerGrimoireCard.GenerateSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1405cf0
};

// Class Tiger.TigerGrimoireLandingUi
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerGrimoireLandingUi : UTigerWidget {
	char pad_280[0x10]; // 0x280(0x10)
	struct TArray<struct UTigerGrimoireEntry*> CachedUnlockedEntries; // 0x290(0x10)
	struct TArray<struct UTigerGrimoireEntry*> CachedReadEntries; // 0x2a0(0x10)
	struct FTigerSuggestedArticlesData CachedSuggestedArticlesData; // 0x2b0(0x18)

	void RemoveSuggestedEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireLandingUi.RemoveSuggestedEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x1406a30
	struct UTigerGrimoireEntry* GetRandomEntry(); // Function Tiger.TigerGrimoireLandingUi.GetRandomEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x1406350
	void GetArticleEntries(struct UTigerGrimoireEntry*& OutFeaturedEntry, struct TArray<struct UTigerGrimoireEntry*>& OutSuggestedEntries, struct TArray<struct UTigerGrimoireEntry*>& OutNewEntries); // Function Tiger.TigerGrimoireLandingUi.GetArticleEntries // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1405e70
};

// Class Tiger.TigerGrimoireRichBlockDecorator
// Size: 0x810 (Inherited: 0x28)
struct UTigerGrimoireRichBlockDecorator : URichTextBlockDecorator {
	struct FSlateBrush SummaryBackground; // 0x28(0x88)
	struct UTigerGrimoireUi* GrimoireUI; // 0xb0(0x08)
	struct FButtonStyle ButtonStyle; // 0xb8(0x278)
	struct FTextBlockStyle UnlockedEntryTextStyle; // 0x330(0x270)
	struct FTextBlockStyle LockedEntryTextStyle; // 0x5a0(0x270)
};

// Class Tiger.TigerGrimoireSeasonData
// Size: 0x60 (Inherited: 0x30)
struct UTigerGrimoireSeasonData : UDataAsset {
	int32_t SeasonId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FDateTime StartDate; // 0x38(0x08)
	struct FDateTime EndDate; // 0x40(0x08)
	struct TArray<struct UTigerGrimoireEntry*> Entries; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)
};

// Class Tiger.TigerGrimoireSeasonDatabase
// Size: 0x38 (Inherited: 0x28)
struct UTigerGrimoireSeasonDatabase : UObject {
	struct TArray<struct UTigerGrimoireSeasonData*> Seasons; // 0x28(0x10)
};

// Class Tiger.TigerGrimoireDialogueWrapper
// Size: 0x40 (Inherited: 0x28)
struct UTigerGrimoireDialogueWrapper : UObject {
	struct UTigerNpcDialogueList* DialogueList; // 0x28(0x08)
	struct FString DialogueKey; // 0x30(0x10)

	struct FText GetDialogueText(); // Function Tiger.TigerGrimoireDialogueWrapper.GetDialogueText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1406080
};

// Class Tiger.TigerGrimoireEntry
// Size: 0x1f8 (Inherited: 0x30)
struct UTigerGrimoireEntry : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FText GameplayText; // 0x48(0x18)
	struct FText Heading; // 0x60(0x18)
	struct FText Description; // 0x78(0x18)
	struct UTigerGrimoireDialogueWrapper* Dialogue; // 0x90(0x08)
	struct FText Summary; // 0x98(0x18)
	struct FText UnlockSummary; // 0xb0(0x18)
	enum class ETigerGrimoireEntryMediaDisplayMode MediaDisplayMode; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct TSoftObjectPtr<UTexture2D> Image; // 0xd0(0x28)
	struct TSoftObjectPtr<UTexture2D> BackgroundImage; // 0xf8(0x28)
	struct TSoftObjectPtr<UStaticMesh> Mesh; // 0x120(0x28)
	struct TSoftObjectPtr<UFileMediaSource> Video; // 0x148(0x28)
	enum class ETigerGrimoireEntryState DefaultState; // 0x170(0x01)
	enum class ETigerGrimoireContinuationMethod TextContinuationMethod; // 0x171(0x01)
	char pad_172[0x6]; // 0x172(0x06)
	struct UGrimoireCardMaterialPreset* GrimoireCardPreset; // 0x178(0x08)
	struct FDataTableRowHandle CardQualityRow; // 0x180(0x10)
	struct FDataTableRowHandle CardBorderRow; // 0x190(0x10)
	struct TSoftObjectPtr<UTexture> FrontCardTexture; // 0x1a0(0x28)
	float DefaultOrderValue; // 0x1c8(0x04)
	float MeshScaleMultiplier; // 0x1cc(0x04)
	char pad_1D0[0x8]; // 0x1d0(0x08)
	struct FString EntryIdAsString; // 0x1d8(0x10)
	bool bHideEntry; // 0x1e8(0x01)
	char pad_1E9[0x7]; // 0x1e9(0x07)
	struct UTigerGrimoireEntry* ParentEntry; // 0x1f0(0x08)
};

// Class Tiger.TigerGrimoireCategory
// Size: 0xc8 (Inherited: 0x30)
struct UTigerGrimoireCategory : UDataAsset {
	struct FText Title; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct UDataTable* Entries; // 0x60(0x08)
	struct TArray<struct UTigerGrimoireCategory*> SubCategories; // 0x68(0x10)
	struct UTigerGrimoireCategory* ParentCategory; // 0x78(0x08)
	bool bHideCategory; // 0x80(0x01)
	enum class ETigerNewNotificationMenuOptions NewNotificationCategory; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
	struct TSoftObjectPtr<UTexture> BackfaceTextureDMNR; // 0x88(0x28)
	float DefaultOrderValue; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)

	struct TArray<struct UTigerGrimoireEntry*> GetAllEntries(bool bInIncludeSubEntries); // Function Tiger.TigerGrimoireCategory.GetAllEntries // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1405d90
};

// Class Tiger.TigerGrimoireTree
// Size: 0x148 (Inherited: 0x28)
struct UTigerGrimoireTree : UObject {
	struct TArray<struct UTigerGrimoireCategory*> Categories; // 0x28(0x10)
	struct TArray<struct TSoftObjectPtr<UTigerGrimoireCategory>> CategoryAssets; // 0x38(0x10)
	struct UStringTable* LocalisationVisiblePsStringTable; // 0x48(0x08)
	char pad_50[0xf8]; // 0x50(0xf8)

	void SearchTreeByName(struct FString InSearch, struct FDelegate& InOnCompleteDelegate); // Function Tiger.TigerGrimoireTree.SearchTreeByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1406b20
	void PopulateSearchMap(); // Function Tiger.TigerGrimoireTree.PopulateSearchMap // (Final|Native|Public|BlueprintCallable) // @ game+0x14069f0
	void GetSubEntriesForEntryId(struct FString InEntryId, bool& OutIsPartial, struct TArray<struct UTigerGrimoireEntry*>& OutSubEntries); // Function Tiger.TigerGrimoireTree.GetSubEntriesForEntryId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14064c0
	void GetSubEntriesForEntry(struct UTigerGrimoireEntry* InEntry, bool& OutIsPartial, struct TArray<struct UTigerGrimoireEntry*>& OutSubEntries); // Function Tiger.TigerGrimoireTree.GetSubEntriesForEntry // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1406380
	struct UTigerGrimoireEntry* GetEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireTree.GetEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1406120
	struct UTigerGrimoireCategory* GetCategoryForEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireTree.GetCategoryForEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1405fd0
};

// Class Tiger.TigerGrimoireUi
// Size: 0x418 (Inherited: 0x3c0)
struct UTigerGrimoireUi : UTigerSceneBackgroundUI {
	bool bNotificationIdsSetup; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct ATigerModelViewerItem* GrimoireItem; // 0x3c8(0x08)
	struct ATigerGrimoireCard* GrimoireCard; // 0x3d0(0x08)
	struct AActor* ModelCam; // 0x3d8(0x08)
	struct AActor* CloseModelCam; // 0x3e0(0x08)
	struct FName ItemRotationNodeTag; // 0x3e8(0x08)
	struct FName CloseViewerCamName; // 0x3f0(0x08)
	struct FName ViewerCamName; // 0x3f8(0x08)
	struct FName ExaminablePropsLevelName; // 0x400(0x08)
	struct AActor* ItemRotationNode; // 0x408(0x08)
	struct FName LightingSubLevelName; // 0x410(0x08)

	void TigerDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerGrimoireUi.TigerDelegate__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void SortEntries(struct TArray<struct UTigerGrimoireEntry*>& InGrimoireEntries, struct UTigerPersistentPlayerState* InPersistentPlayerState, enum class ETigerGrimoireSortType InSortType, struct TArray<struct UTigerGrimoireEntry*>& OutSortedEntries); // Function Tiger.TigerGrimoireUi.SortEntries // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1406dd0
	void SortCategories(struct TArray<struct UTigerGrimoireCategory*>& InGrimoireCategories, struct UTigerPersistentPlayerState* InPersistentPlayerState, enum class ETigerGrimoireSortType InSortType, struct TArray<struct UTigerGrimoireCategory*>& OutSortedCategories); // Function Tiger.TigerGrimoireUi.SortCategories // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1406c40
	void SetupNotificationEntryIds(); // Function Tiger.TigerGrimoireUi.SetupNotificationEntryIds // (Final|Native|Public|BlueprintCallable) // @ game+0x1406c20
	void RefreshLanguageOnGrimoireProps(); // Function Tiger.TigerGrimoireUi.RefreshLanguageOnGrimoireProps // (Final|Native|Public|BlueprintCallable) // @ game+0x1406a10
	void LoadMediaForGrimoireEntriesAsync(struct TArray<struct UTigerGrimoireEntry*>& InGrimoireEntries, struct FDelegate& OnLoadedDelegate); // Function Tiger.TigerGrimoireUi.LoadMediaForGrimoireEntriesAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1406740
	void JumpToSubCategory(struct UTigerGrimoireCategory* InSubCategory); // Function Tiger.TigerGrimoireUi.JumpToSubCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void JumpToEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireUi.JumpToEntry // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void JumpToCategory(struct UTigerGrimoireCategory* InCategory); // Function Tiger.TigerGrimoireUi.JumpToCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	bool IsGrimoireEntryMediaLoaded(struct UTigerGrimoireEntry* InEntry); // Function Tiger.TigerGrimoireUi.IsGrimoireEntryMediaLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14066b0
	struct AActor* GetFirstActorWithTag(struct ULevel* InLoadedLevel, struct FName& InTag); // Function Tiger.TigerGrimoireUi.GetFirstActorWithTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14061d0
	void FindGrimoireDisplayItems(); // Function Tiger.TigerGrimoireUi.FindGrimoireDisplayItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1405cd0
};

// Class Tiger.TigerGrimoireUnlockPickup
// Size: 0x2a0 (Inherited: 0x280)
struct ATigerGrimoireUnlockPickup : ATigerInteractiveObject {
	struct UStaticMeshComponent* PickupMesh; // 0x280(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)
};

// Class Tiger.TigerGrimoireUnlockTriggerVolume
// Size: 0x2b8 (Inherited: 0x260)
struct ATigerGrimoireUnlockTriggerVolume : ATriggerVolume {
	struct TArray<struct FTigerGrimoireEntryTimeThreshold> EntriesToUnlock; // 0x260(0x10)
	char pad_270[0x10]; // 0x270(0x10)
	struct FString LocationName; // 0x280(0x10)
	char pad_290[0x28]; // 0x290(0x28)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerGrimoireUnlockTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x1406920
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerGrimoireUnlockTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x1406850
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerGrimoireUnlockTriggerVolume.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1406620
};

// Class Tiger.TigerGroupCoordinator
// Size: 0x130 (Inherited: 0xb0)
struct UTigerGroupCoordinator : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct TArray<struct UTigerPlayerGroup*> Groups; // 0xb8(0x10)
	char pad_C8[0x68]; // 0xc8(0x68)

	struct UTigerPlayerGroup* GetGroupFromPlayerController(struct ATigerPlayerController* TigerPlayerController); // Function Tiger.TigerGroupCoordinator.GetGroupFromPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x14062b0
};

// Class Tiger.TigerMapMarkerProxy
// Size: 0x68 (Inherited: 0x28)
struct UTigerMapMarkerProxy : UObject {
	struct FMulticastInlineDelegate OnUpdated; // 0x28(0x10)
	bool bIsDynamicIcon; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t MarkerId; // 0x3c(0x04)
	char pad_40[0x18]; // 0x40(0x18)
	struct UUserWidget* WidgetType; // 0x58(0x08)
	char pad_60[0x8]; // 0x60(0x08)

	struct UTigerMapMarkerProxy* Show(); // Function Tiger.TigerMapMarkerProxy.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x1435a80
	struct UTigerMapMarkerProxy* SetWidgetType(struct UUserWidget* InWidgetType); // Function Tiger.TigerMapMarkerProxy.SetWidgetType // (Final|Native|Public|BlueprintCallable) // @ game+0x1435980
	struct UTigerMapMarkerProxy* SetRotation(float NewRotation); // Function Tiger.TigerMapMarkerProxy.SetRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x1435870
	struct UTigerMapMarkerProxy* SetLocation(struct FVector WorldLocation); // Function Tiger.TigerMapMarkerProxy.SetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x14356b0
	struct UTigerMapMarkerProxy* SetAlignment(struct FVector2D NewAlignment); // Function Tiger.TigerMapMarkerProxy.SetAlignment // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1435490
	bool IsVisible(); // Function Tiger.TigerMapMarkerProxy.IsVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14350b0
	struct UTigerMapMarkerProxy* Hide(); // Function Tiger.TigerMapMarkerProxy.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x1434fd0
	struct UUserWidget* GetWidgetType(); // Function Tiger.TigerMapMarkerProxy.GetWidgetType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434ee0
	float GetRotation(); // Function Tiger.TigerMapMarkerProxy.GetRotation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434df0
	struct FVector GetLocation(); // Function Tiger.TigerMapMarkerProxy.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434c30
	struct FVector2D GetAlignment(); // Function Tiger.TigerMapMarkerProxy.GetAlignment // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434a00
};

// Class Tiger.TigerGroupMemberMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerGroupMemberMarkerProxy : UTigerMapMarkerProxy {
	char PlayerIndex; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerGroupSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerGroupSettings : USharkLocalDeveloperSettings {
	struct FTigerGroupSettingsData GroupSettingsData; // 0x38(0x10)
};

// Class Tiger.TigerGroupStateComponent
// Size: 0x190 (Inherited: 0xb0)
struct UTigerGroupStateComponent : UActorComponent {
	struct FMulticastInlineDelegate OnGroupMembersChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnPlayerIndexChanged; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnCrossplaySettingSynced; // 0xd0(0x10)
	struct FTigerOtherGroupMembersData OtherGroupMembersData; // 0xe0(0x20)
	char pad_100[0x18]; // 0x100(0x18)
	struct FMulticastInlineDelegate OnMarkedAsGroupMember; // 0x118(0x10)
	struct FMulticastInlineDelegate OnRemoveMarkedAsGroupMember; // 0x128(0x10)
	struct UTigerCompassMarkerComponent* CompassComponent; // 0x138(0x08)
	struct ATigerPlayerController* LocalPlayerController; // 0x140(0x08)
	struct UTigerGroupMemberMarkerProxy* GroupMemberMapMarkerProxy; // 0x148(0x08)
	char GroupMemberId; // 0x150(0x01)
	char pad_151[0x3]; // 0x151(0x03)
	struct FTigerGroupId PreviousGroupID; // 0x154(0x10)
	char pad_164[0x4]; // 0x164(0x04)
	struct TArray<int32_t> GroupMemberIDs; // 0x168(0x10)
	char pad_178[0x18]; // 0x178(0x18)

	bool ValidGroupID(); // Function Tiger.TigerGroupStateComponent.ValidGroupID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140c580
	void TeamMembersChanged__DelegateSignature(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*>& InPreviousGroupMembers); // DelegateFunction Tiger.TigerGroupStateComponent.TeamMembersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void Server_ReportCrossplaySettings(enum class ETigerMatchmakingPlatform InClientSetting, struct ATigerPlayerState* InOtherTigerPlayerState); // Function Tiger.TigerGroupStateComponent.Server_ReportCrossplaySettings // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x140c2f0
	void Server_RefreshGroupMembers(); // Function Tiger.TigerGroupStateComponent.Server_RefreshGroupMembers // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x140c2a0
	void Server_LockAndSyncCrossplaySettings(enum class ETigerMatchmakingPlatform InInstigatorSetting); // Function Tiger.TigerGroupStateComponent.Server_LockAndSyncCrossplaySettings // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x140c220
	bool PlayerIsInAGroup(); // Function Tiger.TigerGroupStateComponent.PlayerIsInAGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140c1a0
	void OnUserEnteredVoipRoom(struct FTigerPersistentVoipID& InPersistentVoipId); // Function Tiger.TigerGroupStateComponent.OnUserEnteredVoipRoom // (Final|Native|Protected|HasOutParms) // @ game+0x140c0f0
	void OnRep_OnGroupMemberIdChanged(char InOldGroupMemberId); // Function Tiger.TigerGroupStateComponent.OnRep_OnGroupMemberIdChanged // (Final|Native|Protected) // @ game+0x140c050
	void OnRep_OnGroupChanged(); // Function Tiger.TigerGroupStateComponent.OnRep_OnGroupChanged // (Final|Native|Protected) // @ game+0x140c030
	void OnPlayerVoiceStatusChanged(struct FTigerPersistentPlayerID& InAffectedPlayer, bool bInWasSilenced); // Function Tiger.TigerGroupStateComponent.OnPlayerVoiceStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x140bf30
	void OnCrossplaySyncTimeout(); // Function Tiger.TigerGroupStateComponent.OnCrossplaySyncTimeout // (Final|Native|Protected) // @ game+0x140bca0
	bool IsGroupMemberWithLocalPlayer(); // Function Tiger.TigerGroupStateComponent.IsGroupMemberWithLocalPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ba60
	bool IsGroupMemberByPersistentPlayerId(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerGroupStateComponent.IsGroupMemberByPersistentPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140b960
	bool IsGroupMember(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerGroupStateComponent.IsGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140b8c0
	void HandlePlayerStateAdded(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerGroupStateComponent.HandlePlayerStateAdded // (Final|Native|Protected) // @ game+0x140aec0
	void HandleLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerGroupStateComponent.HandleLifeStatusChanged // (Final|Native|Protected) // @ game+0x140ae40
	char GetPlayerIndex(); // Function Tiger.TigerGroupStateComponent.GetPlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ad50
	struct TArray<struct ATigerPlayerState*> GetOtherGroupMembersBP(); // Function Tiger.TigerGroupStateComponent.GetOtherGroupMembersBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140acd0
	struct TArray<int32_t> GetOtherGroupMemberIDsBP(); // Function Tiger.TigerGroupStateComponent.GetOtherGroupMemberIDsBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ac50
	void ExecuteForAllOtherMembers(struct FDelegate& InDelegate); // Function Tiger.TigerGroupStateComponent.ExecuteForAllOtherMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x140a7b0
	void ExecuteDelegate__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerGroupStateComponent.ExecuteDelegate__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	int32_t CurrentPresentGroupMemberCount(); // Function Tiger.TigerGroupStateComponent.CurrentPresentGroupMemberCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140a620
	void Client_UpdateGroupMembers(struct FTigerOtherGroupMembersData InOtherGroupMembers); // Function Tiger.TigerGroupStateComponent.Client_UpdateGroupMembers // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x140a560
	void Client_ReportCrossplaySettings(enum class ETigerMatchmakingPlatform InSyncedSetting); // Function Tiger.TigerGroupStateComponent.Client_ReportCrossplaySettings // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x140a4e0
	void Client_LockArchetypeSelection(struct ATigerPlayerState* InPlayerState, enum class ETigerPowerKitType InArchetype); // Function Tiger.TigerGroupStateComponent.Client_LockArchetypeSelection // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x140a410
	void Client_LockAndSyncCrossplaySettings(struct ATigerPlayerState* InOtherTigerPlayerState); // Function Tiger.TigerGroupStateComponent.Client_LockAndSyncCrossplaySettings // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13b6420
	bool AnyOtherMemberAlive(); // Function Tiger.TigerGroupStateComponent.AnyOtherMemberAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140a1b0
};

// Class Tiger.TigerGroupUIWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerGroupUIWidget : UTigerWidget {

	void OnGroupMemberReadyStatusChanged(struct ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking); // Function Tiger.TigerGroupUIWidget.OnGroupMemberReadyStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void ClearGroupMembers(); // Function Tiger.TigerGroupUIWidget.ClearGroupMembers // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void AddGroupMemberToCanvas(struct ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking); // Function Tiger.TigerGroupUIWidget.AddGroupMemberToCanvas // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerGuardVolume
// Size: 0x240 (Inherited: 0x228)
struct ATigerGuardVolume : AActor {
	bool bTriggerThreatState; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct TArray<struct UShapeComponent*> Colliders; // 0x230(0x10)

	void EndOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerGuardVolume.EndOverlappedActor // (Final|Native|Public) // @ game+0x140a650
	void BeginOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerGuardVolume.BeginOverlappedActor // (Final|Native|Public|HasOutParms) // @ game+0x140a1e0
};

// Class Tiger.TigerHavenTriggerVolume
// Size: 0x260 (Inherited: 0x260)
struct ATigerHavenTriggerVolume : ATriggerVolume {
};

// Class Tiger.TigerHaven
// Size: 0x270 (Inherited: 0x228)
struct ATigerHaven : AActor {
	struct FString OverrideFinalHavenIdentifier; // 0x228(0x10)
	struct USplineComponent* HolyIncenseOuterSpline; // 0x238(0x08)
	struct USplineComponent* HolyIncenseInnerSpline; // 0x240(0x08)
	bool bUseInnerHolyIncenseSpline; // 0x248(0x01)
	char pad_249[0x27]; // 0x249(0x27)
};

// Class Tiger.TigerHavenCapturePoint
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerHavenCapturePoint : AActor {
	struct FText PointActivatedText; // 0x228(0x18)
	float HavenMarkerHeightOffset; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct ATigerHaven* AssignedHaven; // 0x248(0x08)
	char pad_250[0x7c]; // 0x250(0x7c)
	bool bRevealedEveryone; // 0x2cc(0x01)
	char pad_2CD[0x3]; // 0x2cd(0x03)

	void StatusChanged(enum class ETigerCapturePointStatus Status); // Function Tiger.TigerHavenCapturePoint.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRep_RevealEveryone(); // Function Tiger.TigerHavenCapturePoint.OnRep_RevealEveryone // (Final|Native|Private) // @ game+0x140c0d0
	void OnPlayerDeath(struct ATigerPlayer* DeadPlayer, struct ATigerPlayer* InstigatorPlayer); // Function Tiger.TigerHavenCapturePoint.OnPlayerDeath // (Final|Native|Private) // @ game+0x140be60
	void OnOverlapEnd(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerHavenCapturePoint.OnOverlapEnd // (Final|Native|Private) // @ game+0x140bd90
	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerHavenCapturePoint.OnOverlapBegin // (Final|Native|Private) // @ game+0x140bcc0
	void OnAssaultFinished(); // Function Tiger.TigerHavenCapturePoint.OnAssaultFinished // (Final|Native|Private) // @ game+0x140bc80
	void Multicast_OnEnableCapturePoint(); // Function Tiger.TigerHavenCapturePoint.Multicast_OnEnableCapturePoint // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0xba5780
	void Multicast_OnCurrentCaptureeChanged(struct ATigerPlayer* Capturee, enum class ETigerCapturePointStatus Status, float AuthCurrentCaptureTime); // Function Tiger.TigerHavenCapturePoint.Multicast_OnCurrentCaptureeChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x140bb70
};

// Class Tiger.TigerHealingBuff
// Size: 0x270 (Inherited: 0x260)
struct UTigerHealingBuff : UTigerBuff {
	float FlatHealPerSecond; // 0x260(0x04)
	float PercentageHealPerSecond; // 0x264(0x04)
	struct UTigerCharacterEffect* HealEffect; // 0x268(0x08)
};

// Class Tiger.TigerHealingBuffInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerHealingBuffInstance : UTigerBuffInstance {
	struct UTigerHealingBuff* BuffConfig; // 0x88(0x08)
};

// Class Tiger.TigerHealthBarUI
// Size: 0x2a8 (Inherited: 0x260)
struct UTigerHealthBarUI : UUserWidget {
	struct FMulticastInlineDelegate OnHealthChanged; // 0x260(0x10)
	struct ATigerCharacter* TigerCharacterOwner; // 0x270(0x08)
	struct UMaterialInstanceDynamic* HealthBarMaterial; // 0x278(0x08)
	float LostHealthDelay; // 0x280(0x04)
	float LostHealthBarSpeed; // 0x284(0x04)
	float HealthAmountPerBar; // 0x288(0x04)
	float WidthBetweenSegments; // 0x28c(0x04)
	float LostHealthPercentage; // 0x290(0x04)
	char pad_294[0x10]; // 0x294(0x10)
	float DefaultHealthAmount; // 0x2a4(0x04)

	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealthPercentage); // DelegateFunction Tiger.TigerHealthBarUI.TigerDelegateHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SetOwner(struct ATigerCharacter* TigerCharacter); // Function Tiger.TigerHealthBarUI.SetOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x140c450
	void OnSegmentEmptied(float HorizontalProgress); // Function Tiger.TigerHealthBarUI.OnSegmentEmptied // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnHealthLost(); // Function Tiger.TigerHealthBarUI.OnHealthLost // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	float GetRecentDamageTaken(); // Function Tiger.TigerHealthBarUI.GetRecentDamageTaken // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x140ad70
	float GetNumberOfBars(); // Function Tiger.TigerHealthBarUI.GetNumberOfBars // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x140ac20
	float GetCurrentShield(); // Function Tiger.TigerHealthBarUI.GetCurrentShield // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x140aa50
	float GetCurrentMaxHealth(); // Function Tiger.TigerHealthBarUI.GetCurrentMaxHealth // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x140aa20
	float GetCurrentHealth(); // Function Tiger.TigerHealthBarUI.GetCurrentHealth // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x140a9f0
};

// Class Tiger.TigerHeatmapCollector
// Size: 0x140 (Inherited: 0x28)
struct UTigerHeatmapCollector : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)
	struct TMap<struct ATigerCharacter*, struct FTigerCampingData> CampingData; // 0xe8(0x50)
	struct FTimerHandle CharacterMovementTimerHandle; // 0x138(0x08)

	void RecordCharacterMovement(); // Function Tiger.TigerHeatmapCollector.RecordCharacterMovement // (Final|Native|Private) // @ game+0x140c1d0
};

// Class Tiger.TigerHeightenedSensesActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerHeightenedSensesActor : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerHighTierLootGroup
// Size: 0x38 (Inherited: 0x28)
struct UTigerHighTierLootGroup : UObject {
	struct FLinearColor TextColor; // 0x28(0x10)

	struct FLinearColor GetTextColor(); // Function Tiger.TigerHighTierLootGroup.GetTextColor // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x140add0
};

// Class Tiger.TigerHighTierLootComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerHighTierLootComponent : UActorComponent {
	struct TSoftClassPtr<UObject> HighTierLootGroup; // 0xb0(0x28)
};

// Class Tiger.TigerHitVerificationSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerHitVerificationSettings : UDeveloperSettings {
	bool bEnableVerification; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float MaxEndPointDistance; // 0x3c(0x04)
	float MaxStartingPointDistance; // 0x40(0x04)
	float SkipSimulatePathDistanceSquared; // 0x44(0x04)
	float MaxAngleDeviationFromPredictedPath; // 0x48(0x04)
	float MaxDistanceFromProjectilePath; // 0x4c(0x04)
	int32_t MinPathCountForLOSSubdivideCheck; // 0x50(0x04)
	int32_t MinPathCountForComplexLOSCheck; // 0x54(0x04)
	int32_t MaxComplexLOSChecks; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Tiger.TigerHolyIncense
// Size: 0x2b0 (Inherited: 0x228)
struct ATigerHolyIncense : AActor {
	struct FMulticastInlineDelegate OnAssaultFinished; // 0x228(0x10)
	struct UTigerScriptedTexture* Texture; // 0x238(0x08)
	struct UTigerGasOverlay* SlateGasOverlay; // 0x240(0x08)
	struct UProceduralMeshComponent* ProceduralMesh; // 0x248(0x08)
	struct UTigerHolyIncenseWaveComponent* WaveComponent; // 0x250(0x08)
	struct USplineComponent* LevelBorder; // 0x258(0x08)
	float WallMinHeight; // 0x260(0x04)
	float WallMaxHeight; // 0x264(0x04)
	struct UProceduralMeshComponent* PreviewMesh; // 0x268(0x08)
	struct UMaterialInterface* GasMaterial; // 0x270(0x08)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x278(0x08)
	struct TArray<struct FVector2D> InitialVertices; // 0x280(0x10)
	struct ATigerHaven* FinalHaven; // 0x290(0x08)
	float NumVerticesPerKilometer; // 0x298(0x04)
	enum class ETigerGameType ValidForGameType; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float InitialArea; // 0x2a0(0x04)
	float InitialCircumference; // 0x2a4(0x04)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	bool UpdateAndRenderSlateGasOverlay(struct UTigerGasOverlay* InGasOverlay); // Function Tiger.TigerHolyIncense.UpdateAndRenderSlateGasOverlay // (Final|Native|Public|BlueprintCallable) // @ game+0x140c4e0
	void SetGasMaterial(struct UMaterialInterface* InMaterial); // Function Tiger.TigerHolyIncense.SetGasMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x140c3c0
	bool RenderToTexture(); // Function Tiger.TigerHolyIncense.RenderToTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x140c1f0
	void PreviewWallMesh(); // Function Tiger.TigerHolyIncense.PreviewWallMesh // (Final|Native|Private|BlueprintCallable) // @ game+0xb5ee20
	bool IsLocationInsideHolyIncense(struct FVector2D& InLocation, bool bInIncludeScheduledWave); // Function Tiger.TigerHolyIncense.IsLocationInsideHolyIncense // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ba90
	struct UTigerGasOverlay* InitializeScriptedTexture(struct FSlateBrush InWaveBrush, struct FSlateBrush InTargetBrush, struct FSlateBrush InWavePolyBrush, struct FSlateBrush InTargetPolyBrush); // Function Tiger.TigerHolyIncense.InitializeScriptedTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x140af80
	struct UTextureRenderTarget2D* InitializeRenderTexture(); // Function Tiger.TigerHolyIncense.InitializeRenderTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x140af50
	float GetTimeSecondsUntilCurrentWaveBegins(); // Function Tiger.TigerHolyIncense.GetTimeSecondsUntilCurrentWaveBegins // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ae10
	float GetSecondsUntilCurrentWaveEnds(); // Function Tiger.TigerHolyIncense.GetSecondsUntilCurrentWaveEnds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ada0
	float GetDistanceToBorder(struct FVector2D& Location, bool bIncludeScheduledWave, struct FVector2D& OutClosestLocation, struct FVector2D& OutClosestNormal); // Function Tiger.TigerHolyIncense.GetDistanceToBorder // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x140aa80
	float GetCurrentDamageInterval(); // Function Tiger.TigerHolyIncense.GetCurrentDamageInterval // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140a9c0
	float GetCurrentDamageAmount(); // Function Tiger.TigerHolyIncense.GetCurrentDamageAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140a990
	bool GetClosestLocationOnNextWaveWall(struct FVector2D& Location, struct FVector2D& OutClosestLocation, bool& bIsOutsidePlayableArea); // Function Tiger.TigerHolyIncense.GetClosestLocationOnNextWaveWall // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x140a860
	void ForceBlueprintInitialise(); // Function Tiger.TigerHolyIncense.ForceBlueprintInitialise // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerHolyIncenseWaveComponent
// Size: 0x220 (Inherited: 0xb0)
struct UTigerHolyIncenseWaveComponent : UActorComponent {
	struct FMulticastInlineDelegate OnWaveStartMovement; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnWaveStopped; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnWaveRevealed; // 0xd0(0x10)
	int32_t FallbackSeed; // 0xe0(0x04)
	int32_t FallbackHavenSeed; // 0xe4(0x04)
	bool bTestFallbackSeed; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct TArray<struct UDataTable*> WaveDataTables; // 0xf0(0x10)
	struct UCurveFloat* WaveProgressSmoothingCurve; // 0x100(0x08)
	int32_t NumAvoidancePoints; // 0x108(0x04)
	bool bRetraceInnerAndOuterMapPaths; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	float MapGradientThickness; // 0x110(0x04)
	float TickCollisionAndMapTextureInterval; // 0x114(0x04)
	float CircumferenceKmForMinimumCollisionVertices; // 0x118(0x04)
	float CircumferenceKmForMaximumCollisionVertices; // 0x11c(0x04)
	int32_t MinimumCollisionVertices; // 0x120(0x04)
	int32_t MaximumCollisionVertices; // 0x124(0x04)
	bool bUseInteriorTriangulation; // 0x128(0x01)
	bool bUseFallbackTriangulation; // 0x129(0x01)
	char pad_12A[0x6]; // 0x12a(0x06)
	struct UMaterialParameterCollection* RedGasParameterCollection; // 0x130(0x08)
	int32_t MinimumSimulatedVertices; // 0x138(0x04)
	int32_t MaximumSimulatedVertices; // 0x13c(0x04)
	bool bRedistributeVertices; // 0x140(0x01)
	bool bOutputWaveGeneration; // 0x141(0x01)
	char pad_142[0x2]; // 0x142(0x02)
	int32_t RepeatWaveGeneration; // 0x144(0x04)
	struct TArray<struct FTigerWaveData> Waves; // 0x148(0x10)
	struct FTigerHolyIncenseSettings Settings; // 0x158(0x08)
	struct TArray<struct FTigerRevealedWave> RevealedWaves; // 0x160(0x10)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x170(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x178(0x08)
	char pad_180[0x4]; // 0x180(0x04)
	float AssaultStartTime; // 0x184(0x04)
	char pad_188[0x48]; // 0x188(0x48)
	float DefaultOverlapToleranceCm; // 0x1d0(0x04)
	float OverlapToleranceIncreasePerWaveCm; // 0x1d4(0x04)
	float OverlapToleranceFailureIncrementCm; // 0x1d8(0x04)
	float OverlapToleranceMinimumCm; // 0x1dc(0x04)
	int32_t OverlapToleranceFailuresBeforeIncrement; // 0x1e0(0x04)
	int32_t OverlapTestingPerformanceVertexCount; // 0x1e4(0x04)
	float OverlapInterpStepDistanceCm; // 0x1e8(0x04)
	float OverlapMaximumInterpSteps; // 0x1ec(0x04)
	char pad_1F0[0x30]; // 0x1f0(0x30)

	void TigerOnWaveStopped__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveStopped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnWaveStartMovement__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveStartMovement__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnWaveRevealed__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveRevealed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_Settings(); // Function Tiger.TigerHolyIncenseWaveComponent.OnRep_Settings // (Final|Native|Private) // @ game+0x1411300
	void OnRep_RevealedWaves(); // Function Tiger.TigerHolyIncenseWaveComponent.OnRep_RevealedWaves // (Final|Native|Private) // @ game+0x14112e0
	void OnMatchSettingsSet(); // Function Tiger.TigerHolyIncenseWaveComponent.OnMatchSettingsSet // (Final|Native|Private) // @ game+0x1411190
	void Multicast_SettingsChanged(struct FTigerHolyIncenseSettings NewSettings); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_SettingsChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1411040
	void Multicast_SetElapsedAssaultTime(float InElapsedTime, float InTimeMultiplier); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_SetElapsedAssaultTime // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1410f70
	void Multicast_RevealWave(struct FTigerRevealedWave RevealedWave); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_RevealWave // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1410eb0
	void Multicast_BeginAssaults(float StartTime); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_BeginAssaults // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1410c20
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerHolyIncenseWaveComponent.MatchStateChanged // (Final|Native|Private) // @ game+0x1410b50
	float GetWaveProgress(); // Function Tiger.TigerHolyIncenseWaveComponent.GetWaveProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1410ad0
	int32_t GetNumberOfWaves(); // Function Tiger.TigerHolyIncenseWaveComponent.GetNumberOfWaves // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1410ab0
	int32_t GetCurrentWaveIndex(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentWaveIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14109e0
	float GetCurrentCircumference(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentCircumference // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14109b0
	float GetCurrentArea(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1410990
};

// Class Tiger.TigerHookingBuff
// Size: 0x260 (Inherited: 0x260)
struct UTigerHookingBuff : UTigerBuff {
};

// Class Tiger.TigerHookedBuff
// Size: 0x260 (Inherited: 0x260)
struct UTigerHookedBuff : UTigerBuff {
};

// Class Tiger.TigerHook
// Size: 0x2e8 (Inherited: 0x228)
struct ATigerHook : AActor {
	struct USphereComponent* HookTrigger; // 0x228(0x08)
	struct FVector HookLocation; // 0x230(0x0c)
	struct FVector TargetLocation; // 0x23c(0x0c)
	struct FVector StartLocation; // 0x248(0x0c)
	enum class ETigerHookState HookState; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct UTigerHookConfig* Config; // 0x258(0x08)
	float CurrentThrowTime; // 0x260(0x04)
	int32_t HookingBuffID; // 0x264(0x04)
	struct ATigerCharacter* HitCharacter; // 0x268(0x08)
	struct FVector PullBackStartAtLocation; // 0x270(0x0c)
	struct FVector PullBackStopAtLocation; // 0x27c(0x0c)
	float TimeUntilPulledBack; // 0x288(0x04)
	float CurrentTimeLeftUntilPulledBack; // 0x28c(0x04)
	float HitCharacterCameraRotateCurrentTime; // 0x290(0x04)
	struct FRotator HitCharacterCameraRotationStart; // 0x294(0x0c)
	struct FRotator HitCharacterRotationStart; // 0x2a0(0x0c)
	struct FRotator HitCharacterCameraRotationEnd; // 0x2ac(0x0c)
	struct FVector OriginalVelocity; // 0x2b8(0x0c)
	float CharacterVelocityCutoffCurrentTime; // 0x2c4(0x04)
	struct UAnimMontage* ThrowMontage; // 0x2c8(0x08)
	struct UAnimMontage* ReelMontage; // 0x2d0(0x08)
	struct FTimerHandle PreReelTimerHandle; // 0x2d8(0x08)
	char pad_2E0[0x8]; // 0x2e0(0x08)

	void OnStartThrow(); // Function Tiger.TigerHook.OnStartThrow // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnOwnerMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function Tiger.TigerHook.OnOwnerMovementUpdated // (Final|Native|Private|HasDefaults) // @ game+0x14111b0
	void OnNothingHit(); // Function Tiger.TigerHook.OnNothingHit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnNonCharacterHit(struct AActor* Actor); // Function Tiger.TigerHook.OnNonCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnCharacterHit(struct ATigerCharacter* Character); // Function Tiger.TigerHook.OnCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_StartThrow(struct FVector InStartLocation, struct FVector InTargetLocation); // Function Tiger.TigerHook.Multicast_StartThrow // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x14110d0
	void Multicast_OnHookNothingHit(); // Function Tiger.TigerHook.Multicast_OnHookNothingHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13e7c90
	void Multicast_OnHookNonCharacterHit(struct AActor* Actor); // Function Tiger.TigerHook.Multicast_OnHookNonCharacterHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1410e20
	void Multicast_OnHookCharacterHit(struct FVector StopPullLocation, struct ATigerCharacter* Character, float TimeUntilReturn, bool bCharacterAlive); // Function Tiger.TigerHook.Multicast_OnHookCharacterHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x1410cb0
	void AuthHookBlockingHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerHook.AuthHookBlockingHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x1410620
	void AuthHookBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerHook.AuthHookBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x14103f0
};

// Class Tiger.TigerHorizontalArchetypeSelectorUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerHorizontalArchetypeSelectorUI : UTigerWidget {
	struct UTigerGameInstance* TigerGameInstance; // 0x280(0x08)

	struct UUserWidget* CreateWidgetForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateWidgetForArchetype // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void CreateDivider(); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateDivider // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void CreateArchetypeWidgetsForClan(struct UTigerPlayerClanData* InClanData); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateArchetypeWidgetsForClan // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerHSensesTargetComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerHSensesTargetComponent : UActorComponent {
	float HeartAnimTime; // 0xb0(0x04)
	float HeartRate; // 0xb4(0x04)
	float HeartRateTarget; // 0xb8(0x04)
	float HeartRateNone; // 0xbc(0x04)
	float HeartRateSuspicious; // 0xc0(0x04)
	float HeartRateThreatened; // 0xc4(0x04)
	float HeartRateVariance; // 0xc8(0x04)
	float HeartRateChangeRate; // 0xcc(0x04)
	struct UCurveFloat* HeartAnimRateCurve; // 0xd0(0x08)
};

// Class Tiger.TigerUIColorSet
// Size: 0x270 (Inherited: 0x30)
struct UTigerUIColorSet : UDataAsset {
	struct FLinearColor ColorArray[0x24]; // 0x30(0x240)

	struct FLinearColor GetColor(enum class ETigerUIColor UIColor, enum class ETigerColourSpace ColourSpace); // Function Tiger.TigerUIColorSet.GetColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14108b0
};

// Class Tiger.TigerHUDSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerHUDSettings : USharkLocalDeveloperSettings {
	enum class ETigerDamageNumberAmount DamageNumberAmountSetting; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerImageUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerImageUI : UTigerWidget {

	struct UImage* GetImage(); // Function Tiger.TigerImageUI.GetImage // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerImpendingCollisionCalculator
// Size: 0x58 (Inherited: 0x28)
struct UTigerImpendingCollisionCalculator : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerInboxRewardSectionWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerInboxRewardSectionWidget : UTigerWidget {

	struct TArray<struct FTigerItemId> ParseRewardIdsFromString(struct FString inString); // Function Tiger.TigerInboxRewardSectionWidget.ParseRewardIdsFromString // (Final|Native|Public|BlueprintCallable) // @ game+0x1411410
};

// Class Tiger.TigerInboxService
// Size: 0x90 (Inherited: 0x28)
struct UTigerInboxService : UObject {
	char pad_28[0x68]; // 0x28(0x68)
};

// Class Tiger.TigerInboxUI
// Size: 0x448 (Inherited: 0x3c0)
struct UTigerInboxUI : UTigerSceneBackgroundUI {
	struct TArray<struct FTigerInboxMessage> MessageList; // 0x3c0(0x10)
	struct TArray<uint64_t> ReadIdsCache; // 0x3d0(0x10)
	struct TArray<uint64_t> DeletedIdsCache; // 0x3e0(0x10)
	struct TMap<uint64_t, uint32_t> MessageLookup; // 0x3f0(0x50)
	bool bIsRefreshing; // 0x440(0x01)
	char pad_441[0x7]; // 0x441(0x07)

	void UpdateNotificationState(); // Function Tiger.TigerInboxUI.UpdateNotificationState // (Final|Native|Protected|BlueprintCallable) // @ game+0x1415e40
	void SendStatusUpdatesToBackend(); // Function Tiger.TigerInboxUI.SendStatusUpdatesToBackend // (Final|Native|Protected) // @ game+0x1415350
	void RebuildMessageLookup(); // Function Tiger.TigerInboxUI.RebuildMessageLookup // (Final|Native|Protected) // @ game+0x14150c0
	void OnGetInboxSucceeded(struct FTigerInbox& InInbox); // Function Tiger.TigerInboxUI.OnGetInboxSucceeded // (Final|Native|Protected|HasOutParms) // @ game+0x1414eb0
	void OnGetInboxFailed(struct FString InErrorMessage); // Function Tiger.TigerInboxUI.OnGetInboxFailed // (Final|Native|Protected) // @ game+0x1414e10
	void OnFetchMessageInfoListComplete(bool InSuccess); // Function Tiger.TigerInboxUI.OnFetchMessageInfoListComplete // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void MarkMessageRead(struct FTigerInboxMessage& InMessage); // Function Tiger.TigerInboxUI.MarkMessageRead // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1414bc0
	void MarkMessageDeleted(struct FTigerInboxMessage& InMessage); // Function Tiger.TigerInboxUI.MarkMessageDeleted // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1414ad0
	bool IsStillLoggedIn(); // Function Tiger.TigerInboxUI.IsStillLoggedIn // (Final|Native|Private|Const) // @ game+0x1414960
	void FetchMessages(); // Function Tiger.TigerInboxUI.FetchMessages // (Final|Native|Protected|BlueprintCallable) // @ game+0x1414690
};

// Class Tiger.TigerIndoorComponent
// Size: 0x480 (Inherited: 0x480)
struct UTigerIndoorComponent : UBoxComponent {
};

// Class Tiger.TigerIndoorVolume
// Size: 0x260 (Inherited: 0x260)
struct ATigerIndoorVolume : ATriggerVolume {
};

// Class Tiger.TigerIngameMenuWidget
// Size: 0x2d0 (Inherited: 0x298)
struct UTigerIngameMenuWidget : UTigerMenuWidget {
	struct TArray<struct UTigerIngameSubmenuWidget*> SubmenuClasses; // 0x298(0x10)
	struct TArray<struct UTigerIngameSubmenuWidget*> SubmenuWidgets; // 0x2a8(0x10)
	int32_t ActiveMenuIndex; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct UTigerIngameSubmenuWidget* SelectedMenu; // 0x2c0(0x08)
	bool bShouldShowPlayerCurrency; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	void ToggleExistingSubmenu(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.ToggleExistingSubmenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1415b30
	void SelectMenuToTheRight(); // Function Tiger.TigerIngameMenuWidget.SelectMenuToTheRight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void SelectMenuToTheLeft(); // Function Tiger.TigerIngameMenuWidget.SelectMenuToTheLeft // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void SelectMenu(struct UTigerIngameSubmenuWidget* NewSelectedMenu); // Function Tiger.TigerIngameMenuWidget.SelectMenu // (Final|Native|Protected|BlueprintCallable) // @ game+0x14152c0
	void OnMenuSelected(); // Function Tiger.TigerIngameMenuWidget.OnMenuSelected // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void LocalPlayerSpawned(); // Function Tiger.TigerIngameMenuWidget.LocalPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsSubmenuSelected(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.IsSubmenuSelected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414a30
	bool IsSubmenuOpen(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.IsSubmenuOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414990
	struct UTigerIngameSubmenuWidget* GetSubmenuFromClass(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.GetSubmenuFromClass // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414750
	void ConstructSubMenusIfNotConstructed(); // Function Tiger.TigerIngameMenuWidget.ConstructSubMenusIfNotConstructed // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerInputIcon
// Size: 0x280 (Inherited: 0x280)
struct UTigerInputIcon : UTigerWidget {

	void SetIconFromKey(struct FKey& Key); // Function Tiger.TigerInputIcon.SetIconFromKey // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerInputMenuUI
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerInputMenuUI : UTigerIngameSubmenuWidget {

	void ShowCursor(); // Function Tiger.TigerInputMenuUI.ShowCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x1415ab0
	void ResetToDefault(); // Function Tiger.TigerInputMenuUI.ResetToDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x1415280
	void HideCursor(); // Function Tiger.TigerInputMenuUI.HideCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x1414820
};

// Class Tiger.TigerInputPrompt
// Size: 0x2e8 (Inherited: 0x280)
struct UTigerInputPrompt : UTigerWidget {
	struct FText PrefixText; // 0x280(0x18)
	struct FText PostfixText; // 0x298(0x18)
	bool bUseKey; // 0x2b0(0x01)
	bool bUseAction; // 0x2b1(0x01)
	char pad_2B2[0x2]; // 0x2b2(0x02)
	struct FName InputAction; // 0x2b4(0x08)
	struct FName InputAxis; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct FKey InputKey; // 0x2c8(0x18)
	bool bToggleVisibilityOnGamepadChanged; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)

	void UpdateProperties(struct FText& NewPrefixText, struct FText& NewPostfixText, bool bNewUseKey, struct FName NewInputAction, struct FName NewInputAxis, struct FKey NewInputKey); // Function Tiger.TigerInputPrompt.UpdateProperties // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1415e60
	void UpdateInputKey(struct FKey NewInputKey); // Function Tiger.TigerInputPrompt.UpdateInputKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1415d60
	void UpdateInputAxis(struct FName NewInputAxis); // Function Tiger.TigerInputPrompt.UpdateInputAxis // (Final|Native|Public|BlueprintCallable) // @ game+0x1415cd0
	void UpdateInputAction(struct FName NewInputAction); // Function Tiger.TigerInputPrompt.UpdateInputAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1415c40
	void UpdateIcon(); // Function Tiger.TigerInputPrompt.UpdateIcon // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void ResetDirtyFlag(); // Function Tiger.TigerInputPrompt.ResetDirtyFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x1415260
	void RegisterInputActionListener(struct FDelegate& Delegate); // Function Tiger.TigerInputPrompt.RegisterInputActionListener // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14150e0
	bool IsDirty(); // Function Tiger.TigerInputPrompt.IsDirty // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1414930
};

// Class Tiger.TigerInteractionControllerComponent
// Size: 0x218 (Inherited: 0xb0)
struct UTigerInteractionControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnTargetInteractionChanged; // 0xb0(0x10)
	char pad_C0[0x18]; // 0xc0(0x18)
	struct TArray<uint32_t> HashedNPCsToTalkTo; // 0xd8(0x10)
	float DiablerizeDotProductCutOff; // 0xe8(0x04)
	float HeldInputInteractionTime; // 0xec(0x04)
	float InteractionLineTraceLength; // 0xf0(0x04)
	float InteractionLineTraceThickness; // 0xf4(0x04)
	bool AllowAutomaticPickUpBehindPlayer; // 0xf8(0x01)
	char pad_F9[0x3]; // 0xf9(0x03)
	float AutoPickUpCoolDown; // 0xfc(0x04)
	struct FVector AutoPickUpBoxVolumeExtents; // 0x100(0x0c)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct ATigerPlayerController* TigerPC; // 0x110(0x08)
	struct ATigerPlayer* TigerPlayerPawn; // 0x118(0x08)
	char pad_120[0x10]; // 0x120(0x10)
	struct TWeakObjectPtr<struct ATigerCharacter> TargetCharacter; // 0x130(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> TrainerTarget; // 0x138(0x08)
	struct TWeakObjectPtr<struct ATigerItemWorldRepresentation> InteractionItem; // 0x140(0x08)
	struct TWeakObjectPtr<struct ATigerItemWorldRepresentation> LastAutoPickupItem; // 0x148(0x08)
	struct TWeakObjectPtr<struct ATigerInteractiveObject> TargetInteractiveObject; // 0x150(0x08)
	struct ATigerBaseNPC* PotentialFeedingTarget; // 0x158(0x08)
	char pad_160[0x10]; // 0x160(0x10)
	struct TArray<struct FOverlapResult> TriggerVolumeOverlaps; // 0x170(0x10)
	char pad_180[0x10]; // 0x180(0x10)
	struct TArray<struct FHitResult> InteractionSweepResults; // 0x190(0x10)
	char pad_1A0[0x10]; // 0x1a0(0x10)
	struct TArray<struct FHitResult> InteractionTraceResults; // 0x1b0(0x10)
	char pad_1C0[0x10]; // 0x1c0(0x10)
	struct TArray<struct FOverlapResult> AutoPickUpInteractionOverlaps; // 0x1d0(0x10)
	char pad_1E0[0x10]; // 0x1e0(0x10)
	struct TWeakObjectPtr<struct ATigerBaseNPC> CachedVendor; // 0x1f0(0x08)
	char pad_1F8[0x20]; // 0x1f8(0x20)

	void StopVendorInteraction(); // Function Tiger.TigerInteractionControllerComponent.StopVendorInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x1415b10
	void StopObjectInteraction(); // Function Tiger.TigerInteractionControllerComponent.StopObjectInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x1415af0
	bool ShouldBeInDialogueCameraState(); // Function Tiger.TigerInteractionControllerComponent.ShouldBeInDialogueCameraState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1415a70
	void SetShouldBeInDialogueCameraState(); // Function Tiger.TigerInteractionControllerComponent.SetShouldBeInDialogueCameraState // (Final|Native|Public|BlueprintCallable) // @ game+0x1415a50
	void Server_StopVendorInteraction(); // Function Tiger.TigerInteractionControllerComponent.Server_StopVendorInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415a00
	void Server_StopPhysicalInteraction(enum class ETargetInteraction InStoppedInteraction); // Function Tiger.TigerInteractionControllerComponent.Server_StopPhysicalInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415950
	void Server_StopObjectInteraction(struct ATigerInteractiveObject* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StopObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415890
	void Server_StopJudgeFeed(); // Function Tiger.TigerInteractionControllerComponent.Server_StopJudgeFeed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415840
	void Server_StopFeeding(); // Function Tiger.TigerInteractionControllerComponent.Server_StopFeeding // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14157f0
	void Server_StartVendorInteraction(struct ATigerBaseNPC* InInteractingCharacter); // Function Tiger.TigerInteractionControllerComponent.Server_StartVendorInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415730
	void Server_StartRevive(struct ATigerPlayer* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartRevive // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415670
	void Server_StartObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Server_StartObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14155b0
	void Server_StartJudgeFeed(struct ATigerJudge* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartJudgeFeed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14154f0
	void Server_StartFeeding(struct ATigerBaseNPC* InTargetCharacter); // Function Tiger.TigerInteractionControllerComponent.Server_StartFeeding // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415430
	void Server_StartDiablerize(struct ATigerPlayer* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartDiablerize // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1415370
	void RemoveNPCToTalkTo(struct FText& InNPCName); // Function Tiger.TigerInteractionControllerComponent.RemoveNPCToTalkTo // (Final|Native|Public|HasOutParms) // @ game+0x1415190
	void OnInteractionChanged__DelegateSignature(enum class ETargetInteraction InInteraction); // DelegateFunction Tiger.TigerInteractionControllerComponent.OnInteractionChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool NeedsToTalkToNPC(struct FText& InNPCName); // Function Tiger.TigerInteractionControllerComponent.NeedsToTalkToNPC // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414d30
	struct ATigerCharacter* GetInteractionCharacter(); // Function Tiger.TigerInteractionControllerComponent.GetInteractionCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414700
	enum class ETargetInteraction GetActiveOrTargetInteraction(); // Function Tiger.TigerInteractionControllerComponent.GetActiveOrTargetInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14146b0
	void Client_RemoveNPCToTalkTo(uint32_t InHashedNPCName); // Function Tiger.TigerInteractionControllerComponent.Client_RemoveNPCToTalkTo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1414600
	void Client_InvalidateTimedObjectInteraction(); // Function Tiger.TigerInteractionControllerComponent.Client_InvalidateTimedObjectInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14145e0
	void Client_FailedObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Client_FailedObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x137b600
	void Client_AddNPCToTalkTo(uint32_t InHashedNPCName); // Function Tiger.TigerInteractionControllerComponent.Client_AddNPCToTalkTo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1414550
};

// Class Tiger.TigerInteractiveCollectible
// Size: 0x2b0 (Inherited: 0x290)
struct ATigerInteractiveCollectible : ATigerClientInteractiveObject {
	struct UTigerCollectibleData* Collectible; // 0x290(0x08)
	struct UStaticMeshComponent* CollectibleMesh; // 0x298(0x08)
	struct UAkAudioEvent* CollectibleSoundEffect; // 0x2a0(0x08)
	struct UParticleSystemComponent* CollectibleParticleSystem; // 0x2a8(0x08)
};

// Class Tiger.TigerInteractiveGrimoireProp
// Size: 0x2a0 (Inherited: 0x280)
struct ATigerInteractiveGrimoireProp : ATigerInteractiveObject {
	struct UStaticMeshComponent* ItemMesh; // 0x280(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x288(0x08)
	struct UTigerIngameSubmenuWidget* GrimoireSubmenu; // 0x290(0x08)
	char CustomStencilGroup; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)

	void OpenGrimoire(); // Function Tiger.TigerInteractiveGrimoireProp.OpenGrimoire // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnLanguageChanged(); // Function Tiger.TigerInteractiveGrimoireProp.OnLanguageChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsDeactivated(); // Function Tiger.TigerInteractiveGrimoireProp.IsDeactivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1414910
	void DisableHighlight(); // Function Tiger.TigerInteractiveGrimoireProp.DisableHighlight // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerInteractiveItemDropOff
// Size: 0x328 (Inherited: 0x290)
struct ATigerInteractiveItemDropOff : ATigerClientInteractiveObject {
	struct UStaticMeshComponent* DropOffMesh; // 0x290(0x08)
	struct UAkAudioEvent* DropOffSoundEffect; // 0x298(0x08)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0x2a0(0x10)
	char pad_2B0[0x30]; // 0x2b0(0x30)
	struct UParticleSystemComponent* DropOffParticleSystem; // 0x2e0(0x08)
	struct FText PlayerFacingItemName; // 0x2e8(0x18)
	struct FText ActionOverrideText; // 0x300(0x18)
	float InteractionTimeIfNoAnimation; // 0x318(0x04)
	char pad_31C[0xc]; // 0x31c(0x0c)
};

// Class Tiger.TigerInteractiveNpcComponent
// Size: 0x110 (Inherited: 0xb0)
struct UTigerInteractiveNpcComponent : UActorComponent {
	struct UTigerElysiumNpcNameplateWidget* OverheadWidget; // 0xb0(0x08)
	struct UTigerNpcDialogueList* DialogueList; // 0xb8(0x08)
	float DelayBetweenInteractions; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UTigerDialogueManager* DialogueManager; // 0xc8(0x08)
	struct FText NpcName; // 0xd0(0x18)
	struct FText NpcTitle; // 0xe8(0x18)
	struct UTexture2D* NpcIcon; // 0x100(0x08)
	enum class ETigerClan NpcClan; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)

	void ResortDialogueLines(); // Function Tiger.TigerInteractiveNpcComponent.ResortDialogueLines // (Final|Native|Private) // @ game+0x14152a0
	struct UTigerDialogueManager* GetDialogueManager(); // Function Tiger.TigerInteractiveNpcComponent.GetDialogueManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14146e0
	void BindToPlayerUpdate(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerInteractiveNpcComponent.BindToPlayerUpdate // (Final|Native|Private) // @ game+0x1414430
};

// Class Tiger.TigerInteractivePoint
// Size: 0x330 (Inherited: 0x290)
struct ATigerInteractivePoint : ATigerClientInteractiveObject {
	bool bHasMesh; // 0x290(0x01)
	bool bShowMeshPreInteraction; // 0x291(0x01)
	bool bShowMeshPostInteraction; // 0x292(0x01)
	char pad_293[0x5]; // 0x293(0x05)
	struct UStaticMesh* InteractivePointStaticMesh; // 0x298(0x08)
	struct UStaticMeshComponent* InteractivePointMeshComponent; // 0x2a0(0x08)
	bool bHasSoundEffect; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UAkAudioEvent* InteractivePointSoundEffect; // 0x2b0(0x08)
	bool bHasParticleSystem; // 0x2b8(0x01)
	bool bShowParticleSystemPreInteraction; // 0x2b9(0x01)
	bool bShowParticleSystemPostInteraction; // 0x2ba(0x01)
	char pad_2BB[0x5]; // 0x2bb(0x05)
	struct UParticleSystem* InteractivePointParticleSystem; // 0x2c0(0x08)
	struct UParticleSystemComponent* InteractivePointParticleSystemComponent; // 0x2c8(0x08)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0x2d0(0x10)
	float InteractionTimeIfNoAnimation; // 0x2e0(0x04)
	bool bForceNotValidForPlayer; // 0x2e4(0x01)
	bool bDestroyPostInteraction; // 0x2e5(0x01)
	char pad_2E6[0x2]; // 0x2e6(0x02)
	struct FText PlayerFacingInteractionText; // 0x2e8(0x18)
	char pad_300[0x30]; // 0x300(0x30)

	void Client_SetParticeVisibility(bool InParticleVisibile); // Function Tiger.TigerInteractivePoint.Client_SetParticeVisibility // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1418b00
	void Client_SetMeshVisibility(bool InMeshVisibile); // Function Tiger.TigerInteractivePoint.Client_SetMeshVisibility // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1418a70
};

// Class Tiger.TigerInteractiveQuestItem
// Size: 0x318 (Inherited: 0x290)
struct ATigerInteractiveQuestItem : ATigerClientInteractiveObject {
	struct UStaticMeshComponent* QuestMesh; // 0x290(0x08)
	struct UAkAudioEvent* QuestSoundEffect; // 0x298(0x08)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0x2a0(0x10)
	char pad_2B0[0x30]; // 0x2b0(0x30)
	struct UParticleSystemComponent* QuestParticleSystem; // 0x2e0(0x08)
	struct FText PlayerFacingItemName; // 0x2e8(0x18)
	struct FText ActionOverrideText; // 0x300(0x18)
};

// Class Tiger.TigerEquippedModModifierValues
// Size: 0x80 (Inherited: 0x28)
struct UTigerEquippedModModifierValues : UObject {
	struct UTigerMaxIntAggregator* ExtendedMagazineLevel; // 0x28(0x08)
	struct UTigerFloatMultiplierAggregator* ReloadSpeed; // 0x30(0x08)
	struct UTigerFloatMultiplierAggregator* RecoilMultiplier; // 0x38(0x08)
	struct UTigerFloatMultiplierAggregator* SpreadMultiplier; // 0x40(0x08)
	struct UTigerFloatMultiplierAggregator* SwapSpeedMultiplier; // 0x48(0x08)
	struct UTigerFloatMultiplierAggregator* SpreadDecreaseMultiplier; // 0x50(0x08)
	struct UTigerFloatMinAggregator* ModdedFOV; // 0x58(0x08)
	struct UTigerFloatCurveMultiplierAggregator* AimedSpreadMultiplier; // 0x60(0x08)
	struct UTigerBoolAnyAggregator* IsScoped; // 0x68(0x08)
	struct UTigerBoolAnyAggregator* CanSwitchFireMode; // 0x70(0x08)
	struct UTigerWeaponCrosshairWidget* CrossHairWidget; // 0x78(0x08)
};

// Class Tiger.TigerInventoryComponent
// Size: 0x2d0 (Inherited: 0xb0)
struct UTigerInventoryComponent : UActorComponent {
	int32_t MaxItemsPerCategory; // 0xb0(0x04)
	int32_t AmmoStackDistance; // 0xb4(0x04)
	struct FSharkRandomDeviation DropItemLaunchSpeed; // 0xb8(0x08)
	char SlotColumnCount; // 0xc0(0x01)
	char pad_C1[0x3f]; // 0xc1(0x3f)
	struct ATigerPlayer* Player; // 0x100(0x08)
	struct UTigerItemAsset* UnarmedItemAsset; // 0x108(0x08)
	struct FTigerInventoryWeapon Weapons[0x4]; // 0x110(0x20)
	struct FTigerItemData Items[0xc]; // 0x130(0xc0)
	struct TArray<struct UTigerAmmoAsset*> AmmoPickupItems; // 0x1f0(0x10)
	struct TArray<struct FTigerInventorySlotContent> Slots; // 0x200(0x10)
	char pad_210[0xa0]; // 0x210(0xa0)
	struct FTigerItemData Artifact; // 0x2b0(0x10)
	struct TArray<struct FTigerItemData> AdditionalItemsToDropOnDeath; // 0x2c0(0x10)

	void UnequipWeaponModForSlot(enum class ETigerWeaponSlot Slot, struct UTigerItemAsset* ModItemAsset); // Function Tiger.TigerInventoryComponent.UnequipWeaponModForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x141ae50
	struct UTigerHuntingKnifeItemAsset* TryToGetHuntingKnifeAsset(); // Function Tiger.TigerInventoryComponent.TryToGetHuntingKnifeAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141ae20
	void SwapRangedWeaponSlots(); // Function Tiger.TigerInventoryComponent.SwapRangedWeaponSlots // (Final|Native|Protected|BlueprintCallable) // @ game+0x141ae00
	void SwapModWeapon(enum class ERangedWeaponModType InModType); // Function Tiger.TigerInventoryComponent.SwapModWeapon // (Final|Native|Protected|BlueprintCallable) // @ game+0x141ad80
	void SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup); // Function Tiger.TigerInventoryComponent.SetSwapOutDefaultWeaponOnPickup // (Final|Native|Private|BlueprintCallable) // @ game+0x141acc0
	void Server_UnequipWeaponModForSlot(enum class ETigerWeaponSlot InSlot, struct UTigerItemAsset* InModItemAsset); // Function Tiger.TigerInventoryComponent.Server_UnequipWeaponModForSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x141aaa0
	void Server_SwapRangedWeaponSlots(); // Function Tiger.TigerInventoryComponent.Server_SwapRangedWeaponSlots // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x141aa50
	void Server_SwapModWeapon(enum class ERangedWeaponModType InModType); // Function Tiger.TigerInventoryComponent.Server_SwapModWeapon // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x141a9a0
	void Server_SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup); // Function Tiger.TigerInventoryComponent.Server_SetSwapOutDefaultWeaponOnPickup // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x141a8e0
	void Server_RemoveItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Server_RemoveItem // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x141a7e0
	void Server_EquipWeaponSlot(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.Server_EquipWeaponSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x141a730
	void Server_EquipWeaponMod(struct UTigerRangedModItemAsset* InModItemAsset); // Function Tiger.TigerInventoryComponent.Server_EquipWeaponMod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x141a670
	void Server_DropWeapon(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.Server_DropWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x141a5c0
	void Server_DropItem(struct UTigerItemAsset* Item, int32_t DropCount, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Server_DropItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x141a480
	void RemoveItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.RemoveItem // (Final|Native|Public|BlueprintCallable) // @ game+0x141a3b0
	bool IsModSupportedForWeapon(struct UTigerRangedModItemAsset* InModItemAsset, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.IsModSupportedForWeapon // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x141a1c0
	bool IsCategoryFull(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.IsCategoryFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141a130
	bool HasModEquippedOnWeapon(struct UTigerRangedModItemAsset* InModItemAsset, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.HasModEquippedOnWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141a060
	bool HasItemInCategory(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.HasItemInCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419fd0
	bool HasItem(struct UTigerItemAsset* InItem); // Function Tiger.TigerInventoryComponent.HasItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419f30
	struct UTigerItemAsset* GetWeaponItemBySlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetWeaponItemBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419ea0
	void GetWeaponInfoForUnequippedModItem(struct UTigerRangedModItemAsset* ModItemAsset, bool bIgnoreEquippedMod, struct FTigerInventoryWeapon& WeaponOut, struct FTigerModSlotInfo& ReplacesModOut); // Function Tiger.TigerInventoryComponent.GetWeaponInfoForUnequippedModItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1419d10
	struct UTigerWeapon* GetWeaponBySlot(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.GetWeaponBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419c80
	void GetUsableModsForUnequippedWeaponItem(struct UTigerItemAsset* InWeaponItem, struct TArray<struct FTigerModSlotInfo>& OutWeaponItemMods, bool& bOutHasAnyTransferableMods); // Function Tiger.TigerInventoryComponent.GetUsableModsForUnequippedWeaponItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1419b40
	enum class ETigerWeaponSlot GetSlotForUnequippedWeaponItem(struct UTigerItemAsset* WeaponItem); // Function Tiger.TigerInventoryComponent.GetSlotForUnequippedWeaponItem // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419aa0
	struct FTigerInventorySlotContent GetSlotForPosition(int32_t Column, int32_t Row); // Function Tiger.TigerInventoryComponent.GetSlotForPosition // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14199c0
	enum class ETigerItemPickupInfo GetPickupInfo(struct UTigerItemAsset* Item, int32_t ItemCount, int32_t& OutPickedUpItemCount); // Function Tiger.TigerInventoryComponent.GetPickupInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14198a0
	struct TArray<struct FTigerModSlotInfo> GetModsForSlot(enum class ETigerWeaponSlot InSlot); // Function Tiger.TigerInventoryComponent.GetModsForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14197c0
	int32_t GetItemCountByCategory(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.GetItemCountByCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419730
	int32_t GetItemCount(struct UTigerItemAsset* InItemAsset); // Function Tiger.TigerInventoryComponent.GetItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419690
	struct UTigerItemAsset* GetItemByType(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.GetItemByType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1419600
	int32_t GetInventoryAmmoByType(enum class ETigerWeaponAmmoType AmmoType); // Function Tiger.TigerInventoryComponent.GetInventoryAmmoByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419570
	struct TArray<struct UTigerItemAsset*> GetInventory(); // Function Tiger.TigerInventoryComponent.GetInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x14194f0
	bool GetEquippedRangedWeaponAmmo(int32_t& OutWeaponAmmo, int32_t& OutInventoryAmmo); // Function Tiger.TigerInventoryComponent.GetEquippedRangedWeaponAmmo // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1419400
	struct UTigerItemAsset* GetArtifact(); // Function Tiger.TigerInventoryComponent.GetArtifact // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14193d0
	int32_t GetAmmoInWeaponForSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetAmmoInWeaponForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1419340
	struct UTigerAmmoAsset* GetAmmoAssetOfSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetAmmoAssetOfSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14192b0
	struct UTigerAmmoAsset* GetAmmoAssetFromAmmoType(enum class ETigerWeaponAmmoType AmmoType); // Function Tiger.TigerInventoryComponent.GetAmmoAssetFromAmmoType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419220
	void EquipWeaponMod(struct UTigerRangedModItemAsset* ModItemAsset); // Function Tiger.TigerInventoryComponent.EquipWeaponMod // (Final|Native|Public|BlueprintCallable) // @ game+0x1419100
	void EquipItem(struct UTigerItemAsset* Item); // Function Tiger.TigerInventoryComponent.EquipItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1419070
	void DropWeapon(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.DropWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1418ff0
	void DropItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem, int32_t DropCount); // Function Tiger.TigerInventoryComponent.DropItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1418ee0
	void Client_UpdateWeaponModForSlot(enum class ETigerWeaponSlot Slot, struct UTigerRangedModItemAsset* EquippedBarrelMod, struct UTigerRangedModItemAsset* EquippedAmmoMod, struct UTigerRangedModItemAsset* EquippedScopeMod, struct UTigerRangedModItemAsset* EquippedStockMod, struct UTigerRangedModItemAsset* EquippedSpecialMod); // Function Tiger.TigerInventoryComponent.Client_UpdateWeaponModForSlot // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1418b90
	void Client_RevertSwapRangedWeaponSlots(struct UTigerWeapon* InPrimaryWeapon); // Function Tiger.TigerInventoryComponent.Client_RevertSwapRangedWeaponSlots // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14189e0
	void Client_RemoveWeapon(enum class ETigerWeaponSlot InWeaponSlot, bool bInPickedUpNewWeaponInSlot); // Function Tiger.TigerInventoryComponent.Client_RemoveWeapon // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1418910
	void Client_RemoveFromInventory(struct UTigerItemAsset* Item, int32_t DropCount, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Client_RemoveFromInventory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1418800
	void Client_AddToInventory(struct UTigerItemAsset* InItem, int16_t InItemCount, bool bInNotifyPlayerOnNewItem, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerInventoryComponent.Client_AddToInventory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14186a0
	void AddToInventory(struct UTigerItemAsset* InItem, enum class ETigerTelemetryItemSourceID InItemSourceID, int32_t InItemCount, struct ATigerLootBox* InLootBox, bool bInNotifyPlayerOnNewItem); // Function Tiger.TigerInventoryComponent.AddToInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1418470
};

// Class Tiger.TigerInventoryUI
// Size: 0x2c8 (Inherited: 0x2c0)
struct UTigerInventoryUI : UTigerIngameSubmenuWidget {
	float RightStickXInput; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void OnInventoryUpdatedBP(); // Function Tiger.TigerInventoryUI.OnInventoryUpdatedBP // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerInWorldWidget
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerInWorldWidget : UTigerWidget {
	struct FVector WorldLocation; // 0x280(0x0c)
	struct FVector ComponentOffset; // 0x28c(0x0c)
	struct FVector2D ViewportPosition; // 0x298(0x08)
	struct UTigerInWorldWidget* InnerWidget; // 0x2a0(0x08)
	struct TWeakObjectPtr<struct USceneComponent> ComponentToFollow; // 0x2a8(0x08)
	struct TArray<struct UWidget*> PlayerDistanceScalingWidgets; // 0x2b0(0x10)
	bool bWasOnScreen; // 0x2c0(0x01)
	bool bLimitRotationAngleToSides; // 0x2c1(0x01)
	bool bSupportsHover; // 0x2c2(0x01)
	bool bShowDistanceMarker; // 0x2c3(0x01)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void UpdatePlayerDistanceScalingWidgets(); // Function Tiger.TigerInWorldWidget.UpdatePlayerDistanceScalingWidgets // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void UpdateOffScreenState(float InRotationDegrees); // Function Tiger.TigerInWorldWidget.UpdateOffScreenState // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool ShouldShowDistanceMarker(); // Function Tiger.TigerInWorldWidget.ShouldShowDistanceMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141ad50
	void OnScreenStateChanged(bool bInIsOnScreen); // Function Tiger.TigerInWorldWidget.OnScreenStateChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnInWorldFocusLost(); // Function Tiger.TigerInWorldWidget.OnInWorldFocusLost // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnInWorldFocusGained(); // Function Tiger.TigerInWorldWidget.OnInWorldFocusGained // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnInnerWidgetChanged(); // Function Tiger.TigerInWorldWidget.OnInnerWidgetChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void FollowActor(struct AActor* InActor); // Function Tiger.TigerInWorldWidget.FollowActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1419190
	struct UTigerInWorldWidget* CreateInnerWidget(struct UTigerInWorldWidget* InWidgetClass); // Function Tiger.TigerInWorldWidget.CreateInnerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1418e40
	void AddPlayerDistanceScalingWidget(struct UWidget* InWidget); // Function Tiger.TigerInWorldWidget.AddPlayerDistanceScalingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x14183b0
};

// Class Tiger.TigerInWorldIconController
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerInWorldIconController : UActorComponent {
	struct UCanvasPanel* RootCanvas; // 0xb0(0x08)
	struct TArray<struct UTigerInWorldWidget*> Widgets; // 0xb8(0x10)
	struct UTigerInWorldWidget* ExplicitFocusWidget; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)
	float MaxFocusDistanceFromCrosshair; // 0xd8(0x04)
	struct FBox2D ScreenMargins; // 0xdc(0x14)

	void SetRootCanvas(struct UCanvasPanel* InRootCanvas); // Function Tiger.TigerInWorldIconController.SetRootCanvas // (Final|Native|Public|BlueprintCallable) // @ game+0x141ac30
	void SetExplicitFocusWidget(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.SetExplicitFocusWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x141aba0
	void RemoveFromScreen(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.RemoveFromScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x141a320
	void OnInGameMenuToggled(bool bInIsOpen); // Function Tiger.TigerInWorldIconController.OnInGameMenuToggled // (Final|Native|Protected) // @ game+0x141a290
	struct UTigerInWorldWidget* CreateInWorldWidget(struct UTigerInWorldWidget* InOuterWidgetClass, struct UTigerInWorldWidget* InInnerWidgetClass); // Function Tiger.TigerInWorldIconController.CreateInWorldWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1418d70
	void AddToScreen(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.AddToScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1418610
};

// Class Tiger.TigerCollectibleItemAsset
// Size: 0x130 (Inherited: 0x128)
struct UTigerCollectibleItemAsset : UTigerItemAsset {
	struct UTigerCollectibleData* Collectible; // 0x128(0x08)
};

// Class Tiger.TigerAmmoAsset
// Size: 0x158 (Inherited: 0x128)
struct UTigerAmmoAsset : UTigerItemAsset {
	enum class ETigerWeaponAmmoType AmmoType; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
	struct FSlateColor AmmoColor; // 0x130(0x28)
};

// Class Tiger.TigerArtifactAsset
// Size: 0x130 (Inherited: 0x128)
struct UTigerArtifactAsset : UTigerItemAsset {
	enum class ETigerArtifactAbility ArtifactAbility; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
};

// Class Tiger.TigerBodyArmorAsset
// Size: 0x1d0 (Inherited: 0x128)
struct UTigerBodyArmorAsset : UTigerItemAsset {
	int32_t Durability; // 0x128(0x04)
	struct FTigerCharacterStatModification StatChanges; // 0x12c(0xa0)
	char pad_1CC[0x4]; // 0x1cc(0x04)
};

// Class Tiger.TigerRelicAsset
// Size: 0x128 (Inherited: 0x128)
struct UTigerRelicAsset : UTigerItemAsset {
};

// Class Tiger.TigerRangedModItemAsset
// Size: 0x140 (Inherited: 0x128)
struct UTigerRangedModItemAsset : UTigerItemAsset {
	struct TArray<struct UTigerRangedWeaponModModifier*> ModEffects; // 0x128(0x10)
	int32_t ModEquipPriority; // 0x138(0x04)
	enum class ERangedWeaponModType ModType; // 0x13c(0x01)
	char pad_13D[0x3]; // 0x13d(0x03)
};

// Class Tiger.TigerHuntingKnifeItemAsset
// Size: 0x128 (Inherited: 0x128)
struct UTigerHuntingKnifeItemAsset : UTigerItemAsset {
};

// Class Tiger.TigerItemCluster
// Size: 0x360 (Inherited: 0x228)
struct ATigerItemCluster : AActor {
	struct ATigerItemWorldRepresentation* ItemActorClass; // 0x228(0x08)
	struct FItemClusterArray Items; // 0x230(0x120)
	struct TArray<struct ATigerItemWorldRepresentation*> ItemActors; // 0x350(0x10)

	void Multicast_UpdateItemCount(uint32_t InItemClusterUID, int32_t InNewItemCount); // Function Tiger.TigerItemCluster.Multicast_UpdateItemCount // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1425ca0
	void Multicast_SetFinalLocation(uint32_t InItemClusterUID, struct FVector_NetQuantize10 InFinalLocation); // Function Tiger.TigerItemCluster.Multicast_SetFinalLocation // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1425bd0
};

// Class Tiger.TigerItemDatabase
// Size: 0x78 (Inherited: 0x28)
struct UTigerItemDatabase : UObject {
	struct TMap<struct FName, struct FTigerItemDatabaseCategory> ItemsByCategory; // 0x28(0x50)

	void OnItemLoaded__DelegateSignature(struct FTigerItemId ItemId, struct UTigerInventoryItemBase* InventoryItem); // DelegateFunction Tiger.TigerItemDatabase.OnItemLoaded__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void LoadItemIdAsync(struct FTigerItemId& InItemId, struct FDelegate& InDelegate); // Function Tiger.TigerItemDatabase.LoadItemIdAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1425990
	struct TSoftClassPtr<UObject> GetItemPath(struct FTigerItemId& InItemId); // Function Tiger.TigerItemDatabase.GetItemPath // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425350
	struct FTigerItemId GetItemIdFromPath(struct FSoftObjectPath& InObjectPath); // Function Tiger.TigerItemDatabase.GetItemIdFromPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425290
	struct UTigerInventoryItemBase* GetItem(struct FTigerItemId& InItemId); // Function Tiger.TigerItemDatabase.GetItem // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14251e0
};

// Class Tiger.TigerItemPreviewInputComponent
// Size: 0x158 (Inherited: 0x138)
struct UTigerItemPreviewInputComponent : UInputComponent {
	float CameraSensitivityTurnMultiplier; // 0x138(0x04)
	float CameraSensitivityTurnAtRateMultiplier; // 0x13c(0x04)
	float CameraSensitivityVerticalMovementMultiplier; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct ATigerBattlepassRewardPreview* ItemActor; // 0x148(0x08)
	char pad_150[0x8]; // 0x150(0x08)
};

// Class Tiger.TigerBattlepassRewardPreview
// Size: 0x280 (Inherited: 0x228)
struct ATigerBattlepassRewardPreview : AActor {
	struct UTigerInventoryItemBase* PreviewItem; // 0x228(0x08)
	bool bIsZoomEnabled; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct TArray<struct FName> CameraTags; // 0x238(0x10)
	struct TArray<struct FTigerItemPreviewCamera> Cameras; // 0x248(0x10)
	struct FViewTargetTransitionParams CameraTransitionParams; // 0x258(0x10)
	float CameraRadius; // 0x268(0x04)
	float CameraMoveSpeed; // 0x26c(0x04)
	char pad_270[0x10]; // 0x270(0x10)

	void SetNormalizedCameraHeight(struct ACineCameraActor* InCameraActor, float InNormalizedHeight); // Function Tiger.TigerBattlepassRewardPreview.SetNormalizedCameraHeight // (Final|Native|Protected|BlueprintCallable) // @ game+0x1425f70
	void OnToggleCamera(struct ACineCameraActor* InCurrentCamera, struct ACineCameraActor* InNewCamera); // Function Tiger.TigerBattlepassRewardPreview.OnToggleCamera // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnPreviewItemUpdated(); // Function Tiger.TigerBattlepassRewardPreview.OnPreviewItemUpdated // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnPreviewItemOpened(); // Function Tiger.TigerBattlepassRewardPreview.OnPreviewItemOpened // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void MoveToCameraIndex(int32_t InNewCameraIndex); // Function Tiger.TigerBattlepassRewardPreview.MoveToCameraIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1425aa0
	bool IsValidCameraOffset(struct FVector InCameraOffset); // Function Tiger.TigerBattlepassRewardPreview.IsValidCameraOffset // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1425630
	float GetNormalizedCameraHeight(struct ACineCameraActor* InCameraActor); // Function Tiger.TigerBattlepassRewardPreview.GetNormalizedCameraHeight // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425430
	void AddWorldRotationToItem(struct FRotator& InRotation); // Function Tiger.TigerBattlepassRewardPreview.AddWorldRotationToItem // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1424f80
};

// Class Tiger.TigerItemSpawner
// Size: 0x228 (Inherited: 0x228)
struct ATigerItemSpawner : AActor {
};

// Class Tiger.TigerItemWorldRepresentation
// Size: 0x298 (Inherited: 0x228)
struct ATigerItemWorldRepresentation : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct UTigerCompassMarkerWidget* CompassMarker; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct UTigerItemAsset* ItemType; // 0x240(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x248(0x08)
	char pad_250[0x18]; // 0x250(0x18)
	int32_t ItemCount; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UStaticMeshComponent* Mesh; // 0x270(0x08)
	struct ATigerItemCluster* ItemCluster; // 0x278(0x08)
	uint32_t ItemClusterUID; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct ATigerLootSpawner* LootSpawner; // 0x288(0x08)
	enum class ETigerTelemetryItemSourceID ItemSourceID; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)

	void SetItemOutlineVisible(bool ShowOutline); // Function Tiger.TigerItemWorldRepresentation.SetItemOutlineVisible // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SetItemAsset(struct UTigerItemAsset* NewItemType, int32_t NewItemCount); // Function Tiger.TigerItemWorldRepresentation.SetItemAsset // (Native|Event|Public|BlueprintEvent) // @ game+0x1425e00
	void OnFinalTransformReceived(struct FTransform& InFinalTransform); // Function Tiger.TigerItemWorldRepresentation.OnFinalTransformReceived // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerJoinSessionAsync
// Size: 0x188 (Inherited: 0x30)
struct UTigerJoinSessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0x138]; // 0x50(0x138)

	struct UTigerJoinSessionAsync* JoinSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, struct FTigerBpFindSessionSelectedSession& FoundSession); // Function Tiger.TigerJoinSessionAsync.JoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14256d0
};

// Class Tiger.TigerJudge
// Size: 0x990 (Inherited: 0x900)
struct ATigerJudge : ATigerBaseNPC {
	struct UTigerJudgeShieldComponent* JudgeShieldComponent; // 0x900(0x08)
	struct UTigerJudgeSwordComponent* JudgeSwordComponent; // 0x908(0x08)
	struct UTigerWorldMarkerComponent* WorldMarkerComponent; // 0x910(0x08)
	struct UTigerJudgeBaseState* CurrentJudgeState; // 0x918(0x08)
	char pad_920[0x8]; // 0x920(0x08)
	struct ATigerPlayer* FeedingPlayer; // 0x928(0x08)
	struct ATigerEntityJudgeHelicopter* HelicopterClass; // 0x930(0x08)
	struct TWeakObjectPtr<struct ATigerEntityJudgeHelicopter> Helicopter; // 0x938(0x08)
	struct FTigerJudgeRotationSettings CurrentRotationSettings; // 0x940(0x08)
	struct ATigerPlayer* CurrentPrimaryTarget; // 0x948(0x08)
	float DamageCauserCutoffDistanceSq; // 0x950(0x04)
	char pad_954[0x4]; // 0x954(0x04)
	struct FTigerTimedAnimationTriggerWrapper AnimationTriggerWrapper; // 0x958(0x18)
	struct TArray<struct FTigerJudgePlayerDamage> PlayerDamageCollection; // 0x970(0x10)
	char pad_980[0x10]; // 0x980(0x10)

	struct ATigerPlayer* SetPrimaryTarget(struct ATigerPlayer* PrimaryTarget); // Function Tiger.TigerJudge.SetPrimaryTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1426040
	void SetJudgeRotationSettings(struct FTigerJudgeRotationSettings& RotationSettings); // Function Tiger.TigerJudge.SetJudgeRotationSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1425ed0
	void OnRep_CurrentJudgeState(struct UTigerJudgeBaseState* OldState); // Function Tiger.TigerJudge.OnRep_CurrentJudgeState // (Final|Native|Protected) // @ game+0x1425d70
	void OnJudgeStateChanged(struct UTigerJudgeBaseState* OldState, struct UTigerJudgeBaseState* NewState); // Function Tiger.TigerJudge.OnJudgeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_PlayTimedAnimationTriggers(struct TArray<struct FTigerTimedAnimationTrigger> AnimationTriggers); // Function Tiger.TigerJudge.Multicast_PlayTimedAnimationTriggers // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1425b30
	float GetDamageDoneByPlayer(struct ATigerPlayer* Player); // Function Tiger.TigerJudge.GetDamageDoneByPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425080
};

// Class Tiger.TigerJudgeAnimInstance
// Size: 0x3d0 (Inherited: 0x3c0)
struct UTigerJudgeAnimInstance : UTigerAnimInstance {
	struct UTigerJudgeBaseState* CurrentJudgeState; // 0x3b8(0x08)
	struct UTigerJudgeBaseState* OldJudgeState; // 0x3c0(0x08)

	void OnJudgeStateChanged(); // Function Tiger.TigerJudgeAnimInstance.OnJudgeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct ATigerJudge* GetOwningJudge(); // Function Tiger.TigerJudgeAnimInstance.GetOwningJudge // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x142a920
};

// Class Tiger.TigerJudgeSwingData
// Size: 0x80 (Inherited: 0x30)
struct UTigerJudgeSwingData : UDataAsset {
	struct TMap<struct FName, struct FTigerJudgeSwingCollisionInfo> SwingCollisionInfos; // 0x30(0x50)
};

// Class Tiger.TigerJudgeBaseState
// Size: 0x60 (Inherited: 0x28)
struct UTigerJudgeBaseState : UObject {
	struct ATigerJudge* JudgePawn; // 0x28(0x08)
	struct ATigerAiJudgeController* JudgeAiController; // 0x30(0x08)
	struct UTigerAiJudgeSmComponent* JudgeStateMachineComp; // 0x38(0x08)
	float MovementSpeed; // 0x40(0x04)
	float TurnSpeed; // 0x44(0x04)
	float StateEntryTime; // 0x48(0x04)
	float JudgeDefaultRotationSpeed[0x4]; // 0x4c(0x10)
	char pad_5C[0x4]; // 0x5c(0x04)

	void OnTick(float DeltaTime); // Function Tiger.TigerJudgeBaseState.OnTick // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnStateCreationSetup(); // Function Tiger.TigerJudgeBaseState.OnStateCreationSetup // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnExitState(struct UTigerJudgeBaseState* NewState); // Function Tiger.TigerJudgeBaseState.OnExitState // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnEnterState(struct UTigerJudgeBaseState* OldState); // Function Tiger.TigerJudgeBaseState.OnEnterState // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	float GetDefaultRotationSpeed(enum class ETigerJudgeRotationMode RotationMode); // Function Tiger.TigerJudgeBaseState.GetDefaultRotationSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x142a7b0
};

// Class Tiger.TigerJudgeBaseAttackState
// Size: 0xc0 (Inherited: 0x60)
struct UTigerJudgeBaseAttackState : UTigerJudgeBaseState {
	struct TArray<struct ATigerCharacter*> HitCharacters; // 0x60(0x10)
	float Cooldown; // 0x70(0x04)
	float AttackFailSafeDuration; // 0x74(0x04)
	float AttackMinRange; // 0x78(0x04)
	float AttackMaxRange; // 0x7c(0x04)
	bool bUseAttackRangeHorizontally; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float MaxHeightDiff; // 0x84(0x04)
	struct UTigerJudgeBaseState* PreviousState; // 0x88(0x08)
	struct UTigerJudgeSwingData* SwingData; // 0x90(0x08)
	bool bJudgeSwordActiveStatus; // 0x98(0x01)
	bool bIsCheckingAttackCollisionData; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	struct FVector SwordHitBox; // 0x9c(0x0c)
	struct UCurveFloat* SwordLengthCurve; // 0xa8(0x08)
	char pad_B0[0x10]; // 0xb0(0x10)

	void OnJudgeSwordActiveStatusChanged(); // Function Tiger.TigerJudgeBaseAttackState.OnJudgeSwordActiveStatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnCharactersHitWithSword(struct ATigerCharacter* CharacterHitBySword); // Function Tiger.TigerJudgeBaseAttackState.OnCharactersHitWithSword // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsOffCooldown(); // Function Tiger.TigerJudgeBaseAttackState.IsOffCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x142a9f0
};

// Class Tiger.TigerJudgeCombatState
// Size: 0x88 (Inherited: 0x60)
struct UTigerJudgeCombatState : UTigerJudgeBaseState {
	struct TArray<struct UTigerJudgeBaseAttackState*> AttackTypes; // 0x60(0x10)
	struct TArray<struct UTigerJudgeBaseAttackState*> AvailableAttacks; // 0x70(0x10)
	float TimeWithoutSeeingBloodhuntedPlayers; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)

	bool UpdateAvailableAttacks(); // Function Tiger.TigerJudgeCombatState.UpdateAvailableAttacks // (Final|Native|Protected|BlueprintCallable) // @ game+0x142b130
	void MoveToClosestBloodhuntedPlayer(); // Function Tiger.TigerJudgeCombatState.MoveToClosestBloodhuntedPlayer // (Final|Native|Protected|BlueprintCallable) // @ game+0x142aad0
	bool IsAttackOffCooldown(struct UTigerJudgeBaseAttackState* StateType); // Function Tiger.TigerJudgeCombatState.IsAttackOffCooldown // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x142a950
	struct ATigerPlayer* GetClosestBloodhuntedPlayer(); // Function Tiger.TigerJudgeCombatState.GetClosestBloodhuntedPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x142a780
	struct TArray<struct UTigerJudgeBaseAttackState*> GetApplicableAttacksForTarget(struct ATigerPlayer* Player); // Function Tiger.TigerJudgeCombatState.GetApplicableAttacksForTarget // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x142a6a0
};

// Class Tiger.TigerJudgeDownedState
// Size: 0x60 (Inherited: 0x60)
struct UTigerJudgeDownedState : UTigerJudgeBaseState {
};

// Class Tiger.TigerJudgeFedOnState
// Size: 0x70 (Inherited: 0x60)
struct UTigerJudgeFedOnState : UTigerJudgeBaseState {
	float FeedingOffset; // 0x60(0x04)
	struct FName FeedingAnimationName; // 0x64(0x08)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Tiger.TigerJudgePatrollingState
// Size: 0x110 (Inherited: 0x60)
struct UTigerJudgePatrollingState : UTigerJudgeBaseState {
	struct FName IndexKeyName; // 0x60(0x08)
	struct FName WaypointKeyName; // 0x68(0x08)
	struct FName DirectionKeyName; // 0x70(0x08)
	char pad_78[0x98]; // 0x78(0x98)
};

// Class Tiger.TigerJudgeShieldComponent
// Size: 0xf20 (Inherited: 0xef0)
struct UTigerJudgeShieldComponent : USkeletalMeshComponent {
	struct FVector DeflectEffectOffset; // 0xef0(0x0c)
	char pad_EFC[0x4]; // 0xefc(0x04)
	struct UParticleSystem* DeflectEffect; // 0xf00(0x08)
	struct UAkAudioEvent* DeflectSound; // 0xf08(0x08)
	float BlockingHalfAngle; // 0xf10(0x04)
	char pad_F14[0xc]; // 0xf14(0x0c)

	void TriggerDeflectEffect(struct ATigerCharacter* Attacker); // Function Tiger.TigerJudgeShieldComponent.TriggerDeflectEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x142b0a0
	void Multicast_TriggerDeflectEffect(struct ATigerCharacter* Attacker); // Function Tiger.TigerJudgeShieldComponent.Multicast_TriggerDeflectEffect // (Net|Native|Event|NetMulticast|Public) // @ game+0x142ac50
};

// Class Tiger.TigerJudgeSwordComponent
// Size: 0x4f0 (Inherited: 0x4e0)
struct UTigerJudgeSwordComponent : UStaticMeshComponent {
	struct UParticleSystem* CharacterHitEffect; // 0x4e0(0x08)
	struct UAkAudioEvent* CharacterHitSound; // 0x4e8(0x08)

	void SpawnHitEffect(struct ATigerCharacter* Character, struct FVector& Offset); // Function Tiger.TigerJudgeSwordComponent.SpawnHitEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x142afd0
	void Multicast_SpawnHitEffect(struct ATigerCharacter* Character, struct FVector Offset); // Function Tiger.TigerJudgeSwordComponent.Multicast_SpawnHitEffect // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x142ab80
};

// Class Tiger.TigerKindredCharmEffectActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerKindredCharmEffectActor : AActor {
	float KindredCharmPercent; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)

	void OnShouldDestroy(bool bInIsDedicatedServer); // Function Tiger.TigerKindredCharmEffectActor.OnShouldDestroy // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPercentChanged(bool bInIsDedicatedServer); // Function Tiger.TigerKindredCharmEffectActor.OnPercentChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_ShouldDestroy(); // Function Tiger.TigerKindredCharmEffectActor.Multicast_ShouldDestroy // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13c1c00
	void Multicast_SetKindredCharmPercent(float InPercent); // Function Tiger.TigerKindredCharmEffectActor.Multicast_SetKindredCharmPercent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x142aaf0
};

// Class Tiger.TigerKindredCharmWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerKindredCharmWidget : UTigerWidget {

	void OnKindredCharmCountChanged(int32_t InNewCount); // Function Tiger.TigerKindredCharmWidget.OnKindredCharmCountChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerLaceratingThrowProjectile
// Size: 0x260 (Inherited: 0x228)
struct ATigerLaceratingThrowProjectile : AActor {
	struct UTigerLaceratingThrowConfig* ConfigType; // 0x228(0x08)
	struct FVector TargetLocation; // 0x230(0x0c)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FTimerHandle ArrivalTimerHandle; // 0x240(0x08)
	bool bIsMoving; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	int32_t Rank; // 0x24c(0x04)
	char pad_250[0xc]; // 0x250(0x0c)
	bool bTargetIsOnWall; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)

	void PlayHitWallSound(); // Function Tiger.TigerLaceratingThrowProjectile.PlayHitWallSound // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRep_TargetLocation(); // Function Tiger.TigerLaceratingThrowProjectile.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x142ace0
};

// Class Tiger.TigerLegalDocuments
// Size: 0xf8 (Inherited: 0x28)
struct UTigerLegalDocuments : UObject {
	char pad_28[0xb8]; // 0x28(0xb8)
	struct UDataTable* CountryCodes; // 0xe0(0x08)
	char pad_E8[0x10]; // 0xe8(0x10)

	struct FString GetLegalDocumentString(enum class ETigerLegalDocumentType InDocumentType); // Function Tiger.TigerLegalDocuments.GetLegalDocumentString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142a840
	void DownloadLegalDocumentStrings(struct UObject* InWorldContextObject, struct FString InLocale, struct FLatentActionInfo InLatentInfo); // Function Tiger.TigerLegalDocuments.DownloadLegalDocumentStrings // (Final|Native|Public|BlueprintCallable) // @ game+0x142a500
};

// Class Tiger.TigerLevelScriptActor
// Size: 0x230 (Inherited: 0x230)
struct ATigerLevelScriptActor : ALevelScriptActor {

	struct UTigerDistrictData* GetDistrictData(); // Function Tiger.TigerLevelScriptActor.GetDistrictData // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerLoadingScreenAsset
// Size: 0x78 (Inherited: 0x28)
struct UTigerLoadingScreenAsset : UObject {
	struct TSoftObjectPtr<UAkAudioEvent> StartAudioEvent; // 0x28(0x28)
	struct TSoftClassPtr<UObject> LoadingScreenWidget; // 0x50(0x28)

	void PrepareAssets(struct TArray<struct FSoftObjectPath>& OutAssetsToLoad); // Function Tiger.TigerLoadingScreenAsset.PrepareAssets // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerLoadingScreenUI
// Size: 0x2a0 (Inherited: 0x260)
struct UTigerLoadingScreenUI : UUserWidget {
	struct FMulticastInlineDelegate OnFadeInCompleteEvent; // 0x260(0x10)
	struct FMulticastInlineDelegate OnFadeOutCompleteEvent; // 0x270(0x10)
	float FadeInTime; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UTigerLoadingScreenAsset* LoadingScreenAsset; // 0x288(0x08)
	int32_t AkPlayingId; // 0x290(0x04)
	char pad_294[0xc]; // 0x294(0x0c)

	void StartFadeOut(); // Function Tiger.TigerLoadingScreenUI.StartFadeOut // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void StartFadeIn(); // Function Tiger.TigerLoadingScreenUI.StartFadeIn // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void RaiseFadeOutComplete(); // Function Tiger.TigerLoadingScreenUI.RaiseFadeOutComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x142ad20
	void RaiseFadeInComplete(); // Function Tiger.TigerLoadingScreenUI.RaiseFadeInComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x142ad00
	void OnFadeOutComplete__DelegateSignature(); // DelegateFunction Tiger.TigerLoadingScreenUI.OnFadeOutComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnFadeInComplete__DelegateSignature(); // DelegateFunction Tiger.TigerLoadingScreenUI.OnFadeInComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void FadeOut(); // Function Tiger.TigerLoadingScreenUI.FadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x142a680
	void FadeIn(); // Function Tiger.TigerLoadingScreenUI.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x142a660
	void ChangeStatusText(struct FText& InText); // Function Tiger.TigerLoadingScreenUI.ChangeStatusText // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerLocalAIController
// Size: 0x5c0 (Inherited: 0x4e0)
struct ATigerLocalAIController : ATigerLocalAIControllerBase {
	float FleeMaxDistanceSquared; // 0x4e0(0x04)
	float FacingConeHalfAngle; // 0x4e4(0x04)
	float MinimumAcceptableHeadshotDamageMultiplier; // 0x4e8(0x04)
	float HeadshotChance; // 0x4ec(0x04)
	struct TArray<struct UTigerBuff*> BuffsOnSelfToIgnoreTargetsList; // 0x4f0(0x10)
	struct TArray<struct UTigerBuff*> BuffsOnTargetsToIgnoreList; // 0x500(0x10)
	char pad_510[0x8]; // 0x510(0x08)
	struct ATigerPlayerState* TigerPlayerState; // 0x518(0x08)
	char pad_520[0xa0]; // 0x520(0xa0)

	bool SetMainStateWandering(); // Function Tiger.TigerLocalAIController.SetMainStateWandering // (Final|Native|Public|BlueprintCallable) // @ game+0x142aed0
	bool SetMainStateInBloodVein(); // Function Tiger.TigerLocalAIController.SetMainStateInBloodVein // (Final|Native|Public|BlueprintCallable) // @ game+0x142aea0
	bool SetBBMainState(enum class ETigerAIPlayerMainState InNewState); // Function Tiger.TigerLocalAIController.SetBBMainState // (Final|Native|Protected|BlueprintCallable) // @ game+0x142ad40
};

// Class Tiger.TigerLocalPlayer
// Size: 0x278 (Inherited: 0x258)
struct UTigerLocalPlayer : ULocalPlayer {
	char pad_258[0x20]; // 0x258(0x20)
};

// Class Tiger.TigerLocalThrallData
// Size: 0x60 (Inherited: 0x28)
struct UTigerLocalThrallData : UObject {
	struct UTigerBaseThrallData* BaseData; // 0x28(0x08)
	struct FTigerPersistentThrallData PersistentData; // 0x30(0x30)

	void SetStats(struct FTigerThrallStats InStats); // Function Tiger.TigerLocalThrallData.SetStats // (Final|Native|Public|BlueprintCallable) // @ game+0x142f960
	void SetStat(enum class ETigerThrallStatId InType, int32_t InValue); // Function Tiger.TigerLocalThrallData.SetStat // (Final|Native|Public|BlueprintCallable) // @ game+0x142f890
	void RemoveAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.RemoveAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x142f700
	bool HasAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.HasAbility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f290
	struct FTigerThrallUpgradeScreenInformation GetUpgradeScreenInfo(); // Function Tiger.TigerLocalThrallData.GetUpgradeScreenInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f210
	struct FTigerThrallStats GetThrallStats(); // Function Tiger.TigerLocalThrallData.GetThrallStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142efb0
	enum class ETigerThrallId GetThrallId(); // Function Tiger.TigerLocalThrallData.GetThrallId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f1e0
	struct FTigerThrallStats GetMutableThrallStats(); // Function Tiger.TigerLocalThrallData.GetMutableThrallStats // (Final|Native|Public|BlueprintCallable) // @ game+0x142efb0
	struct FTigerThrallDetailsScreenInformation GetDetailsScreenInfo(); // Function Tiger.TigerLocalThrallData.GetDetailsScreenInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142ee00
	struct FTigerThrallCharacterCardInformation GetCharacterCardInfo(); // Function Tiger.TigerLocalThrallData.GetCharacterCardInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142eac0
	void DecreaseStatModifierTurnsByOne(); // Function Tiger.TigerLocalThrallData.DecreaseStatModifierTurnsByOne // (Final|Native|Public|BlueprintCallable) // @ game+0x142ea80
	struct FTigerThrallStats CalculateTrueStats(); // Function Tiger.TigerLocalThrallData.CalculateTrueStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142ea00
	int32_t CalculateTotalInjuryLevel(); // Function Tiger.TigerLocalThrallData.CalculateTotalInjuryLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142e9d0
	void AddStats(struct FTigerThrallStats InStatsToAdd); // Function Tiger.TigerLocalThrallData.AddStats // (Final|Native|Public|BlueprintCallable) // @ game+0x142e8f0
	void AddStat(enum class ETigerThrallStatId InType, int32_t InToAdd); // Function Tiger.TigerLocalThrallData.AddStat // (Final|Native|Public|BlueprintCallable) // @ game+0x142e820
	void AddAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.AddAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x142e660
};

// Class Tiger.TigerLocalThrallMissionData
// Size: 0x78 (Inherited: 0x28)
struct UTigerLocalThrallMissionData : UObject {
	struct FMulticastInlineDelegate OnMissionProgression; // 0x28(0x10)
	struct FMulticastInlineDelegate OnMissionComplete; // 0x38(0x10)
	struct UTigerThrallMission* BaseMissionData; // 0x48(0x08)
	struct UTigerThrallSystem* ThrallSystem; // 0x50(0x08)
	struct FTigerPersistentMissionData PersistentMissionData; // 0x58(0x20)

	void OnMissionTurnProgression__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData); // DelegateFunction Tiger.TigerLocalThrallMissionData.OnMissionTurnProgression__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMissionComplete__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData, enum class ETigerMissionSuccessRating SuccessRating); // DelegateFunction Tiger.TigerLocalThrallMissionData.OnMissionComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void IncrementMissionByOneTurn(); // Function Tiger.TigerLocalThrallMissionData.IncrementMissionByOneTurn // (Final|Native|Public|BlueprintCallable) // @ game+0x142f380
};

// Class Tiger.TigerLockOnCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerLockOnCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.TigerLoginQueueService
// Size: 0xc0 (Inherited: 0x28)
struct UTigerLoginQueueService : UObject {
	char pad_28[0x98]; // 0x28(0x98)
};

// Class Tiger.TigerLootSpawner
// Size: 0x268 (Inherited: 0x228)
struct ATigerLootSpawner : AActor {
	struct UTigerItemLootTable* LootTable; // 0x228(0x08)
	char GameTypeFilter; // 0x230(0x01)
	bool bShouldReceiveItemsFromLootLocation; // 0x231(0x01)
	char pad_232[0x6]; // 0x232(0x06)
	struct TArray<struct FTigerRandomizedLootResult> AssignedLoot; // 0x238(0x10)
	struct USphereComponent* LootLocationCollider; // 0x248(0x08)
	struct ATigerLootLocation* AssignedLootLocation; // 0x250(0x08)
	struct TArray<struct ATigerItemWorldRepresentation*> SpawnedItems; // 0x258(0x10)

	bool IsValidForCurrentGameType(); // Function Tiger.TigerLootSpawner.IsValidForCurrentGameType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f3d0
	int32_t GetCurrentItemCount(); // Function Tiger.TigerLootSpawner.GetCurrentItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142ec90
};

// Class Tiger.TigerLootBoxSpawner
// Size: 0x280 (Inherited: 0x268)
struct ATigerLootBoxSpawner : ATigerLootSpawner {
	struct ATigerLootBox* LootBoxClass; // 0x268(0x08)
	int32_t MinimumNumberOfItems; // 0x270(0x04)
	int32_t MaximumNumberOfItems; // 0x274(0x04)
	char pad_278[0x4]; // 0x278(0x04)
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
};

// Class Tiger.TigerLootableVehicleDoorSpawner
// Size: 0x288 (Inherited: 0x280)
struct ATigerLootableVehicleDoorSpawner : ATigerLootBoxSpawner {
	struct ATigerVehicle* VehicleBody; // 0x280(0x08)
};

// Class Tiger.TigerLootBox
// Size: 0x2f0 (Inherited: 0x280)
struct ATigerLootBox : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	struct ATigerItemWorldRepresentation* PickupItemClass; // 0x288(0x08)
	struct UAkAudioEvent* StartInteractSound; // 0x290(0x08)
	struct UAkAudioEvent* StopInteractSound; // 0x298(0x08)
	enum class ETigerItemRarity CurrentHighestRarity; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct TArray<struct FTigerItemData> ItemList; // 0x2a8(0x10)
	bool bWasSpawnedOnPlayerDeath; // 0x2b8(0x01)
	bool bHasBeenPreviouslyOpened; // 0x2b9(0x01)
	char pad_2BA[0x2]; // 0x2ba(0x02)
	struct TWeakObjectPtr<struct ATigerPlayerController> CurrentInteractingPlayerController; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct UBoxComponent* CancelInteractionVolume; // 0x2c8(0x08)
	char pad_2D0[0x18]; // 0x2d0(0x18)
	enum class ETigerTelemetryItemSourceID TelemetrySourceID; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)

	void SetTelemetrySourceID(enum class ETigerTelemetryItemSourceID InSourceID); // Function Tiger.TigerLootBox.SetTelemetrySourceID // (Final|Native|Public|BlueprintCallable) // @ game+0x142fa40
	void OnReset(); // Function Tiger.TigerLootBox.OnReset // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnRep_OpenedState(); // Function Tiger.TigerLootBox.OnRep_OpenedState // (Final|Native|Protected) // @ game+0x142f6e0
	void OnRep_HighestRarityUpdated(enum class ETigerItemRarity OldRarity); // Function Tiger.TigerLootBox.OnRep_HighestRarityUpdated // (Final|Native|Public) // @ game+0x142f640
	void OnOpenedStateReplicated(enum class EInteractiveObjectState State); // Function Tiger.TigerLootBox.OnOpenedStateReplicated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnOpened(); // Function Tiger.TigerLootBox.OnOpened // (Final|Native|Protected|BlueprintCallable) // @ game+0x142f620
	void OnOpenBoxAnimation(); // Function Tiger.TigerLootBox.OnOpenBoxAnimation // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnLocalPlayerInteractionCancelled(); // Function Tiger.TigerLootBox.OnLocalPlayerInteractionCancelled // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnListUpdated(struct TArray<struct FTigerItemData>& NewItemList); // Function Tiger.TigerLootBox.OnListUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnHighestRarityUpdated(enum class ETigerItemRarity NewHighestRarity); // Function Tiger.TigerLootBox.OnHighestRarityUpdated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_SetInteractionStateForNonInteractingPlayer(enum class EInteractiveObjectState NewState); // Function Tiger.TigerLootBox.Multicast_SetInteractionStateForNonInteractingPlayer // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x142f400
	void Multicast_OpenBoxAnimation(); // Function Tiger.TigerLootBox.Multicast_OpenBoxAnimation // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0xba5a00
	void Multicast_Enable(); // Function Tiger.TigerLootBox.Multicast_Enable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0xcc7900
	bool IsOpened(); // Function Tiger.TigerLootBox.IsOpened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f3a0
	bool HasLoot(); // Function Tiger.TigerLootBox.HasLoot // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f350
	struct FText GetDescriptionText(); // Function Tiger.TigerLootBox.GetDescriptionText // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x184a280
	void DisableLootBox(); // Function Tiger.TigerLootBox.DisableLootBox // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x142eaa0
	void ClientCloseLid(); // Function Tiger.TigerLootBox.ClientCloseLid // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void ClientCloseBoxGUI(); // Function Tiger.TigerLootBox.ClientCloseBoxGUI // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerLootBundleSpawner
// Size: 0x230 (Inherited: 0x228)
struct ATigerLootBundleSpawner : AActor {
	bool bLooted; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)

	void OnRep_LootedValueChanged(); // Function Tiger.TigerLootBundleSpawner.OnRep_LootedValueChanged // (Final|Native|Private) // @ game+0x142f6c0
	void OnAllItemsLooted(); // Function Tiger.TigerLootBundleSpawner.OnAllItemsLooted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerLootContainer
// Size: 0x298 (Inherited: 0x280)
struct ATigerLootContainer : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	bool bDoorIsOpen; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UTigerBlueprintLootComponent* LootSpawnerComponent; // 0x290(0x08)

	void OnStoppedBeingClosestLootContainerInHeightenedSenses(); // Function Tiger.TigerLootContainer.OnStoppedBeingClosestLootContainerInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBecameClosestLootContainerInHeightenedSenses(); // Function Tiger.TigerLootContainer.OnBecameClosestLootContainerInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerLootDropComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerLootDropComponent : UActorComponent {
	int32_t DropChance; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct TArray<struct FTigerLootItemType> LootAssets; // 0xb8(0x10)
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Tiger.TigerLootLocationConfiguration
// Size: 0x40 (Inherited: 0x30)
struct UTigerLootLocationConfiguration : UDataAsset {
	struct TArray<struct FTigerLootLocationEntry> LocationEntries; // 0x30(0x10)
};

// Class Tiger.TigerLootLocation
// Size: 0x2d0 (Inherited: 0x260)
struct ATigerLootLocation : AVolume {
	struct UTigerLootLocationConfiguration* Configuration; // 0x260(0x08)
	struct FText EnteringAreaMainText; // 0x268(0x18)
	struct FText EnteringAreaSubText; // 0x280(0x18)
	struct UTexture2D* EnteringAreaTextBackground; // 0x298(0x08)
	struct TArray<struct ATigerLootSpawner*> OverlappingLootSpawners; // 0x2a0(0x10)
	struct TArray<struct ATigerLootSpawner*> AlwaysOverlappingLootSpawner; // 0x2b0(0x10)
	char GameTypeFilter; // 0x2c0(0x01)
	char pad_2C1[0xb]; // 0x2c1(0x0b)
	float EnteringPromptCooldown; // 0x2cc(0x04)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerLootLocation.OnEndOverlap // (Final|Native|Private) // @ game+0x142f550
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerLootLocation.OnBeginOverlap // (Final|Native|Private) // @ game+0x142f480
};

// Class Tiger.TigerItemLootTable
// Size: 0xc0 (Inherited: 0x30)
struct UTigerItemLootTable : UDataAsset {
	struct TArray<struct FTigerItemLootEntry> Items; // 0x30(0x10)
	struct TArray<struct FTigerSubItemLootTable> SubLootTables; // 0x40(0x10)
	struct TMap<struct FTigerLootTableKey, struct FTigerGeneratedLootTable> GeneratedSubsets; // 0x50(0x50)
	struct FTigerGeneratedLootTable EntireLootTable; // 0xa0(0x18)
	char pad_B8[0x1]; // 0xb8(0x01)
	bool bIsLootBuilt; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	void DebugChances(); // Function Tiger.TigerItemLootTable.DebugChances // (Final|Native|Public) // @ game+0xb5ee20
};

// Class Tiger.TigerMapGameData
// Size: 0xb0 (Inherited: 0x28)
struct UTigerMapGameData : UObject {
	struct FMulticastInlineDelegate OnMapMarkerAdded; // 0x28(0x10)
	struct FMulticastInlineDelegate OnMapMarkerRemoved; // 0x38(0x10)
	struct TArray<struct UTigerMapMarkerProxy*> MapMarkerProxies; // 0x48(0x10)
	struct UTigerMapInfoDataAsset* MapInfoAsset; // 0x58(0x08)
	char pad_60[0x50]; // 0x60(0x50)

	void SetCurrentMinimapSize(struct FVector2D InMinimapSize); // Function Tiger.TigerMapGameData.SetCurrentMinimapSize // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x142f810
	void RemoveMapMarker(struct UTigerMapMarkerProxy* Marker); // Function Tiger.TigerMapGameData.RemoveMapMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x142f780
	bool HasAnyMapInfo(); // Function Tiger.TigerMapGameData.HasAnyMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f320
	struct FVector2D GetPositionZeroToOne(struct FVector2D& InPositionOnTexture); // Function Tiger.TigerMapGameData.GetPositionZeroToOne // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x142f140
	struct FVector2D GetPositionOnMap(struct FVector& InLocation); // Function Tiger.TigerMapGameData.GetPositionOnMap // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x142f090
	struct FVector2D GetPositionInWorld(struct FVector2D& MapPosition); // Function Tiger.TigerMapGameData.GetPositionInWorld // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x142eff0
	struct FTigerMapInfo GetCurrentMapInfo(); // Function Tiger.TigerMapGameData.GetCurrentMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142ecb0
	struct UTigerMapMarkerProxy* AddMapMarkerBP(struct UUserWidget* MapMarker); // Function Tiger.TigerMapGameData.AddMapMarkerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x142e6e0
};

// Class Tiger.TigerMapIncenseLine
// Size: 0x280 (Inherited: 0x260)
struct UTigerMapIncenseLine : UUserWidget {
	struct FName LineLengthParam; // 0x260(0x08)
	char pad_268[0x18]; // 0x268(0x18)

	void UpdateLinePosition(struct UMaterialInstanceDynamic* InDynamicMaterial); // Function Tiger.TigerMapIncenseLine.UpdateLinePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x1435d30
	void SetStartPos(struct FVector2D InPos); // Function Tiger.TigerMapIncenseLine.SetStartPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1435900
	void SetEndPos(struct FVector2D InPos); // Function Tiger.TigerMapIncenseLine.SetEndPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x14355a0
	void SetActualEndPos(float InLineLengthCutoff, float InInterpSpeed, float InDeltaTime); // Function Tiger.TigerMapIncenseLine.SetActualEndPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1435370
	void ResetLinePosition(struct UMaterialInstanceDynamic* InLineMaterial); // Function Tiger.TigerMapIncenseLine.ResetLinePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x14352e0
	struct FVector2D GetStartPos(); // Function Tiger.TigerMapIncenseLine.GetStartPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434ea0
	struct FVector2D GetEndPos(); // Function Tiger.TigerMapIncenseLine.GetEndPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434b70
	void ExternalUpdateLinePosition(); // Function Tiger.TigerMapIncenseLine.ExternalUpdateLinePosition // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void ExternalResetLinePosition(); // Function Tiger.TigerMapIncenseLine.ExternalResetLinePosition // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMapInfoDataAsset
// Size: 0x100 (Inherited: 0x30)
struct UTigerMapInfoDataAsset : UDataAsset {
	struct TArray<struct FTigerMapInfo> MapInfoList; // 0x30(0x10)
	struct FTigerMapInfo DefaultMapInfo; // 0x40(0xb8)
	struct UUserWidget* PointOfInterestWidgetType; // 0xf8(0x08)
};

// Class Tiger.TigerMapMarkerOverlay
// Size: 0x298 (Inherited: 0x280)
struct UTigerMapMarkerOverlay : UTigerWidget {
	struct FMulticastInlineDelegate OnPlayerMarkerAdded; // 0x280(0x10)
	struct UTigerPlayerMarkerWidget* PlayerMarkerPtr; // 0x290(0x08)

	void SetPlayerMarkerWidget(struct UTigerPlayerMarkerWidget* InPlayerMarkerWidget); // Function Tiger.TigerMapMarkerOverlay.SetPlayerMarkerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x14357e0
	struct UTigerPlayerMarkerWidget* GetPlayerMarkerWidget(); // Function Tiger.TigerMapMarkerOverlay.GetPlayerMarkerWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ab570
};

// Class Tiger.TigerMapMarkerWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerMapMarkerWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnMarkerUpdated; // 0x280(0x10)
	bool bIsDynamic; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	bool bShouldUseCustomZOrder; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	int32_t CustomZOrder; // 0x29c(0x04)
	int32_t MarkerId; // 0x2a0(0x04)
	char pad_2A4[0x9]; // 0x2a4(0x09)
	bool bIsOnMinimap; // 0x2ad(0x01)
	char pad_2AE[0x2]; // 0x2ae(0x02)
	struct TWeakObjectPtr<struct UTigerMapMarkerProxy> MapMarkerProxy; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)
	bool bStartHidden; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	float CurrentOpacity; // 0x2c4(0x04)
	float FadeSpeed; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void Update(); // Function Tiger.TigerMapMarkerWidget.Update // (Native|Public|BlueprintCallable) // @ game+0x1435c80
	struct FVector2D ToCanvasSpace(struct FVector2D ZeroToOneSpace); // Function Tiger.TigerMapMarkerWidget.ToCanvasSpace // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435be0
	void SetMapMarkerProxy(struct UTigerMapMarkerProxy* Proxy); // Function Tiger.TigerMapMarkerWidget.SetMapMarkerProxy // (Final|Native|Public|BlueprintCallable) // @ game+0x1435750
	void SetIsOnMinimap(bool bInIsOnMinimap); // Function Tiger.TigerMapMarkerWidget.SetIsOnMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x1435620
	void SetCanvasSize(struct FVector2D ParentCanvasSize); // Function Tiger.TigerMapMarkerWidget.SetCanvasSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1435520
	void OnUpdated(); // Function Tiger.TigerMapMarkerWidget.OnUpdated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnIsOnMinimapIsSet(bool bInIsOnMinimap); // Function Tiger.TigerMapMarkerWidget.OnIsOnMinimapIsSet // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void HandleGameplaySettingsChanged(struct FTigerGameplaySettings& InGameplaySettings); // Function Tiger.TigerMapMarkerWidget.HandleGameplaySettingsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1434f30
	struct UTigerMapGameData* GetMapGameData(); // Function Tiger.TigerMapMarkerWidget.GetMapGameData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434c60
	void FadeIn(float InDurationInSeconds); // Function Tiger.TigerMapMarkerWidget.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x1434870
	void CollapseUnseenIcons(); // Function Tiger.TigerMapMarkerWidget.CollapseUnseenIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x1434850
};

// Class Tiger.TigerMapSubMenu
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerMapSubMenu : UTigerIngameSubmenuWidget {

	void ShowMatchTimer(); // Function Tiger.TigerMapSubMenu.ShowMatchTimer // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnQuestCompleted(struct FString InQuestId); // Function Tiger.TigerMapSubMenu.OnQuestCompleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMapUi
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerMapUi : UTigerWidget {
	struct FName GasOverlayWorldTimeSeconds; // 0x280(0x08)
	struct FName GasOverlayWaveRevealTime; // 0x288(0x08)
	struct UTigerMapMarkerOverlay* MapMarkerOverlay; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)

	void UpdateMapIncenseLine(struct UTigerMapIncenseLine* InMapIncenceLineWidget, struct UCanvasPanel* InMapCanvas, struct UTigerMapMarkerOverlay* InMapMarkerOverlay); // Function Tiger.TigerMapUi.UpdateMapIncenseLine // (Final|Native|Public|BlueprintCallable) // @ game+0x1435dc0
	void UpdateGasOverlay(struct UImage* InGasOverlayImage); // Function Tiger.TigerMapUi.UpdateGasOverlay // (Final|Native|Public|BlueprintCallable) // @ game+0x1435ca0
	void OnPlayerStateCreated(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerMapUi.OnPlayerStateCreated // (Final|Native|Private) // @ game+0x1435110
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMapUi.OnMasqueradeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct FTigerMapInfo GetMapInfo(); // Function Tiger.TigerMapUi.GetMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434c90
};

// Class Tiger.TigerMasqueradeActionResponse
// Size: 0x40 (Inherited: 0x28)
struct UTigerMasqueradeActionResponse : UObject {
	float MinFearScaleDistance; // 0x28(0x04)
	float MinFearScaleValue; // 0x2c(0x04)
	float MinMasqueradeScaleDistance; // 0x30(0x04)
	float MinMasqueradeScaleValue; // 0x34(0x04)
	bool bIsDummy; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)

	enum class ETigerAIMasqueradeState OnReactToPlayerAction(struct ATigerAIController* TigerAIController, struct ATigerPlayer* TigerPlayer, struct FTigerAIPlayerAction& PlayerAction, enum class ETigerAIMasqueradeState CurrentState, float& FearValue); // Function Tiger.TigerMasqueradeActionResponse.OnReactToPlayerAction // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnJudgeReaction(struct ATigerAiJudgeController* JudgeAIC, struct ATigerPlayer* Player, struct FTigerAIPlayerAction& PlayerAction); // Function Tiger.TigerMasqueradeActionResponse.OnJudgeReaction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	bool IsActionDisciplineRelated(enum class ETigerAIPlayerAction Action); // Function Tiger.TigerMasqueradeActionResponse.IsActionDisciplineRelated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435000
	float GetPlayerMasqueradePointsForAction(struct ATigerNPC* InNpc, struct ATigerPlayer* InTigerPlayer, struct FTigerAIPlayerAction& InPlayerAction); // Function Tiger.TigerMasqueradeActionResponse.GetPlayerMasqueradePointsForAction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMasqueradeCoordinator
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerMasqueradeCoordinator : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class Tiger.TigerMasqueradeMarker
// Size: 0x2d8 (Inherited: 0x2d0)
struct UTigerMasqueradeMarker : UTigerMapMarkerWidget {
	float MarkerRadius; // 0x2d0(0x04)
	char pad_2D4[0x4]; // 0x2d4(0x04)

	void EventScaleToCurrentMap(); // Function Tiger.TigerMasqueradeMarker.EventScaleToCurrentMap // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMasqueradeMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerMasqueradeMarkerProxy : UTigerMapMarkerProxy {
	bool bIsMarkingFriendlyOrLocalPlayer; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float MarkerRadius; // 0x6c(0x04)
};

// Class Tiger.TigerResourceBarUI
// Size: 0x398 (Inherited: 0x280)
struct UTigerResourceBarUI : UTigerWidget {
	struct FMulticastInlineDelegate OnHealthChanged; // 0x280(0x10)
	struct ATigerCharacter* TigerCharacterOwner; // 0x290(0x08)
	enum class ETigerResourceBarType BarType; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)
	struct TArray<struct UTigerResourceBarSegmentUI*> HealthBarSegments; // 0x2a0(0x10)
	struct FLinearColor FilledColor; // 0x2b0(0x10)
	struct FLinearColor IsDownedFilledColor; // 0x2c0(0x10)
	struct FLinearColor EmptyColor; // 0x2d0(0x10)
	struct FLinearColor LockedColor; // 0x2e0(0x10)
	int32_t NumberOfSegments; // 0x2f0(0x04)
	bool bShouldShowLostHealth; // 0x2f4(0x01)
	char pad_2F5[0x3]; // 0x2f5(0x03)
	float LostHealthDelay; // 0x2f8(0x04)
	float LostHealthBarSpeed; // 0x2fc(0x04)
	float LostHealthPercentage; // 0x300(0x04)
	bool bShouldShowGainedResources; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	float GainedResourceDelay; // 0x308(0x04)
	float GainedResourceBarSpeed; // 0x30c(0x04)
	float GainedResourcePercentage; // 0x310(0x04)
	float TheoreticalMaxResources; // 0x314(0x04)
	float WidthBetweenSegments; // 0x318(0x04)
	char pad_31C[0x7c]; // 0x31c(0x7c)

	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealth, float InNewHealthPercentage); // DelegateFunction Tiger.TigerResourceBarUI.TigerDelegateHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SetOwner(struct ATigerCharacter* TigerCharacter); // Function Tiger.TigerResourceBarUI.SetOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa6f0
	void ResetCurrentResourceNameIndex(); // Function Tiger.TigerResourceBarUI.ResetCurrentResourceNameIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aa3d0
	void OnSegmentFilled(float InProgress); // Function Tiger.TigerResourceBarUI.OnSegmentFilled // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnSegmentEmptied(float HorizontalProgress); // Function Tiger.TigerResourceBarUI.OnSegmentEmptied // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnHealthLost(); // Function Tiger.TigerResourceBarUI.OnHealthLost // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	float GetRecentResourcesLost(); // Function Tiger.TigerResourceBarUI.GetRecentResourcesLost // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x14aa020
	float GetMaxResources(); // Function Tiger.TigerResourceBarUI.GetMaxResources // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x14a9fe0
	struct FLinearColor GetLockedColor(); // Function Tiger.TigerResourceBarUI.GetLockedColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14a9fa0
	struct FLinearColor GetFilledColor(); // Function Tiger.TigerResourceBarUI.GetFilledColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14a9f60
	struct FLinearColor GetEmptyColor(); // Function Tiger.TigerResourceBarUI.GetEmptyColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14a9f20
	float GetCurrentResources(); // Function Tiger.TigerResourceBarUI.GetCurrentResources // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x14a9ee0
};

// Class Tiger.TigerMasqueradeStatusWidget
// Size: 0x3a0 (Inherited: 0x398)
struct UTigerMasqueradeStatusWidget : UTigerResourceBarUI {
	char PlayerVisibilityToNPC; // 0x398(0x01)
	bool bIsHunted; // 0x399(0x01)
	char pad_39A[0x6]; // 0x39a(0x06)

	void OnNpcLostSightOfPlayer(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.OnNpcLostSightOfPlayer // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnNpcGainedSightOfPlayer(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.OnNpcGainedSightOfPlayer // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnMasqueradeRestored(); // Function Tiger.TigerMasqueradeStatusWidget.OnMasqueradeRestored // (Native|Event|Public|BlueprintEvent) // @ game+0x13deb30
	void OnMasqueradeBreached(); // Function Tiger.TigerMasqueradeStatusWidget.OnMasqueradeBreached // (Native|Event|Public|BlueprintEvent) // @ game+0x14350d0
	void AddNpcDirectionalIndicator(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.AddNpcDirectionalIndicator // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMasterChallengesConfigAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerMasterChallengesConfigAsset : UDataAsset {
	struct FTigerMasteryChallengesConfig Config; // 0x30(0x10)
};

// Class Tiger.TigerMatchGameMode
// Size: 0xbc8 (Inherited: 0x808)
struct ATigerMatchGameMode : ATigerGameMode {
	struct FMulticastInlineDelegate OnPlayerDeathEvent; // 0x808(0x10)
	struct FMulticastInlineDelegate OnMatchSettingsSetEvent; // 0x818(0x10)
	char pad_828[0x38]; // 0x828(0x38)
	struct UTigerSHPBCoordinator* SHPBCoordinator; // 0x860(0x08)
	struct UTigerHeatmapCollector* HeatmapCollector; // 0x868(0x08)
	struct UTigerConsequenceBroadcastCoordinator* ConsequenceBroadcastCoordinator; // 0x870(0x08)
	struct TArray<struct FTigerReadyToPlayState> ReadyToPlayStates; // 0x878(0x10)
	char pad_888[0x38]; // 0x888(0x38)
	struct UTigerMatchStateComponent* MatchStateManager; // 0x8c0(0x08)
	struct UTigerMatchGameModeReporter* MatchReporter; // 0x8c8(0x08)
	struct UTigerBuffShieldBase* DefaultShieldBuff; // 0x8d0(0x08)
	char pad_8D8[0x2f0]; // 0x8d8(0x2f0)

	void StartReturnToElysiumSequence(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerMatchGameMode.StartReturnToElysiumSequence // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ShowEndScreenOnClients(); // Function Tiger.TigerMatchGameMode.ShowEndScreenOnClients // (Final|Native|Public|BlueprintCallable) // @ game+0x1435bc0
	void ShowDeathScreenOnClient(struct ATigerPlayerController* InTigerPlayerController, int32_t InInstigatorStateId, enum class ETigerKillerType InKillerType); // Function Tiger.TigerMatchGameMode.ShowDeathScreenOnClient // (Final|Native|Public|BlueprintCallable) // @ game+0x1435ab0
	void ReportMatchResults(struct FDelegate& Delegate); // Function Tiger.TigerMatchGameMode.ReportMatchResults // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1435230
	void PlayerLeavingMatch(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerMatchGameMode.PlayerLeavingMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x14351a0
	void OnRegisterPlayerPlacement__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerMatchGameMode.OnRegisterPlayerPlacement__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPlayerDeathEvent__DelegateSignature(struct ATigerPlayer* DeadPlayer, struct ATigerPlayer* InstigatorPlayer); // DelegateFunction Tiger.TigerMatchGameMode.OnPlayerDeathEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMatchStatsReceivedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameMode.OnMatchStatsReceivedDelegate__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void OnMatchSettingsSetEvent__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameMode.OnMatchSettingsSetEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMatchSettingsSet(); // Function Tiger.TigerMatchGameMode.OnMatchSettingsSet // (Final|Native|Public) // @ game+0x14350f0
	bool IsMatchSettingsSet(); // Function Tiger.TigerMatchGameMode.IsMatchSettingsSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435090
	struct ATigerPlayer* GetWinningPlayer(); // Function Tiger.TigerMatchGameMode.GetWinningPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434f00
	struct FTigerMatchSettings GetMatchSettings(); // Function Tiger.TigerMatchGameMode.GetMatchSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1434cd0
	struct FTigerMatchStats GenerateMatchStatsForPlayer(struct ATigerPlayerController* Player); // Function Tiger.TigerMatchGameMode.GenerateMatchStatsForPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14348f0
};

// Class Tiger.TigerMatchGameModeSettings
// Size: 0x1a8 (Inherited: 0x38)
struct UTigerMatchGameModeSettings : USharkLocalDeveloperSettings {
	struct TSoftObjectPtr<UDataTable> RangedWeaponsDatatable; // 0x38(0x28)
	float HighPotenceBloodTransferTime; // 0x60(0x04)
	int32_t SpawnCountdownTime; // 0x64(0x04)
	int32_t MatchStartTimeOutSeconds; // 0x68(0x04)
	int32_t PlayerConnectionTimeOutSeconds; // 0x6c(0x04)
	int32_t PlayerConnectionMinimumWaitTimeSeconds; // 0x70(0x04)
	int32_t SecondsOfNetworkInactivityAllowedBeforeForcingReady; // 0x74(0x04)
	int32_t MinPlayersToStartMatch; // 0x78(0x04)
	bool bEnableSpawnCountdown; // 0x7c(0x01)
	bool bEnableWinningCondition; // 0x7d(0x01)
	bool bReturnPlayersToElysiumOnFinish; // 0x7e(0x01)
	bool bRebootServerOnFinish; // 0x7f(0x01)
	bool bEnableAssaults; // 0x80(0x01)
	bool bEnableGroupFill; // 0x81(0x01)
	bool bLogTickRate; // 0x82(0x01)
	bool bAutoSpectateOnDeath; // 0x83(0x01)
	bool bAllowSpectateNonTeamMembersInGroupMode; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	struct FTigerEntityCheckpointsSettings EntityCheckpointsSettings[0x2]; // 0x88(0x20)
	struct FTigerRatSpawnpointSettings RatSpawnpointSettings[0x2]; // 0xa8(0x10)
	struct FTigerSHPBSettings SHPBSettings[0x2]; // 0xb8(0x38)
	struct FTigerHavenCapturePointSettings CapturePointSettings[0x2]; // 0xf0(0x40)
	struct FTigerBattleRoyalePlayerSpawnSettings BattleRoyalePlayerSpawnSettings; // 0x130(0x08)
	struct FTigerPreSpawnSettings PreSpawnSettings; // 0x138(0x28)
	struct FTigerHighTierLootSettings HighTierLootSettings; // 0x160(0x30)
	float DownedRegenDuration[0x2]; // 0x190(0x08)
	int32_t AssistDamageTreshold; // 0x198(0x04)
	float AssistDuration; // 0x19c(0x04)
	float EnvironmentalKillStealDuration; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)

	bool ShouldReturnPlayersToElysiumOnFinish(); // Function Tiger.TigerMatchGameModeSettings.ShouldReturnPlayersToElysiumOnFinish // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1435a50
	bool ShouldRebootServerOnFinish(); // Function Tiger.TigerMatchGameModeSettings.ShouldRebootServerOnFinish // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1435a20
	struct FTigerSHPBSettings GetSHPBSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetSHPBSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434e10
	struct FTigerRatSpawnpointSettings GetRatSpawnpointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetRatSpawnpointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434d70
	struct UDataTable* GetRangedWeaponsDatatable(); // Function Tiger.TigerMatchGameModeSettings.GetRangedWeaponsDatatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434d40
	struct FTigerPreSpawnSettings GetPreSpawnSettings(); // Function Tiger.TigerMatchGameModeSettings.GetPreSpawnSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434d00
	struct FTigerEntityCheckpointsSettings GetEntityCheckpointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetEntityCheckpointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434bb0
	float GetDownedRegenDuration(enum class EMatchBalanceMode InBalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetDownedRegenDuration // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434af0
	struct FTigerHavenCapturePointSettings GetCapturePointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetCapturePointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434a60
	struct FTigerBattleRoyalePlayerSpawnSettings GetBattleRoyalePlayerSpawnSettings(); // Function Tiger.TigerMatchGameModeSettings.GetBattleRoyalePlayerSpawnSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1434a30
};

// Class Tiger.TigerMatchGameModeReporter
// Size: 0x1c0 (Inherited: 0xb0)
struct UTigerMatchGameModeReporter : UActorComponent {
	char pad_B0[0x110]; // 0xb0(0x110)
};

// Class Tiger.TigerMatchGameSession
// Size: 0x298 (Inherited: 0x298)
struct ATigerMatchGameSession : ATigerGameSession {
};

// Class Tiger.TigerMatchGameState
// Size: 0x618 (Inherited: 0x380)
struct ATigerMatchGameState : ATigerGameState {
	struct FMulticastInlineDelegate OnPreMatchStateChanged; // 0x380(0x10)
	struct FMulticastInlineDelegate OnMatchStateChanged; // 0x390(0x10)
	struct FMulticastInlineDelegate OnNumberOfPlayersAttachedToBloodVeinUpdated; // 0x3a0(0x10)
	struct FMulticastInlineDelegate HighTierLootLocationsChanged; // 0x3b0(0x10)
	struct FMulticastInlineDelegate OnNumberOfConnectedPlayersChanged; // 0x3c0(0x10)
	struct FMulticastInlineDelegate OnNumberOfAlivePlayersChanged; // 0x3d0(0x10)
	float NextWaveRevealGameTime; // 0x3e0(0x04)
	float MatchTimePassed; // 0x3e4(0x04)
	float ReplicatedMatchTimePassed; // 0x3e8(0x04)
	int32_t NumPlayersAlive; // 0x3ec(0x04)
	int32_t NumGroupsAlive; // 0x3f0(0x04)
	int32_t GroupSize; // 0x3f4(0x04)
	int32_t NumPlayersConnected; // 0x3f8(0x04)
	int32_t RandomizedWeatherValue; // 0x3fc(0x04)
	struct FTigerPreMatchStateInfo PreMatchState; // 0x400(0x08)
	enum class ETigerMatchState TigerMatchState; // 0x408(0x01)
	enum class EMatchBalanceMode BalanceMode; // 0x409(0x01)
	char pad_40A[0x6]; // 0x40a(0x06)
	struct FTigerMatchSettings MatchSettings; // 0x410(0x168)
	struct ATigerWorldMarker* EntityCheckpointMarkerClass; // 0x578(0x08)
	char NumberOfPawnsAttachedToBloodVein; // 0x580(0x01)
	char pad_581[0x7]; // 0x581(0x07)
	struct FMulticastInlineDelegate OnSpawnMechanicReceived; // 0x588(0x10)
	struct FMulticastInlineDelegate OnMatchSettingsReceived; // 0x598(0x10)
	struct UTigerSpawnMechanic* SpawnMechanicClass; // 0x5a8(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> ActiveHighTierLootGroups; // 0x5b0(0x10)
	struct FText JudgeSlainText; // 0x5c0(0x18)
	enum class ETigerMatchType MatchType; // 0x5d8(0x01)
	char pad_5D9[0x7]; // 0x5d9(0x07)
	struct TArray<struct FVector2D> EntityCheckpointLocations; // 0x5e0(0x10)
	struct TArray<struct ATigerWorldMarker*> EntityCheckpointMarkers; // 0x5f0(0x10)
	char pad_600[0x14]; // 0x600(0x14)
	bool bMatchSettingsSet; // 0x614(0x01)
	enum class ETigerMatchMode MatchMode; // 0x615(0x01)
	char pad_616[0x2]; // 0x616(0x02)

	void TigerOnSpawnMechanicReceived__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameState.TigerOnSpawnMechanicReceived__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SetMatchState(enum class ETigerMatchState MatchState); // Function Tiger.TigerMatchGameState.SetMatchState // (Final|Native|Public|BlueprintCallable) // @ game+0x143a1c0
	void OnTigerNumberOfConnectedPlayersChanged__DelegateSignature(int32_t InNumberOfConnectedPlayers); // DelegateFunction Tiger.TigerMatchGameState.OnTigerNumberOfConnectedPlayersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnTigerNumberOfAlivePlayersChanged__DelegateSignature(int32_t InNumberOfAlivePlayers); // DelegateFunction Tiger.TigerMatchGameState.OnTigerNumberOfAlivePlayersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_TigerMatchState(enum class ETigerMatchState OldMatchState); // Function Tiger.TigerMatchGameState.OnRep_TigerMatchState // (Final|Native|Private) // @ game+0x143a0e0
	void OnRep_TigerBalanceMode(enum class EMatchBalanceMode InOldBalanceMode); // Function Tiger.TigerMatchGameState.OnRep_TigerBalanceMode // (Final|Native|Private) // @ game+0x143a060
	void OnRep_SpawnMechanicClass(); // Function Tiger.TigerMatchGameState.OnRep_SpawnMechanicClass // (Final|Native|Private) // @ game+0x143a040
	void OnRep_MatchSettings(); // Function Tiger.TigerMatchGameState.OnRep_MatchSettings // (Final|Native|Private) // @ game+0x143a020
	void OnRep_EntityCheckpointLocations(); // Function Tiger.TigerMatchGameState.OnRep_EntityCheckpointLocations // (Final|Native|Private) // @ game+0x143a000
	void OnRep_BloodVeinAttachedPlayers(); // Function Tiger.TigerMatchGameState.OnRep_BloodVeinAttachedPlayers // (Final|Native|Private) // @ game+0x1439fe0
	void OnPreMatchStateChanged__DelegateSignature(struct FTigerPreMatchStateInfo PreMatchState); // DelegateFunction Tiger.TigerMatchGameState.OnPreMatchStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnNumberOfPlayersAttachedToBloodVeinUpdated__DelegateSignature(int32_t NumberOfPlayersAttached); // DelegateFunction Tiger.TigerMatchGameState.OnNumberOfPlayersAttachedToBloodVeinUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMatchStateChanged__DelegateSignature(enum class ETigerMatchState OldState, enum class ETigerMatchState NewState); // DelegateFunction Tiger.TigerMatchGameState.OnMatchStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMatchSettingsSetEvent__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameState.OnMatchSettingsSetEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnHighTierLootLocationsChanged__DelegateSignature(struct TArray<struct TSoftClassPtr<UObject>>& InActiveHighTierLootGroups); // DelegateFunction Tiger.TigerMatchGameState.OnHighTierLootLocationsChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void Multicast_UpdatePreMatchState(struct FTigerPreMatchStateInfo NewPreMatchState); // Function Tiger.TigerMatchGameState.Multicast_UpdatePreMatchState // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1439ec0
	void Multicast_SetEnitityCheckpointLocations(struct TArray<struct FVector2D> CheckpointLocations); // Function Tiger.TigerMatchGameState.Multicast_SetEnitityCheckpointLocations // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1439e20
	void Multicast_SetBloodVeinSpeedMultipliers(float InMainBranchSpeed, float InBranchSpeed); // Function Tiger.TigerMatchGameState.Multicast_SetBloodVeinSpeedMultipliers // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1439d50
	void Multicast_JudgeSpawned(); // Function Tiger.TigerMatchGameState.Multicast_JudgeSpawned // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1410800
	void Multicast_JudgeSlain(struct APlayerState* InInstigatorPlayer); // Function Tiger.TigerMatchGameState.Multicast_JudgeSlain // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1439cc0
	void Multicast_DestroyResurrectAltar(struct ATigerResurrectAltar* InAltar); // Function Tiger.TigerMatchGameState.Multicast_DestroyResurrectAltar // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1439c30
	bool IsMatchSettingsSet(); // Function Tiger.TigerMatchGameState.IsMatchSettingsSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439be0
	void HandleOnRestartPlayer(struct AController* NewPlayer); // Function Tiger.TigerMatchGameState.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1439a70
	enum class ETigerMatchState GetMatchState(); // Function Tiger.TigerMatchGameState.GetMatchState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439910
	struct FTigerMatchSettings GetMatchSettings(); // Function Tiger.TigerMatchGameState.GetMatchSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14398e0
	enum class ETigerMatchMode GetMatchMode(); // Function Tiger.TigerMatchGameState.GetMatchMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14398c0
	bool GetClosestLocationOnNextWaveWall(struct FVector2D& Location, struct FVector2D& ClosestLocation, bool& bIsOutsidePlayableArea); // Function Tiger.TigerMatchGameState.GetClosestLocationOnNextWaveWall // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1439320
	void Client_ChangeNumPlayersAlive(int32_t InNewNumPlayersAlive, int32_t InNewNumPlayersConnected); // Function Tiger.TigerMatchGameState.Client_ChangeNumPlayersAlive // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1438f50
};

// Class Tiger.TigerMatchHUD
// Size: 0x560 (Inherited: 0x420)
struct ATigerMatchHUD : ATigerHUD {
	struct UTigerPromptCollectionWidget* PromptCollection; // 0x420(0x08)
	struct ATigerMusicManager* MusicManager; // 0x428(0x08)
	struct UTigerCompassUI* CompassUI; // 0x430(0x08)
	struct UTigerMasqueradeStatusWidget* MasqueradeStatus; // 0x438(0x08)
	struct UTigerWidget* ChallengeList; // 0x440(0x08)
	struct UTigerWidget* BloodResonanceUi; // 0x448(0x08)
	struct UTigerRevivingStatusUI* RevivingStatusUI; // 0x450(0x08)
	struct UTigerConsumableWheelWidget* ConsumableWheel; // 0x458(0x08)
	struct UTigerWidget* ClimbPrompt; // 0x460(0x08)
	struct UTigerWidget* LevelOverlay; // 0x468(0x08)
	struct UTigerWidget* YouAreDownedPrompt; // 0x470(0x08)
	struct UTigerWidget* Minimap; // 0x478(0x08)
	struct UTigerWidget* StatusMessage; // 0x480(0x08)
	struct UTigerWidget* InputTray; // 0x488(0x08)
	struct FMulticastInlineDelegate OnDropItemAction; // 0x490(0x10)
	struct UTigerDisciplinesUi* Disciplines; // 0x4a0(0x08)
	struct UTigerCapturePointProgressUI* CapturePointProgressUI; // 0x4a8(0x08)
	struct UTigerWeaponAmmoWidget* WeaponAmmo; // 0x4b0(0x08)
	struct UTigerPingWheelWidget* PingWheelWidget; // 0x4b8(0x08)
	struct UTigerWidget* Watermark; // 0x4c0(0x08)
	struct UTigerSpawnPointSelectionUi* SpawnSelectionUi; // 0x4c8(0x08)
	struct UTigerArchetypeSelectPragueUI* ArchetypeSelectUi; // 0x4d0(0x08)
	struct UTigerWidget* PreMatchMapWidget; // 0x4d8(0x08)
	struct UTigerDeathScreen* DeathScreenClass; // 0x4e0(0x08)
	struct UTigerDeathScreen* DeathScreen; // 0x4e8(0x08)
	struct UTigerInventoryUI* InventoryUi; // 0x4f0(0x08)
	struct UTigerMapSubMenu* MapUi; // 0x4f8(0x08)
	struct UTigerInputMenuUI* SettingsMenuUi; // 0x500(0x08)
	struct UTigerTeamMenuUI* TeamMenuUi; // 0x508(0x08)
	struct UTigerReportMenuUI* ReportMenuUi; // 0x510(0x08)
	struct UTigerWidget* HealthBar; // 0x518(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> PreMatchUiClasses; // 0x520(0x10)
	char pad_530[0x10]; // 0x530(0x10)
	struct TArray<struct UTigerWidget*> PreMatchWidgets; // 0x540(0x10)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComponent; // 0x550(0x08)
	char pad_558[0x8]; // 0x558(0x08)

	void ToggleTeamMenu(); // Function Tiger.TigerMatchHUD.ToggleTeamMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143a590
	void ToggleSettingsMenu(); // Function Tiger.TigerMatchHUD.ToggleSettingsMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143a570
	void ToggleReportMenu(); // Function Tiger.TigerMatchHUD.ToggleReportMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143a550
	void ToggleMap(); // Function Tiger.TigerMatchHUD.ToggleMap // (Final|Native|Public|BlueprintCallable) // @ game+0x143a530
	void ToggleInventory(); // Function Tiger.TigerMatchHUD.ToggleInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x143a510
	void ToggleInputMenu(); // Function Tiger.TigerMatchHUD.ToggleInputMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143a4f0
	void ToggleCharacterMenu(); // Function Tiger.TigerMatchHUD.ToggleCharacterMenu // (Final|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void ShowIntroPrompt(float InDelayAfterMatchStart); // Function Tiger.TigerMatchHUD.ShowIntroPrompt // (Final|Native|Protected|BlueprintCallable) // @ game+0x143a470
	void ShowInteractionPrompt(struct UTigerSimpleTextPrompt* Prompt); // Function Tiger.TigerMatchHUD.ShowInteractionPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x143a3e0
	void ShowDeathScreen(int32_t InPlayerPlacement, int32_t InNumGroupsAtStart, int32_t InPlayerStateId, enum class ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose); // Function Tiger.TigerMatchHUD.ShowDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x143a240
	void ReleasePreMatchAssets(); // Function Tiger.TigerMatchHUD.ReleasePreMatchAssets // (Final|Native|Protected) // @ game+0x143a1a0
	void RaiseOnDropItemAction(); // Function Tiger.TigerMatchHUD.RaiseOnDropItemAction // (Final|Native|Public|BlueprintCallable) // @ game+0x143a180
	void PreparePreMatchMapForMatchStart(float InMatchStartTimeStamp); // Function Tiger.TigerMatchHUD.PreparePreMatchMapForMatchStart // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void PreMatchStateChanged(struct FTigerPreMatchStateInfo& InNewPreMatchState); // Function Tiger.TigerMatchHUD.PreMatchStateChanged // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OpenPreMatchMap(float InPreMatchMapEndTimeStamp); // Function Tiger.TigerMatchHUD.OpenPreMatchMap // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OpenDeathScreen(); // Function Tiger.TigerMatchHUD.OpenDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x143a160
	void OnTookDamage(struct FTigerDamageSource& DamageSource); // Function Tiger.TigerMatchHUD.OnTookDamage // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnStartMatchAssetsLoaded(); // Function Tiger.TigerMatchHUD.OnStartMatchAssetsLoaded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPreMatchWidgetClassesLoaded(); // Function Tiger.TigerMatchHUD.OnPreMatchWidgetClassesLoaded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerMatchHUD.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x1439f50
	void OnGainedSeasonExperience(enum class ETigerPlayerEvent InEvent, int32_t InReceivedExperience, int32_t InExperienceGained, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerMatchHUD.OnGainedSeasonExperience // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnEndedSpectator(); // Function Tiger.TigerMatchHUD.OnEndedSpectator // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBecameSpectator(); // Function Tiger.TigerMatchHUD.OnBecameSpectator // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsPreSpawnBackgroundOpen(); // Function Tiger.TigerMatchHUD.IsPreSpawnBackgroundOpen // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
	bool IsPreMatchAssetsLoaded(); // Function Tiger.TigerMatchHUD.IsPreMatchAssetsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439c00
	bool IsAllowedToOpenMainMenu(); // Function Tiger.TigerMatchHUD.IsAllowedToOpenMainMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439bb0
	void HideMap(); // Function Tiger.TigerMatchHUD.HideMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1439b90
	void HideInteractionPrompt(struct UTigerSimpleTextPrompt* Prompt); // Function Tiger.TigerMatchHUD.HideInteractionPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x1439b00
	void HandleGameStateSet(struct ATigerGameState* InGameState); // Function Tiger.TigerMatchHUD.HandleGameStateSet // (Final|Native|Protected) // @ game+0x14399e0
	struct UTigerWidget* GetPreSpawnWidget(struct UTigerWidget* InCppClass); // Function Tiger.TigerMatchHUD.GetPreSpawnWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1439940
	struct UTigerMapSubMenu* GetMapUi(); // Function Tiger.TigerMatchHUD.GetMapUi // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439890
	struct UTigerInventoryUI* GetInventoryUI(); // Function Tiger.TigerMatchHUD.GetInventoryUI // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439860
	void EndPreMatch(); // Function Tiger.TigerMatchHUD.EndPreMatch // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void CloseDeathScreen(); // Function Tiger.TigerMatchHUD.CloseDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1439300
};

// Class Tiger.TigerPlayerNetSubscriberComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerPlayerNetSubscriberComponent : UActorComponent {
	char pad_B0[0x20]; // 0xb0(0x20)

	void Unsubscribe(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerNetSubscriberComponent.Unsubscribe // (Final|Native|Public|BlueprintCallable) // @ game+0x1495cb0
	void Subscribe(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerNetSubscriberComponent.Subscribe // (Final|Native|Public|BlueprintCallable) // @ game+0x1495c20
	void Server_UnsubscribePlayer(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerNetSubscriberComponent.Server_UnsubscribePlayer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x137b600
	void Server_SubscribePlayer(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerNetSubscriberComponent.Server_SubscribePlayer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x1495830
};

// Class Tiger.TigerMatchRecapComponent
// Size: 0x2a8 (Inherited: 0xd0)
struct UTigerMatchRecapComponent : UTigerPlayerNetSubscriberComponent {
	struct FMulticastInlineDelegate OnSyncDelegate; // 0xd0(0x10)
	struct FTigerRecapData Data; // 0xe0(0xe0)
	struct FTigerRecapData LastSyncData; // 0x1c0(0xe0)
	char pad_2A0[0x8]; // 0x2a0(0x08)

	void GetHitsFromItem(struct FTigerRecapWeapon& InItem, float InStartTime, float InEndTime, struct TArray<struct FTigerRecapHit>& OutHits); // Function Tiger.TigerMatchRecapComponent.GetHitsFromItem // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14396c0
	int32_t GetEliminationCount(); // Function Tiger.TigerMatchRecapComponent.GetEliminationCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439690
	struct FTigerRecapDamage GetDamageByUserRef(struct ATigerPlayer* InUserReference, bool bInReceived); // Function Tiger.TigerMatchRecapComponent.GetDamageByUserRef // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439570
	struct FTigerRecapDamage GetDamageByType(enum class ETigerDamageCauser InDamageType, bool bInReceived); // Function Tiger.TigerMatchRecapComponent.GetDamageByType // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439450
	void Client_SyncData(struct ATigerPlayerState* InSyncPlayer, struct FTigerRecapData InSyncData, bool bInIsFullSync); // Function Tiger.TigerMatchRecapComponent.Client_SyncData // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1439020
};

// Class Tiger.TigerMatchStateComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerMatchStateComponent : UActorComponent {
	struct ATigerMatchGameMode* MatchGameMode; // 0xb0(0x08)
	struct ATigerMatchGameState* MatchGameState; // 0xb8(0x08)
	char pad_C0[0x40]; // 0xc0(0x40)

	void OnBalanceModeSet(); // Function Tiger.TigerMatchStateComponent.OnBalanceModeSet // (Final|Native|Private) // @ game+0x143f150
};

// Class Tiger.TigerWeaponCrosshairWidget
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerWeaponCrosshairWidget : UTigerWidget {
	float WeaponSpread; // 0x280(0x04)
	struct FVector PlayerMovementVelocity; // 0x284(0x0c)
	bool bIsAiming; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float PreviewWeaponSpread; // 0x294(0x04)
	struct TArray<struct FTigerWeaponCrosshairSlot> CrosshairImages; // 0x298(0x10)
	struct TArray<struct FTigerWeaponScalingCrosshairSlot> CrosshairScalingImages; // 0x2a8(0x10)

	void OnWeaponFired(); // Function Tiger.TigerWeaponCrosshairWidget.OnWeaponFired // (Event|Public|BlueprintEvent) // @ game+0x184a280
	float GetScreenSpaceSpread(float InFov); // Function Tiger.TigerWeaponCrosshairWidget.GetScreenSpaceSpread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f7190
};

// Class Tiger.TigerMeleeCrosshairWidget
// Size: 0x2c8 (Inherited: 0x2b8)
struct UTigerMeleeCrosshairWidget : UTigerWeaponCrosshairWidget {
	struct UTigerMeleeWeaponComponent* OwnerMelee; // 0x2b8(0x08)
	struct UImage* CrosshairImage; // 0x2c0(0x08)
};

// Class Tiger.TigerMeleeWeaponComponent
// Size: 0x2c8 (Inherited: 0xb0)
struct UTigerMeleeWeaponComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAttack; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnQuickAttack; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnAttackHit; // 0xd0(0x10)
	char pad_E0[0x10]; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnSuccessfulBlock; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnHeavyAttackChargeBegin; // 0x100(0x10)
	struct FMulticastInlineDelegate OnHeavyAttackChargeEnd; // 0x110(0x10)
	float DebugDrawTime; // 0x120(0x04)
	char pad_124[0x24]; // 0x124(0x24)
	struct UTigerSwingCollisionData* SwingCollisionData; // 0x148(0x08)
	struct FMulticastInlineDelegate OnHeavyAttackReachedMinimumCharge; // 0x150(0x10)
	struct FMulticastInlineDelegate OnMeleeWeaponEquipped; // 0x160(0x10)
	bool bHeavyAttackEnabled; // 0x170(0x01)
	bool bBlockingEnabled; // 0x171(0x01)
	bool bAttackingViaQuickAttackEnabled; // 0x172(0x01)
	struct FTigerMeleeWeaponAttackIdentifier CurrentAttackIdentifier; // 0x173(0x02)
	char pad_175[0xb]; // 0x175(0x0b)
	struct UDataTable* MeleeAttacksDatabase; // 0x180(0x08)
	struct UTigerMeleeWeapon* EquippedWeaponType; // 0x188(0x08)
	struct UTigerMeleeAimAssistBehavior* CurrentAimAssistBehavior; // 0x190(0x08)
	float BlockCooldown; // 0x198(0x04)
	float MaxBlockAttackAngle; // 0x19c(0x04)
	float AttackQueueCooldown; // 0x1a0(0x04)
	float AirAttackRequiredDistanceToGround; // 0x1a4(0x04)
	float HitEffectRadiusOffset; // 0x1a8(0x04)
	float HitEffectHeightOffset; // 0x1ac(0x04)
	float RootMotionAnimationHeightThreshold; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
	struct UTigerBuff* BlockBuffOnAttacker; // 0x1b8(0x08)
	float DiminishingReturnCooldown; // 0x1c0(0x04)
	float DiminishingReturnMultiplierRegenerationRate; // 0x1c4(0x04)
	char pad_1C8[0x38]; // 0x1c8(0x38)
	bool bCanMoveDuringMeleeAttacks; // 0x200(0x01)
	char pad_201[0xf]; // 0x201(0x0f)
	struct TArray<struct ATigerCharacter*> HitFeedbackTargets; // 0x210(0x10)
	char pad_220[0x68]; // 0x220(0x68)
	struct TArray<struct AActor*> HitCharactersOnCurrentSwing; // 0x288(0x10)
	struct TArray<struct AActor*> HitWorldStaticsOnCurrentSwing; // 0x298(0x10)
	char pad_2A8[0x8]; // 0x2a8(0x08)
	struct UAnimMontage* CurrentSwingAnimation; // 0x2b0(0x08)
	struct AActor* LockOnTarget; // 0x2b8(0x08)
	float MaxLockOnDistance; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void TigerOnMeleeWeaponEquipped__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerOnMeleeWeaponEquipped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerHeavyAttackChargeEnd__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerHeavyAttackChargeEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerHeavyAttackChargeBegin__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerHeavyAttackChargeBegin__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateSwingState__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateSwingState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateSuccessfullyBlocked__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateSuccessfullyBlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateQuickAttacked__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateQuickAttacked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateAttackHit__DelegateSignature(enum class ETigerWeaponMeleeAttackType InAttackType); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateAttackHit__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerDelegateAttacked__DelegateSignature(bool bWasHeavyAttack); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateAttacked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Server_SwingWeapon(struct FTigerMeleeAttackNetData InAttackIdentifier, bool bInDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Server_SwingWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x143f9b0
	void Server_SetClientSideHitDetectionMelee(bool bEnableClientSideHits); // Function Tiger.TigerMeleeWeaponComponent.Server_SetClientSideHitDetectionMelee // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x143f8f0
	void Server_OnSuccessfulClientAttack(struct TArray<struct FTigerCharacterClientHit> CharacterHits); // Function Tiger.TigerMeleeWeaponComponent.Server_OnSuccessfulClientAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x143f830
	void Server_OnDeflectedAttack(struct FVector_NetQuantize DeflectLocation, struct ATigerCharacter* DeflectingChar); // Function Tiger.TigerMeleeWeaponComponent.Server_OnDeflectedAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x143f730
	void Server_DisableRecoveryRootMotion(float InDisableTimeInAnimation); // Function Tiger.TigerMeleeWeaponComponent.Server_DisableRecoveryRootMotion // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x143f6a0
	void OnMontageStartedDuringSwing(struct UAnimMontage* Montage); // Function Tiger.TigerMeleeWeaponComponent.OnMontageStartedDuringSwing // (Final|Native|Private) // @ game+0x143f200
	void OnMontageStartedDuringBlockStance(struct UAnimMontage* Montage); // Function Tiger.TigerMeleeWeaponComponent.OnMontageStartedDuringBlockStance // (Final|Native|Private) // @ game+0x143f170
	void Multicast_StopBlocking(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StopBlocking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13deb50
	void Multicast_StartHeavySwing(bool bDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StartHeavySwing // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x143f0c0
	void Multicast_StartBlocking(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StartBlocking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13deb30
	void Multicast_SetClientSideHitDetectionMelee(bool bEnableClientSideHits); // Function Tiger.TigerMeleeWeaponComponent.Multicast_SetClientSideHitDetectionMelee // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13bbe00
	void Multicast_OnSwingWeapon(struct FTigerMeleeAttackNetData AttackIdentifier, bool bInDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnSwingWeapon // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x143efd0
	void Multicast_OnAttackSuccessful(struct TArray<struct FTigerCharacterServerHit> InCharacterHits, enum class ETigerWeaponMeleeAttackType InAttackType); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnAttackSuccessful // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x143eee0
	void Multicast_OnAttackBlocked(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnAttackBlocked // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x143eec0
	void Multicast_DisableRecoveryRootMotion(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_DisableRecoveryRootMotion // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13e7540
	void Multicast_DeflectAttack(struct ATigerCharacter* Attacker); // Function Tiger.TigerMeleeWeaponComponent.Multicast_DeflectAttack // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x143ee30
	void Multicast_AbortCurrentAttack(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_AbortCurrentAttack // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x13d9b80
	bool IsInMeleeSwing(); // Function Tiger.TigerMeleeWeaponComponent.IsInMeleeSwing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143ed20
	bool IsChargingHeavyAttack(); // Function Tiger.TigerMeleeWeaponComponent.IsChargingHeavyAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143ed00
	bool IsBlocking(); // Function Tiger.TigerMeleeWeaponComponent.IsBlocking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143ecd0
	bool HasLockOnTarget(); // Function Tiger.TigerMeleeWeaponComponent.HasLockOnTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143eca0
	float GetTimeSinceLastAttack(); // Function Tiger.TigerMeleeWeaponComponent.GetTimeSinceLastAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143eb90
	void Client_OnHit(struct FTigerCharacterServerHit ServerHit); // Function Tiger.TigerMeleeWeaponComponent.Client_OnHit // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x143e5c0
	void Client_OnAttackBlocked(struct FVector_NetQuantize BlockedAtLocation, struct UTigerMeleeWeaponComponent* BlockingMelee); // Function Tiger.TigerMeleeWeaponComponent.Client_OnAttackBlocked // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x143e4f0
	void Client_DeflectAttack(); // Function Tiger.TigerMeleeWeaponComponent.Client_DeflectAttack // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x143e4d0
	void Client_Debug_ShowServerSwingLocation(struct FVector Position, struct FQuat Rotation); // Function Tiger.TigerMeleeWeaponComponent.Client_Debug_ShowServerSwingLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x143e410
	void Client_AbortCurrentAttack(); // Function Tiger.TigerMeleeWeaponComponent.Client_AbortCurrentAttack // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14350d0
	void BroadcastHeavyAttackReleaseCallback(); // Function Tiger.TigerMeleeWeaponComponent.BroadcastHeavyAttackReleaseCallback // (Final|Native|Public) // @ game+0x143e3c0
};

// Class Tiger.TigerSwingCollisionData
// Size: 0x80 (Inherited: 0x30)
struct UTigerSwingCollisionData : UDataAsset {
	struct TMap<struct FName, struct FTigerSwingCollisionInfo> SwingCollisionInfos; // 0x30(0x50)
};

// Class Tiger.TigerMeleeAimAssistBehavior
// Size: 0x78 (Inherited: 0x28)
struct UTigerMeleeAimAssistBehavior : UObject {
	float AimAssistMinRadius; // 0x28(0x04)
	float AimAssistMaxRadius; // 0x2c(0x04)
	float MaxTargetHeightDiff; // 0x30(0x04)
	float DebugDrawTime; // 0x34(0x04)
	bool bPredictCandidateLocationsBeforeEvaluation; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct ATigerCharacter* TigerOwner; // 0x40(0x08)
	struct UTigerMeleeWeapon* EquippedWeapon; // 0x48(0x08)
	struct FVector TigerOwnerLocation; // 0x50(0x0c)
	struct TWeakObjectPtr<struct ATigerCharacter> FinalTargetCharacter; // 0x5c(0x08)
	struct FTigerMeleeWeaponAttackIdentifier FinalAttackIdentifier; // 0x64(0x02)
	char pad_66[0x2]; // 0x66(0x02)
	float AimAssistMinRadiusSquared; // 0x68(0x04)
	float AimAssistMaxRadiusSquared; // 0x6c(0x04)
	float AimAssistTravelTime; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)

	void UpdateAimTarget(struct TArray<struct FTigerMeleeAimAssistCandidate>& InCandidates, struct FVector& InCameraForward, bool bInIsInAir, bool bInIsQuickAttack, struct FTigerMeleeWeaponAttackIdentifier& InPreviousAttackIdentifier, float InSecondsSincePreviousAttack, struct ATigerCharacter*& OutFinalTarget, struct FTigerMeleeWeaponAttackIdentifier& OutAttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.UpdateAimTarget // (Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void ShowDebugValue(struct FTigerMeleeAimAssistCandidate& Candidate, struct FString DebugLabel, struct FString DebugValue); // Function Tiger.TigerMeleeAimAssistBehavior.ShowDebugValue // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x143fc60
	void ShowDebugAttackIdentifier(struct FTigerMeleeAimAssistCandidate& Candidate, struct FString DebugLabel, struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.ShowDebugAttackIdentifier // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x143fb00
	bool ShouldRotatePlayer(); // Function Tiger.TigerMeleeAimAssistBehavior.ShouldRotatePlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x143fad0
	void PredictMultipleCharacterLocations(float PredictionTime, struct TArray<struct FTigerMeleeAimAssistCandidate>& Candidates); // Function Tiger.TigerMeleeAimAssistBehavior.PredictMultipleCharacterLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x143f5b0
	void PredictCharacterLocation(float PredictionTime, struct FTigerMeleeAimAssistCandidate& Candidate); // Function Tiger.TigerMeleeAimAssistBehavior.PredictCharacterLocation // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x143f4c0
	struct FVector PredictAimAssistTargetLocation(struct ATigerCharacter* AimTargetChar, float PredictionTime); // Function Tiger.TigerMeleeAimAssistBehavior.PredictAimAssistTargetLocation // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x143f3d0
	void OnStartMeleeAttack(struct FVector& InTargetLocationOrDirection, bool bIsLocation, struct FTigerMeleeWeaponAttackIdentifier& InAttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.OnStartMeleeAttack // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x143f290
	void OnAnimNotifyMelee(struct FName MeleeEventName); // Function Tiger.TigerMeleeAimAssistBehavior.OnAnimNotifyMelee // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void MoveCharacterToTargetLocation(struct FVector TargetLocation, float TravelTime); // Function Tiger.TigerMeleeAimAssistBehavior.MoveCharacterToTargetLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x143ed50
	struct FTigerMeleeAimAssistData GetAimAssistData(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.GetAimAssistData // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e880
	struct FTigerMeleeAimAssistCandidate CreateCandidate(struct ATigerCharacter* AimTargetChar, struct FVector PredictedTargetLocation, struct FVector& CameraForwardDirection, struct FVector& CameraLocation, float HalfFOV); // Function Tiger.TigerMeleeAimAssistBehavior.CreateCandidate // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x143e670
	bool CanQueueMeleeAttack(); // Function Tiger.TigerMeleeAimAssistBehavior.CanQueueMeleeAttack // (Native|Event|Public|BlueprintEvent) // @ game+0x143e3e0
	void AddRelativeImpulse(struct FVector& ImpulseDirection, float ImpulseStrength); // Function Tiger.TigerMeleeAimAssistBehavior.AddRelativeImpulse // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x143e2e0
};

// Class Tiger.TigerMeleeWeaponTrailConfig
// Size: 0x48 (Inherited: 0x28)
struct UTigerMeleeWeaponTrailConfig : UObject {
	struct TArray<struct FScalarParameterValue> ScalarParameters; // 0x28(0x10)
	struct TArray<struct FVectorParameterValue> VectorParameters; // 0x38(0x10)
};

// Class Tiger.TigerWeapon
// Size: 0xb0 (Inherited: 0x28)
struct UTigerWeapon : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UMaterialInterface* RarityMaterial; // 0x30(0x08)
	enum class ETigerItemRarity Rarity; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct USkeletalMesh* SkeletalMesh; // 0x40(0x08)
	struct USkeletalMesh* OffhandSkeletalMesh; // 0x48(0x08)
	struct UAnimInstance* AnimClass; // 0x50(0x08)
	struct UTigerAimAssistSettings* AimAssist; // 0x58(0x08)
	struct UTigerWeaponCrosshairWidget* Crosshair; // 0x60(0x08)
	struct UTexture2D* HUDIcon; // 0x68(0x08)
	struct UCurveFloat* RarityDamageMultiplierCurve; // 0x70(0x08)
	struct FName WeaponUnequipAnimation; // 0x78(0x08)
	struct FName WeaponEquipAnimation; // 0x80(0x08)
	struct FName PrimaryAttachPoint; // 0x88(0x08)
	struct FName SecondaryAttachPoint; // 0x90(0x08)
	float FearValueMultiplier; // 0x98(0x04)
	float FearDistanceMultiplier; // 0x9c(0x04)
	bool bIsDualWeapon; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	uint64_t PersistentTelemetryID; // 0xa8(0x08)
};

// Class Tiger.TigerMeleeWeapon
// Size: 0x1a0 (Inherited: 0xb0)
struct UTigerMeleeWeapon : UTigerWeapon {
	struct UCurveFloat* HorizontalFlinchCurve; // 0xb0(0x08)
	struct UCurveFloat* VerticalFlinchCurve; // 0xb8(0x08)
	float DamageMultiplier; // 0xc0(0x04)
	float RootMotionAttacksStopDistance; // 0xc4(0x04)
	float RootMotionAttacksStopDistanceAboveOrBelow; // 0xc8(0x04)
	bool bIsUnarmedWeapon; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
	struct UTigerMeleeAimAssistBehavior* AimAssistBehavior; // 0xd0(0x08)
	float AimAssistPredictionTime; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TArray<struct FTigerMeleeAttack> Attacks; // 0xe0(0x10)
	struct FName HeavyAttackChargeUpMontageName; // 0xf0(0x08)
	enum class ETigerDisciplinesEnum WeaponAbility; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)
	struct UAkAudioEvent* HitAkEvent; // 0x100(0x08)
	struct UAkAudioEvent* HeavyHitAkEvent; // 0x108(0x08)
	struct UParticleSystem* HitEffect; // 0x110(0x08)
	struct AActor* HitEffectClass; // 0x118(0x08)
	struct UForceFeedbackEffect* TargetHitForceFeedback; // 0x120(0x08)
	struct UForceFeedbackEffect* AttackBlockedForceFeedback; // 0x128(0x08)
	struct UForceFeedbackEffect* SuccesfullyBlockedForceFeedback; // 0x130(0x08)
	struct FName BlockBlendSpaceName; // 0x138(0x08)
	struct UAkAudioEvent* BlockStanceActivatedAkEvent; // 0x140(0x08)
	float StartBlockingTransitionTime; // 0x148(0x04)
	float BlockMovementMultiplier; // 0x14c(0x04)
	float BlockStunTime; // 0x150(0x04)
	float DiminishingReturnBlockStunMultiplierReduction; // 0x154(0x04)
	struct UAkAudioEvent* BlockHitAkEvent; // 0x158(0x08)
	struct UParticleSystem* BlockEffect; // 0x160(0x08)
	struct FName BlockHitMontageName; // 0x168(0x08)
	struct FName BlockKnockbackMontageName; // 0x170(0x08)
	float BlockImpulseStrength; // 0x178(0x04)
	float BlockMoveDistance; // 0x17c(0x04)
	float BlockMoveDuration; // 0x180(0x04)
	float BlockMoveExitVelocityScale; // 0x184(0x04)
	float BlockAttackDamageMultiplier; // 0x188(0x04)
	float BlockHeavyAttackDamageMultiplier; // 0x18c(0x04)
	struct UTigerMeleeWeaponTrailConfig* WeaponTrailConfigClass; // 0x190(0x08)
	float MasqueradeNoiseEventRadius; // 0x198(0x04)
	enum class ETigerMeleeWeaponIdentifier MeleeWeaponIdentifier; // 0x19c(0x01)
	char pad_19D[0x3]; // 0x19d(0x03)

	void OnWorldObjectHit(struct ATigerCharacter* InInstigator, struct FHitResult& InWorldObjectHitResult, struct FVector& InSwingDirection); // Function Tiger.TigerMeleeWeapon.OnWorldObjectHit // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnHit(struct ATigerCharacter* Instigator, struct ATigerCharacter* Target, enum class ETigerWeaponMeleeAttackType AttackType, float Damage); // Function Tiger.TigerMeleeWeapon.OnHit // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct FName GetWeaponOverrideHitReactionMontage(struct ATigerCharacter* Attacker, enum class ESharkFourWayDirection HitFromFourWayDirection); // Function Tiger.TigerMeleeWeapon.GetWeaponOverrideHitReactionMontage // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x143ebc0
	char GetRandomAttackFromNextGroup(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeWeapon.GetRandomAttackFromNextGroup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x143eae0
	char GetRandomAttackFromGroup(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier, char AttackGroup); // Function Tiger.TigerMeleeWeapon.GetRandomAttackFromGroup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e9f0
	enum class ETigerMeleeWeaponIdentifier GetMeleeWeaponIdentifier(); // Function Tiger.TigerMeleeWeapon.GetMeleeWeaponIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e9d0
	char GetAttackGroupFromAttackIdentifier(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeWeapon.GetAttackGroupFromAttackIdentifier // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e920
};

// Class Tiger.TigerMetaStoreUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerMetaStoreUtilityBFL : UBlueprintFunctionLibrary {

	struct FString GetTotalPriceAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetTotalPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1444790
	void GetTotalPayloadPriceAsString(struct UTigerVendorComponent* InVendorComponent, struct TArray<struct FTigerMetaStoreBuyPayloadElement>& InStoreBuyPayloadElements, struct FString& OutPrice, bool& bOutCouldGetTotalPrice); // Function Tiger.TigerMetaStoreUtilityBFL.GetTotalPayloadPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14445f0
	struct FString GetStoreEntryIdAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetStoreEntryIdAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14444e0
	struct FString GetQuantityAsString(struct FTigerMetaStoreEntryItem& InStoreEntryItem); // Function Tiger.TigerMetaStoreUtilityBFL.GetQuantityAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1444400
	struct FString GetPremiumPriceAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetPremiumPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1444170
	int32_t GetNumBoughtItems(struct FTigerBuyStoreEntryResponsePayload& InBuyResponse); // Function Tiger.TigerMetaStoreUtilityBFL.GetNumBoughtItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14440b0
	struct FString GetDiscountAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetDiscountAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1443fa0
	bool GetBoughtItemInfo(struct FTigerBuyStoreEntryResponsePayload& InBuyResponse, int32_t InItemIndex, struct FTigerItemId& OutItemId, struct FString& OutItemQuantity); // Function Tiger.TigerMetaStoreUtilityBFL.GetBoughtItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1443c50
	struct FTigerMetaStoreBuyPayloadElement CreateStoreEntryBuyElement(struct FTigerMetaStoreEntry& InStoreEntry, int32_t InQuantity); // Function Tiger.TigerMetaStoreUtilityBFL.CreateStoreEntryBuyElement // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1443b20
};

// Class Tiger.TigerMiniMap
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerMiniMap : UTigerWidget {
	struct UTigerMapUi* MapUnderlay; // 0x280(0x08)
	struct UTigerMapUi* MapOverlay; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
	struct TArray<struct UWidget*> UnrotatedWidgets; // 0x298(0x10)
	struct TArray<struct UTigerMapMarkerWidget*> VisibleMarkersThisFrame; // 0x2a8(0x10)
	struct UWidget* MinimapRootNative; // 0x2b8(0x08)
	struct UUserWidget* GroupMemberWidgetClass; // 0x2c0(0x08)

	void UpdatePlayerMarkerAlignmentAndMinimapSize(); // Function Tiger.TigerMiniMap.UpdatePlayerMarkerAlignmentAndMinimapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x1444c70
	void SetupMarkerUpdates(); // Function Tiger.TigerMiniMap.SetupMarkerUpdates // (Final|Native|Protected|BlueprintCallable) // @ game+0x1444af0
	void OnPlayerStateCreated(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerMiniMap.OnPlayerStateCreated // (Final|Native|Protected) // @ game+0x1444a60
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMiniMap.OnMasqueradeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void HandleGameplaySettingsChanged(struct FTigerGameplaySettings& InGameplaySettings); // Function Tiger.TigerMiniMap.HandleGameplaySettingsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x14448a0
};

// Class Tiger.TigerModelViewerItem
// Size: 0x238 (Inherited: 0x228)
struct ATigerModelViewerItem : AActor {
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	float DesiredScreenSize; // 0x230(0x04)
	float CurrentScreenSize; // 0x234(0x04)

	float GetCurrentScreenSize(struct FVector& InOrigin, float InDistance, struct FVector& InViewOrigin, struct FMatrix& InProjectionMatrix); // Function Tiger.TigerModelViewerItem.GetCurrentScreenSize // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1443e00
};

// Class Tiger.TigerModularList
// Size: 0x280 (Inherited: 0x280)
struct UTigerModularList : UTigerWidget {
};

// Class Tiger.TigerMultiplayAgent
// Size: 0xf8 (Inherited: 0x50)
struct UTigerMultiplayAgent : UTigerDsBackendAgent {
	char pad_50[0xa8]; // 0x50(0xa8)
};

// Class Tiger.TigerMultiplayRegionCache
// Size: 0x140 (Inherited: 0x30)
struct UTigerMultiplayRegionCache : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)
	float RefreshRegionsIntervalSeconds; // 0x40(0x04)
	float MaxWaitTimeSecondsAfterRegionDetermination; // 0x44(0x04)
	struct FTigerRegionPingerSettings PingerSettings; // 0x48(0x14)
	char pad_5C[0x2c]; // 0x5c(0x2c)
	float MinimumMeasurementTime; // 0x88(0x04)
	int32_t DesiredMeasuredRegions; // 0x8c(0x04)
	char pad_90[0xb0]; // 0x90(0xb0)
};

// Class Tiger.TigerMusicAsset
// Size: 0x38 (Inherited: 0x30)
struct UTigerMusicAsset : UDataAsset {
	struct USoundCue* SoundCue; // 0x30(0x08)
};

// Class Tiger.TigerMusicVolume
// Size: 0x268 (Inherited: 0x260)
struct ATigerMusicVolume : AVolume {
	struct UTigerMusicAsset* MusicAsset; // 0x260(0x08)
};

// Class Tiger.TigerMusicManager
// Size: 0x230 (Inherited: 0x228)
struct ATigerMusicManager : AActor {
	struct UAudioComponent* AudioComponent; // 0x228(0x08)
};

// Class Tiger.TigerNearbySoundCueComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerNearbySoundCueComponent : UActorComponent {
	float DistanceToPlaySoundOnSquared; // 0xb0(0x04)
	float DistanceToStopSoundOnSquared; // 0xb4(0x04)
	struct UAkAudioEvent* PlayEvent; // 0xb8(0x08)
	struct UAkAudioEvent* StopEvent; // 0xc0(0x08)
	bool bDisableOcclusion; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct ATigerCharacter* CharacterOwner; // 0xd0(0x08)
	struct UAkComponent* AkComponent; // 0xd8(0x08)
	char pad_E0[0x10]; // 0xe0(0x10)
};

// Class Tiger.TigerNearCameraFadeMaterialDb
// Size: 0xd0 (Inherited: 0x30)
struct UTigerNearCameraFadeMaterialDb : UDataAsset {
	struct TMap<struct TSoftObjectPtr<UMaterialInterface>, struct TSoftObjectPtr<UMaterialInterface>> OriginalMaterialToFadingMaterialLut; // 0x30(0x50)
	struct TMap<struct TSoftObjectPtr<UMaterialInterface>, struct TSoftObjectPtr<UMaterialInterface>> FadingMaterialToOriginalMaterialLut; // 0x80(0x50)
};

// Class Tiger.TigerNearCameraFadeSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerNearCameraFadeSettings : UDeveloperSettings {
	bool bEnableNearCameraFade; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TMap<struct FName, struct FName> CollisionProfileChangesWhenTogglingFade; // 0x40(0x50)
	struct UTigerNearCameraFadeMaterialDb* MaterialDatabase; // 0x90(0x08)
	float FadeLength; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct TArray<struct FTigerNearCameraFadeMaterialMasterData> MasterMaterialDatas; // 0xa0(0x10)
	struct FTigerNearCameraFadeDebugData DebugData; // 0xb0(0x28)
};

// Class Tiger.TigerNetInfoSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerNetInfoSubSystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)

	bool IsPublicIpv6Set(); // Function Tiger.TigerNetInfoSubSystem.IsPublicIpv6Set // (Final|Native|Public|BlueprintCallable) // @ game+0x14449a0
	bool IsPublicIpv4Set(); // Function Tiger.TigerNetInfoSubSystem.IsPublicIpv4Set // (Final|Native|Public|BlueprintCallable) // @ game+0x1444970
	struct FString GetPublicIpv6(); // Function Tiger.TigerNetInfoSubSystem.GetPublicIpv6 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1444340
	struct FString GetPublicIpv4(); // Function Tiger.TigerNetInfoSubSystem.GetPublicIpv4 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1444280
};

// Class Tiger.TigerBestialTrailPart
// Size: 0x580 (Inherited: 0x580)
struct UTigerBestialTrailPart : USplineMeshComponent {
};

// Class Tiger.TigerBestialTrailVisualizer
// Size: 0x240 (Inherited: 0x228)
struct ATigerBestialTrailVisualizer : AActor {
	struct TArray<struct FTigerPlayerSavedLocation> LocationHistory; // 0x228(0x10)
	struct ATigerGameState* GameState; // 0x238(0x08)

	float SecondsUntilTimeStamp(float Timestamp); // Function Tiger.TigerBestialTrailVisualizer.SecondsUntilTimeStamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448c90
	float SecondsSinceTimeStamp(float Timestamp); // Function Tiger.TigerBestialTrailVisualizer.SecondsSinceTimeStamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448bf0
	void ReceiveNewTrackingPoint(struct FTigerPlayerSavedLocation& NewLocation); // Function Tiger.TigerBestialTrailVisualizer.ReceiveNewTrackingPoint // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void ReceiveInitialTrackingPoints(struct TArray<struct FTigerPlayerSavedLocation>& Locations, struct ATigerPlayer* TrackedPlayer); // Function Tiger.TigerBestialTrailVisualizer.ReceiveInitialTrackingPoints // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void BeginEndTracking(); // Function Tiger.TigerBestialTrailVisualizer.BeginEndTracking // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerTrackedBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerTrackedBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerTrackedBuff
// Size: 0x260 (Inherited: 0x260)
struct UTigerTrackedBuff : UTigerBuff {
};

// Class Tiger.TigerNosferatuPassiveBestialConfig
// Size: 0x150 (Inherited: 0x120)
struct UTigerNosferatuPassiveBestialConfig : UTigerPassiveConfig {
	struct ATigerBestialTrailVisualizer* TrailVisualizationActor; // 0x120(0x08)
	struct UTigerTrackedBuff* TrackedBuffType; // 0x128(0x08)
	float RevealDistanceSquared; // 0x130(0x04)
	float LoseDistanceSquared; // 0x134(0x04)
	struct TArray<float> RevealHealthThreshold; // 0x138(0x10)
	float TrackingTimeSeconds; // 0x148(0x04)
	bool bEnableTrackingFeedback; // 0x14c(0x01)
	char pad_14D[0x3]; // 0x14d(0x03)
};

// Class Tiger.TigerPassiveArchetypeLogic
// Size: 0x168 (Inherited: 0xc0)
struct UTigerPassiveArchetypeLogic : UTigerPassiveComponent {
	struct FTigerCharacterStatModification PowerLevelStatChanges; // 0xc0(0xa0)
	char pad_160[0x8]; // 0x160(0x08)

	void OnPowerLevelIncreased(); // Function Tiger.TigerPassiveArchetypeLogic.OnPowerLevelIncreased // (Event|Public|BlueprintEvent) // @ game+0x184a280
	int32_t GetPowerLevel(); // Function Tiger.TigerPassiveArchetypeLogic.GetPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b640
};

// Class Tiger.TigerNosferatuPassiveBestialLogic
// Size: 0x1c0 (Inherited: 0x168)
struct UTigerNosferatuPassiveBestialLogic : UTigerPassiveArchetypeLogic {
	struct TMap<int32_t, struct FTigerTrackedPlayerData> RevealedPlayers; // 0x168(0x50)
	struct UTigerNosferatuPassiveBestialConfig* Config; // 0x1b8(0x08)

	void NewTrackedLocation(struct ATigerPlayer* InTrackedPlayer, struct FVector& InNewLocation, float InTimeStamp); // Function Tiger.TigerNosferatuPassiveBestialLogic.NewTrackedLocation // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x1448a10
	bool CalculateIsWithinDistanceToTrail(float InDistance); // Function Tiger.TigerNosferatuPassiveBestialLogic.CalculateIsWithinDistanceToTrail // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1447f70
	float CalculateDistanceToTrail(); // Function Tiger.TigerNosferatuPassiveBestialLogic.CalculateDistanceToTrail // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1447f40
};

// Class Tiger.TigerNotificationsUI
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerNotificationsUI : UTigerWidget {
	float HolyIncenseImminentTime; // 0x280(0x04)
	char pad_284[0x34]; // 0x284(0x34)

	void OnReceivedReward(); // Function Tiger.TigerNotificationsUI.OnReceivedReward // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnQuestUnlocked(struct UTigerQuest* InNewQuest); // Function Tiger.TigerNotificationsUI.OnQuestUnlocked // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnQuestObjectiveUnlocked(struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerNotificationsUI.OnQuestObjectiveUnlocked // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnQuestObjectiveCompleted(struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerNotificationsUI.OnQuestObjectiveCompleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnQuestCompleted(struct UTigerQuest* InCompletedQuest); // Function Tiger.TigerNotificationsUI.OnQuestCompleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnPlayerHealed(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerNotificationsUI.OnPlayerHealed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnPlayerDeath(struct FTigerPlayerStateGameData& InKilledPlayerData, struct FTigerPlayerStateGameData& InInstigatorPlayerData, bool bIsPlayerInSameGroup); // Function Tiger.TigerNotificationsUI.OnPlayerDeath // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnOtherPlayerBrokeMasquerade(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerNotificationsUI.OnOtherPlayerBrokeMasquerade // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnMemberLeftGroup(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerNotificationsUI.OnMemberLeftGroup // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnMemberJoinedGroup(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerNotificationsUI.OnMemberJoinedGroup // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnHolyIncenseImminent(float Time); // Function Tiger.TigerNotificationsUI.OnHolyIncenseImminent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGroupPingResponse(struct UTigerPingClientData* InPingData, struct ATigerPlayerState* InRespondingPlayer, bool bInIsInterested); // Function Tiger.TigerNotificationsUI.OnGroupPingResponse // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGroupPingCanceled(struct UTigerPingClientData* InPingData); // Function Tiger.TigerNotificationsUI.OnGroupPingCanceled // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGroupPing(struct FTigerPingNotificationNetData& PingData, struct ATigerPlayerState* InSendingPlayerState); // Function Tiger.TigerNotificationsUI.OnGroupPing // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnGroupInviteReceived(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnGroupInviteReceived // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGrimoireItemUnlocked(struct UTigerGrimoireEntry* InGrimoireEntry); // Function Tiger.TigerNotificationsUI.OnGrimoireItemUnlocked // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendRemoved(struct UTigerFriend* InLostFriend); // Function Tiger.TigerNotificationsUI.OnFriendRemoved // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendInviteSent(); // Function Tiger.TigerNotificationsUI.OnFriendInviteSent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendInviteRejected(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnFriendInviteRejected // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendInviteReceived(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnFriendInviteReceived // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerNotificationsUI.OnFriendAdded // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnExperienceGained(struct UTigerExperienceEvent* ExperienceEvent, int32_t GainedExperience); // Function Tiger.TigerNotificationsUI.OnExperienceGained // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnCollectibleFound(struct UTigerCollectibleData* InCollectible); // Function Tiger.TigerNotificationsUI.OnCollectibleFound // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnChallengeTierCompleted(struct UTigerChallenge* InChallenge); // Function Tiger.TigerNotificationsUI.OnChallengeTierCompleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnChallengeCompleted(struct UTigerChallenge* InCompletedChallenge); // Function Tiger.TigerNotificationsUI.OnChallengeCompleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnAcceptGroupInviteFailed(struct FTigerInviteId& InInviteId); // Function Tiger.TigerNotificationsUI.OnAcceptGroupInviteFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void ItemReceived(struct FTigerItemNotification& ItemNotification); // Function Tiger.TigerNotificationsUI.ItemReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerNotificationsUIStacker
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerNotificationsUIStacker : UTigerWidget {
	struct TArray<struct FDisplayedItemWidget> ShownItemWidgets; // 0x280(0x10)
	int32_t MaxDisplayedItems; // 0x290(0x04)
	float ItemMargin; // 0x294(0x04)
	float ItemDisplayTime; // 0x298(0x04)
	float ItemMoveTime; // 0x29c(0x04)
	float ItemFadeOffsetX; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TArray<struct UUserWidget*> WaitingItems; // 0x2a8(0x10)
	struct UUserWidget* ItemWidgetFadingIn; // 0x2b8(0x08)
	struct UUserWidget* ItemWidgetFadingOut; // 0x2c0(0x08)
	struct UCanvasPanel* ItemCanvasWidget; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)

	void EnqueueItem(struct UUserWidget* ItemWidget); // Function Tiger.TigerNotificationsUIStacker.EnqueueItem // (Final|Native|Public|BlueprintCallable) // @ game+0x14481e0
};

// Class Tiger.TigerNPC
// Size: 0xa60 (Inherited: 0x900)
struct ATigerNPC : ATigerBaseNPC {
	struct FMulticastInlineDelegate OnAnimationModeChanged; // 0x900(0x10)
	struct UTigerAICommandComponent* AICommandComponent; // 0x910(0x08)
	struct UTigerNpcAccuracyComponent* AccuracyComponent; // 0x918(0x08)
	struct UTigerEntityCombatComponent* EntityCombatComponent; // 0x920(0x08)
	struct UParticleSystemComponent* NpcAwarenessComponent; // 0x928(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> CurrentTarget; // 0x930(0x08)
	struct FVector_NetQuantize CurrentTargetLocation; // 0x938(0x0c)
	char pad_944[0x4]; // 0x944(0x04)
	struct ATigerCharacter* TargetToShoot; // 0x948(0x08)
	enum class ETigerAIAnimationMode AnimationMode; // 0x950(0x01)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0x951(0x01)
	char pad_952[0x2]; // 0x952(0x02)
	int32_t EmotionalStateRandomPot[0x6]; // 0x954(0x18)
	char pad_96C[0x4]; // 0x96c(0x04)
	struct UAnimMontage* LuredCancelAnim; // 0x970(0x08)
	struct UTigerNpcPropComponent* NpcPropComponent; // 0x978(0x08)
	char pad_980[0x20]; // 0x980(0x20)
	float BumpTimeInterval; // 0x9a0(0x04)
	float HighPotenceBloodChange; // 0x9a4(0x04)
	float EarliestHighPotenceBloodTime; // 0x9a8(0x04)
	float LastHighPotenceBloodTime; // 0x9ac(0x04)
	float PreferedMinimumDistanceBetweenPotent; // 0x9b0(0x04)
	struct FVector_NetQuantize RagdollImpulse; // 0x9b4(0x0c)
	struct FTigerNpcReactionData ReactionData; // 0x9c0(0x0c)
	char pad_9CC[0x4]; // 0x9cc(0x04)
	float MaxYawAngleToShoot; // 0x9d0(0x04)
	float MinTargetIsInfrontDotAngle; // 0x9d4(0x04)
	struct FSharkRandomDeviation DownedStateDuration; // 0x9d8(0x08)
	struct FName HeartRateParam; // 0x9e0(0x08)
	struct FName BloodAmountParam; // 0x9e8(0x08)
	struct FName HeartSocketName; // 0x9f0(0x08)
	struct FName HeartLocationParam; // 0x9f8(0x08)
	float HeartLocationUpdateTime; // 0xa00(0x04)
	char pad_A04[0x5c]; // 0xa04(0x5c)

	void TriggerNpcReactionEvent(struct FTigerNpcReactionEvent& ReactionEvent); // Function Tiger.TigerNPC.TriggerNpcReactionEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1448ee0
	void TigerDelegateNpcAnimationModeChanged__DelegateSignature(enum class ETigerAIAnimationMode NewAnimationMode); // DelegateFunction Tiger.TigerNPC.TigerDelegateNpcAnimationModeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void StopFireWeapon(); // Function Tiger.TigerNPC.StopFireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1448ec0
	bool StartFireWeapon(struct ATigerCharacter* InTigerChar); // Function Tiger.TigerNPC.StartFireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1448e20
	void Server_SetCharacterMeshes(struct FTigerMeshCollection MeshCollection); // Function Tiger.TigerNPC.Server_SetCharacterMeshes // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1448d30
	void OnRep_RagdollImpulseSet(); // Function Tiger.TigerNPC.OnRep_RagdollImpulseSet // (Final|Native|Protected) // @ game+0x1448bd0
	void OnRep_AnimationModeChanged(enum class ETigerAIAnimationMode LastMode); // Function Tiger.TigerNPC.OnRep_AnimationModeChanged // (Final|Native|Protected) // @ game+0x1448b50
	void OnFeedingStart(int32_t FeedingTicksLeft, int32_t MaxFeedingTicks); // Function Tiger.TigerNPC.OnFeedingStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnFeedingEnd(); // Function Tiger.TigerNPC.OnFeedingEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnBurstCompleted(); // Function Tiger.TigerNPC.OnBurstCompleted // (Final|Native|Private) // @ game+0x1448b30
	void Multicast_PlayReactionFromMontage(struct UAnimMontage* InMontage, float InPlayBackSpeed, bool bInCanMoveDuringReaction); // Function Tiger.TigerNPC.Multicast_PlayReactionFromMontage // (Net|Native|Event|NetMulticast|Public) // @ game+0x1448900
	void Multicast_PlayReactionFromBlendSpace(struct UBlendSpaceBase* InBlendSpace, struct FVector InSamplePoint, float InPlayBackSpeed, bool bInCanMoveDuringReaction, float InBlendOutTime); // Function Tiger.TigerNPC.Multicast_PlayReactionFromBlendSpace // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x1448750
	void Multicast_PlayMontageFromBlendSpace(struct UBlendSpaceBase* BlendSpace, struct FVector SamplePoint, float PlayBackSpeed, bool bFreezeAtEnd); // Function Tiger.TigerNPC.Multicast_PlayMontageFromBlendSpace // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x1448600
	void Multicast_PlayDeathMontage(struct FVector SamplePoint, float PlayBackSpeed); // Function Tiger.TigerNPC.Multicast_PlayDeathMontage // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x1448530
	void Multicast_PlayAnimationWithContextIdle(struct UAnimMontage* InMontage, struct FName InContextIdle); // Function Tiger.TigerNPC.Multicast_PlayAnimationWithContextIdle // (Net|Native|Event|NetMulticast|Public) // @ game+0x1448460
	void Multicast_InterruptCap(enum class ETigerDetachMethod InDetachMethod); // Function Tiger.TigerNPC.Multicast_InterruptCap // (Net|Native|Event|NetMulticast|Public) // @ game+0x14483e0
	void Multicast_DeactivateLure(); // Function Tiger.TigerNPC.Multicast_DeactivateLure // (Net|Native|Event|NetMulticast|Public) // @ game+0x14483c0
	void Multicast_AuthorityPlayAkEvent(struct UAkAudioEvent* VoiceEvent); // Function Tiger.TigerNPC.Multicast_AuthorityPlayAkEvent // (Net|Native|Event|NetMulticast|Public) // @ game+0x1448330
	bool IsReacting(); // Function Tiger.TigerNPC.IsReacting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448300
	bool IsInControl(); // Function Tiger.TigerNPC.IsInControl // (Final|Native|Public|BlueprintCallable) // @ game+0x14482d0
	bool HasShootingTarget(); // Function Tiger.TigerNPC.HasShootingTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14482a0
	struct FVector GetHeardRoarPosition(); // Function Tiger.TigerNPC.GetHeardRoarPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448270
	struct ATigerAIController* GetAIController(); // Function Tiger.TigerNPC.GetAIController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x138e360
	void CollideWithOtherCharacter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerNPC.CollideWithOtherCharacter // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x1448000
	void AuthorityPlayReactionFromMontage(struct UAnimMontage* InMontage, bool bInCanMoveDuringReaction); // Function Tiger.TigerNPC.AuthorityPlayReactionFromMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x1447e70
	void AuthorityPlayReactionFromBlendSpace(struct UBlendSpaceBase* InBlendSpace, struct FVector& InSamplePoint, bool bInCanMoveDuringReaction, float InBlendOutTime); // Function Tiger.TigerNPC.AuthorityPlayReactionFromBlendSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1447cf0
	void AuthorityPlayMontageFromBlendSpace(struct UBlendSpaceBase* BlendSpace, struct FVector& SamplePoint, bool bFreezeAtEnd); // Function Tiger.TigerNPC.AuthorityPlayMontageFromBlendSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1447bd0
	void AuthorityPlayDeathMontage(struct FVector& SamplePoint); // Function Tiger.TigerNPC.AuthorityPlayDeathMontage // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1447b40
	void AuthorityPlayAkEvent(struct UAkAudioEvent* VoiceEvent); // Function Tiger.TigerNPC.AuthorityPlayAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1447ab0
};

// Class Tiger.TigerNpcAccuracyComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerNpcAccuracyComponent : UActorComponent {
	float TimeToReachMaxAccuracy; // 0xb0(0x04)
	float TimeToReachMaxInaccuracy; // 0xb4(0x04)
	float MaxAccuracyConeRadius; // 0xb8(0x04)
	float MinAccuracyConeRadius; // 0xbc(0x04)
	float AccuracyDistance; // 0xc0(0x04)
	float MovingTargetAccuracyPenaltyPercentage; // 0xc4(0x04)
	float MinSwooshByAccuracyConeRadius; // 0xc8(0x04)
	float MaxSwooshByAccuracyConeRadius; // 0xcc(0x04)
	float MinSwooshByAccuracyDistance; // 0xd0(0x04)
	bool bShouldKeepAccuracyWhenSwitchingToTargetsAlly; // 0xd4(0x01)
	bool bShouldDebugDraw; // 0xd5(0x01)
	bool bShouldMissEveryBurst; // 0xd6(0x01)
	char pad_D7[0x9]; // 0xd7(0x09)
	struct ATigerNPC* Owner; // 0xe0(0x08)
	char pad_E8[0x8]; // 0xe8(0x08)

	void OnBurstCompleted(); // Function Tiger.TigerNpcAccuracyComponent.OnBurstCompleted // (Final|Native|Private) // @ game+0x144cb70
};

// Class Tiger.TigerNpcAnimInstance
// Size: 0x430 (Inherited: 0x3c0)
struct UTigerNpcAnimInstance : UTigerAnimInstance {
	enum class ETigerAIAnimationMode AnimationMode; // 0x3b8(0x01)
	struct ATigerPropDummy* PropDummyClass; // 0x3c0(0x08)
	bool bIsReadyToFireWeapon; // 0x3c8(0x01)
	char pad_3CA[0x2]; // 0x3ca(0x02)
	float TimeAnimModeChanged; // 0x3cc(0x04)
	bool bIsBurstFiring; // 0x3d0(0x01)
	bool bIsBeingFedOn; // 0x3d1(0x01)
	bool bCanSeeLocalPlayer; // 0x3d2(0x01)
	bool bIsLookingAtLocalPlayer; // 0x3d3(0x01)
	struct FVector AimDirection; // 0x3d4(0x0c)
	struct FVector StrafeDirection; // 0x3e0(0x0c)
	float LocalPlayerLookAtPitch; // 0x3ec(0x04)
	float LocalPlayerLookAtYaw; // 0x3f0(0x04)
	float LocalPlayerLookAtDistance; // 0x3f4(0x04)
	float LocalPlayerLookAtActivationDistance; // 0x3f8(0x04)
	float LocalPlayerLookAtDeactivationDistance; // 0x3fc(0x04)
	struct FSharkRandomDeviation LocalPlayerLookAtDuration; // 0x400(0x08)
	struct FSharkRandomDeviation LocalPlayerLookAtAgainCooldown; // 0x408(0x08)
	float DeathDirection; // 0x410(0x04)
	float ReactionCooldown; // 0x414(0x04)
	float TurnCooldownTime; // 0x418(0x04)
	char pad_41C[0x14]; // 0x41c(0x14)

	void UpdateSpeed(); // Function Tiger.TigerNpcAnimInstance.UpdateSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x144cf20
	void OnVisualAssetReceived(struct UTigerNPCVisualAsset* VisualAsset); // Function Tiger.TigerNpcAnimInstance.OnVisualAssetReceived // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnPropAssetReceivedEvent(); // Function Tiger.TigerNpcAnimInstance.OnPropAssetReceivedEvent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnNpcThreatStateChangedEvent(enum class ETigerAIMasqueradeState OldThreatState, enum class ETigerAIMasqueradeState NewThreatState); // Function Tiger.TigerNpcAnimInstance.OnNpcThreatStateChangedEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnNpcReactionEvent(struct FTigerNpcReactionEvent& ReactionEvent); // Function Tiger.TigerNpcAnimInstance.OnNpcReactionEvent // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnEntityEvent(enum class ETigerEntityEvent EntityEvent); // Function Tiger.TigerNpcAnimInstance.OnEntityEvent // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBumpedByPlayerEvent(struct ATigerPlayer* InPlayer, struct FVector& InDirectionToPlayer); // Function Tiger.TigerNpcAnimInstance.OnBumpedByPlayerEvent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnAnimationModeChanged(enum class ETigerAIAnimationMode LastAnimationMode); // Function Tiger.TigerNpcAnimInstance.OnAnimationModeChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsReactionOnCooldown(); // Function Tiger.TigerNpcAnimInstance.IsReactionOnCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144ca30
	bool IsFootIKEnabled(); // Function Tiger.TigerNpcAnimInstance.IsFootIKEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144ca00
	struct ATigerAIController* GetTigerAIController(); // Function Tiger.TigerNpcAnimInstance.GetTigerAIController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144c7b0
	struct ATigerNPC* GetOwningNpc(); // Function Tiger.TigerNpcAnimInstance.GetOwningNpc // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144c6e0
	void DetachProps(); // Function Tiger.TigerNpcAnimInstance.DetachProps // (Final|Native|Public|BlueprintCallable) // @ game+0x144c6c0
	void AttachProps(); // Function Tiger.TigerNpcAnimInstance.AttachProps // (Final|Native|Public|BlueprintCallable) // @ game+0x144c420
};

// Class Tiger.TigerNpcCapSpawner
// Size: 0x278 (Inherited: 0x270)
struct ATigerNpcCapSpawner : ATigerNPCSpawningBase {
	struct ATigerAiSpawningCap* OwningSpawningCap; // 0x270(0x08)
};

// Class Tiger.TigerDroppedPropTrackerComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerDroppedPropTrackerComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class Tiger.TigerNPCDetachedProp
// Size: 0x240 (Inherited: 0x238)
struct ATigerNPCDetachedProp : AStaticMeshActor {
	char pad_238[0x8]; // 0x238(0x08)
};

// Class Tiger.TigerDialogueCondition
// Size: 0x30 (Inherited: 0x28)
struct UTigerDialogueCondition : UObject {
	bool bFalseCondition; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Tiger.TigerDialogueCondition_Clan
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_Clan : UTigerDialogueCondition {
	enum class ETigerDialogueClanRequirementSpecifier ClanEquality; // 0x30(0x01)
	enum class ETigerClan ClanRequirement; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Tiger.TigerDialogueCondition_DialogueRead
// Size: 0x50 (Inherited: 0x30)
struct UTigerDialogueCondition_DialogueRead : UTigerDialogueCondition {
	struct FString ListId; // 0x30(0x10)
	struct FString DialogueId; // 0x40(0x10)
};

// Class Tiger.TigerDialogueCondition_FinishedCertainGame
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_FinishedCertainGame : UTigerDialogueCondition {
	enum class ETigerGroupingMode ModeFinished; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerDialogueCondition_GrimoireEntry
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_GrimoireEntry : UTigerDialogueCondition {
	struct UTigerGrimoireEntry* RequiredEntry; // 0x30(0x08)
};

// Class Tiger.TigerDialogueCondition_MatchCount
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_MatchCount : UTigerDialogueCondition {
	int32_t RequiredMatches; // 0x30(0x04)
	enum class ETigerDialogueEqualitySpecifier MatchEquality; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Tiger.TigerDialogueCondition_MatchStats
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_MatchStats : UTigerDialogueCondition {
	enum class ETigerSeasonMatchStatType StatType; // 0x30(0x01)
	enum class ETigerDialogueEqualitySpecifier StatEquality; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	int32_t StatValue; // 0x34(0x04)
};

// Class Tiger.TigerDialogueCondition_Outfit
// Size: 0x48 (Inherited: 0x30)
struct UTigerDialogueCondition_Outfit : UTigerDialogueCondition {
	enum class ETigerDialogueOutfitRequirementSpecifier OutfitRequirement; // 0x30(0x01)
	enum class ETigerClan Clan; // 0x31(0x01)
	enum class ETigerGender Gender; // 0x32(0x01)
	char pad_33[0x5]; // 0x33(0x05)
	struct FString OutfitAssetName; // 0x38(0x10)
};

// Class Tiger.TigerDialogueCondition_Quest
// Size: 0x78 (Inherited: 0x30)
struct UTigerDialogueCondition_Quest : UTigerDialogueCondition {
	enum class ETigerDialogueQuestRequirementSpecifier Requirement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FTigerQuestIdentifier questIdToCheck; // 0x38(0x30)
	bool bTestSpecificObjective; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	int32_t ObjectiveSetIdToCheck; // 0x6c(0x04)
	int32_t ObjectiveIdToCheck; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerDialogueCondition_SeasonLevel
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_SeasonLevel : UTigerDialogueCondition {
	int32_t RequiredSeasonLevel; // 0x30(0x04)
	enum class ETigerDialogueEqualitySpecifier SeasonEquality; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Tiger.TigerNpcMovementRestrictionBoundsData
// Size: 0x48 (Inherited: 0x28)
struct UTigerNpcMovementRestrictionBoundsData : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Tiger.TigerNpcMovementRestrictionBounds
// Size: 0x248 (Inherited: 0x228)
struct ATigerNpcMovementRestrictionBounds : AActor {
	struct USplineComponent* InnerSpline; // 0x228(0x08)
	struct USplineComponent* OuterSpline; // 0x230(0x08)
	char pad_238[0x10]; // 0x238(0x10)
};

// Class Tiger.TigerNpcPropComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerNpcPropComponent : UActorComponent {
	struct USkeletalMeshComponent* OwnerMeshComp; // 0xb0(0x08)
	struct TArray<struct FTigerPropAttachment> AttachedProps; // 0xb8(0x10)
	struct TArray<struct TScriptInterface<ITigerPropCompInterface>> FreeProps; // 0xc8(0x10)

	bool HasProp(struct FName AttachmentIdentifier); // Function Tiger.TigerNpcPropComponent.HasProp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144c960
	bool HasAnyProp(struct TArray<struct FName>& AttachmentIdentifiers); // Function Tiger.TigerNpcPropComponent.HasAnyProp // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144c8a0
	bool HasAllProps(struct TArray<struct FName>& AttachmentIdentifiers); // Function Tiger.TigerNpcPropComponent.HasAllProps // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144c7e0
	struct UMeshComponent* GetPropComponent(struct FName Identifier); // Function Tiger.TigerNpcPropComponent.GetPropComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144c710
	void DetachPropWithSetImpulse(struct FName AttachmentIdentifier, struct FVector Impulse, float AngularImpulseStrength); // Function Tiger.TigerNpcPropComponent.DetachPropWithSetImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x144c590
	void DetachProp(struct FName AttachmentIdentifier, enum class ETigerDetachMethod DetachMethod); // Function Tiger.TigerNpcPropComponent.DetachProp // (Final|Native|Public|BlueprintCallable) // @ game+0x144c4c0
	void ClearProps(enum class ETigerDetachMethod DetachMethod); // Function Tiger.TigerNpcPropComponent.ClearProps // (Final|Native|Public|BlueprintCallable) // @ game+0x144c440
	struct UMeshComponent* AttachProp(struct FTigerPropAttachmentInfo& Attachment); // Function Tiger.TigerNpcPropComponent.AttachProp // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x144c320
};

// Class Tiger.TigerNPCSpawningCoordinator
// Size: 0x150 (Inherited: 0xb0)
struct UTigerNPCSpawningCoordinator : UActorComponent {
	struct UTigerNPCAsset* JudgeNpcAsset; // 0xb0(0x08)
	struct UDataTable* NpcSpawningGroupBudget; // 0xb8(0x08)
	float JudgeSpawnTime; // 0xc0(0x04)
	bool bShouldSpawnJudge; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	float NpcSpawnFrameBudgetInSeconds; // 0xc8(0x04)
	char pad_CC[0x84]; // 0xcc(0x84)

	void TrySpawnNpcs(); // Function Tiger.TigerNPCSpawningCoordinator.TrySpawnNpcs // (Final|Native|Public|BlueprintCallable) // @ game+0x144cf00
	void SpawnNpcs(); // Function Tiger.TigerNPCSpawningCoordinator.SpawnNpcs // (Final|Native|Protected) // @ game+0x144cee0
	void OnSpawnerEndPlay(struct AActor* InActor, enum class EEndPlayReason InEndPlayReason); // Function Tiger.TigerNPCSpawningCoordinator.OnSpawnerEndPlay // (Final|Native|Public) // @ game+0x144cc80
	void OnMatchStateChanged(enum class ETigerMatchState OldState, enum class ETigerMatchState NewState); // Function Tiger.TigerNPCSpawningCoordinator.OnMatchStateChanged // (Final|Native|Public) // @ game+0x144cbb0
	void OnMatchSettingsSet(); // Function Tiger.TigerNPCSpawningCoordinator.OnMatchSettingsSet // (Final|Native|Public) // @ game+0x144cb90
};

// Class Tiger.TigerNPCSpawningSpline
// Size: 0x330 (Inherited: 0x270)
struct ATigerNPCSpawningSpline : ATigerNPCSpawningBase {
	struct USplineComponent* Spline; // 0x270(0x08)
	struct UTigerNPCAsset* NPCAsset; // 0x278(0x08)
	struct FTigerAISplinePathData PathData; // 0x280(0xa0)
	char pad_320[0x10]; // 0x320(0x10)
};

// Class Tiger.TigerOneWayExpandableArea
// Size: 0x338 (Inherited: 0x338)
struct UTigerOneWayExpandableArea : UExpandableArea {

	void CloseArea(); // Function Tiger.TigerOneWayExpandableArea.CloseArea // (Final|Native|Public|BlueprintCallable) // @ game+0x144fa20
};

// Class Tiger.TigerOnlineBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTigerOnlineBlueprintLibrary : UBlueprintFunctionLibrary {

	struct FString PartyIdToUserString(struct FTigerPartyId& InID); // Function Tiger.TigerOnlineBlueprintLibrary.PartyIdToUserString // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x1450190
	struct FString InviteIdToUserString(struct FTigerInviteId& InID); // Function Tiger.TigerOnlineBlueprintLibrary.InviteIdToUserString // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x1450190
	int32_t GetMinimumAccountCreationAge(); // Function Tiger.TigerOnlineBlueprintLibrary.GetMinimumAccountCreationAge // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x144ff10
	struct FString GetAccountRecoverUrl(); // Function Tiger.TigerOnlineBlueprintLibrary.GetAccountRecoverUrl // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x144fd50
};

// Class Tiger.TigerOnlineError
// Size: 0x78 (Inherited: 0x28)
struct UTigerOnlineError : UObject {
	struct FText Message; // 0x28(0x18)
	struct FText Title; // 0x40(0x18)
	struct FString ErrorCodeString; // 0x58(0x10)
	struct FTigerOnlineErrorCode ErrorCode; // 0x68(0x0c)
	char pad_74[0x4]; // 0x74(0x04)

	bool WasKicked(); // Function Tiger.TigerOnlineError.WasKicked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451260
	bool WasBanned(); // Function Tiger.TigerOnlineError.WasBanned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451230
};

// Class Tiger.TigerOnlineSettings
// Size: 0x230 (Inherited: 0x38)
struct UTigerOnlineSettings : UDeveloperSettings {
	bool bResetPlayerDataInEditor; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FString OnlineServicesBaseUrlDev; // 0x40(0x10)
	struct FString OnlineServicesBaseUrlUatRelease; // 0x50(0x10)
	struct FString OnlineServicesBaseUrlUatMain; // 0x60(0x10)
	struct FString OnlineServicesBaseUrlUatPs5; // 0x70(0x10)
	struct FString OnlineServicesBaseUrlUatStaging; // 0x80(0x10)
	struct FString OnlineServicesBaseUrlProd; // 0x90(0x10)
	struct FString OnlineServicesBaseUrlLocal; // 0xa0(0x10)
	struct FString OnlineServicesPushBaseUrlDev; // 0xb0(0x10)
	struct FString OnlineServicesPushBaseUrlUatRelease; // 0xc0(0x10)
	struct FString OnlineServicesPushBaseUrlUatMain; // 0xd0(0x10)
	struct FString OnlineServicesPushBaseUrlUatPs5; // 0xe0(0x10)
	struct FString OnlineServicesPushBaseUrlUatStaging; // 0xf0(0x10)
	struct FString OnlineServicesPushBaseUrlProd; // 0x100(0x10)
	struct FString OnlineServicesPushBaseUrlLocal; // 0x110(0x10)
	struct FString CdnBaseUrlDev; // 0x120(0x10)
	struct FString CdnBaseUrlUat; // 0x130(0x10)
	struct FString CdnBaseUrlProd; // 0x140(0x10)
	struct FString PlayerDataServiceUri; // 0x150(0x10)
	struct FString SessionServiceUri; // 0x160(0x10)
	struct FString PushServiceUri; // 0x170(0x10)
	struct FString PartyServiceUri; // 0x180(0x10)
	struct FString FriendServiceUri; // 0x190(0x10)
	struct FString PresenceServiceUri; // 0x1a0(0x10)
	struct FString LoginQueueServiceUri; // 0x1b0(0x10)
	struct FString StoreServiceUri; // 0x1c0(0x10)
	struct FString ConsoleServiceUri; // 0x1d0(0x10)
	struct FString ConfigServiceUri; // 0x1e0(0x10)
	struct FString TelemetryServiceUri; // 0x1f0(0x10)
	uint32_t EntitlementTokenTimeoutSeconds; // 0x200(0x04)
	uint32_t EntitlementTokenRetryTimeoutSeconds; // 0x204(0x04)
	uint32_t GameModesConfigTimerIntervalSeconds; // 0x208(0x04)
	uint32_t GameModesConfigRetryTimeoutSeconds; // 0x20c(0x04)
	struct FString GameModesConfigBranchName; // 0x210(0x10)
	struct FString GameModesConfigDebugFileName; // 0x220(0x10)
};

// Class Tiger.TigerOnlineStatusMessages
// Size: 0xe8 (Inherited: 0x28)
struct UTigerOnlineStatusMessages : UObject {
	struct FText DefaultMessage; // 0x28(0x18)
	struct FText DefaultAccountMessage; // 0x40(0x18)
	struct FText DefaultSystemMessage; // 0x58(0x18)
	struct FText DefaultServerMessage; // 0x70(0x18)
	struct TArray<struct FTigerOnlineStatusMessageEntry> Messages; // 0x88(0x10)
	struct TMap<enum class ETigerOnlineErrorCategory, struct FText> ErrorCategoryTitles; // 0x98(0x50)

	struct FText GetTitleForCategory(enum class ETigerOnlineErrorCategory InErrorCategory); // Function Tiger.TigerOnlineStatusMessages.GetTitleForCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1450050
	struct FText GetMessageForError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusMessages.GetMessageForError // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x144fe00
};

// Class Tiger.TigerOnlineStatusSubsystem
// Size: 0xd8 (Inherited: 0x30)
struct UTigerOnlineStatusSubsystem : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)
	struct UTigerOnlineStatusMessages* OnlineStatusMessages; // 0x40(0x08)
	char pad_48[0x90]; // 0x48(0x90)

	void TigerTestOnlineError(enum class ETigerOnlineErrorCategory InCategory, int32_t InID); // Function Tiger.TigerOnlineStatusSubsystem.TigerTestOnlineError // (Final|Exec|Native|Public) // @ game+0x1451160
	void TigerCauseNetworkError(int32_t InID); // Function Tiger.TigerOnlineStatusSubsystem.TigerCauseNetworkError // (Final|Exec|Native|Public|Const) // @ game+0x13bc400
	void SetOnlineErrorAndGoToTitle(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusSubsystem.SetOnlineErrorAndGoToTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x1450df0
	void SetOnlineError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusSubsystem.SetOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x1450d50
	bool IsStatusOk(); // Function Tiger.TigerOnlineStatusSubsystem.IsStatusOk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1450350
	float GetRetryDelaySeconds(); // Function Tiger.TigerOnlineStatusSubsystem.GetRetryDelaySeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144ff70
	struct UTigerOnlineError* GetOnlineError(); // Function Tiger.TigerOnlineStatusSubsystem.GetOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x144ff40
	void ClearOnlineError(); // Function Tiger.TigerOnlineStatusSubsystem.ClearOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x144fa00
};

// Class Tiger.TigerOutfitVendorUI
// Size: 0x3d8 (Inherited: 0x3c0)
struct UTigerOutfitVendorUI : UTigerSceneBackgroundUI {
	struct UTigerVendorComponent* VendorComponent; // 0x3c0(0x08)
	struct UTigerVendorStoreCategory* CurrentCategory; // 0x3c8(0x08)
	char pad_3D0[0x8]; // 0x3d0(0x08)

	void OnCategoryItemsReceived(enum class ETigerPersistentStoreCategory CategoryType, struct TArray<struct FTigerVendorStoreCategoryItem>& CategoryItems); // Function Tiger.TigerOutfitVendorUI.OnCategoryItemsReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnBuyItemResponseBP(struct TSoftClassPtr<UObject>& ItemClassPath, struct FString ErrorMessage, int32_t InventoryCount); // Function Tiger.TigerOutfitVendorUI.OnBuyItemResponseBP // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnBuyItemResponse(bool bInSuccess, struct FTigerItemId& InItemId, struct FString InErrorMessage); // Function Tiger.TigerOutfitVendorUI.OnBuyItemResponse // (Final|Native|Protected|HasOutParms) // @ game+0x1450380
	void GetStoreCategoriesResponse(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerOutfitVendorUI.GetStoreCategoriesResponse // (Final|Native|Protected) // @ game+0x144ffa0
	void FetchCategoryItems(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerOutfitVendorUI.FetchCategoryItems // (Final|Native|Public|BlueprintCallable) // @ game+0x144fcd0
	struct FTigerVendorStoreCategoryItem CreateStoreCategoryItemFromStoreEntry(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerOutfitVendorUI.CreateStoreCategoryItemFromStoreEntry // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144fa40
	void BuyItem(struct FTigerItemId& InItemId, struct FTigerItemId InSoftCurrencyId); // Function Tiger.TigerOutfitVendorUI.BuyItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x144f920
};

// Class Tiger.TigerOutlineComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerOutlineComponent : UActorComponent {
	enum class ETigerOutlineMode CurrentMode; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	int32_t StencilValue; // 0xb4(0x04)
	int32_t LocalPlayerStencilValue; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct FMulticastInlineDelegate OnOutlineModeRefreshed; // 0xc0(0x10)
	enum class EVisibilityBasedAnimTickOption MinCullOption; // 0xd0(0x01)
	enum class EVisibilityBasedAnimTickOption AnimCullOption[0xb]; // 0xd1(0x0b)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TArray<struct UMeshComponent*> OutlineMeshes; // 0xe0(0x10)
	uint16_t OutlinesToPauseWhenHidden; // 0xf0(0x02)
	uint16_t OutlinesToPauseWhenBehindTrapGas; // 0xf2(0x02)
	char pad_F4[0xc]; // 0xf4(0x0c)

	void SetShouldUseCustomDepth(bool bInShouldUseCustomDepth); // Function Tiger.TigerOutlineComponent.SetShouldUseCustomDepth // (Final|Native|Public|BlueprintCallable) // @ game+0x1450f20
	void SetMinAnimTickOption(enum class EVisibilityBasedAnimTickOption InMinOption); // Function Tiger.TigerOutlineComponent.SetMinAnimTickOption // (Final|Native|Public|BlueprintCallable) // @ game+0x1450cd0
	void RegisterOutlineMesh(struct UMeshComponent* InMesh); // Function Tiger.TigerOutlineComponent.RegisterOutlineMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x14504d0
	void OnOutlineModeRefreshed__DelegateSignature(enum class ETigerOutlineMode HighestPrioOutline); // DelegateFunction Tiger.TigerOutlineComponent.OnOutlineModeRefreshed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool IsOutlineActivated(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.IsOutlineActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14502b0
	bool IsHidden(); // Function Tiger.TigerOutlineComponent.IsHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1450290
	bool IsBehindTrapGas(); // Function Tiger.TigerOutlineComponent.IsBehindTrapGas // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1450270
	bool HasOutline(); // Function Tiger.TigerOutlineComponent.HasOutline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1450140
	void DeactivateOutline(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.DeactivateOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x144fc50
	void ActivateOutline(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.ActivateOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x144f770
};

// Class Tiger.TigerPaperDoll
// Size: 0x620 (Inherited: 0x228)
struct ATigerPaperDoll : AActor {
	struct UTigerCharacterMeshManager* MeshManager; // 0x228(0x08)
	struct TWeakObjectPtr<struct ATigerPlayerState> TigerPlayerState; // 0x230(0x08)
	struct UTigerNpcPropComponent* PropComponent; // 0x238(0x08)
	struct USceneComponent* PlayerAttachment; // 0x240(0x08)
	struct USkeletalMeshComponent* BodySkelMesh; // 0x248(0x08)
	struct USkeletalMeshComponent* HeadSkelMesh; // 0x250(0x08)
	struct USkeletalMeshComponent* HoodieSkelMesh; // 0x258(0x08)
	struct USkeletalMeshComponent* HairSkelMesh; // 0x260(0x08)
	struct USkeletalMeshComponent* HeadgearMesh; // 0x268(0x08)
	struct USkeletalMeshComponent* EyewearMesh; // 0x270(0x08)
	struct USkeletalMeshComponent* BeardSkelMesh; // 0x278(0x08)
	struct USkeletalMeshComponent* BodyAdditionalMesh; // 0x280(0x08)
	struct FTigerPreviewerData StartupAppearance; // 0x288(0x2b0)
	bool bRegisterWithPlayerController; // 0x538(0x01)
	char pad_539[0x7]; // 0x539(0x07)
	struct UTigerCharCustomizationComponent* CharacterCustomization; // 0x540(0x08)
	struct UTigerPlayerClanData* PlayerClan; // 0x548(0x08)
	struct UCameraComponent* CameraComponent; // 0x550(0x08)
	struct UAnimInstance* PlayerAnimInstanceClass; // 0x558(0x08)
	struct USceneCaptureComponent2D* SceneCapture; // 0x560(0x08)
	struct ATigerPlayerCameraManager* CameraManager; // 0x568(0x08)
	bool bUseFreeCam; // 0x570(0x01)
	char pad_571[0x3]; // 0x571(0x03)
	float DefaultCameraLerpSpeed; // 0x574(0x04)
	struct FVector CamerasOffset[0xb]; // 0x578(0x84)
	struct FVector CameraTargetOffset; // 0x5fc(0x0c)
	struct FMulticastInlineDelegate OnStartupAppearanceApplied; // 0x608(0x10)
	char pad_618[0x8]; // 0x618(0x08)

	void ShowPaperdollFromCharacter(struct ATigerCharacter* Character); // Function Tiger.TigerPaperDoll.ShowPaperdollFromCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x14510d0
	void ShowPaperDoll(); // Function Tiger.TigerPaperDoll.ShowPaperDoll // (Final|Native|Public|BlueprintCallable) // @ game+0x14510b0
	void ShowCharacter(struct FTigerPersistentPlayerCharacter& Character); // Function Tiger.TigerPaperDoll.ShowCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1450fb0
	void SetPlayerState(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPaperDoll.SetPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x1450e90
	void SetCameraTargetOffset(struct FVector& InCameraTargetOffset, bool bAnimateCamera); // Function Tiger.TigerPaperDoll.SetCameraTargetOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1450bf0
	void SetCameraFocus(enum class ETigerCustomizePart CustomizePart, bool bAnimateCamera); // Function Tiger.TigerPaperDoll.SetCameraFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x1450b20
	void SetAppearanceFromPlayerState(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPaperDoll.SetAppearanceFromPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x1450a90
	void SetAppearanceDataWithItemOverride(struct FTigerPreviewerData& InPreviewAppearance, enum class ETigerClan InClanType, struct TSoftClassPtr<UObject> InItemOverrideClass); // Function Tiger.TigerPaperDoll.SetAppearanceDataWithItemOverride // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14508b0
	void SetAppearanceAndOutfit(struct FTigerPreviewerData InAppearance, struct TSoftClassPtr<UObject>& InOutfitClassPath); // Function Tiger.TigerPaperDoll.SetAppearanceAndOutfit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1450770
	void SetAppearanceAndClan(struct FTigerPreviewerData& InAppearance, struct UTigerPlayerClanData* InClanData, struct FDelegate InDelegate); // Function Tiger.TigerPaperDoll.SetAppearanceAndClan // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1450610
	void SetAppearance(struct FTigerPreviewerData& InAppearance); // Function Tiger.TigerPaperDoll.SetAppearance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1450560
	void PreNewCharacterSelected(); // Function Tiger.TigerPaperDoll.PreNewCharacterSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void PostNewCharacterSelected(); // Function Tiger.TigerPaperDoll.PostNewCharacterSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnStartupAppearanceApplied__DelegateSignature(); // DelegateFunction Tiger.TigerPaperDoll.OnStartupAppearanceApplied__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnDynamicAppearanceLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPaperDoll.OnDynamicAppearanceLoaded__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void HidePaperdoll(); // Function Tiger.TigerPaperDoll.HidePaperdoll // (Final|Native|Public|BlueprintCallable) // @ game+0x1450170
	struct UTigerAnimInstance* GetTigerAnimInstance(); // Function Tiger.TigerPaperDoll.GetTigerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1450020
	enum class ETigerGender GetBodyType(); // Function Tiger.TigerPaperDoll.GetBodyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144fdd0
	void ApplyStartupAppearance(struct UTigerCharCustomizationComponent* InCustomizationComponent); // Function Tiger.TigerPaperDoll.ApplyStartupAppearance // (Final|Native|Protected|BlueprintCallable) // @ game+0x144f890
	bool ApplyEditorAppearance(struct UTigerCharCustomizationComponent* CustomizationComponent); // Function Tiger.TigerPaperDoll.ApplyEditorAppearance // (Final|Native|Protected|BlueprintCallable) // @ game+0x144f7f0
};

// Class Tiger.TigerPaperDollAnimInstance
// Size: 0x3c0 (Inherited: 0x3c0)
struct UTigerPaperDollAnimInstance : UTigerAnimInstance {
	struct FName DefaultSequenceName; // 0x3b8(0x08)
};

// Class Tiger.TigerParticleStrategyChooseSystem
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategyChooseSystem : UTigerParticleStrategy {

	struct UParticleSystem* ChooseSpawningSystem(struct ATigerCharacter* InParticleInstigator); // Function Tiger.TigerParticleStrategyChooseSystem.ChooseSpawningSystem // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x14546a0
};

// Class Tiger.TigerPartyInvite
// Size: 0x88 (Inherited: 0x28)
struct UTigerPartyInvite : UObject {
	struct FTigerInviteId ID; // 0x28(0x10)
	struct FTigerPersistentPlayerID HostId; // 0x38(0x10)
	enum class EShAccountChannel HostChannel; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct FString HostDisplayName; // 0x50(0x10)
	char pad_60[0x28]; // 0x60(0x28)
};

// Class Tiger.TigerPartyManager
// Size: 0x2d0 (Inherited: 0x28)
struct UTigerPartyManager : UObject {
	struct FMulticastInlineDelegate OnInviteReceived; // 0x28(0x10)
	struct FMulticastInlineDelegate OnInviteRemoved; // 0x38(0x10)
	struct FMulticastInlineDelegate OnJoinedParty; // 0x48(0x10)
	struct FMulticastInlineDelegate OnJoinedPartyFailed; // 0x58(0x10)
	struct FMulticastInlineDelegate OnLeftParty; // 0x68(0x10)
	struct FMulticastInlineDelegate OnMemberJoinedParty; // 0x78(0x10)
	struct FMulticastInlineDelegate OnMemberLeftParty; // 0x88(0x10)
	struct FMulticastInlineDelegate OnLeaderChanged; // 0x98(0x10)
	struct FMulticastInlineDelegate OnInviteAccepted; // 0xa8(0x10)
	struct FMulticastInlineDelegate OnInviteDeclined; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnPartyUpdated; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnInviteFailed; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnAcceptInviteFailed; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnSessionAvailable; // 0xf8(0x10)
	struct FMulticastInlineDelegate OnCreateGameSessionFailed; // 0x108(0x10)
	struct FMulticastInlineDelegate OnPartyMaxMemberSizeUpdated; // 0x118(0x10)
	struct FMulticastInlineDelegate OnPartyPlayerStateAdded; // 0x128(0x10)
	char pad_138[0x20]; // 0x138(0x20)
	struct TWeakObjectPtr<struct UTigerGameInstance> GameInstance; // 0x158(0x08)
	struct TArray<struct UTigerUser*> PartyMembers; // 0x160(0x10)
	struct TArray<struct UTigerPartyInvite*> Invites; // 0x170(0x10)
	float TravelTimeoutSeconds; // 0x180(0x04)
	float MaxInviteAgeSeconds; // 0x184(0x04)
	int32_t MaxInvites; // 0x188(0x04)
	char pad_18C[0x2c]; // 0x18c(0x2c)
	struct UTigerPartyService* PartyService; // 0x1b8(0x08)
	char pad_1C0[0x98]; // 0x1c0(0x98)
	struct TMap<struct FString, double> LatestInviteAttemptTimestamps; // 0x258(0x50)
	char pad_2A8[0x10]; // 0x2a8(0x10)
	float DefaultInviteCooldown; // 0x2b8(0x04)
	float DeclinedInviteCooldown; // 0x2bc(0x04)
	char pad_2C0[0x10]; // 0x2c0(0x10)

	bool TravelToPartyElysium(); // Function Tiger.TigerPartyManager.TravelToPartyElysium // (Final|Native|Public|BlueprintCallable) // @ game+0x1455620
	void TigerPartyPlatformInvite(struct FString InPlayerId, enum class EShAccountChannel InPlayerChannel); // Function Tiger.TigerPartyManager.TigerPartyPlatformInvite // (Final|Exec|Native|Public) // @ game+0x14554f0
	void TigerPartyInvite(struct FString InPlayerId, enum class EShAccountChannel InPlayerChannel); // Function Tiger.TigerPartyManager.TigerPartyInvite // (Final|Exec|Native|Public) // @ game+0x14554f0
	void TigerPartyFailJoinParty(); // Function Tiger.TigerPartyManager.TigerPartyFailJoinParty // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerPartyDump(); // Function Tiger.TigerPartyManager.TigerPartyDump // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerPartyBindPlatformTest(); // Function Tiger.TigerPartyManager.TigerPartyBindPlatformTest // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void SetLastPlayedMatchGameModeForAllMembers(int32_t InGameModeIndex, struct FString InGameModeId); // Function Tiger.TigerPartyManager.SetLastPlayedMatchGameModeForAllMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x1455380
	void RequestPartyUpdate(); // Function Tiger.TigerPartyManager.RequestPartyUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1455310
	void RequestPartyCheck(); // Function Tiger.TigerPartyManager.RequestPartyCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x14552f0
	void RemoveInvitesOfPlayer(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerPartyManager.RemoveInvitesOfPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1455240
	void RemoveExpiredInvites(); // Function Tiger.TigerPartyManager.RemoveExpiredInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x1455220
	bool PartyHasSelectedElysium(); // Function Tiger.TigerPartyManager.PartyHasSelectedElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14551f0
	void OnSessionAvailableDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnSessionAvailableDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPlayerStateAdded__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPartyManager.OnPlayerStateAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPartyUpdatedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnPartyUpdatedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPartyMaxMemberSizeUpdatedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnPartyMaxMemberSizeUpdatedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnMemberLeftDelegate__DelegateSignature(struct FTigerPartyId& InPartyId, struct FString InDepartingPlayerId); // DelegateFunction Tiger.TigerPartyManager.OnMemberLeftDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnMemberJoinedDelegate__DelegateSignature(struct FTigerPartyId& InPartyId, struct FString InJoiningPlayerId); // DelegateFunction Tiger.TigerPartyManager.OnMemberJoinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnLeftPartyDueToBlockedPlayerDelegate__DelegateSignature(struct UTigerPartyManager* InPartyManager); // DelegateFunction Tiger.TigerPartyManager.OnLeftPartyDueToBlockedPlayerDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnLeftPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerPartyManager.OnLeftPartyDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnLeaderChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnLeaderChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnJoinPartyFailedDelegate__DelegateSignature(enum class ETigerJoinedPartyFailedReason InJoinedPartyFailedReason); // DelegateFunction Tiger.TigerPartyManager.OnJoinPartyFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnJoinedPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerPartyManager.OnJoinedPartyDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnInviteFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnInviteFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnInviteDeclinedDelegate__DelegateSignature(struct FTigerInviteId& InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnInviteDeclinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnInviteActionDelegate__DelegateSignature(struct UTigerPartyInvite* InInvite); // DelegateFunction Tiger.TigerPartyManager.OnInviteActionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnInviteAcceptedDelegate__DelegateSignature(struct FTigerInviteId& InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnInviteAcceptedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnCreateGameSessionFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnCreateGameSessionFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnAcceptInviteFailedDelegate__DelegateSignature(struct FTigerInviteId& InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnAcceptInviteFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void LeaveParty(); // Function Tiger.TigerPartyManager.LeaveParty // (Final|Native|Public|BlueprintCallable) // @ game+0x1455190
	bool IsPartyFull(); // Function Tiger.TigerPartyManager.IsPartyFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1455130
	bool IsLeader(struct FString InPlayerId); // Function Tiger.TigerPartyManager.IsLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1455080
	bool IsJoiningParty(); // Function Tiger.TigerPartyManager.IsJoiningParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1455050
	bool IsJoiningOrInParty(); // Function Tiger.TigerPartyManager.IsJoiningOrInParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1454ff0
	bool IsInParty(); // Function Tiger.TigerPartyManager.IsInParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1454fc0
	void InviteByPlayerIdWithUserData(struct FTigerPersistentPlayerID& InPlayerId, enum class EShAccountChannel InAccountChannel, struct FString InUserData); // Function Tiger.TigerPartyManager.InviteByPlayerIdWithUserData // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1454e70
	void InviteByPlayerId(struct FTigerPersistentPlayerID& InPlayerId, enum class EShAccountChannel InPlayerChannel); // Function Tiger.TigerPartyManager.InviteByPlayerId // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1454d70
	void Invite(struct UTigerUser* InUser); // Function Tiger.TigerPartyManager.Invite // (Final|Native|Public|BlueprintCallable) // @ game+0x1454ce0
	bool InMaintenanceMode(); // Function Tiger.TigerPartyManager.InMaintenanceMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1454cc0
	void HandlePlayerStateAdded(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPartyManager.HandlePlayerStateAdded // (Final|Native|Public) // @ game+0x1454c30
	struct FTigerPartyId GetPartyId(); // Function Tiger.TigerPartyManager.GetPartyId // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1454bc0
	int32_t GetMaxPartyMembers(); // Function Tiger.TigerPartyManager.GetMaxPartyMembers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1454ba0
	float GetInvitePlayerCooldown(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerPartyManager.GetInvitePlayerCooldown // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1454ae0
	void DeclineInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerPartyManager.DeclineInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x1454980
	void CreateGameSession(struct FTigerBpFindSessionSelectedSession& InGameSession); // Function Tiger.TigerPartyManager.CreateGameSession // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1454740
	void AcceptInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerPartyManager.AcceptInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x1454610
};

// Class Tiger.TigerPartyService
// Size: 0x40 (Inherited: 0x28)
struct UTigerPartyService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerPassionProjectile
// Size: 0x288 (Inherited: 0x228)
struct ATigerPassionProjectile : AActor {
	struct FVector TargetLocation; // 0x228(0x0c)
	struct FVector Velocity; // 0x234(0x0c)
	float ScaledSpeedValue; // 0x240(0x04)
	float BuffDuration; // 0x244(0x04)
	float BuffStrength; // 0x248(0x04)
	float TimeUntilParticleFadeTiemout; // 0x24c(0x04)
	struct FTimerHandle TimerHandle; // 0x250(0x08)
	char Effect; // 0x258(0x01)
	bool bIsMoving; // 0x259(0x01)
	bool bTurnOnCollision; // 0x25a(0x01)
	char pad_25B[0x5]; // 0x25b(0x05)
	struct ATigerCharacter* TigerCharacterOwner; // 0x260(0x08)
	struct UTigerDisciplinePassion* PassionDiscipline; // 0x268(0x08)
	struct UTigerPassionConfig* ConfigType; // 0x270(0x08)
	struct UBoxComponent* Box; // 0x278(0x08)
	struct UParticleSystemComponent* ParticleComp; // 0x280(0x08)

	void Server_DestroyProjectile(); // Function Tiger.TigerPassionProjectile.Server_DestroyProjectile // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1455330
	void OnRep_TargetLocation(); // Function Tiger.TigerPassionProjectile.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x14551d0
	void OnRep_Effect(); // Function Tiger.TigerPassionProjectile.OnRep_Effect // (Final|Native|Private) // @ game+0x14551b0
};

// Class Tiger.TigerPassiveOverpower
// Size: 0x120 (Inherited: 0x120)
struct UTigerPassiveOverpower : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveAdrenalineRushConfig
// Size: 0x130 (Inherited: 0x120)
struct UTigerPassiveAdrenalineRushConfig : UTigerPassiveConfig {
	struct UTigerBuffAdrenalineRush* OnEnemyWithinRadiusBuff; // 0x120(0x08)
	float RadiusInUnits; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)
};

// Class Tiger.TigerPassiveAdrenalineRushLogicComponent
// Size: 0x188 (Inherited: 0x168)
struct UTigerPassiveAdrenalineRushLogicComponent : UTigerPassiveArchetypeLogic {
	struct UTigerPassiveAdrenalineRushConfig* PassiveConfig; // 0x168(0x08)
	char pad_170[0x18]; // 0x170(0x18)
};

// Class Tiger.TigerPassiveAHuntForPleasure
// Size: 0x128 (Inherited: 0x120)
struct UTigerPassiveAHuntForPleasure : UTigerPassiveConfig {
	float MinEffectDistance; // 0x120(0x04)
	float MaxEffectDistance; // 0x124(0x04)
};

// Class Tiger.TigerPassiveCollectorConfig
// Size: 0x128 (Inherited: 0x120)
struct UTigerPassiveCollectorConfig : UTigerPassiveConfig {
	float CarryCapacityMultiplier; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
};

// Class Tiger.TigerPassiveColossalStrength
// Size: 0x128 (Inherited: 0x120)
struct UTigerPassiveColossalStrength : UTigerPassiveConfig {
	float UnarmedDamageMultiplier; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
};

// Class Tiger.TigerPassiveEnragedConfig
// Size: 0x158 (Inherited: 0x120)
struct UTigerPassiveEnragedConfig : UTigerPassiveConfig {
	struct UAnimMontage* ActivationMontage; // 0x120(0x08)
	struct ATigerEnragedEffectActor* EffectActor; // 0x128(0x08)
	float EffectActorDestructionDelay; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct UTigerBuff* OnHitBuff; // 0x138(0x08)
	float DisciplineDamageMultiplier; // 0x140(0x04)
	float RegenSpeed; // 0x144(0x04)
	float RegenDelay; // 0x148(0x04)
	float HealthPercentThreshold; // 0x14c(0x04)
	bool bUseBaseHealthPercent; // 0x150(0x01)
	bool bDamageMultiplierOneTimeUse; // 0x151(0x01)
	char pad_152[0x6]; // 0x152(0x06)
};

// Class Tiger.TigerPassiveEnragedLogic
// Size: 0xd8 (Inherited: 0xc0)
struct UTigerPassiveEnragedLogic : UTigerPassiveComponent {
	struct UTigerPassiveEnragedConfig* Config; // 0xc0(0x08)
	struct ATigerEnragedEffectActor* EffectActor; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)

	bool IsEnraged(); // Function Tiger.TigerPassiveEnragedLogic.IsEnraged // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b8a0
};

// Class Tiger.TigerPassiveFinalActConfig
// Size: 0x120 (Inherited: 0x120)
struct UTigerPassiveFinalActConfig : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveFinalActLogic
// Size: 0xc0 (Inherited: 0xc0)
struct UTigerPassiveFinalActLogic : UTigerPassiveComponent {
};

// Class Tiger.TigerPassiveHideousConfig
// Size: 0x130 (Inherited: 0x120)
struct UTigerPassiveHideousConfig : UTigerPassiveConfig {
	float TimeUntilMasqueradeTicks; // 0x120(0x04)
	float HideousReachDistance; // 0x124(0x04)
	struct UCurveFloat* ScaleCurve; // 0x128(0x08)
};

// Class Tiger.TigerPassiveHideousLogic
// Size: 0x120 (Inherited: 0xc0)
struct UTigerPassiveHideousLogic : UTigerPassiveComponent {
	struct UTigerPassiveHideousConfig* Config; // 0xc0(0x08)
	struct TMap<struct ATigerBaseNPC*, struct FHideousTimingData> TimingData; // 0xc8(0x50)
	struct ATigerPlayer* Player; // 0x118(0x08)
};

// Class Tiger.TigerPassiveKindredCharmConfig
// Size: 0x178 (Inherited: 0x120)
struct UTigerPassiveKindredCharmConfig : UTigerPassiveConfig {
	struct ATigerKindredCharmEffectActor* EffectActor; // 0x120(0x08)
	struct FName EffectSocketR; // 0x128(0x08)
	struct FName EffectSocketL; // 0x130(0x08)
	struct TArray<float> CharmCountCooldownSpeed; // 0x138(0x10)
	int32_t MaxCharmedCharacterCount; // 0x148(0x04)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct UTigerBuffKindredCharm* CharmBuff; // 0x150(0x08)
	float PlayerPulseRange; // 0x158(0x04)
	float PlayerPulseInterval; // 0x15c(0x04)
	float BuffDuration; // 0x160(0x04)
	float NpcDamageBreakCharmRadius; // 0x164(0x04)
	float NpcDamageBreakCharmThreshold; // 0x168(0x04)
	float NpcDamageBreakCharmImmunityTime; // 0x16c(0x04)
	float CharmedFeedingSpeedMultiplier; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerPassiveKindredCharmLogic
// Size: 0xe8 (Inherited: 0xc0)
struct UTigerPassiveKindredCharmLogic : UTigerPassiveComponent {
	struct UTigerPassiveKindredCharmConfig* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	struct ATigerKindredCharmEffectActor* EffectActorR; // 0xd0(0x08)
	struct ATigerKindredCharmEffectActor* EffectActorL; // 0xd8(0x08)
	char pad_E0[0x8]; // 0xe0(0x08)

	int32_t GetKindredCharmCount(); // Function Tiger.TigerPassiveKindredCharmLogic.GetKindredCharmCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b490
};

// Class Tiger.TigerPassiveMomentum
// Size: 0x120 (Inherited: 0x120)
struct UTigerPassiveMomentum : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveMomentumLogicComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UTigerPassiveMomentumLogicComponent : UTigerPassiveComponent {
	float CoolDownReduction; // 0xc0(0x04)
	float PassiveCoolDown; // 0xc4(0x04)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	float EndTime; // 0xd0(0x04)
	bool bIsInCooldown; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
};

// Class Tiger.TigerPassiveNightstalkerConfig
// Size: 0x158 (Inherited: 0x120)
struct UTigerPassiveNightstalkerConfig : UTigerPassiveConfig {
	float CrouchedTimeUntilUnseen; // 0x120(0x04)
	float CrouchedTimePerAdditionalPowerLevel; // 0x124(0x04)
	struct TArray<struct UTigerBuffUnseenPresence*> InvisibilityBuff; // 0x128(0x10)
	struct FTigerSightConfigProperties OverrideSightProperties; // 0x138(0x1c)
	char pad_154[0x4]; // 0x154(0x04)
};

// Class Tiger.TigerPassiveNightstalkerLogic
// Size: 0x190 (Inherited: 0x168)
struct UTigerPassiveNightstalkerLogic : UTigerPassiveArchetypeLogic {
	struct UTigerPassiveNightstalkerConfig* Config; // 0x168(0x08)
	char pad_170[0x20]; // 0x170(0x20)

	void OnCharacterAction(enum class ETigerCharacterAction Action); // Function Tiger.TigerPassiveNightstalkerLogic.OnCharacterAction // (Final|Native|Public) // @ game+0x145bb10
	void OnBuffRemoved(struct UTigerBuff* BuffType, int32_t ID, float Duration); // Function Tiger.TigerPassiveNightstalkerLogic.OnBuffRemoved // (Final|Native|Public) // @ game+0x145b9f0
	void OnBuffAdded(struct UTigerBuff* BuffType, int32_t ID, float Duration); // Function Tiger.TigerPassiveNightstalkerLogic.OnBuffAdded // (Final|Native|Public) // @ game+0x145b8d0
};

// Class Tiger.TigerPassivePerkNosferatuConfig
// Size: 0x130 (Inherited: 0x120)
struct UTigerPassivePerkNosferatuConfig : UTigerPassiveConfig {
	struct UTigerBuff* VanishBuffOverride; // 0x120(0x08)
	float DurationOverride; // 0x128(0x04)
	float AttackDelayAfterBuffModifier; // 0x12c(0x04)
};

// Class Tiger.TigerPassivePerkAnimalistConfig
// Size: 0x148 (Inherited: 0x130)
struct UTigerPassivePerkAnimalistConfig : UTigerPassivePerkNosferatuConfig {
	struct UTigerFamiliarScoutPassive* PassiveClassOverride; // 0x130(0x08)
	float ScoutLifetimeOverride; // 0x138(0x04)
	float RevealDurationMultiplier; // 0x13c(0x04)
	float ActiveScanRadiusMultiplier; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
};

// Class Tiger.TigerPassivePerkCrouchedConfig
// Size: 0x1c0 (Inherited: 0x120)
struct UTigerPassivePerkCrouchedConfig : UTigerPassiveConfig {
	struct FTigerCharacterStatModification CrouchedStatModification; // 0x120(0xa0)
};

// Class Tiger.TigerPassivePerkCrouchedLogic
// Size: 0xd0 (Inherited: 0xc0)
struct UTigerPassivePerkCrouchedLogic : UTigerPassiveComponent {
	struct UTigerPassivePerkCrouchedConfig* PassiveConfig; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	void OnCrouchStateUpdated(bool bInIsCrouched); // Function Tiger.TigerPassivePerkCrouchedLogic.OnCrouchStateUpdated // (Final|Native|Public) // @ game+0x145bb90
};

// Class Tiger.TigerPassivePerkTechnocratConfig
// Size: 0x148 (Inherited: 0x130)
struct UTigerPassivePerkTechnocratConfig : UTigerPassivePerkNosferatuConfig {
	struct UTigerBuffUnseenPresence* InvisibilityBuffOverride; // 0x130(0x08)
	float CrouchedTimeUntilUnseenMultiplier; // 0x138(0x04)
	float ExplosionDamageMultiplier; // 0x13c(0x04)
	bool bDisableAreaTrigger; // 0x140(0x01)
	char pad_141[0x7]; // 0x141(0x07)
};

// Class Tiger.TigerPassivePerkToreadorConfig
// Size: 0x128 (Inherited: 0x120)
struct UTigerPassivePerkToreadorConfig : UTigerPassiveConfig {
	float ProjectionSpeedMultiplier; // 0x120(0x04)
	float ProjectionStoppedLifetimeMultiplier; // 0x124(0x04)
};

// Class Tiger.TigerPassivePerkVentrueConfig
// Size: 0x128 (Inherited: 0x120)
struct UTigerPassivePerkVentrueConfig : UTigerPassiveConfig {
	struct UTigerBuff* BuffOverride; // 0x120(0x08)
};

// Class Tiger.TigerPassiveUnbridledRageConfig
// Size: 0x128 (Inherited: 0x120)
struct UTigerPassiveUnbridledRageConfig : UTigerPassiveConfig {
	float MinimumLoudnessMultiplier; // 0x120(0x04)
	float MaximumLoudnessMultiplier; // 0x124(0x04)
};

// Class Tiger.TigerPassiveUnbridledRageLogic
// Size: 0x170 (Inherited: 0xc0)
struct UTigerPassiveUnbridledRageLogic : UTigerPassiveComponent {
	struct UTigerPassiveUnbridledRageConfig* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	char pad_D0[0xa0]; // 0xd0(0xa0)
};

// Class Tiger.TigerBuffUnseenPresenceInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffUnseenPresenceInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)

	void UpdateInvisibilityMaterial(float DeltaTime, struct ATigerPlayer* Player, struct UMaterialInstanceDynamic* MaterialInstance); // Function Tiger.TigerBuffUnseenPresenceInstance.UpdateInvisibilityMaterial // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerBuffUnseenPresence
// Size: 0x278 (Inherited: 0x260)
struct UTigerBuffUnseenPresence : UTigerBuff {
	struct UTigerBuffUnseenPresenceInstance* BuffInstanceClass; // 0x260(0x08)
	struct UAkAudioEvent* NearbySound; // 0x268(0x08)
	float NearbySoundPlayDistanceSquared; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerPassiveVentrueOneConfig
// Size: 0x138 (Inherited: 0x120)
struct UTigerPassiveVentrueOneConfig : UTigerPassiveConfig {
	struct UTigerBuff* Debuff; // 0x120(0x08)
	float DebuffCylinderRadius; // 0x128(0x04)
	float DebuffCooldown; // 0x12c(0x04)
	bool bOnlyRemoveDebuffWhenOutsideRange; // 0x130(0x01)
	char pad_131[0x7]; // 0x131(0x07)
};

// Class Tiger.TigerPassiveVentrueOneLogic
// Size: 0x140 (Inherited: 0xc0)
struct UTigerPassiveVentrueOneLogic : UTigerPassiveComponent {
	struct UTigerPassiveVentrueOneConfig* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	struct UCapsuleComponent* DebuffRadiusComponent; // 0xd0(0x08)
	struct TArray<struct ATigerCharacter*> CharactersInDebuffRange; // 0xd8(0x10)
	struct TMap<struct ATigerCharacter*, float> CharacterDebuffCooldown; // 0xe8(0x50)
	char pad_138[0x8]; // 0x138(0x08)

	void EndDebuffOverlappedRange(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex); // Function Tiger.TigerPassiveVentrueOneLogic.EndDebuffOverlappedRange // (Final|Native|Protected) // @ game+0x145b2d0
	void BeginDebuffOverlappedRange(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerPassiveVentrueOneLogic.BeginDebuffOverlappedRange // (Final|Native|Protected|HasOutParms) // @ game+0x145ade0
};

// Class Tiger.TigerPassiveVoiceOfInspirationConfig
// Size: 0x120 (Inherited: 0x120)
struct UTigerPassiveVoiceOfInspirationConfig : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveVoiceOfInspirationLogic
// Size: 0x170 (Inherited: 0x168)
struct UTigerPassiveVoiceOfInspirationLogic : UTigerPassiveArchetypeLogic {
	struct UTigerBuff* ActiveBuff; // 0x168(0x08)
};

// Class Tiger.TigerPathFollowingComponent
// Size: 0x298 (Inherited: 0x298)
struct UTigerPathFollowingComponent : UCrowdFollowingComponent {
};

// Class Tiger.TigerPerformanceIndicatorSettings
// Size: 0xa0 (Inherited: 0x38)
struct UTigerPerformanceIndicatorSettings : UDeveloperSettings {
	bool bEnablePerformanceIndicators; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FTigerPerformanceIndicatorValues FPS; // 0x3c(0x10)
	struct FTigerPerformanceIndicatorValues ServerFPS; // 0x4c(0x10)
	struct FTigerPerformanceIndicatorValues Latency; // 0x5c(0x10)
	struct FTigerPerformanceIndicatorValues LatencyVariation; // 0x6c(0x10)
	struct FTigerPerformanceIndicatorValues PacketLoss; // 0x7c(0x10)
	struct FTigerPerformanceIndicatorValues PsoCompilation; // 0x8c(0x10)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerCharacterSlotExpansion
// Size: 0x108 (Inherited: 0x108)
struct UTigerCharacterSlotExpansion : UTigerInventoryItemBase {
};

// Class Tiger.TigerConsumableInventoryItemBase
// Size: 0x110 (Inherited: 0x108)
struct UTigerConsumableInventoryItemBase : UTigerInventoryItemBase {
	int32_t Count; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
};

// Class Tiger.TigerPremiumCurrencyPack
// Size: 0x110 (Inherited: 0x110)
struct UTigerPremiumCurrencyPack : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerSeasonExpPack
// Size: 0x110 (Inherited: 0x110)
struct UTigerSeasonExpPack : UTigerConsumableInventoryItemBase {

	int32_t GetExpRewardAmount(); // Function Tiger.TigerSeasonExpPack.GetExpRewardAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145b430
};

// Class Tiger.TigerSeasonPlacementExpBoostPercentage
// Size: 0x110 (Inherited: 0x110)
struct UTigerSeasonPlacementExpBoostPercentage : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerSeasonRankSkip
// Size: 0x110 (Inherited: 0x110)
struct UTigerSeasonRankSkip : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerBattlepassItem
// Size: 0x110 (Inherited: 0x108)
struct UTigerBattlepassItem : UTigerInventoryItemBase {
	int32_t SeasonId; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
};

// Class Tiger.TigerSoftCurrency
// Size: 0x108 (Inherited: 0x108)
struct UTigerSoftCurrency : UTigerInventoryItemBase {
};

// Class Tiger.TigerInventoryItemPack
// Size: 0x118 (Inherited: 0x110)
struct UTigerInventoryItemPack : UTigerConsumableInventoryItemBase {
	struct FTigerItemId ItemId; // 0x110(0x08)
};

// Class Tiger.TigerPerkItem
// Size: 0x110 (Inherited: 0x108)
struct UTigerPerkItem : UTigerInventoryItemBase {
	struct UTigerPassiveConfig* PerkPassive; // 0x108(0x08)
};

// Class Tiger.TigerServerCallbacks
// Size: 0x28 (Inherited: 0x28)
struct UTigerServerCallbacks : UInterface {

	void OnLoginSucceeded(struct TArray<struct FTigerPersistentPlayerCharacter>& AvailableCharacters); // Function Tiger.TigerServerCallbacks.OnLoginSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnLoginFailed(struct FTigerLoginFailedInfo& InLoginFailedInfo); // Function Tiger.TigerServerCallbacks.OnLoginFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnLegalDocumentAcceptanceResult(struct TArray<enum class ETigerLegalDocumentType>& InDocumentTypes); // Function Tiger.TigerServerCallbacks.OnLegalDocumentAcceptanceResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnGetValidGameVersionResult(enum class ETigerVersionIsValidResult Result); // Function Tiger.TigerServerCallbacks.OnGetValidGameVersionResult // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGetUserPrivileges(); // Function Tiger.TigerServerCallbacks.OnGetUserPrivileges // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnCreateCharacterResult(struct FTigerPersistentCharacterID& CharacterId, bool bWasCharacterCreated); // Function Tiger.TigerServerCallbacks.OnCreateCharacterResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnCharacterSelected(); // Function Tiger.TigerServerCallbacks.OnCharacterSelected // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerPersistentPlayerState
// Size: 0x700 (Inherited: 0xb0)
struct UTigerPersistentPlayerState : UActorComponent {
	char pad_B0[0x58]; // 0xb0(0x58)
	struct FMulticastInlineDelegate OnDailyChallengesInitializedEvent; // 0x108(0x10)
	struct FMulticastInlineDelegate OnRewardsLoaded; // 0x118(0x10)
	struct FMulticastInlineDelegate OnClientTransactionalPlayerDataChangedEvent; // 0x128(0x10)
	struct FMulticastInlineDelegate OnClientPlayerInventoryChanged; // 0x138(0x10)
	struct FMulticastInlineDelegate OnSelectedCharacterChanged; // 0x148(0x10)
	struct FMulticastInlineDelegate OnChallengeProgressUpdated; // 0x158(0x10)
	struct FMulticastInlineDelegate OnQuestsRemoved; // 0x168(0x10)
	char pad_178[0x48]; // 0x178(0x48)
	struct FMulticastInlineDelegate OnSeasonLevelGained; // 0x1c0(0x10)
	char pad_1D0[0x10]; // 0x1d0(0x10)
	struct UTigerThrallSystem* PlayerThrallSystem; // 0x1e0(0x08)
	struct UTigerCollectibleSystem* PlayerCollectibleSystem; // 0x1e8(0x08)
	char pad_1F0[0x10]; // 0x1f0(0x10)
	struct UObject* ServerCallbacks; // 0x200(0x08)
	char pad_208[0x120]; // 0x208(0x120)
	struct FSharkUserId SharkmobUserId; // 0x328(0x10)
	struct FTigerPersistentPlayerID PersistentPlayerID; // 0x338(0x10)
	char pad_348[0x40]; // 0x348(0x40)
	enum class EShAccountChannel AccountChannel; // 0x388(0x01)
	char pad_389[0x3]; // 0x389(0x03)
	int32_t RankPoints; // 0x38c(0x04)
	char pad_390[0x150]; // 0x390(0x150)
	struct TArray<struct FTigerPersistentPlayerCharacter> CachedPlayerCharacters; // 0x4e0(0x10)
	struct TMap<struct FString, struct UTigerQuestline*> ActiveQuests; // 0x4f0(0x50)
	struct TMap<struct FString, struct UTigerQuestline*> CompletedQuests; // 0x540(0x50)
	struct TMap<struct FString, float> LocationTimeHistory; // 0x590(0x50)
	char pad_5E0[0xb0]; // 0x5e0(0xb0)
	struct TMap<enum class ETigerChallengeCategory, struct FTigerChallengeCategoryMap> Challenges; // 0x690(0x50)
	char pad_6E0[0x20]; // 0x6e0(0x20)

	void UnlockNextSubEntryOfEntry(struct FString InGrimoireEntryId, bool bInRandomize, bool bInForce); // Function Tiger.TigerPersistentPlayerState.UnlockNextSubEntryOfEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x1464960
	void TryLoginAutomatically(struct FTigerLoginQueueToken& InLoginQueueToken, struct UObject* InCallbacks); // Function Tiger.TigerPersistentPlayerState.TryLoginAutomatically // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1464860
	bool TryGetSelectedCharacter(struct FTigerPersistentPlayerCharacter& OutSelectedCharacter); // Function Tiger.TigerPersistentPlayerState.TryGetSelectedCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1464740
	void TransactionalPlayerDataChanged__DelegateSignature(struct FTigerPersistentPlayerTransactionalData& TransactionalPlayerData); // DelegateFunction Tiger.TigerPersistentPlayerState.TransactionalPlayerDataChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void TigerDelegateChallengeProgressUpdated__DelegateSignature(bool bInNewDefinitions); // DelegateFunction Tiger.TigerPersistentPlayerState.TigerDelegateChallengeProgressUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SwitchCharacter(struct FTigerPersistentCharacterID& InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.SwitchCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14646b0
	bool SetCallbackObject(struct UObject* Callbacks); // Function Tiger.TigerPersistentPlayerState.SetCallbackObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1464610
	void Server_UpdatePlatformEntitlementToken(struct FString InPlatformEntitlementToken); // Function Tiger.TigerPersistentPlayerState.Server_UpdatePlatformEntitlementToken // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x1464570
	void Server_UpdatePersistentThralls(); // Function Tiger.TigerPersistentPlayerState.Server_UpdatePersistentThralls // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1464520
	void Server_UpdateOngoingCollectibles(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateOngoingCollectibles // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14644d0
	void Server_UpdateLocationHistory(struct FString InLocationName, float InTimeSpentAtLocation); // Function Tiger.TigerPersistentPlayerState.Server_UpdateLocationHistory // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14643c0
	void Server_UpdateGrimoireSuggestedArticlesData(uint32_t InDay, struct TArray<struct FString> InEntryIds); // Function Tiger.TigerPersistentPlayerState.Server_UpdateGrimoireSuggestedArticlesData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1464290
	void Server_UpdateActiveThrallMissions(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateActiveThrallMissions // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1464240
	void Server_SwitchCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Server_SwitchCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1464190
	void Server_StartNewQuest(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_StartNewQuest // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1464070
	void Server_ResetReadDialogue(); // Function Tiger.TigerPersistentPlayerState.Server_ResetReadDialogue // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1464020
	void Server_ReinitializeDailyChallenges(); // Function Tiger.TigerPersistentPlayerState.Server_ReinitializeDailyChallenges // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13d9b80
	void Server_RegisterGrimoireEntryAsRead(uint32_t InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.Server_RegisterGrimoireEntryAsRead // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1463f20
	void Server_RefreshPremiumCurrencyBalance(); // Function Tiger.TigerPersistentPlayerState.Server_RefreshPremiumCurrencyBalance // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1463ed0
	void Server_MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory); // Function Tiger.TigerPersistentPlayerState.Server_MarkDialogueAsRead // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1463d70
	void Server_ForceCompleteQuestActiveObjectiveSet(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_ForceCompleteQuestActiveObjectiveSet // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1463c50
	void Server_ForceCompleteQuest(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_ForceCompleteQuest // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1463b30
	void Server_DeleteCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Server_DeleteCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1463a80
	void Server_CreateCharacter(struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.Server_CreateCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1463970
	void Server_ClearQuests(); // Function Tiger.TigerPersistentPlayerState.Server_ClearQuests // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1463920
	void Server_ClearQuest(struct FString InQuestLineId, struct FString InQuestId, bool bRemoveFromCompleteQuestsToo); // Function Tiger.TigerPersistentPlayerState.Server_ClearQuest // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14637a0
	void Server_ChangeOutfit(uint64_t InOutfitId); // Function Tiger.TigerPersistentPlayerState.Server_ChangeOutfit // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14636e0
	void Server_BuyStoreEntries(struct FTigerMetaStoreBuyPayload InMetaStoreBuyPayload, struct FString InPlatformEntitlementsToken, int32_t InClientPurchaseId); // Function Tiger.TigerPersistentPlayerState.Server_BuyStoreEntries // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1463570
	void Server_BuyItem(struct FTigerItemId InItemId, struct FTigerItemId InSoftCurrencyId, int32_t InPurchaseId); // Function Tiger.TigerPersistentPlayerState.Server_BuyItem // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1463420
	void SelectCharacter(struct FTigerPersistentCharacterID& InCharacterId); // Function Tiger.TigerPersistentPlayerState.SelectCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1463390
	void RegisterUnlockedGrimoireSubEntriesAsRead(struct FString InGrimoireParentEntryId); // Function Tiger.TigerPersistentPlayerState.RegisterUnlockedGrimoireSubEntriesAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x14632a0
	void RegisterGrimoireEntryAsUnlocked(struct FString InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.RegisterGrimoireEntryAsUnlocked // (Final|Native|Public|BlueprintCallable) // @ game+0x1463170
	void RegisterGrimoireEntryAsRead(struct FString InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.RegisterGrimoireEntryAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x1463040
	void PlayerInventoryChanged__DelegateSignature(struct UTigerPersistentPlayerState* InPersistentPlayerState); // DelegateFunction Tiger.TigerPersistentPlayerState.PlayerInventoryChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void PlayerCharacterChanged__DelegateSignature(struct UTigerPersistentPlayerState* InPersistentPlayerState); // DelegateFunction Tiger.TigerPersistentPlayerState.PlayerCharacterChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OverridePlayerArchetypeForBenchmark(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPersistentPlayerState.OverridePlayerArchetypeForBenchmark // (Final|Native|Public|BlueprintCallable) // @ game+0x1462fc0
	void OnWeeklyChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnWeeklyChallengeValueChanged // (Final|Native|Private) // @ game+0x13f7800
	void OnTestChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnTestChallengeValueChanged // (Final|Native|Private) // @ game+0x13f7800
	void OnSeasonLevelGained__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnSeasonLevelGained__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRewardsLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnRewardsLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_RankPoints(); // Function Tiger.TigerPersistentPlayerState.OnRep_RankPoints // (Final|Native|Private|Const) // @ game+0x1462f60
	void OnRep_PlayerId(); // Function Tiger.TigerPersistentPlayerState.OnRep_PlayerId // (Final|Native|Private) // @ game+0x1462fa0
	void OnRep_DailyChallenges(); // Function Tiger.TigerPersistentPlayerState.OnRep_DailyChallenges // (Final|Native|Private) // @ game+0x1462f80
	void OnRep_AccountChannel(); // Function Tiger.TigerPersistentPlayerState.OnRep_AccountChannel // (Final|Native|Private|Const) // @ game+0x1462f60
	void OnQuestsRemoved__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnQuestsRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPlayerStateReplicatedToPlayerController(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPersistentPlayerState.OnPlayerStateReplicatedToPlayerController // (Final|Native|Private) // @ game+0x1462ed0
	void OnPlayerDataUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnPlayerDataUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPlatformLoginResultReceived(struct FSharkLoginResult InLoginResult); // Function Tiger.TigerPersistentPlayerState.OnPlatformLoginResultReceived // (Final|Native|Private) // @ game+0x1462b60
	void OnMutedStatusChanged__DelegateSignature(struct FTigerMuteInfo& InMuteInfo); // DelegateFunction Tiger.TigerPersistentPlayerState.OnMutedStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnMasteryChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnMasteryChallengeValueChanged // (Final|Native|Private) // @ game+0x13f7800
	void OnLegalDocumentAccepted(enum class ETigerLegalDocumentType InDocumentType); // Function Tiger.TigerPersistentPlayerState.OnLegalDocumentAccepted // (Final|Native|Public|BlueprintCallable) // @ game+0x1462ae0
	void OnInitialised__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnInitialised__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnGetPlayerCharactersMulti__DelegateSignature(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.OnGetPlayerCharactersMulti__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnGetPlayerCharacters__DelegateSignature(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.OnGetPlayerCharacters__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnDailyChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnDailyChallengeValueChanged // (Final|Native|Private) // @ game+0x13f7800
	void OnDailyChallengesInitialized__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnDailyChallengesInitialized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnAllLegalDocumentsAccepted(); // Function Tiger.TigerPersistentPlayerState.OnAllLegalDocumentsAccepted // (Final|Native|Public|BlueprintCallable) // @ game+0x1462ac0
	void LoginWithSharkmobAccount(struct UObject* InCallbacks, struct FTigerLoginQueueToken& InLoginQueueToken, struct FSharkLoginResult& InLoginDetails); // Function Tiger.TigerPersistentPlayerState.LoginWithSharkmobAccount // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14628c0
	bool IsQuestComplete(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.IsQuestComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14627c0
	bool IsQuestActive(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.IsQuestActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14626c0
	bool IsItemInPlayerInventory(struct TSoftClassPtr<UObject>& ItemClassPath); // Function Tiger.TigerPersistentPlayerState.IsItemInPlayerInventory // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14625f0
	bool HasReachedSeasonMaxLevel(); // Function Tiger.TigerPersistentPlayerState.HasReachedSeasonMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14625c0
	bool HasReachedPlayerMaxLevel(); // Function Tiger.TigerPersistentPlayerState.HasReachedPlayerMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1462590
	bool HasLoadedChallenges(); // Function Tiger.TigerPersistentPlayerState.HasLoadedChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1462560
	bool HasLoadedChallengeOfCategory(enum class ETigerChallengeCategory InCategory); // Function Tiger.TigerPersistentPlayerState.HasLoadedChallengeOfCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1462400
	bool HasCurrentSeasonBattlepass(); // Function Tiger.TigerPersistentPlayerState.HasCurrentSeasonBattlepass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14623d0
	bool HasCompletedInitialisation(); // Function Tiger.TigerPersistentPlayerState.HasCompletedInitialisation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14623a0
	void HandlePlatformAccountUpsell(struct UObject* InWorldContextObject, struct FLatentActionInfo InLatentInfo); // Function Tiger.TigerPersistentPlayerState.HandlePlatformAccountUpsell // (Final|Native|Public|BlueprintCallable) // @ game+0x14622b0
	bool GrimoireEntryHasState(struct FString InGrimoireEntryId, enum class ETigerGrimoireEntryState InState); // Function Tiger.TigerPersistentPlayerState.GrimoireEntryHasState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14621c0
	enum class ETigerVersionCheckStatus GetVersionCheckStatus(); // Function Tiger.TigerPersistentPlayerState.GetVersionCheckStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x14621a0
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetTransactionalPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461e50
	struct FSharkUserId GetSharkmobUserId(); // Function Tiger.TigerPersistentPlayerState.GetSharkmobUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1462170
	struct FTigerPersistentPlayerCharacter GetSelectedCharacter(); // Function Tiger.TigerPersistentPlayerState.GetSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1462140
	struct TArray<struct UTigerQuest*> GetQuestsFromQuestlineOrdered(struct FString InQuestLineId, bool InReverseCompletedQuests); // Function Tiger.TigerPersistentPlayerState.GetQuestsFromQuestlineOrdered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1462000
	struct FTigerPersistentPlayerID GetPlayerId(); // Function Tiger.TigerPersistentPlayerState.GetPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461fd0
	struct FTigerPersistentPlayerData GetPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461fa0
	void GetPlayerCharacters(struct FDelegate& InDelegate); // Function Tiger.TigerPersistentPlayerState.GetPlayerCharacters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1461ef0
	enum class EShAccountChannel GetPlayerChannel(); // Function Tiger.TigerPersistentPlayerState.GetPlayerChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461ed0
	enum class ETigerOnlinePrivilegeCheckStatus GetOnlinePrivilegeCheckStatus(); // Function Tiger.TigerPersistentPlayerState.GetOnlinePrivilegeCheckStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1461eb0
	char GetNumCharacterSlots(); // Function Tiger.TigerPersistentPlayerState.GetNumCharacterSlots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461e80
	struct FTigerPersistentPlayerTransactionalData GetMutableTransactionalPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetMutableTransactionalPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1461e50
	enum class ETigerLoginStatus GetLoginStatus(); // Function Tiger.TigerPersistentPlayerState.GetLoginStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1461e30
	int32_t GetInventoryItemCount(struct TSoftClassPtr<UObject>& ItemClassPath); // Function Tiger.TigerPersistentPlayerState.GetInventoryItemCount // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461d60
	struct FTigerSuggestedArticlesData GetGrimoireSuggestedArticlesData(); // Function Tiger.TigerPersistentPlayerState.GetGrimoireSuggestedArticlesData // (Final|Native|Public|BlueprintCallable) // @ game+0x1461c70
	enum class ETigerGrimoireEntryState GetGrimoireEntryState(struct FString InGrimoireEntryId); // Function Tiger.TigerPersistentPlayerState.GetGrimoireEntryState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461bc0
	struct TArray<struct FTigerGrimoireEntryStatusStruct> GetGrimoireEntries(); // Function Tiger.TigerPersistentPlayerState.GetGrimoireEntries // (Final|Native|Public|BlueprintCallable) // @ game+0x1461b40
	void GetCurrentSeasonLevelExperience(float& OutLevelCurrentExperience, float& OutExperienceRequiredBetweenLevels); // Function Tiger.TigerPersistentPlayerState.GetCurrentSeasonLevelExperience // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461a60
	int32_t GetCurrentSeasonLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentSeasonLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461a30
	void GetCurrentPlayerLevelExperience(float& OutLevelCurrentExperience, float& OutExperienceRequiredBetweenLevels); // Function Tiger.TigerPersistentPlayerState.GetCurrentPlayerLevelExperience // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461950
	int32_t GetCurrentPlayerLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentPlayerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461920
	int32_t GetCurrentArchetypeLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentArchetypeLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14618f0
	struct TArray<struct UTigerChallenge*> GetClosestChallengesToComplete(int32_t InNrOfChallenges); // Function Tiger.TigerPersistentPlayerState.GetClosestChallengesToComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461810
	enum class ETigerPowerKitType GetArchetypeType(); // Function Tiger.TigerPersistentPlayerState.GetArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14617e0
	int32_t GetArchetypeLevelByType(enum class ETigerPowerKitType InType); // Function Tiger.TigerPersistentPlayerState.GetArchetypeLevelByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461750
	struct FTigerPersistentArchetypeTransactionalData GetArchetypeDataForCharacterId(struct FTigerPersistentCharacterID& InCharacterId); // Function Tiger.TigerPersistentPlayerState.GetArchetypeDataForCharacterId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14616a0
	struct TArray<struct FString> GetAllQuestlineIdsOrdered(); // Function Tiger.TigerPersistentPlayerState.GetAllQuestlineIdsOrdered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1461620
	struct UTigerQuest* GetActiveQuestWithId(struct FString InQuestLineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.GetActiveQuestWithId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14614a0
	void GetActiveQuestIds(struct TArray<struct FTigerQuestIdentifier>& InOutActiveQuests); // Function Tiger.TigerPersistentPlayerState.GetActiveQuestIds // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14613c0
	bool FindOutfitSetup(struct TSoftClassPtr<UObject>& OutfitClassPath, struct FTigerPersistentOutfitSetup& OutfitSetup); // Function Tiger.TigerPersistentPlayerState.FindOutfitSetup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1461260
	void DeleteCharacter(struct FTigerPersistentCharacterID& InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.DeleteCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14611d0
	void CreateCharacter(struct FTigerPersistentPlayerCharacter& InCharacter); // Function Tiger.TigerPersistentPlayerState.CreateCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14610d0
	void Client_UpdateSeasonConfig(struct FTigerSeasonConfig InSeasonConfig, struct FDateTime InServerTime, bool bInDefer); // Function Tiger.TigerPersistentPlayerState.Client_UpdateSeasonConfig // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x1460f80
	void Client_UpdateRankConfig(struct UTigerRankConfigAsset* InRankConfig); // Function Tiger.TigerPersistentPlayerState.Client_UpdateRankConfig // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1460ef0
	void Client_UpdateEventConfig(struct FTigerEventConfigClientState InEventConfig); // Function Tiger.TigerPersistentPlayerState.Client_UpdateEventConfig // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460db0
	void Client_UpdateChallengeOfCategory(enum class ETigerChallengeCategory InCategory, struct FTigerChallengeTypeID InChallengeStorageID, int32_t InNewValue); // Function Tiger.TigerPersistentPlayerState.Client_UpdateChallengeOfCategory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1460ca0
	void Client_SetMuteStatus(struct FTigerMuteInfo InMuteInfo); // Function Tiger.TigerPersistentPlayerState.Client_SetMuteStatus // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460bf0
	void Client_SeasonLevelGained(); // Function Tiger.TigerPersistentPlayerState.Client_SeasonLevelGained // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1460ba0
	void Client_RefreshPremiumCurrencyBalanceResponse(bool bInSuccess, uint64_t InBalance); // Function Tiger.TigerPersistentPlayerState.Client_RefreshPremiumCurrencyBalanceResponse // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1460ad0
	void Client_PostUpdateChallenge(int32_t InNewValue, struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.Client_PostUpdateChallenge // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1460a00
	void Client_OnTransactionalPlayerDataUpdated(struct FTigerPersistentPlayerTransactionalData TransactionalData); // Function Tiger.TigerPersistentPlayerState.Client_OnTransactionalPlayerDataUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460890
	void Client_OnSeasonProgressUpdated(struct FTigerPersistentPlayerTransactionalData InTransactionalData); // Function Tiger.TigerPersistentPlayerState.Client_OnSeasonProgressUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460720
	void Client_OnPlayerDataUpdated(struct FTigerPersistentPlayerData InPlayerData, struct FTigerPersistentPlayerCardData InUpdatedPlayerCardData, char InEnqueueFlags); // Function Tiger.TigerPersistentPlayerState.Client_OnPlayerDataUpdated // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14605c0
	void Client_OnInitialPlayerDataReceived(); // Function Tiger.TigerPersistentPlayerState.Client_OnInitialPlayerDataReceived // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14605a0
	void Client_OnCharacterUpdated(struct FTigerPersistentPlayerCharacter CharacterInfo); // Function Tiger.TigerPersistentPlayerState.Client_OnCharacterUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14604b0
	void Client_OnBuyStoreEntriesResponse(int32_t InClientPurchaseId, struct FTigerBuyStoreEntryResponsePayload InBuyResponse, struct FDateTime InSeasonStartDate); // Function Tiger.TigerPersistentPlayerState.Client_OnBuyStoreEntriesResponse // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x1460370
	void Client_NewQuestStarted(); // Function Tiger.TigerPersistentPlayerState.Client_NewQuestStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460350
	void Client_NewItemRecievedInInventory(struct TArray<struct FTigerItemId> InPersistentItemIds); // Function Tiger.TigerPersistentPlayerState.Client_NewItemRecievedInInventory // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14602b0
	void Client_NewGrimoireEntryViewed(uint32_t InGrimoireEntryId); // Function Tiger.TigerPersistentPlayerState.Client_NewGrimoireEntryViewed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460220
	void Client_DeleteCharacterResponse(bool bInCharacterWasDeleted, struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Client_DeleteCharacterResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460150
	void Client_CreateCharacterResponse(bool bInCharacterWasCreated, struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.Client_CreateCharacterResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1460000
	void Client_BuyItemResponse(bool bInSuccess, struct FTigerItemId InItemId, struct FString InErrorString, int32_t InPurchaseId); // Function Tiger.TigerPersistentPlayerState.Client_BuyItemResponse // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x145fe80
	void CheckVersionValidity(struct UObject* Callbacks); // Function Tiger.TigerPersistentPlayerState.CheckVersionValidity // (Final|Native|Public|BlueprintCallable) // @ game+0x145fdf0
	void CheckOnlinePrivileges(struct UObject* InCallbacks); // Function Tiger.TigerPersistentPlayerState.CheckOnlinePrivileges // (Final|Native|Public|BlueprintCallable) // @ game+0x145fd60
	void BuyStoreEntries(struct TArray<struct FTigerMetaStoreBuyPayloadElement>& InEntriesToBuy, struct FDelegate& InBuyDelegate); // Function Tiger.TigerPersistentPlayerState.BuyStoreEntries // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x145fc40
	void BuyItemResultDelegate__DelegateSignature(bool bSuccess, struct FTigerItemId& InItemId, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.BuyItemResultDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void BuyItem(struct FTigerItemId& InItemId, struct FTigerItemId& InSoftCurrencyId, struct FDelegate& InDelegate); // Function Tiger.TigerPersistentPlayerState.BuyItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x145fae0
};

// Class Tiger.TigerPingClientData
// Size: 0x90 (Inherited: 0x30)
struct UTigerPingClientData : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct UTigerPingBase* PingClass; // 0x38(0x08)
	struct ATigerPlayerState* OwningPlayerState; // 0x40(0x08)
	struct FTigerPingContext Context; // 0x48(0x10)
	char pad_58[0xc]; // 0x58(0x0c)
	struct FVector WorldLocation; // 0x64(0x0c)
	bool bIsLocalPlayerInterested; // 0x70(0x01)
	char pad_71[0x1f]; // 0x71(0x1f)

	bool IsPlayerInterested(char InPlayerGroupIndex); // Function Tiger.TigerPingClientData.IsPlayerInterested // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469c80
};

// Class Tiger.TigerPingBase
// Size: 0xf0 (Inherited: 0x30)
struct UTigerPingBase : UDataAsset {
	int32_t MaxConcurrentPings; // 0x30(0x04)
	bool bBecomesPermanentOnInterest; // 0x34(0x01)
	bool bInstanceSupportsHover; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	float LifeTimeInSeconds; // 0x38(0x04)
	float MaxDistance; // 0x3c(0x04)
	float MaxActorDistanceFromMarker; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct UTigerPingWorldInstanceUI* WidgetClass; // 0x48(0x08)
	struct TArray<struct UTigerPingBase*> ExclusiveWithPingClasses; // 0x50(0x10)
	struct UTexture2D* Icon; // 0x60(0x08)
	struct UTexture2D* InterestedResponseIcon; // 0x68(0x08)
	struct UTexture2D* NotInterestedResponseIcon; // 0x70(0x08)
	struct FText Name; // 0x78(0x18)
	struct FText Description; // 0x90(0x18)
	struct FText InterestedResponse; // 0xa8(0x18)
	struct FText NotInterestedResponse; // 0xc0(0x18)
	struct UAkAudioEvent* NotificationAudioEvent; // 0xd8(0x08)
	struct UAkAudioEvent* VoiceAudioEvent; // 0xe0(0x08)
	bool bCanBeInCluster; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)

	bool ShouldRemovePing(struct AActor* InContextActor); // Function Tiger.TigerPingBase.ShouldRemovePing // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1469d10
	struct FText GetTooltipName(struct FTigerPingContext& InContext); // Function Tiger.TigerPingBase.GetTooltipName // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1469b70
	struct FTigerPingNotificationUIData GetResponseText(struct FTigerPingContext& InContext, bool bInIsInterested); // Function Tiger.TigerPingBase.GetResponseText // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	struct FTigerPingNotificationUIData GetNotificationUIData(struct FTigerPingContext& InContext); // Function Tiger.TigerPingBase.GetNotificationUIData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	struct FTigerPingIconData GetIconData(struct FTigerPingContext& InContext); // Function Tiger.TigerPingBase.GetIconData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1469ab0
	bool EvaluateWorldActor(struct ATigerPlayerState* InPlayerState, struct FHitResult& InHitResult, struct FTigerPingWorldNetData& OutPingData, struct AActor*& OutOverrideActor); // Function Tiger.TigerPingBase.EvaluateWorldActor // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerPingMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerPingMarkerProxy : UTigerMapMarkerProxy {
	struct UTigerPingClientData* PingData; // 0x68(0x08)
};

// Class Tiger.TigerPingSetupAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerPingSetupAsset : UDataAsset {
	struct UUserWidget* MapMarkerClass; // 0x30(0x08)
	struct UTigerPingWorldInstanceUI* WidgetClass; // 0x38(0x08)
	struct TArray<struct UTigerPingBase*> WorldPingTypes; // 0x40(0x10)
	struct UTigerPingBase* DoublePressPingClass; // 0x50(0x08)
	struct UTigerPingBase* DistanceFallbackPingClass; // 0x58(0x08)
	struct TArray<struct UTigerPingBase*> InGamePingTypes; // 0x60(0x10)
	struct TArray<struct UTigerPingBase*> PingBarkTypes; // 0x70(0x10)
	struct UTigerPingBase* PingBarkDowned; // 0x80(0x08)
	struct UTigerPingBase* PingBarkFullHealth; // 0x88(0x08)
	struct UTigerPingBase* PingBarkNeedHealing; // 0x90(0x08)
	struct UTigerPingBase* PingBarkMasquerade; // 0x98(0x08)
	struct UTigerPingBase* PingInventoryWantsMeleeWeapon; // 0xa0(0x08)
	struct UTigerPingBase* PingInventoryWantsRangedWeapon; // 0xa8(0x08)
	struct UTigerPingBase* PingInventoryWantsItem; // 0xb0(0x08)
	struct UTigerPingBase* PingLocation; // 0xb8(0x08)
	struct UTigerPingBase* PingEnemy; // 0xc0(0x08)
	struct UTigerPingBase* ClosestActorOverrides; // 0xc8(0x08)
};

// Class Tiger.TigerPingControllerComponent
// Size: 0x250 (Inherited: 0xb0)
struct UTigerPingControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnPingUsedInTutorial; // 0xb0(0x10)
	float MaxTraceLength; // 0xc0(0x04)
	float WheelHoldTime; // 0xc4(0x04)
	float DoublePressTimeout; // 0xc8(0x04)
	float PingHeightOffset; // 0xcc(0x04)
	float PingSpamPreventionTime; // 0xd0(0x04)
	struct FSharkTokenBucket InventoryPingBucket; // 0xd4(0x0c)
	struct ATigerPlayerController* OwningController; // 0xe0(0x08)
	struct UTigerPingCoordinator* PingCoordinator; // 0xe8(0x08)
	struct UTigerInWorldIconController* WorldIconController; // 0xf0(0x08)
	struct TArray<struct FTigerPingWrapper> ActivePings; // 0xf8(0x10)
	struct TArray<struct FTigerPingWrapper> ReusablePings; // 0x108(0x10)
	struct TArray<struct UTigerPingClientData*> UnresolvedActors; // 0x118(0x10)
	struct UTigerPingSetupAsset* PingSetup; // 0x128(0x08)
	struct TSoftObjectPtr<UTigerPingSetupAsset> SoftPingSetupPtr; // 0x130(0x28)
	char pad_158[0xe9]; // 0x158(0xe9)
	bool bEnablePingsInTutorial; // 0x241(0x01)
	char pad_242[0x2]; // 0x242(0x02)
	float HitItemSphereRadius; // 0x244(0x04)
	float VehicleHitForwardDot; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)

	bool TryExecuteFocusPingAction(); // Function Tiger.TigerPingControllerComponent.TryExecuteFocusPingAction // (Final|Native|Public|BlueprintCallable) // @ game+0x14748a0
	void SpawnLocalPing(struct FVector InWorldOffset, struct FTigerPingWorldNetData& InPing); // Function Tiger.TigerPingControllerComponent.SpawnLocalPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14746d0
	void Server_SpawnWorldPing(struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.Server_SpawnWorldPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1474450
	void Server_SpawnMapPing(struct UTigerPingBase* InPingClass, struct FVector_NetQuantize InWorldLocation); // Function Tiger.TigerPingControllerComponent.Server_SpawnMapPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1474320
	void Server_SpawnLootBoxItemPing(struct FTigerPingWorldNetData InPingData); // Function Tiger.TigerPingControllerComponent.Server_SpawnLootBoxItemPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1474250
	void Server_RespondToPing(struct FTigerUniquePingId InPingId, bool bInIsInterested); // Function Tiger.TigerPingControllerComponent.Server_RespondToPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473f00
	void Server_PingClosestActorOfType(enum class ETigerClosestActorType InActorType); // Function Tiger.TigerPingControllerComponent.Server_PingClosestActorOfType // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473e50
	void Server_NotificationOnlyPing(struct FTigerPingNotificationNetData InPing); // Function Tiger.TigerPingControllerComponent.Server_NotificationOnlyPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473c90
	void Server_CancelPing(struct FTigerUniquePingId InPingId, bool InShouldDisplayNotification); // Function Tiger.TigerPingControllerComponent.Server_CancelPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473870
	void SendWorldPing(struct FTigerPingWorldNetData& InPingData); // Function Tiger.TigerPingControllerComponent.SendWorldPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1473780
	void SendPingTypeFromCameraLocation(struct UTigerPingBase* InPingClass, bool InCancelInFocusPing); // Function Tiger.TigerPingControllerComponent.SendPingTypeFromCameraLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x14736b0
	void SendNotificationPing(struct FTigerPingNotificationNetData& InPingData); // Function Tiger.TigerPingControllerComponent.SendNotificationPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1473610
	void SendMapPing(struct UTigerPingBase* InPingClass, struct FVector& InWorldLocation); // Function Tiger.TigerPingControllerComponent.SendMapPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1473540
	void SendLootBoxItemPing(struct FTigerPingWorldNetData InItemPingData, struct ATigerLootBox* InLootBox); // Function Tiger.TigerPingControllerComponent.SendLootBoxItemPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1473420
	void PingClosestActorOfType(enum class ETigerClosestActorType InActorType); // Function Tiger.TigerPingControllerComponent.PingClosestActorOfType // (Final|Native|Public|BlueprintCallable) // @ game+0x1473190
	void OnTigerPingUsedInTutorial__DelegateSignature(); // DelegateFunction Tiger.TigerPingControllerComponent.OnTigerPingUsedInTutorial__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	struct TArray<struct FPointOfInterest> GetPointsOfInterestedByDistance(int32_t InMaxCount); // Function Tiger.TigerPingControllerComponent.GetPointsOfInterestedByDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471cc0
	void GetPingWheelItems(struct ATigerPlayerState* InPlayerState, struct TArray<struct FHitResult>& InHitResults, struct TArray<struct FTigerPingWorldNetData>& OutPingWheelItems); // Function Tiger.TigerPingControllerComponent.GetPingWheelItems // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	bool GetPingInfoFromActor(struct FHitResult& InHitResult, struct FTigerPingWorldNetData& OutPingData); // Function Tiger.TigerPingControllerComponent.GetPingInfoFromActor // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1471b60
	void Client_SpawnWorldPing(struct FTigerUniquePingId InPingId, struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.Client_SpawnWorldPing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1471000
	void Client_SilentlyRemovePing(struct FTigerUniquePingId InPingId); // Function Tiger.TigerPingControllerComponent.Client_SilentlyRemovePing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1470f70
	void Client_RespondToPing(struct FTigerUniquePingId InPingId, struct FTigerPingResponse InResponse); // Function Tiger.TigerPingControllerComponent.Client_RespondToPing // (Net|Native|Event|Protected|NetClient) // @ game+0x1470be0
	void Client_NotificationOnlyPing(struct FTigerPingNotificationNetData InPing, char InPlayerGroupIndex); // Function Tiger.TigerPingControllerComponent.Client_NotificationOnlyPing // (Net|Native|Event|Protected|NetClient) // @ game+0x1470710
	void Client_CancelPing(struct FTigerUniquePingId InPingId, bool InShouldDisplayNotification); // Function Tiger.TigerPingControllerComponent.Client_CancelPing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14702f0
	void ClearAllPings(); // Function Tiger.TigerPingControllerComponent.ClearAllPings // (Final|Native|Public|BlueprintCallable) // @ game+0x14701e0
	bool CanSendPings(); // Function Tiger.TigerPingControllerComponent.CanSendPings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1470040
	void CancelPingAtIndex(int32_t InExistingPingIndex, bool InShouldDisplayCancelNotification); // Function Tiger.TigerPingControllerComponent.CancelPingAtIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1470110
};

// Class Tiger.TigerPingCoordinator
// Size: 0x48 (Inherited: 0x28)
struct UTigerPingCoordinator : UObject {
	struct TArray<struct FTigerPingCoordinatorEntry> ActivePings; // 0x28(0x10)
	struct TArray<struct UTigerPingControllerComponent*> GroupMemberPingControllers; // 0x38(0x10)
};

// Class Tiger.TigerPingWorldInstanceUI
// Size: 0x2d0 (Inherited: 0x2c8)
struct UTigerPingWorldInstanceUI : UTigerInWorldWidget {
	struct UTigerPingClientData* PingData; // 0x2c8(0x08)

	void OnPlayerResponse(struct FTigerPingResponse& InResponse); // Function Tiger.TigerPingWorldInstanceUI.OnPlayerResponse // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnPingDataUpdated(struct UTigerPingClientData* InPingData); // Function Tiger.TigerPingWorldInstanceUI.OnPingDataUpdated // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void ApplyIconDataToImage(struct UImage* InImageWidget, struct UTigerUIColorSet* InColorSet); // Function Tiger.TigerPingWorldInstanceUI.ApplyIconDataToImage // (Final|Native|Public|BlueprintCallable) // @ game+0x146fd30
};

// Class Tiger.TigerPingWheelWidget
// Size: 0x2c8 (Inherited: 0x2a8)
struct UTigerPingWheelWidget : UTigerWheelWidget {
	struct TArray<struct FTigerPingWorldNetData> CurrentPingTypeItems; // 0x2a8(0x10)
	struct UTigerPingClientData* CurrentPingResponseData; // 0x2b8(0x08)
	struct UTigerPingControllerComponent* PingController; // 0x2c0(0x08)
};

// Class Tiger.TigerPlatformEntitlementsManager
// Size: 0x70 (Inherited: 0x28)
struct UTigerPlatformEntitlementsManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTigerConsoleService* ConsoleService; // 0x38(0x08)
	char pad_40[0x30]; // 0x40(0x30)

	void HandleOnEntitlementUpdateEvent(); // Function Tiger.TigerPlatformEntitlementsManager.HandleOnEntitlementUpdateEvent // (Final|Native|Private) // @ game+0x1472050
};

// Class Tiger.TigerPlayer
// Size: 0xf30 (Inherited: 0x7a0)
struct ATigerPlayer : ATigerCharacter {
	char pad_7A0[0x8]; // 0x7a0(0x08)
	char PlayerVisibilityToNPC; // 0x7a8(0x01)
	enum class ETigerTraversalState CurrentTraversalState; // 0x7a9(0x01)
	char pad_7AA[0x2]; // 0x7aa(0x02)
	struct FVector GunOffset; // 0x7ac(0x0c)
	struct UTigerSpringArmComponent* SpringArm; // 0x7b8(0x08)
	struct UTigerInventoryComponent* InventoryComponent; // 0x7c0(0x08)
	struct UTigerConsumablesComponent* ConsumablesComponent; // 0x7c8(0x08)
	struct UTigerAudioVisualizationSpawnerComponent* AudioVisualizationComponent; // 0x7d0(0x08)
	char pad_7D8[0x18]; // 0x7d8(0x18)
	struct UShapeComponent* InteractionVolumeComponent; // 0x7f0(0x08)
	struct UShapeComponent* TriggerVolumeComponent; // 0x7f8(0x08)
	struct UPostProcessComponent* FullscreenPostProcessComponent; // 0x800(0x08)
	struct UTigerDistrictComponent* DistrictComponent; // 0x808(0x08)
	struct UTigerCrowdAgentComponent* CrowdAgentComponent; // 0x810(0x08)
	struct UTigerBloodResonanceComponent* BloodResonanceComponent; // 0x818(0x08)
	struct UTigerEmotePlayerComponent* EmotePlayerComponent; // 0x820(0x08)
	struct UTigerUtilityPowerHSenseComponent* HSenseComponent; // 0x828(0x08)
	struct UTigerUtilityPowerHSenseComponent* HSenseClass; // 0x830(0x08)
	struct UTigerUtilityPowerBaseComponent* UtilityPowerComp; // 0x838(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x840(0x08)
	struct UTigerCharCustomizationComponent* CharacterCustomizationComponent; // 0x848(0x08)
	struct UTigerPlayerClanData* PlayerClan; // 0x850(0x08)
	struct TArray<struct UTigerPassiveConfig*> SelectedPerks; // 0x858(0x10)
	struct TMap<struct ATigerProjectile*, int8_t> InitialProjectileReserveCount; // 0x868(0x50)
	int8_t DefaultReservedProjectileCount; // 0x8b8(0x01)
	char pad_8B9[0x3]; // 0x8b9(0x03)
	float LastAirStartTime; // 0x8bc(0x04)
	float LastAirEndTime; // 0x8c0(0x04)
	char pad_8C4[0x4]; // 0x8c4(0x04)
	struct FMulticastInlineDelegate OnGasDamageTaken; // 0x8c8(0x10)
	struct FMulticastInlineDelegate OnSelfReviveBlockedByRedGas; // 0x8d8(0x10)
	struct FMulticastInlineDelegate OnShieldBroken; // 0x8e8(0x10)
	char pad_8F8[0x18]; // 0x8f8(0x18)
	struct FMulticastInlineDelegate OnSilencedChanged; // 0x910(0x10)
	struct FMulticastInlineDelegate OnDiablerizeStateChanged; // 0x920(0x10)
	struct FMulticastInlineDelegate OnReviveStateChanged; // 0x930(0x10)
	struct FMulticastInlineDelegate OnPlayerEvent; // 0x940(0x10)
	struct FMulticastInlineDelegate OnDamageDealt; // 0x950(0x10)
	struct FMulticastInlineDelegate OnHealthChanged; // 0x960(0x10)
	struct FMulticastInlineDelegate OnTraversalAction; // 0x970(0x10)
	struct FMulticastInlineDelegate OnLifeStatusChanged; // 0x980(0x10)
	char pad_990[0x30]; // 0x990(0x30)
	struct FMulticastInlineDelegate OnUpdateArchetypePassiveActiveState; // 0x9c0(0x10)
	struct FMulticastInlineDelegate OnBeginPlay; // 0x9d0(0x10)
	struct FMulticastInlineDelegate OnGroupMemberDied; // 0x9e0(0x10)
	struct FMulticastInlineDelegate OnSelectedPerksUpdated; // 0x9f0(0x10)
	bool bExposePlayersInHeightenedSense; // 0xa00(0x01)
	char pad_A01[0x7]; // 0xa01(0x07)
	struct UTigerPhysicalInteraction* DiablerizeInteractionClass; // 0xa08(0x08)
	struct UTigerPhysicalInteraction* ReviveInteractionClass; // 0xa10(0x08)
	struct FName LoopSectionName; // 0xa18(0x08)
	struct FName EndSectionName; // 0xa20(0x08)
	struct FName InterruptedSectionName; // 0xa28(0x08)
	struct FMulticastInlineDelegate SavedLocationAdded; // 0xa30(0x10)
	struct FMulticastInlineDelegate OnKilledBy; // 0xa40(0x10)
	struct UAkAudioEvent* JumpAudioEvent; // 0xa50(0x08)
	float LeaveGameDestroyDelay; // 0xa58(0x04)
	bool bControllerDisconnected; // 0xa5c(0x01)
	char pad_A5D[0x1]; // 0xa5d(0x01)
	bool bAllowCollisionWithPlayersInElysium; // 0xa5e(0x01)
	char pad_A5F[0x1]; // 0xa5f(0x01)
	struct UTigerPowerKit* PowerKit; // 0xa60(0x08)
	float RecentDamageTaken; // 0xa68(0x04)
	char pad_A6C[0x4]; // 0xa6c(0x04)
	float RecentDamageDecayWaitDuration; // 0xa70(0x04)
	float RecentDamageDecayInitialWaitDuration; // 0xa74(0x04)
	float RecentDamageDecayRate; // 0xa78(0x04)
	char pad_A7C[0x8]; // 0xa7c(0x08)
	float InvulnerabilityDurationDowned; // 0xa84(0x04)
	float InvulnerabilityDurationRegenerated; // 0xa88(0x04)
	float InvulnerabilityDurationRevived; // 0xa8c(0x04)
	char pad_A90[0x10]; // 0xa90(0x10)
	float LocationHistorySaveDistanceSquared; // 0xaa0(0x04)
	float LocationHistoryDurationSeconds; // 0xaa4(0x04)
	bool bIsInvisibleByDodge; // 0xaa8(0x01)
	bool bIsRecoveringFromDodge; // 0xaa9(0x01)
	char pad_AAA[0x6]; // 0xaaa(0x06)
	struct USceneComponent* ProjectileSpawnRootRef; // 0xab0(0x08)
	struct UCameraComponent* Camera; // 0xab8(0x08)
	struct USkeletalMeshComponent* HolsteredWeaponMeshRef; // 0xac0(0x08)
	struct USkeletalMeshComponent* SecondaryHolsteredWeaponMeshRef; // 0xac8(0x08)
	char pad_AD0[0x1]; // 0xad0(0x01)
	struct FTigerCompressedRotation CompressedCameraRotation; // 0xad1(0x02)
	char pad_AD3[0xd]; // 0xad3(0x0d)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper> NpcThatCanSeePlayerServer; // 0xae0(0x10)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> NpcThatCanSeePlayerClient; // 0xaf0(0x10)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> LastNpcsThatCantSeePlayerSent; // 0xb00(0x10)
	char pad_B10[0x8]; // 0xb10(0x08)
	float LastNpcThatCanSeePlayerSyncTime; // 0xb18(0x04)
	char pad_B1C[0x4]; // 0xb1c(0x04)
	struct UTigerPhysicalInteraction* PhysicalInteractionObject; // 0xb20(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> OtherPhysicalInteractionPlayer; // 0xb28(0x08)
	struct TArray<struct UTigerPassiveComponent*> PassiveComponents; // 0xb30(0x10)
	struct TMap<struct UObject*, struct FTigerPassiveWithLogicArray> ClanPassivesMap; // 0xb40(0x50)
	struct FTigerCharacterStatModification CombinedPassiveStatChanges; // 0xb90(0xa0)
	struct UMaterialInterface* InvisibilityMaterial; // 0xc30(0x08)
	struct UMaterialInstanceDynamic* InvisibilityMaterialInstance; // 0xc38(0x08)
	struct UTigerUIEnemyHealthBar* InWorldHealthBar; // 0xc40(0x08)
	float AirTimeRequiredForSuspiciousLanding; // 0xc48(0x04)
	struct FVector GroundBelowDeathLocation; // 0xc4c(0x0c)
	bool bWasDiablerized; // 0xc58(0x01)
	char pad_C59[0x3]; // 0xc59(0x03)
	struct FName DiablerizeAnimationName; // 0xc5c(0x08)
	struct FName GetDiablerizedAnimationName; // 0xc64(0x08)
	struct FName ReviveTeammateAnimationName; // 0xc6c(0x08)
	struct FName GettingRevivedAnimationName; // 0xc74(0x08)
	char pad_C7C[0x4]; // 0xc7c(0x04)
	struct UParticleSystem* EnhancedReviveParticleEffect; // 0xc80(0x08)
	struct UParticleSystemComponent* RegenerateComponent; // 0xc88(0x08)
	struct FName RegenerateSpawnRateParam; // 0xc90(0x08)
	float RegenerateRemainingDownTimeMultiplier; // 0xc98(0x04)
	float EnhancedReviveParticleEffectLength; // 0xc9c(0x04)
	char pad_CA0[0x4]; // 0xca0(0x04)
	float TimeToGetInPositionForPhysicalInteraction; // 0xca4(0x04)
	float ReviveHealthPercentage; // 0xca8(0x04)
	float ReviveHealth; // 0xcac(0x04)
	bool bUsePercentReviveHealth; // 0xcb0(0x01)
	char pad_CB1[0x3]; // 0xcb1(0x03)
	float PhysicalInteractionTimeLeft; // 0xcb4(0x04)
	char pad_CB8[0x8]; // 0xcb8(0x08)
	struct UAkAudioEvent* RevivedAudioEvent; // 0xcc0(0x08)
	struct FName RegeneratingDoneAnimationName; // 0xcc8(0x08)
	float DamageDurationForInterrupt; // 0xcd0(0x04)
	float InterruptDamageLimits[0x2]; // 0xcd4(0x08)
	char EnabledInterruptDamageLimits; // 0xcdc(0x01)
	char pad_CDD[0x3]; // 0xcdd(0x03)
	float DownedRangedDamageTakenMultiplier; // 0xce0(0x04)
	float DownedMeleeDamageTakenMultiplier; // 0xce4(0x04)
	float DownedDisciplineDamageTakenMultiplier; // 0xce8(0x04)
	float DownedRegenRatePerSecond; // 0xcec(0x04)
	float DownedRegenRateReviveMultiplier; // 0xcf0(0x04)
	float DownedBaseHealth; // 0xcf4(0x04)
	float DownedRegenValue; // 0xcf8(0x04)
	char pad_CFC[0x4]; // 0xcfc(0x04)
	bool bDownedRegenShouldTickInsideHolyIncense; // 0xd00(0x01)
	bool bCanRegenerateInsideHolyIncense; // 0xd01(0x01)
	char pad_D02[0x2]; // 0xd02(0x02)
	float EffectUpdateTimeAfterInsideHolyIncense; // 0xd04(0x04)
	float HardLandingSpeed; // 0xd08(0x04)
	int32_t OverlappingSuspiciousGuardVolumeCount; // 0xd0c(0x04)
	int32_t OverlappingThreatGuardVolumeCount; // 0xd10(0x04)
	int32_t PlayerStateId; // 0xd14(0x04)
	char pad_D18[0x38]; // 0xd18(0x38)
	float IsInCloseQuartersCombatCooldownTime; // 0xd50(0x04)
	float EnemyOutlineDistanceSquared; // 0xd54(0x04)
	float EnemyOutlineCombatDistanceSquared; // 0xd58(0x04)
	float ApproximateDownedHeightOffset; // 0xd5c(0x04)
	char pad_D60[0x18]; // 0xd60(0x18)
	struct UAkAudioEvent* FallStartedAudioEvent; // 0xd78(0x08)
	struct UAkAudioEvent* FallEndedAudioEvent; // 0xd80(0x08)
	struct UAkAudioEvent* HitEnemyAudioEvent; // 0xd88(0x08)
	struct UAkAudioEvent* HitEnemyHeadAudioEvent; // 0xd90(0x08)
	struct UAkAudioEvent* ExtraHealthHitAudioEvent; // 0xd98(0x08)
	struct UAkAudioEvent* VentrueClanBuffHitAudioEvent; // 0xda0(0x08)
	struct UAkAudioEvent* PickUpRangedWeaponAudioEvent; // 0xda8(0x08)
	struct UAkAudioEvent* PickUpMeleeWeaponAudioEvent; // 0xdb0(0x08)
	struct UAkAudioEvent* PickUpAmmoAudioEvent; // 0xdb8(0x08)
	struct UAkAudioEvent* PickUpConsumableAudioEvent; // 0xdc0(0x08)
	struct UAkAudioEvent* PickUpCollectibleAudioEvent; // 0xdc8(0x08)
	struct UAkAudioEvent* StartCrouchAudioEvent; // 0xdd0(0x08)
	struct UAkAudioEvent* EndCrouchAudioEvent; // 0xdd8(0x08)
	struct UAkAudioEvent* HalfHealthBreakAudioEvent; // 0xde0(0x08)
	struct UTigerPhysicalInteraction* PhysicalInteractionClass; // 0xde8(0x08)
	struct TWeakObjectPtr<struct ATigerJudge> JudgeFeedTarget; // 0xdf0(0x08)
	float JudgeFeedTimeSeconds; // 0xdf8(0x04)
	char pad_DFC[0x4]; // 0xdfc(0x04)
	struct TArray<struct FName> RangedHitMontageNames; // 0xe00(0x10)
	struct FName TransitionParameterName; // 0xe10(0x08)
	struct UStaticMeshComponent* TempProp; // 0xe18(0x08)
	struct TSet<struct ATigerCharacter*> CharmedCharacters; // 0xe20(0x50)
	bool bIsDowned; // 0xe70(0x01)
	char pad_E71[0x4f]; // 0xe71(0x4f)
	bool bIsInGhostMode; // 0xec0(0x01)
	char pad_EC1[0x3f]; // 0xec1(0x3f)
	bool bIsScouted; // 0xf00(0x01)
	bool bIsInAssaultedArea; // 0xf01(0x01)
	char pad_F02[0x17]; // 0xf02(0x17)
	bool bShouldRestrictOffensiveActionsInElysium; // 0xf19(0x01)
	char pad_F1A[0x16]; // 0xf1a(0x16)

	float UpdateTimeSpentAtLocation(struct FString InLocationName, float InSecondsToAdd); // Function Tiger.TigerPlayer.UpdateTimeSpentAtLocation // (Final|Native|Public) // @ game+0x14748d0
	void UpdateScoutedMeshVisiblity(float InVisibility); // Function Tiger.TigerPlayer.UpdateScoutedMeshVisiblity // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void UpdateHuntingKnifeEffectParameters(float StrengthFromDistance, float StrengthFromKillings); // Function Tiger.TigerPlayer.UpdateHuntingKnifeEffectParameters // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void UpdateHolyIncenseEffect(float InDeltaTime); // Function Tiger.TigerPlayer.UpdateHolyIncenseEffect // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x184a280
	void UpdateHolyIncenseAudio(); // Function Tiger.TigerPlayer.UpdateHolyIncenseAudio // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x184a280
	void UpdateArchetypePassiveActiveState(); // Function Tiger.TigerPlayer.UpdateArchetypePassiveActiveState // (Final|Native|Public|BlueprintCallable) // @ game+0x14711d0
	void TriggerPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerPlayer.TriggerPlayerEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x14747d0
	void ShowUIFX(); // Function Tiger.TigerPlayer.ShowUIFX // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool ShouldUseFootIk(); // Function Tiger.TigerPlayer.ShouldUseFootIk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14746b0
	bool ShouldShowRecentDamage(); // Function Tiger.TigerPlayer.ShouldShowRecentDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474690
	void SetSelectedPerkInSlot(struct UTigerPerkItem* InPerkItem, int32_t InSlot); // Function Tiger.TigerPlayer.SetSelectedPerkInSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x14745c0
	void SetDebugAppearanceItemById(struct FString InDatabaseId); // Function Tiger.TigerPlayer.SetDebugAppearanceItemById // (Final|Native|Public|BlueprintCallable) // @ game+0x13bc230
	void SetDebugAppearance(struct FString AppearanceText); // Function Tiger.TigerPlayer.SetDebugAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x13bc230
	void Server_UpdateCameraRotation(struct FTigerCompressedRotation CompressedRotation); // Function Tiger.TigerPlayer.Server_UpdateCameraRotation // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1474520
	void Server_SetSelectedPerkInSlot(uint64_t InPerkItemID, int32_t InSlot); // Function Tiger.TigerPlayer.Server_SetSelectedPerkInSlot // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1474180
	void Server_SetDebugCharacterData(struct FString ClanText, int32_t PowerKitIndex, struct FString GenderText); // Function Tiger.TigerPlayer.Server_SetDebugCharacterData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1474020
	void Server_PickUpItemFromCluster(struct ATigerItemCluster* InItemCluster, uint32_t InItemClusterUID); // Function Tiger.TigerPlayer.Server_PickUpItemFromCluster // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1473d50
	void Server_GetItemFromLootUI(struct ATigerLootBox* LootBox, struct UTigerItemAsset* Item, int32_t Count, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerPlayer.Server_GetItemFromLootUI // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1473af0
	void Server_Cheat_Walk(); // Function Tiger.TigerPlayer.Server_Cheat_Walk // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473aa0
	void Server_Cheat_Ghost(bool bForce); // Function Tiger.TigerPlayer.Server_Cheat_Ghost // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14739e0
	void Server_Cheat_Fly(); // Function Tiger.TigerPlayer.Server_Cheat_Fly // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473990
	void Server_AbortMeleeAnimation(); // Function Tiger.TigerPlayer.Server_AbortMeleeAnimation // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1473820
	void SendDistanceAchievementData(); // Function Tiger.TigerPlayer.SendDistanceAchievementData // (Final|Native|Protected) // @ game+0x1473400
	void RemoveNPCThatLostSightOfPlayerFromList(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerPlayer.RemoveNPCThatLostSightOfPlayerFromList // (Final|Native|Public|BlueprintCallable) // @ game+0x1473370
	void PlayVentrueClanBuffHitAudio(); // Function Tiger.TigerPlayer.PlayVentrueClanBuffHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x1473350
	void PlayHitAudio(bool bInWasHeadshot, bool bInInEffectiveRange, struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerPlayer.PlayHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x1473230
	void PlayExtraHealthHitAudio(); // Function Tiger.TigerPlayer.PlayExtraHealthHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x1473210
	void OnWallJump(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnWallJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnWallGrindStarted(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnWallGrindStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnWallGrindEnded(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnWallGrindEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnTigerMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class ETigerMovementMode PrevCustomMode, enum class EMovementMode NewMovementMode, enum class ETigerMovementMode NewCustomMode); // Function Tiger.TigerPlayer.OnTigerMovementModeChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnSuperIsReady(); // Function Tiger.TigerPlayer.OnSuperIsReady // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStoppedBeingGroupMember(); // Function Tiger.TigerPlayer.OnStoppedBeingGroupMember // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStoppedAimingCameraTransition(); // Function Tiger.TigerPlayer.OnStoppedAimingCameraTransition // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStartedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnStartedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStartedAimingCameraTransition(); // Function Tiger.TigerPlayer.OnStartedAimingCameraTransition // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnSlidingStarted(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnSlidingStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnSlidingEnded(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnSlidingEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnSlideJump(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnSlideJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnShieldDepleted(struct ATigerPlayer* InInstigator); // Function Tiger.TigerPlayer.OnShieldDepleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnRestart(); // Function Tiger.TigerPlayer.OnRestart // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnRep_TraversalState(); // Function Tiger.TigerPlayer.OnRep_TraversalState // (Final|Native|Public) // @ game+0x1473170
	void OnRep_PowerKit(); // Function Tiger.TigerPlayer.OnRep_PowerKit // (Native|Event|Public|BlueprintEvent) // @ game+0x1473150
	void OnRep_PlayerClan(); // Function Tiger.TigerPlayer.OnRep_PlayerClan // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnRep_GotDowned(bool bWasDowned); // Function Tiger.TigerPlayer.OnRep_GotDowned // (Final|Native|Protected) // @ game+0x14730c0
	void OnRep_EnteredGhostMode(bool bWasInGhostMode); // Function Tiger.TigerPlayer.OnRep_EnteredGhostMode // (Final|Native|Protected) // @ game+0x139d430
	void OnRainAmountSet(float RainAmount); // Function Tiger.TigerPlayer.OnRainAmountSet // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnNoLongerScouted(); // Function Tiger.TigerPlayer.OnNoLongerScouted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnModEquipped(); // Function Tiger.TigerPlayer.OnModEquipped // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerPlayer.OnMatchStateChanged // (Final|Native|Public) // @ game+0x1472ff0
	void OnLocalSprintStarted(); // Function Tiger.TigerPlayer.OnLocalSprintStarted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnLocalSprintEnded(); // Function Tiger.TigerPlayer.OnLocalSprintEnded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnLocalExitedIndoor(); // Function Tiger.TigerPlayer.OnLocalExitedIndoor // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnLocalEnteredIndoor(); // Function Tiger.TigerPlayer.OnLocalEnteredIndoor // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnInterruptedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnInterruptedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnHardLanding(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnHardLanding // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnGotScouted(); // Function Tiger.TigerPlayer.OnGotScouted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnGotPlayerState(); // Function Tiger.TigerPlayer.OnGotPlayerState // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGotHitForAudio(struct FName& InSurfaceForAudio); // Function Tiger.TigerPlayer.OnGotHitForAudio // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnGoneBelowHalfHealth(); // Function Tiger.TigerPlayer.OnGoneBelowHalfHealth // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFinishedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnFinishedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnExtraHealthDepleted(); // Function Tiger.TigerPlayer.OnExtraHealthDepleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnDoubleJump(struct FVector& Direction); // Function Tiger.TigerPlayer.OnDoubleJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnDodgeRecovery(bool IsControllingPlayer, struct FVector_NetQuantizeNormal& LaunchDirection, char DodgeStage); // Function Tiger.TigerPlayer.OnDodgeRecovery // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnDiablerizedFinished(); // Function Tiger.TigerPlayer.OnDiablerizedFinished // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDamageTaken(float DamageTaken, struct AActor* DamageInstigator); // Function Tiger.TigerPlayer.OnDamageTaken // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnControllerDisconnected(); // Function Tiger.TigerPlayer.OnControllerDisconnected // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnClimbStarted(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnClimbStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnClimbEnded(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnClimbEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnBecameSpectator(); // Function Tiger.TigerPlayer.OnBecameSpectator // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBecameGroupMember(); // Function Tiger.TigerPlayer.OnBecameGroupMember // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnAboutToBeHitByDisplacement(); // Function Tiger.TigerPlayer.OnAboutToBeHitByDisplacement // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_StopJudgeFeedAnimation(); // Function Tiger.TigerPlayer.Multicast_StopJudgeFeedAnimation // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1472fd0
	void Multicast_ShieldDepleted(struct ATigerPlayer* InInstigator); // Function Tiger.TigerPlayer.Multicast_ShieldDepleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1472f40
	void Multicast_SetupForPhysicalInteraction(struct UTigerPhysicalInteraction* InSetupPhysicalInteractionClass, struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.Multicast_SetupForPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1472e70
	void Multicast_SetCharacterData(struct UTigerPlayerClanData* InNewClan, struct UTigerPowerKit* InNewPowerKit, struct TArray<struct UTigerPassiveConfig*> InNewPerks); // Function Tiger.TigerPlayer.Multicast_SetCharacterData // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1472d40
	void Multicast_RespawnPlayerWithTransform(struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerPlayer.Multicast_RespawnPlayerWithTransform // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1472c60
	void Multicast_RespawnPlayer(); // Function Tiger.TigerPlayer.Multicast_RespawnPlayer // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1472c40
	void Multicast_PlayJudgeFeedAnimation(); // Function Tiger.TigerPlayer.Multicast_PlayJudgeFeedAnimation // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1472b00
	void Multicast_PlayerDowned(char LastHitYawCompressed, char ActorYaw, bool bUseStaticDownEntryAnimation); // Function Tiger.TigerPlayer.Multicast_PlayerDowned // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1472b20
	void Multicast_OnSuccessfulPhysicalInteraction(bool bWasTargetPlayer); // Function Tiger.TigerPlayer.Multicast_OnSuccessfulPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1472a70
	void Multicast_OnRegenerationDone(); // Function Tiger.TigerPlayer.Multicast_OnRegenerationDone // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1472a50
	void Multicast_OnItemPickedUp(struct UTigerItemAsset* InItemAsset); // Function Tiger.TigerPlayer.Multicast_OnItemPickedUp // (Net|Native|Event|NetMulticast|Public) // @ game+0x14729c0
	void Multicast_OnDamageTaken(float DamageAmount, struct AActor* DamageInstigator); // Function Tiger.TigerPlayer.Multicast_OnDamageTaken // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14728f0
	void Multicast_InterruptPhysicalInteraction(); // Function Tiger.TigerPlayer.Multicast_InterruptPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14728d0
	void Multicast_GuardBreak(); // Function Tiger.TigerPlayer.Multicast_GuardBreak // (Net|Native|Event|NetMulticast|Public) // @ game+0x14728b0
	void Multicast_ExtraHealthDepleted(); // Function Tiger.TigerPlayer.Multicast_ExtraHealthDepleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1472890
	void Multicast_ApplyWeaponVisibility(struct UTigerWeapon* WeaponClassToShow); // Function Tiger.TigerPlayer.Multicast_ApplyWeaponVisibility // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1472800
	bool LocalValidateItemPickupFromLootUI(struct ATigerLootBox* LootBox, struct UTigerItemAsset* Item, int32_t Count); // Function Tiger.TigerPlayer.LocalValidateItemPickupFromLootUI // (Final|Native|Public|BlueprintCallable) // @ game+0x14726f0
	void LocalPlayerTick(float InDeltaSeconds); // Function Tiger.TigerPlayer.LocalPlayerTick // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsPlayingReviveAnim(bool bInIsTarget); // Function Tiger.TigerPlayer.IsPlayingReviveAnim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472650
	bool IsInPhysicalInteraction(); // Function Tiger.TigerPlayer.IsInPhysicalInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472600
	bool IsInInvulnerableState(); // Function Tiger.TigerPlayer.IsInInvulnerableState // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14725d0
	bool IsInGhostMode(); // Function Tiger.TigerPlayer.IsInGhostMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14725b0
	bool IsIndoor(); // Function Tiger.TigerPlayer.IsIndoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472630
	bool IsInDialogueInteraction(); // Function Tiger.TigerPlayer.IsInDialogueInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472580
	bool IsGroupMember(struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.IsGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14724e0
	bool IsGettingDiablerized(); // Function Tiger.TigerPlayer.IsGettingDiablerized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14724b0
	bool IsFeedingOnJudge(); // Function Tiger.TigerPlayer.IsFeedingOnJudge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472480
	bool IsCharming(struct ATigerCharacter* Character); // Function Tiger.TigerPlayer.IsCharming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14723e0
	bool IsBeingRevived(); // Function Tiger.TigerPlayer.IsBeingRevived // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14723b0
	void IncrementShieldShaderCounter(); // Function Tiger.TigerPlayer.IncrementShieldShaderCounter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void HideUIFX(); // Function Tiger.TigerPlayer.HideUIFX // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool HaveEnhancedReviveSpeed(); // Function Tiger.TigerPlayer.HaveEnhancedReviveSpeed // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472380
	bool HasRecentlyLanded(float WithinSeconds, float MinimumAirTime); // Function Tiger.TigerPlayer.HasRecentlyLanded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14722a0
	bool HasPassiveByDataAsset(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.HasPassiveByDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472200
	bool HasPassive(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.HasPassive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472130
	bool HasMaxKindredCharmCount(); // Function Tiger.TigerPlayer.HasMaxKindredCharmCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472100
	bool HasBeenInAirFor(float MinimumAirTime); // Function Tiger.TigerPlayer.HasBeenInAirFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1472070
	void HandleAppearanceChange(); // Function Tiger.TigerPlayer.HandleAppearanceChange // (Final|Native|Protected) // @ game+0x1472030
	void GroupMemberDied(); // Function Tiger.TigerPlayer.GroupMemberDied // (Final|Native|Public|BlueprintCallable) // @ game+0x1472010
	float GetTimeInAir(); // Function Tiger.TigerPlayer.GetTimeInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471f90
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerPlayer.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471f60
	struct ATigerPlayerController* GetTigerPlayerController(); // Function Tiger.TigerPlayer.GetTigerPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471f30
	float GetRemainingDownedTime(bool InIgnoreRevive); // Function Tiger.TigerPlayer.GetRemainingDownedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471e90
	struct UActorComponent* GetPassiveLogicByDataAsset(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.GetPassiveLogicByDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471a80
	struct UActorComponent* GetPassiveLogic(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.GetPassiveLogic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471970
	int32_t GetNumPerkSlots(); // Function Tiger.TigerPlayer.GetNumPerkSlots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471940
	float GetJudgeFeedProgress(); // Function Tiger.TigerPlayer.GetJudgeFeedProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471910
	int8_t GetInitialProjectileReserveCountForClass(struct ATigerProjectile* InProjectileClass); // Function Tiger.TigerPlayer.GetInitialProjectileReserveCountForClass // (Final|Native|Public|Const) // @ game+0x1471870
	struct FTigerInventoryStats GetCharacterInventoryStats(); // Function Tiger.TigerPlayer.GetCharacterInventoryStats // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471830
	void GetAllPerkDataForCurrentArchetype(struct TMap<struct UTigerPerkItem*, enum class ETigerArchetypePerkState>& OutPerkItems); // Function Tiger.TigerPlayer.GetAllPerkDataForCurrentArchetype // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14716f0
	void GetAllPerkDataForArchetype(enum class ETigerPowerKitType InPowerkitType, struct TMap<struct UTigerPerkItem*, enum class ETigerArchetypePerkState>& OutPerkItems); // Function Tiger.TigerPlayer.GetAllPerkDataForArchetype // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471570
	void EnableGhostMode(bool bGhostMode, bool bForce); // Function Tiger.TigerPlayer.EnableGhostMode // (Final|Native|Public|BlueprintCallable) // @ game+0x14714a0
	bool DownedRegenShouldTickInsideHolyIncense(); // Function Tiger.TigerPlayer.DownedRegenShouldTickInsideHolyIncense // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471480
	bool DiedHighAboveGround(); // Function Tiger.TigerPlayer.DiedHighAboveGround // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1471420
	void DecrementShieldShaderCounter(); // Function Tiger.TigerPlayer.DecrementShieldShaderCounter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void DebugSetSelectedPerkInSlot(struct FString InPerkItemName, int32_t InSlot); // Function Tiger.TigerPlayer.DebugSetSelectedPerkInSlot // (Final|Exec|Native|Public) // @ game+0x14712a0
	void Debug_Multicast_SendDummyData(struct TArray<int8_t> Data); // Function Tiger.TigerPlayer.Debug_Multicast_SendDummyData // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1471380
	void DeactivateHeightenedSenses(); // Function Tiger.TigerPlayer.DeactivateHeightenedSenses // (Final|Native|Public|BlueprintCallable) // @ game+0x1471280
	void Client_UpdateKindredCharmCount(int32_t InKindredCharmCount); // Function Tiger.TigerPlayer.Client_UpdateKindredCharmCount // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14711f0
	void Client_UpdateArchetypePassiveActiveState(); // Function Tiger.TigerPlayer.Client_UpdateArchetypePassiveActiveState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14711d0
	void Client_SyncNpcsThatCanSeePlayer(struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> InNpcsThatCanSeePlayer, char InPlayerVisibilityToNpc); // Function Tiger.TigerPlayer.Client_SyncNpcsThatCanSeePlayer // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14710f0
	void Client_SetVentrueOnePassiveActiveState(bool bInActive); // Function Tiger.TigerPlayer.Client_SetVentrueOnePassiveActiveState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470d40
	void Client_SetupForRevive(struct ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing); // Function Tiger.TigerPlayer.Client_SetupForRevive // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1470ea0
	void Client_SetupForDiablerize(struct ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing); // Function Tiger.TigerPlayer.Client_SetupForDiablerize // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1470dd0
	void Client_SetAsScouted(float Time); // Function Tiger.TigerPlayer.Client_SetAsScouted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470cc0
	void Client_RemoveBestialTracking(struct APlayerState* Player); // Function Tiger.TigerPlayer.Client_RemoveBestialTracking // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470b50
	void Client_PostGunSound(struct UAkAudioEvent* InAudioEvent, struct FVector InSoundLocation); // Function Tiger.TigerPlayer.Client_PostGunSound // (Net|Native|Event|Public|HasDefaults|NetClient) // @ game+0x1470a80
	void Client_PlayerDowned(char LastHitYawCompressed, char ActorYaw, bool bUseStaticDownEntryAnimation); // Function Tiger.TigerPlayer.Client_PlayerDowned // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1470960
	void Client_OnTakeDamage(float NewHealth, float TotalDamageTaken, struct FDamageEvent DamageEvent, struct AActor* DamageCauser); // Function Tiger.TigerPlayer.Client_OnTakeDamage // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14707f0
	void Client_KilledNpc(struct ATigerNPC* InNpc); // Function Tiger.TigerPlayer.Client_KilledNpc // (Net|Native|Event|Public|NetClient) // @ game+0x1470680
	void Client_InterruptPhysicalInteraction(); // Function Tiger.TigerPlayer.Client_InterruptPhysicalInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470660
	void Client_InitialBestialTrackingData(struct APlayerState* Player, struct TArray<struct FTigerPlayerSavedLocation> Locations); // Function Tiger.TigerPlayer.Client_InitialBestialTrackingData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470580
	void Client_HitPlayerGoneBelowHalfHealth(); // Function Tiger.TigerPlayer.Client_HitPlayerGoneBelowHalfHealth // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470560
	void Client_GuardBreak(); // Function Tiger.TigerPlayer.Client_GuardBreak // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470540
	void Client_GoneBelowHalfHealth(); // Function Tiger.TigerPlayer.Client_GoneBelowHalfHealth // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470520
	void Client_GainedSeasonExperience(enum class ETigerPlayerEvent InEvent, int32_t InReceivedExperience, int32_t InExperienceGained, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerPlayer.Client_GainedSeasonExperience // (Net|NetReliableNative|Event|Protected|NetClient|Const) // @ game+0x14703c0
	void Client_AddBestialTrackingData(struct APlayerState* Player, struct FTigerPlayerSavedLocation Location); // Function Tiger.TigerPlayer.Client_AddBestialTrackingData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470220
	void Client_AboutToBeHitByDisplacement(); // Function Tiger.TigerPlayer.Client_AboutToBeHitByDisplacement // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1470200
	bool CanUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerPlayer.CanUseConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1470070
	bool CanNPCSeePlayer(struct ATigerBaseNPC* TigerNPC, bool bIgnoreInvisibility); // Function Tiger.TigerPlayer.CanNPCSeePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x146ff70
	bool CanEmote(); // Function Tiger.TigerPlayer.CanEmote // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146ff40
	bool CanBeRevivedBy(struct ATigerPlayer* InReviver); // Function Tiger.TigerPlayer.CanBeRevivedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146fea0
	bool CanBeDiablerizedBy(struct ATigerPlayer* InDiablerist); // Function Tiger.TigerPlayer.CanBeDiablerizedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146fe00
	void AddNPCThatSawPlayerToList(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerPlayer.AddNPCThatSawPlayerToList // (Final|Native|Public|BlueprintCallable) // @ game+0x146fca0
	void ActivateHuntingKnifeEffect(bool bActivate); // Function Tiger.TigerPlayer.ActivateHuntingKnifeEffect // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void ActivateHeightenedSenses(); // Function Tiger.TigerPlayer.ActivateHeightenedSenses // (Final|Native|Public|BlueprintCallable) // @ game+0x146fc80
};

// Class Tiger.TigerActionBuffer
// Size: 0xb0 (Inherited: 0x28)
struct UTigerActionBuffer : UObject {
	float BufferTimes[0x11]; // 0x28(0x44)
	char MaxNumberOfBufferedActions; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct TArray<struct UTigerBufferedAction*> BufferedActions; // 0x70(0x10)
	struct TArray<struct UTigerBufferedAction*> QueuedActions; // 0x80(0x10)
	struct TWeakObjectPtr<struct ATigerPlayerController> Owner; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerPlayerAnimInstance
// Size: 0x8d0 (Inherited: 0x3c0)
struct UTigerPlayerAnimInstance : UTigerAnimInstance {
	struct UAnimMontage* CurrentDownedMontage; // 0x3b8(0x08)
	struct FTigerHandIkWallTraceData HandIkTraceDataWhenWallHanging; // 0x3c0(0x58)
	struct TArray<struct FTigerAnimMetaData> CurrentMontageMetaData; // 0x418(0x10)
	struct TArray<struct UAnimMetaData*> CurrentAnimNodeMetaData; // 0x428(0x10)
	struct TArray<struct UAnimMetaData*> CurrentMetaDataFromProxy; // 0x438(0x10)
	struct UCurveFloat* CurrentTurnStartCurve; // 0x448(0x08)
	bool bIsEmoting; // 0x450(0x01)
	bool bIsJumping; // 0x451(0x01)
	bool bIsCrouching; // 0x452(0x01)
	bool bIsClimbing; // 0x453(0x01)
	bool bIsFalling; // 0x454(0x01)
	bool bIsSliding; // 0x455(0x01)
	bool bIsSprinting; // 0x456(0x01)
	bool bIsLedgeGrabbing; // 0x457(0x01)
	bool bWasSprintingWhenStartingJump; // 0x458(0x01)
	float SprintMultiplier; // 0x45c(0x04)
	float ClimbPitch; // 0x460(0x04)
	bool bWasLastLandingHard; // 0x464(0x01)
	bool bMeleeSwingRecoveryHasDisabledRootMotion; // 0x465(0x01)
	bool bIsOnGroundDuringAerialAttack; // 0x466(0x01)
	float Acceleration; // 0x468(0x04)
	float FloorHeightSensitivty; // 0x46c(0x04)
	bool bIsProbablyTouchingFloor; // 0x474(0x01)
	bool bHasVanishBuff; // 0x475(0x01)
	bool bIsInCombat; // 0x476(0x01)
	bool bIsDowned; // 0x477(0x01)
	bool bIsInWallJump; // 0x478(0x01)
	bool bWallJumpIsAvailable; // 0x479(0x01)
	bool bWallJumpWasAvailable; // 0x47a(0x01)
	enum class ETigerDisciplinesEnum ActiveMontageDisciplineType; // 0x47b(0x01)
	bool bAllowRotationLerpDuringDisciplineMontage; // 0x47c(0x01)
	char pad_47D[0x3]; // 0x47d(0x03)
	int32_t CurrentJumpCount; // 0x480(0x04)
	struct FName DownedMontageNames[0x4]; // 0x484(0x20)
	struct FName StaticEntryToDownedMontageName; // 0x4a4(0x08)
	enum class ESharkFourWayDirection AirDashDirection; // 0x4ac(0x01)
	enum class ESharkFourWayDirection WallJumpDirection; // 0x4ad(0x01)
	enum class ESharkFourWayDirection WallJumpAnticipationDirection; // 0x4ae(0x01)
	char pad_4AF[0x1]; // 0x4af(0x01)
	float WallGrindRotationFromWallInDegrees; // 0x4b0(0x04)
	float CameraRelativeWallJumpCosineAngle; // 0x4b4(0x04)
	float WallJumpPlayerFacingYaw; // 0x4b8(0x04)
	float AirDashAngleInDegrees; // 0x4bc(0x04)
	enum class ETigerWallJumpAnimationState WallJumpAnimationState; // 0x4c0(0x01)
	bool bIsInTurnStart; // 0x4c1(0x01)
	bool bTurnStartIsOnCooldown; // 0x4c2(0x01)
	bool bAdjustClimbSpeedByAnimation; // 0x4c3(0x01)
	float SurfaceCompensationInterpSpeed; // 0x4c4(0x04)
	float SurfaceCompensationPitch; // 0x4c8(0x04)
	float SurfaceCompensationRoll; // 0x4cc(0x04)
	int32_t CurrentLodLevel; // 0x4d0(0x04)
	bool bIsFeeding; // 0x4d4(0x01)
	char pad_4D5[0x3]; // 0x4d5(0x03)
	float VelocityFrontBack; // 0x4d8(0x04)
	float VelocityLeftRight; // 0x4dc(0x04)
	float VelocityUpDown; // 0x4e0(0x04)
	float DirectionHor; // 0x4e4(0x04)
	float DirectionVer; // 0x4e8(0x04)
	bool bIsStandingOnGround; // 0x4ec(0x01)
	bool bIsMoving; // 0x4ed(0x01)
	bool bIsMovingOnGround; // 0x4ee(0x01)
	bool bIsInLowVault; // 0x4ef(0x01)
	bool bIsInTurnStartMetaData; // 0x4f0(0x01)
	bool bAllowSprintToRun; // 0x4f1(0x01)
	char pad_4F2[0x2]; // 0x4f2(0x02)
	float TimeSinceLastPlayerInput; // 0x4f4(0x04)
	float TimeSinceLastJump; // 0x4f8(0x04)
	float SmoothSpeed; // 0x4fc(0x04)
	float SmoothSpeedSlow; // 0x500(0x04)
	struct FRotator CurrentCameraWorldRotation; // 0x504(0x0c)
	char pad_510[0xc]; // 0x510(0x0c)
	struct FRotator CameraDeltaRotation; // 0x51c(0x0c)
	float SlideAngle; // 0x528(0x04)
	float StartAngle; // 0x52c(0x04)
	float CameraYawDeltaSlideSlow; // 0x530(0x04)
	float RootBoneDeltaSmoother; // 0x534(0x04)
	float YawDelta; // 0x538(0x04)
	float YawDeltaSmooth; // 0x53c(0x04)
	char pad_540[0xc]; // 0x540(0x0c)
	float LeanIntensityStrength; // 0x54c(0x04)
	float LeanAngleMin; // 0x550(0x04)
	float LeanAngleMax; // 0x554(0x04)
	float ActivateVelocityLeanBlendFloat; // 0x558(0x04)
	struct FVector CurrentPlayerIntendedVelocity; // 0x55c(0x0c)
	char pad_568[0x18]; // 0x568(0x18)
	struct FVector StrafeLeanRootRotCurrent; // 0x580(0x0c)
	struct FVector StrafeLeanRootTransCurrent; // 0x58c(0x0c)
	struct FRotator StrafeLeanSpineCurrent; // 0x598(0x0c)
	struct FRotator StrafeLeanSpineCurrentThird; // 0x5a4(0x0c)
	struct FRotator StrafeLeanHeadCounterCurrent; // 0x5b0(0x0c)
	float SlidePitchInterpSpeed; // 0x5bc(0x04)
	float SlideSurfacePitch; // 0x5c0(0x04)
	bool bShouldUseFootIK; // 0x5c4(0x01)
	char pad_5C5[0x3]; // 0x5c5(0x03)
	struct FVector MinLimitsStanding; // 0x5c8(0x0c)
	struct FVector MinLimitsCrouching; // 0x5d4(0x0c)
	struct FVector MaxLimitsStanding; // 0x5e0(0x0c)
	struct FVector MaxLimitsCrouching; // 0x5ec(0x0c)
	char pad_5F8[0x30]; // 0x5f8(0x30)
	struct FName LeftFootBoneName; // 0x628(0x08)
	struct FName RightFootBoneName; // 0x630(0x08)
	float TraceLengthAboveFoot; // 0x638(0x04)
	float TraceLengthBelowFoot; // 0x63c(0x04)
	float TransformInterpSpeed; // 0x640(0x04)
	float RotationInterpSpeed; // 0x644(0x04)
	bool bShowTraces; // 0x648(0x01)
	char pad_649[0x3]; // 0x649(0x03)
	struct FVector LeftFootOffsetsTra; // 0x64c(0x0c)
	struct FRotator LeftFootOffsetsRot; // 0x658(0x0c)
	struct FVector RightFootOffsetsTra; // 0x664(0x0c)
	struct FRotator RightFootOffsetsRot; // 0x670(0x0c)
	struct FVector FootIKPelvisOffsetTra; // 0x67c(0x0c)
	int32_t MaxLOD; // 0x688(0x04)
	float LookAtIsInRangeThreshold; // 0x68c(0x04)
	float LookAtIsNotInRangeThreshold; // 0x690(0x04)
	float HorizontalLookAtLimit; // 0x694(0x04)
	bool bShouldUseLookAt; // 0x698(0x01)
	char pad_699[0x3]; // 0x699(0x03)
	float LookAtSpineOnOff; // 0x69c(0x04)
	bool bLookAtInRange; // 0x6a0(0x01)
	bool bLookAtRightSide; // 0x6a1(0x01)
	char pad_6A2[0x2]; // 0x6a2(0x02)
	float LookAtVertical; // 0x6a4(0x04)
	float LookAtHorizontal; // 0x6a8(0x04)
	float LookAtHorizontalSlow; // 0x6ac(0x04)
	struct FRotator LookAtSpineRotator; // 0x6b0(0x0c)
	struct FRotator LookAtHeadRotator; // 0x6bc(0x0c)
	float LookAtHeadTiltAmount; // 0x6c8(0x04)
	bool bIsInMeleeSwing; // 0x6cc(0x01)
	bool bIsAimingWeapon; // 0x6cd(0x01)
	bool bIsHipFiring; // 0x6ce(0x01)
	bool bIsUsingRangedWeapon; // 0x6cf(0x01)
	bool bIsUsingMeleeWeapon; // 0x6d0(0x01)
	bool bAboutToCollideWithClimbableSurface; // 0x6d1(0x01)
	char pad_6D2[0x2]; // 0x6d2(0x02)
	float TimeUntilCollision; // 0x6d4(0x04)
	float WallCollisionAngle; // 0x6d8(0x04)
	struct FVector PlayerDesiredMovementDirection; // 0x6dc(0x0c)
	bool bHasMovementInput; // 0x6e8(0x01)
	char pad_6E9[0x3]; // 0x6e9(0x03)
	float TimeMoving; // 0x6ec(0x04)
	bool bNewStartAnimationAllowed; // 0x6f0(0x01)
	bool bNewStopAnimationAllowed; // 0x6f1(0x01)
	char pad_6F2[0x2]; // 0x6f2(0x02)
	struct FVector PlayerDesiredStartDirection; // 0x6f4(0x0c)
	float TurnStartAngle; // 0x700(0x04)
	struct FRotator StartCameraWorldRotation; // 0x704(0x0c)
	struct FVector PlayerDesiredStopDirection; // 0x710(0x0c)
	struct FVector LastPlayerDesiredMovementDirection; // 0x71c(0x0c)
	bool bShouldPlaySoftStop; // 0x728(0x01)
	bool bStopCrouchState; // 0x729(0x01)
	bool bShouldLeaveStart; // 0x72a(0x01)
	bool bStartCrouchState; // 0x72b(0x01)
	bool bIsStrafingBackwards; // 0x72c(0x01)
	char pad_72D[0x3]; // 0x72d(0x03)
	float StartAngleOffset; // 0x730(0x04)
	float PlayerDesiredStartDirectionWhole90; // 0x734(0x04)
	float PlayerDesiredStartDirectionRotOffsetDegree; // 0x738(0x04)
	struct FRotator PlayerDesiredStartDirectionRotOffset; // 0x73c(0x0c)
	struct FName StrafeHipRotationCurveName; // 0x748(0x08)
	float StrafeRotationOffset; // 0x750(0x04)
	float StrafeBackwardsDirectionSmooth; // 0x754(0x04)
	float StrafeForwardDirectionSmooth; // 0x758(0x04)
	float StrafeBackwardsDirection; // 0x75c(0x04)
	float StrafeForwardDirection; // 0x760(0x04)
	bool bLegCrossClearance; // 0x764(0x01)
	char pad_765[0x3]; // 0x765(0x03)
	float StrafeStepFrequencyMod; // 0x768(0x04)
	float ModifiedStrafePlayrate; // 0x76c(0x04)
	float StrafeWalkRunBlend; // 0x770(0x04)
	float WalkStrafePlayrate; // 0x774(0x04)
	float WalkStrafeScaled; // 0x778(0x04)
	float RunStrafePlayrate; // 0x77c(0x04)
	float RunStrafeScaled; // 0x780(0x04)
	float StepLengthModWalk; // 0x784(0x04)
	float StepLengthModRun; // 0x788(0x04)
	float StepLengthModWalkFwd; // 0x78c(0x04)
	float StepLengthModRunFwd; // 0x790(0x04)
	float StepLengthModWalkBwd; // 0x794(0x04)
	float StepLengthModRunBwd; // 0x798(0x04)
	bool bActivateNewStrafeScaler; // 0x79c(0x01)
	char pad_79D[0x3]; // 0x79d(0x03)
	float WalkSpeed; // 0x7a0(0x04)
	float MinWalkSpeed; // 0x7a4(0x04)
	float MaxWalkSpeed; // 0x7a8(0x04)
	float RunSpeed; // 0x7ac(0x04)
	float MinRunSpeed; // 0x7b0(0x04)
	float MaxRunSpeed; // 0x7b4(0x04)
	struct FVector InAirLeaning; // 0x7b8(0x0c)
	float InAirLeaningHeightReverser; // 0x7c4(0x04)
	float InAirJumpLean; // 0x7c8(0x04)
	float FallVerticalValue; // 0x7cc(0x04)
	float SprintAngleWide; // 0x7d0(0x04)
	float SprintAngle; // 0x7d4(0x04)
	float SprintAngleSlow; // 0x7d8(0x04)
	float SprintAccelTimer; // 0x7dc(0x04)
	bool bSprintTime; // 0x7e0(0x01)
	char pad_7E1[0x3]; // 0x7e1(0x03)
	struct FVector FootIKPelvisOffsetTraCrouchSlope; // 0x7e4(0x0c)
	bool bFootIKPelvisOffsetTraCrouchSlopeActivate; // 0x7f0(0x01)
	char pad_7F1[0x3]; // 0x7f1(0x03)
	float CrouchSlopeHightOffset; // 0x7f4(0x04)
	bool bRecentlyChangedSet; // 0x7f8(0x01)
	bool bRecentlyChangedSetSingleFrameCheck; // 0x7f9(0x01)
	char pad_7FA[0x2]; // 0x7fa(0x02)
	float CharacterDeltaYawSmoothWallSlide; // 0x7fc(0x04)
	bool bRotateL; // 0x800(0x01)
	bool bRotateR; // 0x801(0x01)
	char pad_802[0x2]; // 0x802(0x02)
	float RotateInPlaceAlpha; // 0x804(0x04)
	float RotateInPlacePlayRate; // 0x808(0x04)
	char pad_80C[0x4]; // 0x80c(0x04)
	struct TArray<enum class ETigerDisciplinesEnum> RotateInPlacePowersArray; // 0x810(0x10)
	char pad_820[0x8]; // 0x820(0x08)
	struct FVector SoaringLeapLeaningPelvisTrans; // 0x828(0x0c)
	struct FRotator SoaringLeapLeaningPelvisRot; // 0x834(0x0c)
	struct FRotator SoaringLeapLeaningSpineRot; // 0x840(0x0c)
	struct FRotator SoaringLeapLeaningHeadRot; // 0x84c(0x0c)
	bool bIsBlinded; // 0x858(0x01)
	char pad_859[0x3]; // 0x859(0x03)
	float IsBlindedWeight; // 0x85c(0x04)
	struct UObject* BlindingBuffClass; // 0x860(0x08)
	struct FName PowerAOAlphaCurveName; // 0x868(0x08)
	bool bIsAnyPowerActive; // 0x870(0x01)
	char pad_871[0x3]; // 0x871(0x03)
	float PowerAOAlpha; // 0x874(0x04)
	bool bShouldReturnToDownedIntro; // 0x878(0x01)
	char pad_879[0x57]; // 0x879(0x57)

	void UpdateYawDeltaSmoothVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateYawDeltaSmoothVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14769d0
	void UpdateWasWallJumpAvailable(); // Function Tiger.TigerPlayerAnimInstance.UpdateWasWallJumpAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x14769b0
	void UpdateVelocityLeanVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateVelocityLeanVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476930
	void UpdateStrafeVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateStrafeVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14768b0
	void UpdateStartStopVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateStartStopVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476890
	void UpdateSprintVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateSprintVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476810
	void UpdateSoaringLeapVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateSoaringLeapVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14767f0
	void UpdateSmoothSpeedVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateSmoothSpeedVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476770
	void UpdateSlideVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateSlideVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14766f0
	void UpdateSingleFrameCheckVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateSingleFrameCheckVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14766d0
	void UpdateRotateInPlace(float InDeltaTime); // Function Tiger.TigerPlayerAnimInstance.UpdateRotateInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x1476650
	void UpdatePlayerVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdatePlayerVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14765d0
	void UpdateMovementVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateMovementVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14765b0
	void UpdateMeshCapsuleDiffForWallSlide(); // Function Tiger.TigerPlayerAnimInstance.UpdateMeshCapsuleDiffForWallSlide // (Final|Native|Public|BlueprintCallable) // @ game+0x1476590
	void UpdateLookAtVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateLookAtVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476510
	void UpdateLastPlayerInputVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateLastPlayerInputVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476490
	void UpdateIsAnyPowerActive(); // Function Tiger.TigerPlayerAnimInstance.UpdateIsAnyPowerActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1476470
	void UpdateInAirVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateInAirVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14763f0
	void UpdateFootIKVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateFootIKVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x1476370
	void UpdateCrouchSlopePelivsOffsetVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateCrouchSlopePelivsOffsetVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14762f0
	void UpdateCheckIfBlinded(float InDeltaTime); // Function Tiger.TigerPlayerAnimInstance.UpdateCheckIfBlinded // (Final|Native|Public|BlueprintCallable) // @ game+0x1476270
	void OnWantsToStartRangedAttack(); // Function Tiger.TigerPlayerAnimInstance.OnWantsToStartRangedAttack // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsPlayingDisciplineMontage(); // Function Tiger.TigerPlayerAnimInstance.IsPlayingDisciplineMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1476240
	bool IsAllowingRotationLerpDuringCurrentDisciplineMontage(); // Function Tiger.TigerPlayerAnimInstance.IsAllowingRotationLerpDuringCurrentDisciplineMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1476220
	struct FVector GetPlayerDesiredMovement(bool bShowDebug); // Function Tiger.TigerPlayerAnimInstance.GetPlayerDesiredMovement // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1476170
	struct ATigerPlayer* GetPlayer(); // Function Tiger.TigerPlayerAnimInstance.GetPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1476140
	float GetBlendingInFirePoseTimeLeft(); // Function Tiger.TigerPlayerAnimInstance.GetBlendingInFirePoseTimeLeft // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x184a280
	void GetAllActiveMetadata(struct TArray<struct UAnimMetaData*>& OutActiveMetaData); // Function Tiger.TigerPlayerAnimInstance.GetAllActiveMetadata // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1476090
	void ClearWallJumpAnimationState(); // Function Tiger.TigerPlayerAnimInstance.ClearWallJumpAnimationState // (Final|Native|Public|BlueprintCallable) // @ game+0x1476070
	void CalculateTurnInPlace(float InDeltaSeconds, float InAimYawDelta, bool bInCanEnterTurnInPlace, bool& bOutShouldTriggerTurnInPlace); // Function Tiger.TigerPlayerAnimInstance.CalculateTurnInPlace // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1475f00
	void CalculateFootOffsetTargets(struct FName& InFootBoneName, float InTraceLengthAboveFoot, float InTraceLengthBelowFoot, struct FVector& InMinLimits, struct FVector& InMaxLimits, enum class ETraceTypeQuery InTraceChannel, bool bInShowTraces, struct FRotator& OutFootRotation, struct FVector& OutFootOffset); // Function Tiger.TigerPlayerAnimInstance.CalculateFootOffsetTargets // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1475c20
};

// Class Tiger.TigerPlayerAppearanceCache
// Size: 0x290 (Inherited: 0x228)
struct ATigerPlayerAppearanceCache : AActor {
	struct UTigerCharCustomizationComponent* CharacterCustomizationComponent; // 0x228(0x08)
	struct UTigerCharacterMeshManager* MeshManager; // 0x230(0x08)
	struct USkeletalMeshComponent* MeshComponents[0xb]; // 0x238(0x58)
};

// Class Tiger.TigerPlayerBeingLoggedInToServer
// Size: 0xf8 (Inherited: 0x28)
struct UTigerPlayerBeingLoggedInToServer : UObject {
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x28(0x08)
	char pad_30[0xc8]; // 0x30(0xc8)
};

// Class Tiger.TigerPlayerBotsSubsystem
// Size: 0x80 (Inherited: 0x30)
struct UTigerPlayerBotsSubsystem : UGameInstanceSubsystem {
	char pad_30[0x50]; // 0x30(0x50)

	bool IsSpawningBot(); // Function Tiger.TigerPlayerBotsSubsystem.IsSpawningBot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14810d0
};

// Class Tiger.TigerPlayerBotSubsystemSettings
// Size: 0x78 (Inherited: 0x38)
struct UTigerPlayerBotSubsystemSettings : UDeveloperSettings {
	bool bUseSplitscreen; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float BotDifficulty; // 0x3c(0x04)
	float JumpingSpamDifficultyThresholdMin; // 0x40(0x04)
	float JumpingSpamDifficultyThresholdMax; // 0x44(0x04)
	float SlidingDifficultyThresholdMin; // 0x48(0x04)
	float SlidingDifficultyThresholdMax; // 0x4c(0x04)
	float ClanPowerDifficultyThresholdMin; // 0x50(0x04)
	float ClanPowerDifficultyThresholdMax; // 0x54(0x04)
	float ArchetypePowerDifficultyThresholdMin; // 0x58(0x04)
	float ArchetypePowerDifficultyThresholdMax; // 0x5c(0x04)
	float HealingDifficultyThreshold; // 0x60(0x04)
	float BotCombatTransitionDelayMin; // 0x64(0x04)
	float BotCombatTransitionDelayMax; // 0x68(0x04)
	float BotAccuracyMin; // 0x6c(0x04)
	float BotAccuracyMax; // 0x70(0x04)
	float MidHealFightOrFlightThreshold; // 0x74(0x04)
};

// Class Tiger.TigerBufferedActionBlock
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionBlock : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionCrouch
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionCrouch : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionDisciplineBase
// Size: 0x50 (Inherited: 0x48)
struct UTigerBufferedActionDisciplineBase : UTigerBufferedAction {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Tiger.TigerBufferedActionDisciplineArchetype
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineArchetype : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineArchetypeReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineArchetypeReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineClan
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineClan : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineClanReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineClanReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbility
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineWeaponAbility : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbilityReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineWeaponAbilityReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDodge
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionDodge : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionJump
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionJump : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionMelee
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionMelee : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionRanged
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionRanged : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionReload
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionReload : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionSprint
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionSprint : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionSwitchWeapon
// Size: 0x50 (Inherited: 0x48)
struct UTigerBufferedActionSwitchWeapon : UTigerBufferedAction {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Tiger.TigerBufferedActionToggleHSenses
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionToggleHSenses : UTigerBufferedAction {
};

// Class Tiger.TigerPlayerCameraManager
// Size: 0x2950 (Inherited: 0x27c0)
struct ATigerPlayerCameraManager : APlayerCameraManager {
	float MinSpringArmLengthWhenLookingUp; // 0x27c0(0x04)
	float BaseTurnRate; // 0x27c4(0x04)
	float BaseLookUpRate; // 0x27c8(0x04)
	char pad_27CC[0x4]; // 0x27cc(0x04)
	struct UTigerCameraPreset* CameraPresetsAdditive[0x4]; // 0x27d0(0x20)
	struct UMatineeCameraShake* AdditiveCameraShakeInstances[0x4]; // 0x27f0(0x20)
	struct UMatineeCameraShake* CurrentPresetShakeBehaviour; // 0x2810(0x08)
	struct UTigerFullscreenFXManager* FullscreenFXManager; // 0x2818(0x08)
	struct UCurveFloat* RecoilResetCurve; // 0x2820(0x08)
	struct UCurveFloat* RecoilResetSpeedCurve; // 0x2828(0x08)
	float TimeBeforeRecoilReset; // 0x2830(0x04)
	float OverlapCheckInterval; // 0x2834(0x04)
	struct UCurveFloat* VerticalRecoilCurve; // 0x2838(0x08)
	struct UCurveFloat* HorizontalRecoilCurve; // 0x2840(0x08)
	struct ATigerPlayer* TigerPlayer; // 0x2848(0x08)
	struct ATigerBloodVeinPawn* BloodVeinPawn; // 0x2850(0x08)
	struct ATigerPlayerController* TigerPlayerController; // 0x2858(0x08)
	char pad_2860[0x8]; // 0x2860(0x08)
	struct UCurveFloat* DefaultTransitionCurve; // 0x2868(0x08)
	struct UTigerCameraPreset* CameraPresetOverride; // 0x2870(0x08)
	struct UTigerCameraPreset* CameraPresetIndoorOverride; // 0x2878(0x08)
	struct UTigerSpringArmComponent* CurrentSpringArm; // 0x2880(0x08)
	struct UTigerCameraBehavior* CurrentCameraBehavior; // 0x2888(0x08)
	struct UTigerCameraPreset* PreviousCameraPreset; // 0x2890(0x08)
	char pad_2898[0x38]; // 0x2898(0x38)
	struct TArray<struct UTigerCameraBehavior*> CachedCameraBehaviors; // 0x28d0(0x10)
	struct TArray<struct UTigerAdditiveCameraBehavior*> AdditiveCameraBehaviors; // 0x28e0(0x10)
	char pad_28F0[0x60]; // 0x28f0(0x60)

	struct UCurveFloat* SelectPresetTransitionCurve(struct UTigerCameraPreset* InPreviousPreset, struct UTigerCameraPreset* InNewPreset); // Function Tiger.TigerPlayerCameraManager.SelectPresetTransitionCurve // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OverrideCameraPreset(struct UTigerCameraPreset* CameraPresetClass, float Duration, struct UTigerCameraPreset* CameraPresetClassIndoor); // Function Tiger.TigerPlayerCameraManager.OverrideCameraPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x1481420
	void OnChangingCameraPreset(struct UTigerCameraPreset* InCurrentCameraPresetClass, struct UTigerCameraPreset* InNewCameraPresetClass); // Function Tiger.TigerPlayerCameraManager.OnChangingCameraPreset // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool HasActiveCameraAnimations(); // Function Tiger.TigerPlayerCameraManager.HasActiveCameraAnimations // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480c20
	struct AActor* GetViewTargetBlueprint(); // Function Tiger.TigerPlayerCameraManager.GetViewTargetBlueprint // (Final|Native|Public|BlueprintCallable) // @ game+0x1480bd0
	void ForceFinishCurrentCameraTransition(); // Function Tiger.TigerPlayerCameraManager.ForceFinishCurrentCameraTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x1480820
	struct UTigerCameraPreset* EvaluateCameraPreset(); // Function Tiger.TigerPlayerCameraManager.EvaluateCameraPreset // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerPlayerClanData
// Size: 0x130 (Inherited: 0x30)
struct UTigerPlayerClanData : UDataAsset {
	struct FText DISPLAYNAME; // 0x30(0x18)
	enum class ETigerClan ClanType; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UTexture2D* IconTexture; // 0x50(0x08)
	struct UTexture2D* LargeIconTexture; // 0x58(0x08)
	struct TSoftClassPtr<UObject> CharacterCreationStartingOutfitPath[0x2]; // 0x60(0x50)
	struct TArray<struct UTigerCharacterBodyTypeCustomization*> BodyTypeItems; // 0xb0(0x10)
	struct TArray<struct UTigerPowerKit*> PowerKits; // 0xc0(0x10)
	struct UTigerUtilityPowerBaseComponent* UtilityPower; // 0xd0(0x08)
	struct UTexture2D* UtilityPowerIcon; // 0xd8(0x08)
	struct USoundBase* StaggeredByAttackSound; // 0xe0(0x08)
	struct UMatineeCameraShake* FallShakeLowDrop; // 0xe8(0x08)
	struct UMatineeCameraShake* FallShakeHighDrop; // 0xf0(0x08)
	struct UTigerAnimationSetAsset* ClanAnimationSet[0x2]; // 0xf8(0x10)
	bool bBloodDropGlows; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float ClanSpecificDiablerizeOffsets[0x4]; // 0x10c(0x10)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct TArray<struct UTigerAnimationSetAsset*> AdditionalAnimationSets; // 0x120(0x10)
};

// Class Tiger.TigerItemCheatCommandsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerItemCheatCommandsAsset : UDataAsset {
	struct TMap<struct FString, struct UTigerItemAsset*> Commands; // 0x30(0x50)
};

// Class Tiger.TigerPlayerController
// Size: 0xca0 (Inherited: 0x578)
struct ATigerPlayerController : APlayerController {
	struct FMulticastInlineDelegate OnPersistentPlayerInitialisedEvent; // 0x578(0x10)
	struct FMulticastInlineDelegate OnGhostModeSet; // 0x588(0x10)
	struct FMulticastInlineDelegate OnBeginPlay; // 0x598(0x10)
	struct FMulticastInlineDelegate OnPlayerStateCreated; // 0x5a8(0x10)
	struct FMulticastInlineDelegate OnClientDownedEnemyPlayer; // 0x5b8(0x10)
	struct FMulticastInlineDelegate OnCancelPsoCaching; // 0x5c8(0x10)
	struct FMulticastInlineDelegate OnShowClimbPrompt; // 0x5d8(0x10)
	struct FMulticastInlineDelegate OnHideClimbPrompt; // 0x5e8(0x10)
	struct FMulticastInlineDelegate OnClientChallengesCollectionCreated; // 0x5f8(0x10)
	char pad_608[0x60]; // 0x608(0x60)
	struct FMulticastInlineDelegate OnControllerConnectionChanged; // 0x668(0x10)
	struct FMulticastInlineDelegate OnCrossplaySettingLockChanged; // 0x678(0x10)
	struct ATigerLocalAIController* LocalAIController; // 0x688(0x08)
	struct ATigerLocalAIController* LocalAIControllerClass; // 0x690(0x08)
	struct ATigerLocalAIControllerBase* GameplayBenchmarkController; // 0x698(0x08)
	struct ATigerLocalAIControllerBase* GameplayBenchmarkControllerClass; // 0x6a0(0x08)
	char pad_6A8[0x18]; // 0x6a8(0x18)
	struct UTigerUserInputBinding* UserInputBindings; // 0x6c0(0x08)
	struct FMulticastInlineDelegate OnUseGamepadChanged; // 0x6c8(0x10)
	bool bSilentMusic; // 0x6d8(0x01)
	char pad_6D9[0x3]; // 0x6d9(0x03)
	int32_t RedGasAkEventID; // 0x6dc(0x04)
	int32_t CloseToRedGasAkEventID; // 0x6e0(0x04)
	char pad_6E4[0x4]; // 0x6e4(0x04)
	struct FMulticastInlineDelegate OnItemPickedUp; // 0x6e8(0x10)
	struct FMulticastInlineDelegate OnInventoryToggle; // 0x6f8(0x10)
	struct FMulticastInlineDelegate OnInitialLevelStreamingCompletedDelegate; // 0x708(0x10)
	struct UTigerResurrectComponent* ResurrectComponent; // 0x718(0x08)
	struct ATigerClientInteractiveSpawner* ClientSpawner; // 0x720(0x08)
	struct FTigerPerformanceStates PerformanceStates; // 0x728(0x60)
	char pad_788[0x8]; // 0x788(0x08)
	struct ASpectatorPawn* SpectatingClass; // 0x790(0x08)
	struct UTigerMapInfoDataAsset* MapInfoAsset; // 0x798(0x08)
	struct UUserWidget* PlayerMapMarkerClass; // 0x7a0(0x08)
	struct UTigerUserInputBinding* UserInputSettingsClass; // 0x7a8(0x08)
	struct UUserWidget* RevealedItemMapMarkerWidgetClass; // 0x7b0(0x08)
	struct UUserWidget* RevealedItemCompassObjectWidgetClass; // 0x7b8(0x08)
	struct ATigerWorldMarker* QuestMapMarkerClass; // 0x7c0(0x08)
	struct UTigerBuffDOT* CrossBowGasDamageForAchievement; // 0x7c8(0x08)
	float ControlRotationSpeedStandingStill; // 0x7d0(0x04)
	char pad_7D4[0x4]; // 0x7d4(0x04)
	struct UCurveFloat* ControlRotationSpeedMovingCurve; // 0x7d8(0x08)
	float ControlRotationSpeedMoving; // 0x7e0(0x04)
	float MinControlRotationSpeedMoving; // 0x7e4(0x04)
	float InstantControlRotationTimeThreshold; // 0x7e8(0x04)
	float CycleWeaponsHolsterHoldTime; // 0x7ec(0x04)
	float SprintCancelTimeOnGamepad; // 0x7f0(0x04)
	float SprintGamepadInputLimit; // 0x7f4(0x04)
	float SprintGamepadInputAngle; // 0x7f8(0x04)
	char pad_7FC[0x4]; // 0x7fc(0x04)
	float RandomizedDamageScale; // 0x800(0x04)
	float MouseScrollWeaponChangeCooldown; // 0x804(0x04)
	char pad_808[0x4]; // 0x808(0x04)
	float TigerStuckTriggerZ; // 0x80c(0x04)
	float ClimbingInputZCutOff; // 0x810(0x04)
	float MinimumUpwardClimbAngle; // 0x814(0x04)
	float MaximumSidewaysClimbDeviation; // 0x818(0x04)
	float ClimbingOverHangZCutOff; // 0x81c(0x04)
	float ClimbingHalfAngleInputDifferenceAllowed; // 0x820(0x04)
	bool bOnlyStartClimbIfLookingAtWall; // 0x824(0x01)
	char pad_825[0x3]; // 0x825(0x03)
	struct UAkAudioEvent* TargetDownedAudioEvent; // 0x828(0x08)
	struct UAkAudioEvent* PlayerDownedAudioEvent; // 0x830(0x08)
	struct UAkAudioEvent* GuidingAudioEvent; // 0x838(0x08)
	struct UAkAudioEvent* DeathNotifierAkAudioEvent; // 0x840(0x08)
	float GuidingAudioCooldown; // 0x848(0x04)
	char pad_84C[0x4]; // 0x84c(0x04)
	struct UCurveFloat* GamepadCameraYawStrengthCurve; // 0x850(0x08)
	struct UCurveFloat* GamepadCameraPitchStrengthCurve; // 0x858(0x08)
	struct UCurveFloat* GamepadRangedCameraYawStrengthCurve; // 0x860(0x08)
	struct UCurveFloat* GamepadRangedCameraPitchStrengthCurve; // 0x868(0x08)
	struct UCurveFloat* GamepadAimingCameraYawStrengthCurve; // 0x870(0x08)
	struct UCurveFloat* GamepadAimingCameraPitchStrengthCurve; // 0x878(0x08)
	struct UCurveFloat* GamepadCameraYawAccelerationCurve; // 0x880(0x08)
	struct UCurveFloat* GamepadCameraPitchAccelerationCurve; // 0x888(0x08)
	struct UCurveFloat* GamepadRangedCameraYawAccelerationCurve; // 0x890(0x08)
	struct UCurveFloat* GamepadRangedCameraPitchAccelerationCurve; // 0x898(0x08)
	struct UCurveFloat* GamepadAimingCameraYawAccelerationCurve; // 0x8a0(0x08)
	struct UCurveFloat* GamepadAimingCameraPitchAccelerationCurve; // 0x8a8(0x08)
	float DisciplineWeaponAbilityTriggerWindow; // 0x8b0(0x04)
	float HeightenedSensesPadTriggerwindow; // 0x8b4(0x04)
	float ConsumableWheelTriggerWindow; // 0x8b8(0x04)
	char pad_8BC[0x4]; // 0x8bc(0x04)
	struct UForceFeedbackEffect* DamageTakenForceFeedback; // 0x8c0(0x08)
	float DamageTakenForceFeedbackCooldown; // 0x8c8(0x04)
	char pad_8CC[0x4]; // 0x8cc(0x04)
	struct UForceFeedbackEffect* DeathForceFeedback; // 0x8d0(0x08)
	struct UForceFeedbackEffect* DownedForceFeedback; // 0x8d8(0x08)
	struct UForceFeedbackEffect* SoftLandingForceFeedback; // 0x8e0(0x08)
	struct UForceFeedbackEffect* HeavyLandingForceFeedback; // 0x8e8(0x08)
	struct ATigerSpectatorPawn* TigerSpectatorPawn; // 0x8f0(0x08)
	float HeavyAttackTriggerTime; // 0x8f8(0x04)
	float HeavyAttackTriggerTimeGamepad; // 0x8fc(0x04)
	enum class ETigerMusicAudioState MusicAudioState; // 0x900(0x01)
	enum class ETigerBlindedAudioState BlindedAudioState; // 0x901(0x01)
	enum class ETigerIndoorAudioState IndoorAudioState; // 0x902(0x01)
	enum class ETigerMainMenuAudioState MainMenuAudioState; // 0x903(0x01)
	enum class ETigerAmbienceAudioState AmbienceAudioState; // 0x904(0x01)
	enum class ETigerCombatAudioState CombatAudioState; // 0x905(0x01)
	enum class ETigerFeedingAudioState FeedingAudioState; // 0x906(0x01)
	enum class ETigerAimGlideAudioState AimGlideAudioState; // 0x907(0x01)
	float AssaultBorderMusicDistance; // 0x908(0x04)
	float RedGasLastWaveAssaultBorderMusicDistance; // 0x90c(0x04)
	float RedGasLastStageAssaultBorderMusicDistance; // 0x910(0x04)
	float AmbientMusicTimer; // 0x914(0x04)
	float NoAmbientMusicTimer; // 0x918(0x04)
	float NoAmbienceMusicTimerInterval; // 0x91c(0x04)
	float AmbientMusicTimerInterval; // 0x920(0x04)
	struct TWeakObjectPtr<struct ATigerPaperDoll> PaperDoll; // 0x924(0x08)
	char pad_92C[0x4]; // 0x92c(0x04)
	struct UTigerInteractionControllerComponent* InteractionControllerComponent; // 0x930(0x08)
	struct UTigerClientSeasonalRewardCollection* ClientSeasonalRewardCollection; // 0x938(0x08)
	struct UTigerClientChallengesCollection* ClientChallengesCollection; // 0x940(0x08)
	struct UTigerThrallSystem* ThrallComponent; // 0x948(0x08)
	struct UTigerCollectibleSystem* CollectibleComponent; // 0x950(0x08)
	struct UTigerQuestSystem* QuestComponent; // 0x958(0x08)
	struct UTigerDamageFeedbackComponent* DamageFeedbackComponent; // 0x960(0x08)
	struct UTSSClientComponent* AntiCheatTssComponent; // 0x968(0x08)
	struct UTigerGameModeFeatureRespawn* RespawnFeature; // 0x970(0x08)
	enum class ETigerMusicAudioState OverrideMusicAudioState; // 0x978(0x01)
	char pad_979[0x7]; // 0x979(0x07)
	struct UTigerActionBuffer* ActionBufferClass; // 0x980(0x08)
	struct UTigerActionBuffer* ActionBuffer; // 0x988(0x08)
	char pad_990[0x10]; // 0x990(0x10)
	struct ATigerPlayer* TigerPlayerPawn; // 0x9a0(0x08)
	char pad_9A8[0x8]; // 0x9a8(0x08)
	struct ATigerBloodVeinPawn* TigerBloodVeinPawn; // 0x9b0(0x08)
	char pad_9B8[0x8]; // 0x9b8(0x08)
	struct UTigerMapGameData* MapGameData; // 0x9c0(0x08)
	struct UTigerInWorldIconController* InWorldIconController; // 0x9c8(0x08)
	struct UTigerPingControllerComponent* PingControllerComponent; // 0x9d0(0x08)
	struct UTigerContextualHelpComponent* ContextualHelpComponent; // 0x9d8(0x08)
	struct UTigerEmoteControllerComponent* EmoteControllerComponent; // 0x9e0(0x08)
	struct UTigerChatComponent* ChatComponent; // 0x9e8(0x08)
	struct UTigerAimAssist* AimAssist; // 0x9f0(0x08)
	struct UTigerGamepad* GamepadEffect; // 0x9f8(0x08)
	char pad_A00[0x80]; // 0xa00(0x80)
	struct UTigerMapMarkerProxy* PlayerMapMarkerProxy; // 0xa80(0x08)
	char pad_A88[0x8]; // 0xa88(0x08)
	struct UInputComponent* GhostInputComponent; // 0xa90(0x08)
	struct UInputComponent* SpectateInputComponent; // 0xa98(0x08)
	struct UInputComponent* HUDInputComponent; // 0xaa0(0x08)
	struct ATigerWorldCompositionGrid* StreamingGrid; // 0xaa8(0x08)
	char pad_AB0[0x2]; // 0xab0(0x02)
	enum class ETigerWeaponSlot PreviouslyEquippedRangedSlot; // 0xab2(0x01)
	char pad_AB3[0x41]; // 0xab3(0x41)
	float MouseSidewaysSprintSafetyAngle; // 0xaf4(0x04)
	float PitchSensitivityModifier; // 0xaf8(0x04)
	float YawSensitivityModifier; // 0xafc(0x04)
	float PitchAccelerationDeadZone; // 0xb00(0x04)
	float YawAccelerationDeadZone; // 0xb04(0x04)
	float PitchRangedAccelerationDeadZone; // 0xb08(0x04)
	float YawRangedAccelerationDeadZone; // 0xb0c(0x04)
	bool bUndoAccelerationInDeadZone; // 0xb10(0x01)
	char pad_B11[0x7]; // 0xb11(0x07)
	struct TSoftObjectPtr<UTigerNPCCheatCommandsAsset> NPCCheatCommandsAsset; // 0xb18(0x28)
	struct UTigerNPCCheatCommandsAsset* NPCCheatCommands; // 0xb40(0x08)
	struct TSoftObjectPtr<UTigerItemCheatCommandsAsset> ItemCheatCommandsAsset; // 0xb48(0x28)
	struct UTigerItemCheatCommandsAsset* ItemCheatCommands; // 0xb70(0x08)
	struct ATigerNPCInstantSpawner* NpcCheatSpawner; // 0xb78(0x08)
	struct UTigerWheelWidget* CurrentWheelWidget; // 0xb80(0x08)
	struct UTigerVendorComponent* ElysiumVendorComponent; // 0xb88(0x08)
	char pad_B90[0x60]; // 0xb90(0x60)
	float ToggleAimBufferTime; // 0xbf0(0x04)
	bool bPawnRotatesWithCameraWhileIdle; // 0xbf4(0x01)
	bool bUseTurnInPlace; // 0xbf5(0x01)
	bool bPrintRightGamepadAxis; // 0xbf6(0x01)
	char pad_BF7[0x19]; // 0xbf7(0x19)
	struct FText KilledBloodHuntedPlayerText; // 0xc10(0x18)
	char pad_C28[0x14]; // 0xc28(0x14)
	float TimeUntilKeyIsHeld; // 0xc3c(0x04)
	float HoldTimeToOpenSettings; // 0xc40(0x04)
	char pad_C44[0x14]; // 0xc44(0x14)
	struct TArray<struct TWeakObjectPtr<struct ATigerSHPBMarker>> DiscoveredSHPBMarkers; // 0xc58(0x10)
	char pad_C68[0x38]; // 0xc68(0x38)

	void WaitForPersistantPlayerStateInitialisation(struct FDelegate OnLoaded); // Function Tiger.TigerPlayerController.WaitForPersistantPlayerStateInitialisation // (Final|Native|Protected|BlueprintCallable) // @ game+0x1487960
	void UseWeaponAbility(); // Function Tiger.TigerPlayerController.UseWeaponAbility // (Final|Native|Private|BlueprintCallable) // @ game+0x1487940
	void TryReload(); // Function Tiger.TigerPlayerController.TryReload // (Final|Native|Private|BlueprintCallable) // @ game+0x1487920
	void ToggleShowCombatStatus(); // Function Tiger.TigerPlayerController.ToggleShowCombatStatus // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerTrackLocomotionData(); // Function Tiger.TigerPlayerController.TigerTrackLocomotionData // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleServerGunSoundRpcs(); // Function Tiger.TigerPlayerController.TigerToggleServerGunSoundRpcs // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleOutlines(); // Function Tiger.TigerPlayerController.TigerToggleOutlines // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleElysiumMobility(); // Function Tiger.TigerPlayerController.TigerToggleElysiumMobility // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation); // Function Tiger.TigerPlayerController.TigerToggleDebugWallGrind // (Final|Exec|Native|Public) // @ game+0x14877a0
	void TigerToggleCrosshairDebug(); // Function Tiger.TigerPlayerController.TigerToggleCrosshairDebug // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerToggleCharacterCard(); // Function Tiger.TigerPlayerController.TigerToggleCharacterCard // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerTestSpawnMechanic(); // Function Tiger.TigerPlayerController.TigerTestSpawnMechanic // (Final|Exec|Native|Public) // @ game+0x1487780
	void TigerTakeDamage(float DamageAmount); // Function Tiger.TigerPlayerController.TigerTakeDamage // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1487700
	void TigerSwitchCharacter(int32_t InCharacterSlot); // Function Tiger.TigerPlayerController.TigerSwitchCharacter // (Final|Exec|Native|Public) // @ game+0x1487670
	void TigerStuck(float DropHeightInMeters); // Function Tiger.TigerPlayerController.TigerStuck // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerStopServerProfiler(); // Function Tiger.TigerPlayerController.TigerStopServerProfiler // (Final|Exec|Native|Public) // @ game+0x1487650
	void TigerStopServerNetworkProfiler(); // Function Tiger.TigerPlayerController.TigerStopServerNetworkProfiler // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerStartServerProfiler(float Duration); // Function Tiger.TigerPlayerController.TigerStartServerProfiler // (Final|Exec|Native|Public) // @ game+0x14875d0
	void TigerStartServerNetworkProfiler(float InDuration); // Function Tiger.TigerPlayerController.TigerStartServerNetworkProfiler // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSpectate(); // Function Tiger.TigerPlayerController.TigerSpectate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14875b0
	void TigerSpawnBotsFromServer(uint32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.TigerSpawnBotsFromServer // (Final|Exec|Native|Public) // @ game+0x1487520
	void TigerSpawnBotsFromClient(uint32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.TigerSpawnBotsFromClient // (Final|Exec|Native|Public) // @ game+0x1487490
	void TigerSkipSpawnCountdownTimer(); // Function Tiger.TigerPlayerController.TigerSkipSpawnCountdownTimer // (Final|Exec|Native|Public) // @ game+0x1487470
	void TigerShowPlayers(int32_t InShowPlayers); // Function Tiger.TigerPlayerController.TigerShowPlayers // (Final|Exec|Native|Public) // @ game+0x14873e0
	void TigerShowNPCToPlayerSightData(float InScreenDuration); // Function Tiger.TigerPlayerController.TigerShowNPCToPlayerSightData // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerShowJumpLength(float DebugDrawDuration); // Function Tiger.TigerPlayerController.TigerShowJumpLength // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc900
	void TigerShowFreeRunningVolumes(); // Function Tiger.TigerPlayerController.TigerShowFreeRunningVolumes // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerShowDPS(); // Function Tiger.TigerPlayerController.TigerShowDPS // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerShowClimbPrompt__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerShowClimbPrompt__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerShowCAPs(float DebugDrawDuration); // Function Tiger.TigerPlayerController.TigerShowCAPs // (Final|Exec|Native|Public) // @ game+0x1487360
	void TigerSetServerRespawn(int32_t RespawnType); // Function Tiger.TigerPlayerController.TigerSetServerRespawn // (Final|Exec|Native|Public) // @ game+0x13bc400
	void TigerSetSafeZoneMarginRelative(float InWidthRel, float InHeightRel); // Function Tiger.TigerPlayerController.TigerSetSafeZoneMarginRelative // (Final|Exec|Native|Public) // @ game+0x1487290
	void TigerSetSafeZoneMarginPixel(float InWidthPix, float InHeightPix); // Function Tiger.TigerPlayerController.TigerSetSafeZoneMarginPixel // (Final|Exec|Native|Public) // @ game+0x1487290
	void TigerSetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.TigerSetPlayerIsReadyToPlay // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerSetMuteAudio(bool bInShouldMute); // Function Tiger.TigerPlayerController.TigerSetMuteAudio // (Final|Exec|Native|Private) // @ game+0x1487200
	void TigerSetLocalTimeDilation(float InFactor); // Function Tiger.TigerPlayerController.TigerSetLocalTimeDilation // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSetLocalPawnTimeDilation(float InFactor); // Function Tiger.TigerPlayerController.TigerSetLocalPawnTimeDilation // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSetHolyIncenseSpeedMultiplier(float InSpeedMultiplier); // Function Tiger.TigerPlayerController.TigerSetHolyIncenseSpeedMultiplier // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSetHolyIncenseElapsedTime(float InTotalElapsedTime); // Function Tiger.TigerPlayerController.TigerSetHolyIncenseElapsedTime // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSetBloodVeinMoveSpeedMultipliers(float InMainSpeedMultiplier, float InBranchSpeedMultiplier); // Function Tiger.TigerPlayerController.TigerSetBloodVeinMoveSpeedMultipliers // (Final|Exec|Native|Public) // @ game+0x1487130
	void TigerServerLogSignificance(); // Function Tiger.TigerPlayerController.TigerServerLogSignificance // (Final|Exec|Native|Public) // @ game+0x1487110
	void TigerServerConsoleExec(struct FString InExecString); // Function Tiger.TigerPlayerController.TigerServerConsoleExec // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerSendPlayerServerPose(float InInterval); // Function Tiger.TigerPlayerController.TigerSendPlayerServerPose // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerSavePlayerLocation(); // Function Tiger.TigerPlayerController.TigerSavePlayerLocation // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRevive(); // Function Tiger.TigerPlayerController.TigerRevive // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerResurrectMember(float InOffsetX, float InOffsetY, float InOffsetZ); // Function Tiger.TigerPlayerController.TigerResurrectMember // (Final|Exec|Native|Public) // @ game+0x1486ff0
	void TigerRestoreMasquerade(); // Function Tiger.TigerPlayerController.TigerRestoreMasquerade // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerResetDialogues(); // Function Tiger.TigerPlayerController.TigerResetDialogues // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerResetDialogueCategories(); // Function Tiger.TigerPlayerController.TigerResetDialogueCategories // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerReinitializeDailyChallenges(); // Function Tiger.TigerPlayerController.TigerReinitializeDailyChallenges // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerRebindBoundConsoleCommand(struct FString NewConsoleCommand); // Function Tiger.TigerPlayerController.TigerRebindBoundConsoleCommand // (Final|Exec|Native|Public) // @ game+0x13bcb30
	void TigerPrintTraversalState(float InScreenTime); // Function Tiger.TigerPlayerController.TigerPrintTraversalState // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerPrintServerTickRate(); // Function Tiger.TigerPlayerController.TigerPrintServerTickRate // (Final|Exec|Native|Public) // @ game+0x1486fd0
	void TigerPrintNumberOfPlayersInGame(); // Function Tiger.TigerPlayerController.TigerPrintNumberOfPlayersInGame // (Final|Exec|Native|Public) // @ game+0x1486fb0
	void TigerPrintCurrentAnimationSetsUsed(float ScreenDuration); // Function Tiger.TigerPlayerController.TigerPrintCurrentAnimationSetsUsed // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerPlayerLocalBenchmarkEnable(bool bInNowEnabled); // Function Tiger.TigerPlayerController.TigerPlayerLocalBenchmarkEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1486f20
	void TigerPlayerLocalAIEnable(bool bInNowEnabled); // Function Tiger.TigerPlayerController.TigerPlayerLocalAIEnable // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1486e90
	void TigerOnTakenDamage__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerOnTakenDamage__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnCrossplaySettingLockChanged__DelegateSignature(bool bSettingIsLocked); // DelegateFunction Tiger.TigerPlayerController.TigerOnCrossplaySettingLockChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerNextSpawn(); // Function Tiger.TigerPlayerController.TigerNextSpawn // (Final|Exec|Native|Protected) // @ game+0xb5ee20
	void TigerLogState(bool bShouldLog); // Function Tiger.TigerPlayerController.TigerLogState // (Final|Exec|Native|Public) // @ game+0x139d430
	void TigerLogAllSyncedMasqueradeInstances(float InScreenDuration); // Function Tiger.TigerPlayerController.TigerLogAllSyncedMasqueradeInstances // (Final|Exec|Native|Public) // @ game+0x13bc900
	void TigerLoadPlayerLocation(); // Function Tiger.TigerPlayerController.TigerLoadPlayerLocation // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerLoadLocalStoreConfig(enum class ETigerMetaStoreCategoryType InStoreCategoryType, struct FString InFilePath); // Function Tiger.TigerPlayerController.TigerLoadLocalStoreConfig // (Final|Exec|Native|Public) // @ game+0x1486db0
	void TigerKickMe(); // Function Tiger.TigerPlayerController.TigerKickMe // (Final|Exec|Native|Public) // @ game+0x1486d90
	void TigerHideClimbPrompt__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerHideClimbPrompt__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerGetNpcCount(); // Function Tiger.TigerPlayerController.TigerGetNpcCount // (Final|Exec|Native|Public) // @ game+0x1486d70
	void TigerGetMovingNpcCount(); // Function Tiger.TigerPlayerController.TigerGetMovingNpcCount // (Final|Exec|Native|Public) // @ game+0x1486d50
	void TigerFreeze(double InSeconds); // Function Tiger.TigerPlayerController.TigerFreeze // (Final|Exec|Native|Public) // @ game+0x1486cd0
	void TigerFakeMatchmakingReady(int32_t InGameModeIndex); // Function Tiger.TigerPlayerController.TigerFakeMatchmakingReady // (Final|Exec|Native|Public) // @ game+0x1486c40
	void TigerFakeLaunchActivity(struct FString InSoloOrGroup); // Function Tiger.TigerPlayerController.TigerFakeLaunchActivity // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerEndMatch(); // Function Tiger.TigerPlayerController.TigerEndMatch // (Final|Exec|Native|Public) // @ game+0x1486c20
	void TigerEnableServerAutoStats(); // Function Tiger.TigerPlayerController.TigerEnableServerAutoStats // (Final|Exec|Native|Public) // @ game+0x1486c00
	void TigerDumpLocomotionData(); // Function Tiger.TigerPlayerController.TigerDumpLocomotionData // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerDisableGamepad(); // Function Tiger.TigerPlayerController.TigerDisableGamepad // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerDeleteCharacterSlot(char InCharacterSlot); // Function Tiger.TigerPlayerController.TigerDeleteCharacterSlot // (Final|Exec|Native|Public) // @ game+0x1486b80
	void TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime); // Function Tiger.TigerPlayerController.TigerDebugTraversalStates // (Final|Exec|Native|Public) // @ game+0x1486a50
	void TigerDebugPrintRootMotionFlags(); // Function Tiger.TigerPlayerController.TigerDebugPrintRootMotionFlags // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerDebugPreMatchState(); // Function Tiger.TigerPlayerController.TigerDebugPreMatchState // (Final|Exec|Native|Public) // @ game+0x1486a30
	void TigerDebugPlayerProjectilePooling(int32_t InShouldShowPoolMovements); // Function Tiger.TigerPlayerController.TigerDebugPlayerProjectilePooling // (Final|Exec|Native|Public) // @ game+0x14869a0
	void TigerDebugLoadingStates(); // Function Tiger.TigerPlayerController.TigerDebugLoadingStates // (Final|Exec|Native|Public) // @ game+0x1486980
	void TigerDebugHolyIncense(); // Function Tiger.TigerPlayerController.TigerDebugHolyIncense // (Final|Exec|Native|Public) // @ game+0x1486960
	void TigerDebugGameFlowStates(); // Function Tiger.TigerPlayerController.TigerDebugGameFlowStates // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime); // Function Tiger.TigerPlayerController.TigerDebugDrawNpcMovementRestrictionBounds // (Final|Exec|Native|Public) // @ game+0x14868e0
	void TigerDebugCharacterSpeed(); // Function Tiger.TigerPlayerController.TigerDebugCharacterSpeed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void TigerDebugCharacterPath(float Duration); // Function Tiger.TigerPlayerController.TigerDebugCharacterPath // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13bc900
	void TigerDeactivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.TigerDeactivateMasqueradeConsequence // (Final|Exec|Native|Public) // @ game+0x13bc230
	void TigerCancelPsoCaching__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerCancelPsoCaching__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerCameraUrl(); // Function Tiger.TigerPlayerController.TigerCameraUrl // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerBuildVersion(); // Function Tiger.TigerPlayerController.TigerBuildVersion // (Final|Exec|Native|Public) // @ game+0x14868c0
	void TigerBuildScreenshotMap(); // Function Tiger.TigerPlayerController.TigerBuildScreenshotMap // (Final|Exec|Native|Public) // @ game+0x14868a0
	void TigerBotGodAll(bool InGod); // Function Tiger.TigerPlayerController.TigerBotGodAll // (Final|Exec|Native|Public) // @ game+0x1486810
	void TigerBotGod(int32_t InBotIndex, bool InGod); // Function Tiger.TigerPlayerController.TigerBotGod // (Final|Exec|Native|Public) // @ game+0x1486740
	void TigerBecomeBloodhunted(); // Function Tiger.TigerPlayerController.TigerBecomeBloodhunted // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerBackendUrl(); // Function Tiger.TigerPlayerController.TigerBackendUrl // (Final|Exec|Native|Public) // @ game+0x1486720
	void TigerAllBecomeBloodhunted(); // Function Tiger.TigerPlayerController.TigerAllBecomeBloodhunted // (Final|Exec|Native|Public) // @ game+0xb5ee20
	void TigerAddItem(struct FString ItemName, int32_t Count); // Function Tiger.TigerPlayerController.TigerAddItem // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14712a0
	void TigerActivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.TigerActivateMasqueradeConsequence // (Final|Exec|Native|Public) // @ game+0x13bc230
	void StartAttackMouse(); // Function Tiger.TigerPlayerController.StartAttackMouse // (Final|Native|Private|BlueprintCallable) // @ game+0x1486700
	void StartAttackGamepad(); // Function Tiger.TigerPlayerController.StartAttackGamepad // (Final|Native|Private|BlueprintCallable) // @ game+0x14866e0
	void ShutdownServer(); // Function Tiger.TigerPlayerController.ShutdownServer // (Final|Exec|Native|Public) // @ game+0x14866c0
	void ShowMouseCursor(bool bInShouldStopAlternateAction); // Function Tiger.TigerPlayerController.ShowMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x1486630
	bool ShouldPlayForceFeedback(); // Function Tiger.TigerPlayerController.ShouldPlayForceFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb4dde0
	bool ShouldHoldJumpToClimb(); // Function Tiger.TigerPlayerController.ShouldHoldJumpToClimb // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x1486600
	void SetupAsBot(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerPlayerController.SetupAsBot // (Final|Native|Protected) // @ game+0x1486570
	void SetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.SetPlayerIsReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x1486550
	void SetInCinematic(bool bCinematicState); // Function Tiger.TigerPlayerController.SetInCinematic // (Final|Native|Public|BlueprintCallable) // @ game+0x14864c0
	void SetHUDInputEnabled(bool bIsEnabled, bool bInShouldStopAlternateAction); // Function Tiger.TigerPlayerController.SetHUDInputEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x14863f0
	void SetGamepadLightColor(struct FColor& InColor, bool bInShouldPulse, float InPulseTime); // Function Tiger.TigerPlayerController.SetGamepadLightColor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14862c0
	void SetFogDensity(float Value); // Function Tiger.TigerPlayerController.SetFogDensity // (Final|Exec|Native|Public) // @ game+0x1486240
	void SetActiveFindSessionInstance(struct UTigerFindSessionAsync* FindSessionInstance); // Function Tiger.TigerPlayerController.SetActiveFindSessionInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x14861b0
	void Server_ToggleElysiumMobility(); // Function Tiger.TigerPlayerController.Server_ToggleElysiumMobility // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1486160
	void Server_TigerTrackLocomotionData(); // Function Tiger.TigerPlayerController.Server_TigerTrackLocomotionData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1486110
	void Server_TigerToggleServerGunSoundRpcs(); // Function Tiger.TigerPlayerController.Server_TigerToggleServerGunSoundRpcs // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14860c0
	void Server_TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation); // Function Tiger.TigerPlayerController.Server_TigerToggleDebugWallGrind // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485ef0
	void Server_TigerTestSpawnMechanic(); // Function Tiger.TigerPlayerController.Server_TigerTestSpawnMechanic // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485ea0
	void Server_TigerTeleportPlayer(struct FVector Location, struct FRotator Rotation); // Function Tiger.TigerPlayerController.Server_TigerTeleportPlayer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1485db0
	void Server_TigerTakeDamage(float DamageAmount); // Function Tiger.TigerPlayerController.Server_TigerTakeDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485cf0
	void Server_TigerStuck(float DropHeightInMeters); // Function Tiger.TigerPlayerController.Server_TigerStuck // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485c30
	void Server_TigerStopServerProfiler(); // Function Tiger.TigerPlayerController.Server_TigerStopServerProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485be0
	void Server_TigerStopServerNetworkProfiler(); // Function Tiger.TigerPlayerController.Server_TigerStopServerNetworkProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485b90
	void Server_TigerStartServerProfiler(float Duration); // Function Tiger.TigerPlayerController.Server_TigerStartServerProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485ad0
	void Server_TigerStartServerNetworkProfiler(float InDuration); // Function Tiger.TigerPlayerController.Server_TigerStartServerNetworkProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485a10
	void Server_TigerSkipSpawnCountdownTimer(); // Function Tiger.TigerPlayerController.Server_TigerSkipSpawnCountdownTimer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14859c0
	void Server_TigerShowNPCToPlayerSightData(float InScreenDuration); // Function Tiger.TigerPlayerController.Server_TigerShowNPCToPlayerSightData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485900
	void Server_TigerShowCaps(float DebugDrawLength); // Function Tiger.TigerPlayerController.Server_TigerShowCaps // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485840
	void Server_TigerServerConsoleExec(struct FString InExecString); // Function Tiger.TigerPlayerController.Server_TigerServerConsoleExec // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485780
	void Server_TigerSendPlayerServerPose(float InInterval); // Function Tiger.TigerPlayerController.Server_TigerSendPlayerServerPose // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14856c0
	void Server_TigerRevive(); // Function Tiger.TigerPlayerController.Server_TigerRevive // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485670
	void Server_TigerRestoreMasquerade(); // Function Tiger.TigerPlayerController.Server_TigerRestoreMasquerade // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485620
	void Server_TigerPrintTraversalState(float InScreenTime); // Function Tiger.TigerPlayerController.Server_TigerPrintTraversalState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485560
	void Server_TigerPrintServerTickRate(); // Function Tiger.TigerPlayerController.Server_TigerPrintServerTickRate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485510
	void Server_TigerPrintNumberOfPlayersInGame(); // Function Tiger.TigerPlayerController.Server_TigerPrintNumberOfPlayersInGame // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14854c0
	void Server_TigerNextSpawn(); // Function Tiger.TigerPlayerController.Server_TigerNextSpawn // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1485470
	void Server_TigerLogSignificance(); // Function Tiger.TigerPlayerController.Server_TigerLogSignificance // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485420
	void Server_TigerLoadLocalStoreConfig(enum class ETigerMetaStoreCategoryType InStoreCategoryType, struct FString InFilePath); // Function Tiger.TigerPlayerController.Server_TigerLoadLocalStoreConfig // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x1485330
	void Server_TigerEndMatch(); // Function Tiger.TigerPlayerController.Server_TigerEndMatch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14852e0
	void Server_TigerDumpLocomotionData(); // Function Tiger.TigerPlayerController.Server_TigerDumpLocomotionData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485290
	void Server_TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime); // Function Tiger.TigerPlayerController.Server_TigerDebugTraversalStates // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1485140
	void Server_TigerDebugPrematchState(); // Function Tiger.TigerPlayerController.Server_TigerDebugPrematchState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14850f0
	void Server_TigerDebugLoadingStates(); // Function Tiger.TigerPlayerController.Server_TigerDebugLoadingStates // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14850a0
	void Server_TigerDebugDrawPlayerGrid(float DebugDrawLifetime); // Function Tiger.TigerPlayerController.Server_TigerDebugDrawPlayerGrid // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484fe0
	void Server_TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime); // Function Tiger.TigerPlayerController.Server_TigerDebugDrawNpcMovementRestrictionBounds // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484f20
	void Server_TigerDebugCharacterPath(float Duration); // Function Tiger.TigerPlayerController.Server_TigerDebugCharacterPath // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484e60
	void Server_TigerDeactivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.Server_TigerDeactivateMasqueradeConsequence // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484da0
	void Server_TigerBecomeBloodhunted(bool bInAllPlayers); // Function Tiger.TigerPlayerController.Server_TigerBecomeBloodhunted // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484ce0
	void Server_TigerAddItem(struct UTigerItemAsset* ItemAsset, int32_t RequestedCount, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerPlayerController.Server_TigerAddItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484ba0
	void Server_TigerActivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.Server_TigerActivateMasqueradeConsequence // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484ae0
	void Server_TeleportToMapLocation(struct FVector2D Location); // Function Tiger.TigerPlayerController.Server_TeleportToMapLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable|NetValidate) // @ game+0x1484a30
	void Server_StopUsingConsumable(); // Function Tiger.TigerPlayerController.Server_StopUsingConsumable // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14849e0
	void Server_StopFireWeapon(); // Function Tiger.TigerPlayerController.Server_StopFireWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1484990
	void Server_StopBlocking(); // Function Tiger.TigerPlayerController.Server_StopBlocking // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1484940
	void Server_StopAiming(); // Function Tiger.TigerPlayerController.Server_StopAiming // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14848f0
	void Server_StartHeavySwing(bool bDisabledRootMotion); // Function Tiger.TigerPlayerController.Server_StartHeavySwing // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1484830
	void Server_StartBlocking(); // Function Tiger.TigerPlayerController.Server_StartBlocking // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14847e0
	void Server_StartAiming(); // Function Tiger.TigerPlayerController.Server_StartAiming // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1484790
	void Server_Spectate(); // Function Tiger.TigerPlayerController.Server_Spectate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484740
	void Server_SpawnBots(int32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.Server_SpawnBots // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484680
	void Server_ShutdownServer(); // Function Tiger.TigerPlayerController.Server_ShutdownServer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484630
	void Server_SetRespawn(int32_t RespawnType); // Function Tiger.TigerPlayerController.Server_SetRespawn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484570
	void Server_SetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.Server_SetPlayerIsReadyToPlay // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1484520
	void Server_SetMatchmakingID(int32_t InMatchmakingID); // Function Tiger.TigerPlayerController.Server_SetMatchmakingID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1484490
	void Server_SetLastPlayedMatchGameMode(struct TArray<struct FString> InPlayerIds, int32_t InGameModeIndex, struct FString InGameModeId); // Function Tiger.TigerPlayerController.Server_SetLastPlayedMatchGameMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1484330
	void Server_SetBloodVeinMoveSpeedMultipliers(float InMainSpeedMultiplier, float InBranchSpeedMultiplier); // Function Tiger.TigerPlayerController.Server_SetBloodVeinMoveSpeedMultipliers // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1484230
	void Server_ResetDialogues(); // Function Tiger.TigerPlayerController.Server_ResetDialogues // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14841e0
	void Server_RequestNewSpawnLocation(struct FVector InDesiredSpawnLocation); // Function Tiger.TigerPlayerController.Server_RequestNewSpawnLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1484130
	void Server_ReloadWeapon(char InRequestId); // Function Tiger.TigerPlayerController.Server_ReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1484080
	void Server_MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory, struct ATigerBaseNPC* InteractingCharacter); // Function Tiger.TigerPlayerController.Server_MarkDialogueAsRead // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1483ee0
	void Server_LeaveMatchAndRequestMatchStats(); // Function Tiger.TigerPlayerController.Server_LeaveMatchAndRequestMatchStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1483e90
	void Server_KillSelf(); // Function Tiger.TigerPlayerController.Server_KillSelf // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483e40
	void Server_KickMe(); // Function Tiger.TigerPlayerController.Server_KickMe // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483df0
	void Server_Jump(); // Function Tiger.TigerPlayerController.Server_Jump // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1483da0
	void Server_GhostFollowPrevPlayer(); // Function Tiger.TigerPlayerController.Server_GhostFollowPrevPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1483d50
	void Server_GhostFollowNextPlayer(); // Function Tiger.TigerPlayerController.Server_GhostFollowNextPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1483d00
	void Server_GetNpcCount(); // Function Tiger.TigerPlayerController.Server_GetNpcCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483cb0
	void Server_GetMovingNpcCount(); // Function Tiger.TigerPlayerController.Server_GetMovingNpcCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483c60
	void Server_FireWeaponMulti(int32_t InFirstProjectileId, struct FVector_NetQuantize10 InPreviousCharacterLocation, struct TArray<struct FTigerFireProjectileDataInterpolated> InProjectiles); // Function Tiger.TigerPlayerController.Server_FireWeaponMulti // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483b10
	void Server_FireWeapon(int32_t InProjectileId, struct FVector_NetQuantize10 InPreviousCharacterLocation, struct FTigerFireProjectileData InProjectile); // Function Tiger.TigerPlayerController.Server_FireWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14839c0
	void Server_FakeMatchmakingReady(int32_t InGameModeIndex); // Function Tiger.TigerPlayerController.Server_FakeMatchmakingReady // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483900
	void Server_EquipWeapon(enum class ETigerWeaponSlot WeaponSlot, bool bInstantSwitch, char RequestId); // Function Tiger.TigerPlayerController.Server_EquipWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14837b0
	void Server_EnableServerAutoStats(); // Function Tiger.TigerPlayerController.Server_EnableServerAutoStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1483790
	void Server_EnableLootBox(struct ATigerLootBox* LootBox); // Function Tiger.TigerPlayerController.Server_EnableLootBox // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x14836d0
	void Server_DiscoveredSHPB(struct ATigerSHPBMarker* DiscoveredMarker); // Function Tiger.TigerPlayerController.Server_DiscoveredSHPB // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1483610
	void Server_ClientReportRangedWeaponHits(struct TArray<struct FTigerRangedHitInfo> InHits); // Function Tiger.TigerPlayerController.Server_ClientReportRangedWeaponHits // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483550
	void Server_ClientReportRangedWeaponHit(struct FTigerRangedHitInfo InHit); // Function Tiger.TigerPlayerController.Server_ClientReportRangedWeaponHit // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14834a0
	void Server_Cheat_UpdateSeasonProgress(int32_t InExpToAdd, int32_t InLevelsToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_UpdateSeasonProgress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14833a0
	void Server_Cheat_UnlockVanityItem(struct FString InItemName); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockVanityItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14832e0
	void Server_Cheat_UnlockAllPerks(); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockAllPerks // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483290
	void Server_Cheat_UnlockAllItemsInDatabase(); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockAllItemsInDatabase // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483240
	void Server_Cheat_ToggleNoAggro(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleNoAggro // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14831f0
	void Server_Cheat_ToggleGod(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleGod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14831a0
	void Server_Cheat_ToggleFreeReload(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleFreeReload // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483150
	void Server_Cheat_TigerSetSessionProgressToBattlepassLevel(int32_t InLevel, bool bInShouldOwnBattlepass); // Function Tiger.TigerPlayerController.Server_Cheat_TigerSetSessionProgressToBattlepassLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483050
	void Server_Cheat_TigerCompleteNextTierMastery(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextTierMastery // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1483000
	void Server_Cheat_TigerCompleteNextChallengeWeekly(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeWeekly // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482fb0
	void Server_Cheat_TigerCompleteNextChallengeMastery(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeMastery // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482f60
	void Server_Cheat_TigerCompleteNextChallengeDaily(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeDaily // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482f10
	void Server_Cheat_SubmitChallengeProgress(); // Function Tiger.TigerPlayerController.Server_Cheat_SubmitChallengeProgress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482ec0
	void Server_Cheat_SpawnNpcsInCircle(struct FName InNpcType, struct FVector InLocation, int32_t InCount); // Function Tiger.TigerPlayerController.Server_Cheat_SpawnNpcsInCircle // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1482d70
	void Server_Cheat_SpawnNpc(struct FName NPCType, struct FVector Location, enum class ETigerBloodPotency InPotency, enum class ETigerBloodType InBloodType); // Function Tiger.TigerPlayerController.Server_Cheat_SpawnNpc // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1482be0
	void Server_Cheat_Slomo(float NewTimeDilation); // Function Tiger.TigerPlayerController.Server_Cheat_Slomo // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1482b20
	void Server_Cheat_SetPlayerLevel(int32_t InPlayerLevel); // Function Tiger.TigerPlayerController.Server_Cheat_SetPlayerLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482a60
	void Server_Cheat_SetMatchesPlayed(int32_t InNumberMatches); // Function Tiger.TigerPlayerController.Server_Cheat_SetMatchesPlayed // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14829a0
	void Server_Cheat_SetHolyIncenseElapsedTime(float InTotalElapsedTime, float InSpeedMultiplier); // Function Tiger.TigerPlayerController.Server_Cheat_SetHolyIncenseElapsedTime // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14828a0
	void Server_Cheat_SetBotGodAll(bool InGod); // Function Tiger.TigerPlayerController.Server_Cheat_SetBotGodAll // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14827e0
	void Server_Cheat_SetBotGod(int32_t InBotIndex, bool InGod); // Function Tiger.TigerPlayerController.Server_Cheat_SetBotGod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14826e0
	void Server_Cheat_SetArchetypeLevel(int32_t InArchetypeLevel); // Function Tiger.TigerPlayerController.Server_Cheat_SetArchetypeLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482620
	void Server_Cheat_ResetDialogueCategories(); // Function Tiger.TigerPlayerController.Server_Cheat_ResetDialogueCategories // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14825d0
	void Server_Cheat_RemoveHolyIncense(); // Function Tiger.TigerPlayerController.Server_Cheat_RemoveHolyIncense // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482580
	void Server_Cheat_RegisterGrimoireEntryAsUnread(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsUnread // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14824c0
	void Server_Cheat_RegisterGrimoireEntryAsUnlocked(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsUnlocked // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482400
	void Server_Cheat_RegisterGrimoireEntryAsLocked(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsLocked // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482340
	void Server_Cheat_MatchAddPlayerExp(int32_t InPlayerExp); // Function Tiger.TigerPlayerController.Server_Cheat_MatchAddPlayerExp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482280
	void Server_Cheat_MatchAddArchetypeExp(int32_t InArchetypeExp); // Function Tiger.TigerPlayerController.Server_Cheat_MatchAddArchetypeExp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14821c0
	void Server_Cheat_IncrementPremiumCurrency(uint64_t InAmountToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_IncrementPremiumCurrency // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482100
	void Server_Cheat_ForceOnlineError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerPlayerController.Server_Cheat_ForceOnlineError // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1482010
	void Server_Cheat_DisableDisciplineCost(); // Function Tiger.TigerPlayerController.Server_Cheat_DisableDisciplineCost // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1481fc0
	void Server_Cheat_DestroyNpcWithinRadius(float InRadius, bool bInExludeDebugTarget); // Function Tiger.TigerPlayerController.Server_Cheat_DestroyNpcWithinRadius // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1481eb0
	void Server_Cheat_DebugHolyIncense(); // Function Tiger.TigerPlayerController.Server_Cheat_DebugHolyIncense // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1481e60
	void Server_Cheat_Crash(); // Function Tiger.TigerPlayerController.Server_Cheat_Crash // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1481e10
	void Server_Cheat_ChangeRespawnLifeTokens(int32_t InChange); // Function Tiger.TigerPlayerController.Server_Cheat_ChangeRespawnLifeTokens // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1481d50
	void Server_Cheat_BringMeHome(); // Function Tiger.TigerPlayerController.Server_Cheat_BringMeHome // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1481d00
	void Server_Cheat_AddSoftCurrency(int32_t InAmount, uint64_t InCurrencyId); // Function Tiger.TigerPlayerController.Server_Cheat_AddSoftCurrency // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1481c00
	void Server_Cheat_ActivateEvent(uint32_t InEventid, bool InActivate); // Function Tiger.TigerPlayerController.Server_Cheat_ActivateEvent // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1481b00
	void Server_CancelHeavyAttack(); // Function Tiger.TigerPlayerController.Server_CancelHeavyAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1481ab0
	void Server_ActivateCarAlarm(struct FTigerAIPlayerAction InPlayerAction); // Function Tiger.TigerPlayerController.Server_ActivateCarAlarm // (Final|Net|NetReliableNative|Event|Private|NetServer|BlueprintCallable|NetValidate) // @ game+0x1481970
	void Server_AbortReloadWeapon(char InRequestId); // Function Tiger.TigerPlayerController.Server_AbortReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14818c0
	void Server_AbortChannelingDiscipline(enum class ETigerDisciplinesEnum DisciplineEnum); // Function Tiger.TigerPlayerController.Server_AbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1481810
	void ResetInventoryKeyHoldTime(); // Function Tiger.TigerPlayerController.ResetInventoryKeyHoldTime // (Final|Native|Public|BlueprintCallable) // @ game+0x14817f0
	void ResetGamepadLightColor(); // Function Tiger.TigerPlayerController.ResetGamepadLightColor // (Final|Native|Public|BlueprintCallable) // @ game+0x14817d0
	void ResetActions(); // Function Tiger.TigerPlayerController.ResetActions // (Final|Native|Public|BlueprintCallable) // @ game+0x14817b0
	void ReleaseWeaponAbility(); // Function Tiger.TigerPlayerController.ReleaseWeaponAbility // (Final|Native|Private|BlueprintCallable) // @ game+0x1481790
	void RefreshEquippedWeapon(); // Function Tiger.TigerPlayerController.RefreshEquippedWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1481770
	void RecordShockwaveWallAchievementProgress(int32_t InDamageBlocked, struct ATigerShockwaveWall* InShockwaveWall); // Function Tiger.TigerPlayerController.RecordShockwaveWallAchievementProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x14816a0
	int32_t PostEventPersistent(struct UAkAudioEvent* InEvent); // Function Tiger.TigerPlayerController.PostEventPersistent // (Final|Native|Public|BlueprintCallable) // @ game+0x1481600
	int32_t PostEventControllerSpeaker(struct UAkAudioEvent* InEvent); // Function Tiger.TigerPlayerController.PostEventControllerSpeaker // (Final|Native|Public|BlueprintCallable) // @ game+0x1481560
	void PingClosestResurrectAltar(); // Function Tiger.TigerPlayerController.PingClosestResurrectAltar // (Final|Native|Protected|BlueprintCallable) // @ game+0x1481540
	void OnToggleMainMenu(); // Function Tiger.TigerPlayerController.OnToggleMainMenu // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnToggleInventory(); // Function Tiger.TigerPlayerController.OnToggleInventory // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPreMatchAssetsLoadedMulti__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnPreMatchAssetsLoadedMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPreMatchAssetsLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnPreMatchAssetsLoaded__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void OnPlayerStateCreated__DelegateSignature(struct ATigerPlayerState* TigerPlayerState); // DelegateFunction Tiger.TigerPlayerController.OnPlayerStateCreated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPersistentPlayerInitialisedSingle__DelegateSignature(struct ATigerPlayerController* PlayerController); // DelegateFunction Tiger.TigerPlayerController.OnPersistentPlayerInitialisedSingle__DelegateSignature // (Public|Delegate) // @ game+0x184a280
	void OnPersistentPlayerInitialised__DelegateSignature(struct ATigerPlayerController* PlayerController); // DelegateFunction Tiger.TigerPlayerController.OnPersistentPlayerInitialised__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPersistentPlayerInitialised(); // Function Tiger.TigerPlayerController.OnPersistentPlayerInitialised // (Native|Protected) // @ game+0x1481400
	void OnLastWaveFinished(); // Function Tiger.TigerPlayerController.OnLastWaveFinished // (Final|Native|Private) // @ game+0x14813e0
	void OnItemPickedUp__DelegateSignature(struct UTigerItemAsset* Item, int32_t Count); // DelegateFunction Tiger.TigerPlayerController.OnItemPickedUp__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnInventoryToggled__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnInventoryToggled__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnInitialLevelStreamingCompleted__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnInitialLevelStreamingCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnInGameMenuToggled(bool bIsOpen); // Function Tiger.TigerPlayerController.OnInGameMenuToggled // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnGhostModeSet__DelegateSignature(bool bIsGhostModeEnabled); // DelegateFunction Tiger.TigerPlayerController.OnGhostModeSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnDownedEnemyPlayer__DelegateSignature(struct ATigerPlayer* InPlayer); // DelegateFunction Tiger.TigerPlayerController.OnDownedEnemyPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnControllerConnectionChanged__DelegateSignature(bool InConnected, int32_t InControllerId); // DelegateFunction Tiger.TigerPlayerController.OnControllerConnectionChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnClientChallengesCollectionCreated__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnClientChallengesCollectionCreated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnClanLevelUpdated__DelegateSignature(uint32_t OldLevel, uint32_t NewLevel); // DelegateFunction Tiger.TigerPlayerController.OnClanLevelUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnBeginPlay__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnBeginPlay__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnApplicationFocusChanged(bool bIsFocused); // Function Tiger.TigerPlayerController.OnApplicationFocusChanged // (Final|Native|Private) // @ game+0x1481350
	void OnAimUpdated(bool bIsAiming); // Function Tiger.TigerPlayerController.OnAimUpdated // (Final|Native|Private) // @ game+0x14812c0
	void MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory); // Function Tiger.TigerPlayerController.MarkDialogueAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x14811a0
	struct UTigerSharedMouseCursor* MakeSharedMouseCursor(); // Function Tiger.TigerPlayerController.MakeSharedMouseCursor // (Final|Native|Public) // @ game+0x1481170
	void KillSelf(); // Function Tiger.TigerPlayerController.KillSelf // (Final|Exec|Native|Public) // @ game+0x1481150
	bool IsWheelUIOpen(); // Function Tiger.TigerPlayerController.IsWheelUIOpen // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x1481120
	bool IsUsingCrosshairDebug(); // Function Tiger.TigerPlayerController.IsUsingCrosshairDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480e40
	bool IsSpectating(); // Function Tiger.TigerPlayerController.IsSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14810f0
	bool IsRespawnFeatureEnabled(); // Function Tiger.TigerPlayerController.IsRespawnFeatureEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14810a0
	bool IsProbablyUsingGamepadInput(); // Function Tiger.TigerPlayerController.IsProbablyUsingGamepadInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1481080
	bool IsPreSpawnStreamingDone(); // Function Tiger.TigerPlayerController.IsPreSpawnStreamingDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1481050
	void IsPreMatchAssetsLoadedAsync(struct FDelegate& InDelegate); // Function Tiger.TigerPlayerController.IsPreMatchAssetsLoadedAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1480fa0
	bool IsLocalBot(); // Function Tiger.TigerPlayerController.IsLocalBot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480f80
	bool IsInTutorial(); // Function Tiger.TigerPlayerController.IsInTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480f50
	bool IsInTransferFromMatch(); // Function Tiger.TigerPlayerController.IsInTransferFromMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480f20
	bool IsInMatch(); // Function Tiger.TigerPlayerController.IsInMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480ef0
	bool IsInElysium(); // Function Tiger.TigerPlayerController.IsInElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480ec0
	bool IsInCinematic(); // Function Tiger.TigerPlayerController.IsInCinematic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480ea0
	bool IsInBenchmark(); // Function Tiger.TigerPlayerController.IsInBenchmark // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480e70
	bool IsGhostModeEnabled(); // Function Tiger.TigerPlayerController.IsGhostModeEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480e40
	void InGameMenuToggled(bool bIsOpen); // Function Tiger.TigerPlayerController.InGameMenuToggled // (Final|Native|Public) // @ game+0x1480db0
	void HideMouseCursor(); // Function Tiger.TigerPlayerController.HideMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x1480d90
	bool HasWeaponForSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerPlayerController.HasWeaponForSlot // (Final|Native|Private|BlueprintCallable) // @ game+0x1480d00
	bool HasRangedWeaponCurrentlyEquipped(); // Function Tiger.TigerPlayerController.HasRangedWeaponCurrentlyEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480cd0
	bool HasLocalPlayerSpawned(); // Function Tiger.TigerPlayerController.HasLocalPlayerSpawned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480cb0
	bool HasLoadedRewards(); // Function Tiger.TigerPlayerController.HasLoadedRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480c80
	bool HasBegunPlay(); // Function Tiger.TigerPlayerController.HasBegunPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480c50
	void HandlePreSpawnLoadingCheckTimerTick(); // Function Tiger.TigerPlayerController.HandlePreSpawnLoadingCheckTimerTick // (Final|Native|Private) // @ game+0x1480c00
	struct ATigerSpectatorPawn* GetTigerSpectatorPawn(); // Function Tiger.TigerPlayerController.GetTigerSpectatorPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480ba0
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerPlayerController.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x94ee50
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerPlayerController.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480b80
	struct UTigerPersistentPlayerState* GetTigerPersistentPlayerState(); // Function Tiger.TigerPlayerController.GetTigerPersistentPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480b50
	struct ATigerMatchHUD* GetTigerMatchHUD(); // Function Tiger.TigerPlayerController.GetTigerMatchHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480b20
	struct UTigerGameInstance* GetTigerGameInstance(); // Function Tiger.TigerPlayerController.GetTigerGameInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480af0
	struct ATigerElysiumHUD* GetTigerElysiumHUD(); // Function Tiger.TigerPlayerController.GetTigerElysiumHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480ac0
	struct ATigerHUD* GetTigerBaseHUD(); // Function Tiger.TigerPlayerController.GetTigerBaseHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480a90
	struct FVector2D GetRightStickAnalogValues(); // Function Tiger.TigerPlayerController.GetRightStickAnalogValues // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480a50
	struct UTigerPromptCollectionWidget* GetPromptCollection(); // Function Tiger.TigerPlayerController.GetPromptCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480a20
	struct UTigerMapGameData* GetMapGameData(); // Function Tiger.TigerPlayerController.GetMapGameData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480a00
	struct FVector2D GetLeftStickAnalogValues(); // Function Tiger.TigerPlayerController.GetLeftStickAnalogValues // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14809c0
	bool GetHoldForInventory(); // Function Tiger.TigerPlayerController.GetHoldForInventory // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480990
	struct UTigerDisciplineComponent* GetDisciplineComponenet(); // Function Tiger.TigerPlayerController.GetDisciplineComponenet // (Final|Native|Public|BlueprintCallable) // @ game+0x1480960
	enum class ETigerWeaponSlot GetCurrentlyEquippedSlot(); // Function Tiger.TigerPlayerController.GetCurrentlyEquippedSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480930
	bool GetCrossPlaySettingLock(); // Function Tiger.TigerPlayerController.GetCrossPlaySettingLock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480910
	struct UTigerClientSeasonalRewardCollection* GetClientSeasonalRewardCollection(); // Function Tiger.TigerPlayerController.GetClientSeasonalRewardCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14808f0
	struct UTigerClientChallengesCollection* GetClientChallengesCollection(); // Function Tiger.TigerPlayerController.GetClientChallengesCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14808d0
	struct ATigerBloodVeinPawn* GetBloodVeinPawn(); // Function Tiger.TigerPlayerController.GetBloodVeinPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14808b0
	struct FVector2D GetAnalogueCursorDelta(); // Function Tiger.TigerPlayerController.GetAnalogueCursorDelta // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480870
	struct UTigerFindSessionAsync* GetActiveFindSessionInstance(); // Function Tiger.TigerPlayerController.GetActiveFindSessionInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480840
	void FlushSpecificInputValue(struct FName& InActionName, bool bInIsAxis); // Function Tiger.TigerPlayerController.FlushSpecificInputValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1480740
	void FlushInputValues(); // Function Tiger.TigerPlayerController.FlushInputValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1480720
	bool EquipWeaponForSlot(enum class ETigerWeaponSlot Slot, bool bInstantSwitch, bool bNotifyServer); // Function Tiger.TigerPlayerController.EquipWeaponForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1480600
	void EnableGhostMode(); // Function Tiger.TigerPlayerController.EnableGhostMode // (Final|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	bool DesiresAiming(); // Function Tiger.TigerPlayerController.DesiresAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14805d0
	void Debug_ShowCharacterCard(); // Function Tiger.TigerPlayerController.Debug_ShowCharacterCard // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Client_StopBlocking(); // Function Tiger.TigerPlayerController.Client_StopBlocking // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14805b0
	void Client_ShowWinScreen(); // Function Tiger.TigerPlayerController.Client_ShowWinScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1480590
	void Client_ShowDeathScreen(int8_t InPlayerPlacement, int8_t InNumGroupsAtStart, int32_t InPlayerStateId, enum class ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose); // Function Tiger.TigerPlayerController.Client_ShowDeathScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14803f0
	void Client_SetPlayerSpawnLocation(struct FVector InSpawnLocation); // Function Tiger.TigerPlayerController.Client_SetPlayerSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x1480370
	void Client_SetMatchStats(struct FTigerMatchStats MatchStats); // Function Tiger.TigerPlayerController.Client_SetMatchStats // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x14801c0
	void Client_SetLastPlayedMatchGameMode(int32_t InGameModeIndex, struct FString InGameModeId); // Function Tiger.TigerPlayerController.Client_SetLastPlayedMatchGameMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14800e0
	void Client_SetIsBenchmarkController(bool bInIsBenchmarkController); // Function Tiger.TigerPlayerController.Client_SetIsBenchmarkController // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1480050
	void Client_SetCameraRotation(float InYaw, float InPitch); // Function Tiger.TigerPlayerController.Client_SetCameraRotation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147ff80
	void Client_SendMapSelectionInformation(struct TArray<struct FTigerClientSpawnLocationInfo> InSpawnInformation); // Function Tiger.TigerPlayerController.Client_SendMapSelectionInformation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147fee0
	void Client_RecordCachedAchievementProgress(struct FName InAchievementName, float InCachedGasDamage); // Function Tiger.TigerPlayerController.Client_RecordCachedAchievementProgress // (Net|Native|Event|Public|NetClient) // @ game+0x147fe00
	void Client_ReceiveLootBoxContentUpdate(struct ATigerLootBox* LootBox, struct TArray<struct FTigerItemData> ReceivedItemList); // Function Tiger.TigerPlayerController.Client_ReceiveLootBoxContentUpdate // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147fd10
	void Client_PrintString(struct FString InMessage, float InScreenDuration, bool bInWriteToLog, struct FColor InColor, bool bInNewerOntop); // Function Tiger.TigerPlayerController.Client_PrintString // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x147fb40
	void Client_OnPlayerKicked(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerPlayerController.Client_OnPlayerKicked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147fa90
	void Client_OnPlayerDeath(int32_t InPlayerStateId, int32_t InInstigatorStateId, bool bIsPlayerInSameGroup); // Function Tiger.TigerPlayerController.Client_OnPlayerDeath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f980
	void Client_OnEliminatedPlayer(int32_t InPlayerStateId, bool bInWasBloodHunted); // Function Tiger.TigerPlayerController.Client_OnEliminatedPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f8b0
	void Client_OnDownedPlayer(struct ATigerPlayer* InDownedPlayer, bool bInBloodHunted, struct FTigerDamageContext InDamageContext); // Function Tiger.TigerPlayerController.Client_OnDownedPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f750
	void Client_InvalidateReadyToPlayStateAndRequestRecheck(); // Function Tiger.TigerPlayerController.Client_InvalidateReadyToPlayStateAndRequestRecheck // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f730
	void Client_HighlightItem(struct ATigerItemWorldRepresentation* Item); // Function Tiger.TigerPlayerController.Client_HighlightItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f6a0
	void Client_HandleBenchmarkTestsStarted(struct FString InOutputFile); // Function Tiger.TigerPlayerController.Client_HandleBenchmarkTestsStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f600
	void Client_HandleBenchmarkTestsFinished(); // Function Tiger.TigerPlayerController.Client_HandleBenchmarkTestsFinished // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f5e0
	void Client_FinishReloadWeapon(char InRequestId, enum class ETigerWeaponSlot InSlot, uint16_t InAmmoInWeapon, uint16_t InAmmoInInventory); // Function Tiger.TigerPlayerController.Client_FinishReloadWeapon // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f490
	void Client_EquipWeaponFailed(enum class ETigerWeaponSlot WeaponSlot, char RequestId); // Function Tiger.TigerPlayerController.Client_EquipWeaponFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x147f3c0
	void Client_DebugDrawShapes(struct TArray<struct FTigerNetworkedDebugShape> Shapes); // Function Tiger.TigerPlayerController.Client_DebugDrawShapes // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f2a0
	void Client_DebugDrawShape(struct FTigerNetworkedDebugShape Shape); // Function Tiger.TigerPlayerController.Client_DebugDrawShape // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f210
	void Client_Debug_DrawServerProjectileSpawnLocation(struct FVector ProjectileSpawnLocation); // Function Tiger.TigerPlayerController.Client_Debug_DrawServerProjectileSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x147f340
	void Client_AbortReloadWeapon(char InRequestId, enum class ETigerWeaponSlot InSlot, uint16_t InAmmoInWeapon, uint16_t InAmmoInInventory); // Function Tiger.TigerPlayerController.Client_AbortReloadWeapon // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x147f0c0
	bool CheckShouldShowClimbPrompt(); // Function Tiger.TigerPlayerController.CheckShouldShowClimbPrompt // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x147f090
	void Cheat_ToggleUIVisibility(); // Function Tiger.TigerPlayerController.Cheat_ToggleUIVisibility // (Final|Exec|Native|Public) // @ game+0xb5ee20
	bool CanUpdateChallengesInElysium(); // Function Tiger.TigerPlayerController.CanUpdateChallengesInElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb4dde0
	void CancelFindSession(enum class ETigerTelemetryMatchmackingCancelReason InCancelReason); // Function Tiger.TigerPlayerController.CancelFindSession // (Final|Native|Public|BlueprintCallable) // @ game+0x147f010
	void CancelDesireAiming(); // Function Tiger.TigerPlayerController.CancelDesireAiming // (Final|Native|Public) // @ game+0x147eff0
	void AttackRelease(); // Function Tiger.TigerPlayerController.AttackRelease // (Final|Native|Private|BlueprintCallable) // @ game+0x147efd0
};

// Class Tiger.TigerPlayerDataService
// Size: 0x60 (Inherited: 0x28)
struct UTigerPlayerDataService : UObject {
	char pad_28[0x28]; // 0x28(0x28)
	struct UTigerRequestUtility* TigerRequestUtility; // 0x50(0x08)
	char pad_58[0x8]; // 0x58(0x08)
};

// Class Tiger.TigerMacroExperienceAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerMacroExperienceAsset : UDataAsset {
	struct TMap<enum class ETigerPlayerEvent, int32_t> EventMacroExperience; // 0x30(0x50)
};

// Class Tiger.TigerMatchStatMedalRequirements
// Size: 0x70 (Inherited: 0x30)
struct UTigerMatchStatMedalRequirements : UDataAsset {
	struct FTigerPlayerMedalTiers Eliminations; // 0x30(0x10)
	struct FTigerPlayerMedalTiers Assists; // 0x40(0x10)
	struct FTigerPlayerMedalTiers Diableries; // 0x50(0x10)
	struct FTigerPlayerMedalTiers DamageDealt; // 0x60(0x10)
};

// Class Tiger.TigerPlayerGrid
// Size: 0x268 (Inherited: 0x228)
struct ATigerPlayerGrid : AActor {
	struct TArray<struct FTigerPlayerGridCell> Cells; // 0x228(0x10)
	struct FVector2D GridSize; // 0x238(0x08)
	int32_t GridRows; // 0x240(0x04)
	int32_t GridColumns; // 0x244(0x04)
	int32_t CellDirectNeighborsToCheck; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UBoxComponent* GridBoxComponent; // 0x250(0x08)
	bool bShowGrid; // 0x258(0x01)
	char pad_259[0xf]; // 0x259(0x0f)
};

// Class Tiger.TigerPlayerGroup
// Size: 0xa8 (Inherited: 0x28)
struct UTigerPlayerGroup : UObject {
	char pad_28[0x40]; // 0x28(0x40)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> Members; // 0x68(0x10)
	char pad_78[0x10]; // 0x78(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> Invitations; // 0x88(0x10)
	struct UTigerPingCoordinator* PingCoordinator; // 0x98(0x08)
	char pad_A0[0x8]; // 0xa0(0x08)

	void TigerOnReservedGroupMemberJoinedDelegate__DelegateSignature(struct UTigerPlayerGroup* InPlayerGroup, struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPlayerGroup.TigerOnReservedGroupMemberJoinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	struct TArray<struct ATigerPlayerState*> GetMembersAsRawPointers(); // Function Tiger.TigerPlayerGroup.GetMembersAsRawPointers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1490df0
};

// Class Tiger.TigerPlayerMarkerWidget
// Size: 0x2d0 (Inherited: 0x2d0)
struct UTigerPlayerMarkerWidget : UTigerMapMarkerWidget {

	void SetGroupPlayerIndex(char InPlayerIndex); // Function Tiger.TigerPlayerMarkerWidget.SetGroupPlayerIndex // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void HandleSpectateeChanged(struct ATigerPlayerState* InSpectatee, struct ATigerPlayerState* InPreviousSpectatee); // Function Tiger.TigerPlayerMarkerWidget.HandleSpectateeChanged // (Final|Native|Protected) // @ game+0x1490f90
	void HandlePlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerMarkerWidget.HandlePlayerStateCreated // (Final|Native|Protected) // @ game+0x1490f00
	void HandlePlayerPawnChanged(struct APawn* InNewPawn); // Function Tiger.TigerPlayerMarkerWidget.HandlePlayerPawnChanged // (Final|Native|Protected) // @ game+0x1490e70
};

// Class Tiger.TigerPlayerMasqueradeComponent
// Size: 0x160 (Inherited: 0xb0)
struct UTigerPlayerMasqueradeComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBloodHuntStateChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnBloodHuntStateUpdated; // 0xc0(0x10)
	struct UAkAudioEvent* MasqueradeBrokenAkAudioEvent; // 0xd0(0x08)
	struct UAkAudioEvent* MasqueradeRestoredAkAudioEvent; // 0xd8(0x08)
	struct TArray<struct UTigerMasqueradeConsequence*> PossibleMasqueradeConsequences; // 0xe0(0x10)
	struct TArray<struct UTigerMasqueradeConsequenceSyncInstance*> SyncedMasqueradeConsequenceInstances; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnMasqueradeConsequenceInstancedAdded; // 0x100(0x10)
	struct FMulticastInlineDelegate OnMasqueradeConsequenceInstancedRemoved; // 0x110(0x10)
	float MinimumConsequenceUpdateInterval; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct TArray<struct UTigerMasqueradeConsequence*> ActiveConsequences; // 0x128(0x10)
	struct TArray<struct FTigerConsequenceData> ReplicatedConsequences; // 0x138(0x10)
	char pad_148[0x18]; // 0x148(0x18)

	void OnRep_ConsequenceData(); // Function Tiger.TigerPlayerMasqueradeComponent.OnRep_ConsequenceData // (Final|Native|Public) // @ game+0x14915c0
	void OnMasqueradePointsAdded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerMasqueradeComponent.OnMasqueradePointsAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Multicast_UpdateConsequences(struct TArray<struct FTigerConsequenceUpdateData> InUpdateData); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_UpdateConsequences // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14912e0
	void Multicast_RemoveConsequences(struct TArray<int32_t> InConsequenceIds, enum class ETigerMasqueradeConsequenceDeactivationReason InDeactivationReason); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_RemoveConsequences // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14911f0
	void Multicast_RemoveConsequence(int32_t InConsequenceId, enum class ETigerMasqueradeConsequenceDeactivationReason InDeactivationReason); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_RemoveConsequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1491120
	void Multicast_AddConsequence(struct FTigerConsequenceData InMasqueradeConsequence); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_AddConsequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1491090
	bool IsBloodHunted(); // Function Tiger.TigerPlayerMasqueradeComponent.IsBloodHunted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1491060
	struct UTigerMasqueradeConsequenceSyncInstance* GetConsequenceInstance(struct UTigerMasqueradeConsequenceSyncInstance* InInstanceClass); // Function Tiger.TigerPlayerMasqueradeComponent.GetConsequenceInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1490d00
	void Client_UpdateConsequenceLatestPlayerAction(int32_t InConsequenceId, enum class ETigerAIPlayerAction InAction); // Function Tiger.TigerPlayerMasqueradeComponent.Client_UpdateConsequenceLatestPlayerAction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1490c30
	void AddMasqueradePointsCausedByNpcReacting(struct ATigerBaseNPC* InNpc, enum class ETigerAIPlayerAction InAction); // Function Tiger.TigerPlayerMasqueradeComponent.AddMasqueradePointsCausedByNpcReacting // (Final|Native|Public|BlueprintCallable) // @ game+0x1490b60
};

// Class Tiger.TigerMasqueradeConsequenceSyncInstance
// Size: 0x58 (Inherited: 0x28)
struct UTigerMasqueradeConsequenceSyncInstance : UObject {
	bool bShouldBeActiveForAffectedPlayer; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct ATigerPlayerState* AffectedPlayerState; // 0x30(0x08)
	struct ATigerPlayerController* LocalPlayerController; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)

	float GetExpectedTimeLeft(); // Function Tiger.TigerMasqueradeConsequenceSyncInstance.GetExpectedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1490da0
};

// Class Tiger.TigerMasqueradeConsequence
// Size: 0x60 (Inherited: 0x28)
struct UTigerMasqueradeConsequence : UObject {
	struct UTigerMasqueradeConsequenceSyncInstance* SyncInstanceClass; // 0x28(0x08)
	struct TArray<enum class ETigerAIPlayerAction> ActionsThatCanActivateConsequence; // 0x30(0x10)
	struct ATigerPlayer* PlayerOwner; // 0x40(0x08)
	struct FName ConsequenceName; // 0x48(0x08)
	float Duration; // 0x50(0x04)
	bool bShouldRefresh; // 0x54(0x01)
	char pad_55[0xb]; // 0x55(0x0b)
};

// Class Tiger.TigerMasqueradeActionMarker
// Size: 0x238 (Inherited: 0x228)
struct ATigerMasqueradeActionMarker : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	bool bOnlyVisibleInHeightenedSenses; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
};

// Class Tiger.TigerMasqueradeConsequenceActionWorldMaker
// Size: 0x68 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceActionWorldMaker : UTigerMasqueradeConsequence {
	struct ATigerMasqueradeActionMarker* MarkerClass; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceBloodHuntedSyncInstance
// Size: 0x80 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceBloodHuntedSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UUserWidget* MapMarkerClass; // 0x58(0x08)
	struct UTigerCompassMarkerWidget* CompassMarkerClass; // 0x60(0x08)
	struct UTexture2D* CompassMarkerTexture; // 0x68(0x08)
	struct FBloodHuntMarker Marker; // 0x70(0x10)
};

// Class Tiger.TigerMasqueradeConsequenceBloodHunted
// Size: 0x68 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceBloodHunted : UTigerMasqueradeConsequence {
	char pad_60[0x8]; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceCompassMarkerSyncInstance
// Size: 0x70 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceCompassMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UTigerCompassMarkerWidget* CompassMarkerClass; // 0x58(0x08)
	struct UTexture2D* CompassMarkerTexture; // 0x60(0x08)
	struct UTigerCompassMarkerWidget* CompassMarker; // 0x68(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceCompassMarker
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceCompassMarker : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance
// Size: 0x60 (Inherited: 0x58)
struct UTigerPlayerMasqueradeConsequenceHsRevealSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	bool bOnlyVisibleInHeightenedsSenses; // 0x58(0x01)
	bool bAffectedPlayerIsWithinLocalHsArea; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	void OnLeaveHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance.OnLeaveHsArea // (Final|Native|Public) // @ game+0x14914a0
	void OnEnterHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance.OnEnterHsArea // (Final|Native|Public) // @ game+0x1491380
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsReveal
// Size: 0x60 (Inherited: 0x60)
struct UTigerPlayerMasqueradeConsequenceHsReveal : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarkerSyncInstance
// Size: 0x70 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceMapAreaMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UTigerMasqueradeMarker* AreaMarkerClass; // 0x58(0x08)
	float AreaRadius; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct UTigerMasqueradeMarkerProxy* MapMarkerProxy; // 0x68(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarker
// Size: 0x70 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceMapAreaMarker : UTigerMasqueradeConsequence {
	char pad_60[0x10]; // 0x60(0x10)
};

// Class Tiger.TigerMasqueradeConsequenceMapMarkerSyncInstance
// Size: 0x68 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceMapMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UUserWidget* MapMarkerClass; // 0x58(0x08)
	struct UTigerMapMarkerProxy* MapMarkerProxy; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceMapMarker
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceMapMarker : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerMasqueradeConsequenceTrailSyncInstance
// Size: 0x60 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceTrailSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	bool bOnlyVisibleInHeightenedsSenses; // 0x58(0x01)
	bool bAffectedPlayerIsWithinLocalHsArea; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	void OnTrailDeactivated(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnTrailDeactivated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnTrailActivated(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnTrailActivated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnLeaveHsArea_Native(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnLeaveHsArea_Native // (Final|Native|Public) // @ game+0x1491530
	void OnLeaveHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnLeaveHsArea // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnEnterHsArea_Native(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnEnterHsArea_Native // (Final|Native|Public) // @ game+0x1491410
	void OnEnterHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnEnterHsArea // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMasqueradeConsequenceTrail
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceTrail : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerPlayerMeshManager
// Size: 0x2e8 (Inherited: 0x1e8)
struct UTigerPlayerMeshManager : UTigerCharacterMeshManager {
	struct FTigerPlayerMeshMaterialData MaterialData[0xb]; // 0x1e8(0xb0)
	struct TArray<struct FTigerPlayerMeshMaterialData> StaticMeshMaterialData; // 0x298(0x10)
	struct TArray<struct FTigerPlayerMeshMaterialData> PoseableMeshMaterialData; // 0x2a8(0x10)
	struct UMaterialInterface* CurrentOverrideMaterial; // 0x2b8(0x08)
	char pad_2C0[0x8]; // 0x2c0(0x08)
	struct TArray<struct FTigerPlayerMaterialOverrideCopyData> ScalarParametersToCopy; // 0x2c8(0x10)
	struct TArray<struct FTigerPlayerMaterialOverrideCopyData> VectorParametersToCopy; // 0x2d8(0x10)

	void ResetMaterials(); // Function Tiger.TigerPlayerMeshManager.ResetMaterials // (Final|Native|Public) // @ game+0x14916b0
	void OverrideMaterial(struct UMaterialInterface* InMaterial, float InTimeOutSeconds); // Function Tiger.TigerPlayerMeshManager.OverrideMaterial // (Final|Native|Public) // @ game+0x14915e0
};

// Class Tiger.TigerPlayerServerLoginProcess
// Size: 0x88 (Inherited: 0x28)
struct UTigerPlayerServerLoginProcess : UObject {
	struct TMap<struct FString, struct UTigerPlayerBeingLoggedInToServer*> playersBeingLoggedInToServerByUniqueLoginId; // 0x28(0x50)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerPlayerStart
// Size: 0x260 (Inherited: 0x258)
struct ATigerPlayerStart : APlayerStart {
	char GameTypeSpawnFlags; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
};

// Class Tiger.TigerPlayerStateDataStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerPlayerStateDataStatics : UBlueprintFunctionLibrary {

	struct FTigerPlayerStateGameData MakePlayerStateGameData(struct FString InPlayerName, enum class ESharkPlatformType InPlatformType); // Function Tiger.TigerPlayerStateDataStatics.MakePlayerStateGameData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1494b80
	bool IsStateDataValid(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerPlayerStateDataStatics.IsStateDataValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1494990
	void GetPlayerName(struct UObject* InWorldContextObject, struct FTigerPlayerStateGameData& InPlayerData, bool InIsInstigator, struct FText& OutPlayerName); // Function Tiger.TigerPlayerStateDataStatics.GetPlayerName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1494570
};

// Class Tiger.TigerPoiMarkerProxy
// Size: 0x108 (Inherited: 0x68)
struct UTigerPoiMarkerProxy : UTigerMapMarkerProxy {
	struct FPointOfInterest PointOfInterest; // 0x68(0xa0)
};

// Class Tiger.TigerPointOfInterestMapMarkerWidget
// Size: 0x2e8 (Inherited: 0x2d0)
struct UTigerPointOfInterestMapMarkerWidget : UTigerMapMarkerWidget {
	char pad_2D0[0x18]; // 0x2d0(0x18)

	void SetToHighTierLootLocation(struct TSoftClassPtr<UObject>& InHighTierLootGroup); // Function Tiger.TigerPointOfInterestMapMarkerWidget.SetToHighTierLootLocation // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnHighTierLootLocationsChanged(struct TArray<struct TSoftClassPtr<UObject>>& InActiveGroups); // Function Tiger.TigerPointOfInterestMapMarkerWidget.OnHighTierLootLocationsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x149b080
};

// Class Tiger.TigerPopUpLogWidget
// Size: 0x298 (Inherited: 0x280)
struct UTigerPopUpLogWidget : UTigerWidget {
	struct FString LogString; // 0x280(0x10)
	char pad_290[0x8]; // 0x290(0x08)

	void OnSetLogString(); // Function Tiger.TigerPopUpLogWidget.OnSetLogString // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerPostMatchScreenUI
// Size: 0x2b8 (Inherited: 0x2a0)
struct UTigerPostMatchScreenUI : UTigerLoadingScreenUI {
	struct FMulticastInlineDelegate OnReadyToTravel; // 0x2a0(0x10)
	char pad_2B0[0x8]; // 0x2b0(0x08)

	void ShowPlayerReviewDialog(); // Function Tiger.TigerPostMatchScreenUI.ShowPlayerReviewDialog // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x149b6e0
	void ReadyToTravel(); // Function Tiger.TigerPostMatchScreenUI.ReadyToTravel // (Final|Native|Public|BlueprintCallable) // @ game+0x149b420
	void OnReadyToTravelDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPostMatchScreenUI.OnReadyToTravelDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool GetIsReadyToTravel(); // Function Tiger.TigerPostMatchScreenUI.GetIsReadyToTravel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149ace0
	bool CanShowPlayerReviewDialog(); // Function Tiger.TigerPostMatchScreenUI.CanShowPlayerReviewDialog // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149a790
};

// Class Tiger.TigerPowerKit
// Size: 0x290 (Inherited: 0x30)
struct UTigerPowerKit : UDataAsset {
	enum class ETigerPowerKitType ArchetypeType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText DISPLAYNAME; // 0x38(0x18)
	struct FText ArchetypeKeywordsText; // 0x50(0x18)
	struct FText FormattedDescription; // 0x68(0x18)
	struct FColor ArchetypeColor; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct TSoftObjectPtr<UTexture2D> ArchetypeSelectTexture; // 0x88(0x28)
	struct TSoftObjectPtr<UMaterial> ArchetypeHighlightMaterial; // 0xb0(0x28)
	struct TSoftObjectPtr<UTexture2D> ArchetypeBackgroundTexture; // 0xd8(0x28)
	struct TSoftObjectPtr<UTexture2D> ArchetypeIcon; // 0x100(0x28)
	struct UMediaSource* ArchetypeSelectCinematic; // 0x128(0x08)
	struct TArray<struct UTigerPassiveConfig*> Passives; // 0x130(0x10)
	struct FTigerCharacterStatModification Stats; // 0x140(0xa0)
	struct FTigerItemId DefaultPerkId; // 0x1e0(0x08)
	enum class ETigerDisciplinesEnum LeftDiscipline; // 0x1e8(0x01)
	enum class ETigerDisciplinesEnum RightDiscipline; // 0x1e9(0x01)
	char pad_1EA[0x6]; // 0x1ea(0x06)
	struct TSoftObjectPtr<UTigerCharacterPreset> DefaultCharacterPreset; // 0x1f0(0x28)
	struct TSoftObjectPtr<UTigerCharacterPreset> FirstTimeCharacterPreset; // 0x218(0x28)
	struct TSoftObjectPtr<UTigerCharacterPreset> BotOutfitPresets[0x2]; // 0x240(0x50)

	struct TSoftObjectPtr<UTigerCharacterPreset> GetBotPresetByBodyType(enum class ETigerGender InGender); // Function Tiger.TigerPowerKit.GetBotPresetByBodyType // (Final|Native|Public|BlueprintCallable) // @ game+0x149abc0
};

// Class Tiger.TigerPreMatchPaperDollComponent
// Size: 0x150 (Inherited: 0xb0)
struct UTigerPreMatchPaperDollComponent : UActorComponent {
	struct TMap<struct FName, struct ATigerPaperDoll*> PaperDollByTagNames; // 0xb0(0x50)
	struct TMap<struct ATigerPaperDoll*, struct FTigerPaperDollHighlightComponents> PaperDollHighlightComponents; // 0x100(0x50)

	void EnablePaperDollHighlight(struct ATigerPaperDoll* InPaperDoll, bool bInEnable); // Function Tiger.TigerPreMatchPaperDollComponent.EnablePaperDollHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x149a950
};

// Class Tiger.TigerPremiumCurrencyManager
// Size: 0x60 (Inherited: 0x28)
struct UTigerPremiumCurrencyManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTigerStoreService* StoreService; // 0x38(0x08)
	char pad_40[0x20]; // 0x40(0x20)
};

// Class Tiger.TigerPremiumCurrencyManagerNull
// Size: 0x60 (Inherited: 0x60)
struct UTigerPremiumCurrencyManagerNull : UTigerPremiumCurrencyManager {
};

// Class Tiger.TigerPremiumCurrencyManagerPS5
// Size: 0x80 (Inherited: 0x60)
struct UTigerPremiumCurrencyManagerPS5 : UTigerPremiumCurrencyManager {
	char pad_60[0x20]; // 0x60(0x20)
};

// Class Tiger.TigerPremiumCurrencyManagerWin64
// Size: 0x60 (Inherited: 0x60)
struct UTigerPremiumCurrencyManagerWin64 : UTigerPremiumCurrencyManager {
};

// Class Tiger.TigerPremiumCurrencyManagerSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerPremiumCurrencyManagerSettings : UDeveloperSettings {
	struct TArray<struct FString> OfferCategoryIds; // 0x38(0x10)
};

// Class Tiger.TigerPremiumCurrencyUiScreen
// Size: 0x2d8 (Inherited: 0x280)
struct UTigerPremiumCurrencyUiScreen : UTigerWidget {
	char pad_280[0x58]; // 0x280(0x58)

	void PurchaseResult(enum class EShPaymentResult InPurchaseResult); // Function Tiger.TigerPremiumCurrencyUiScreen.PurchaseResult // (Final|Native|Protected) // @ game+0x149b3a0
	void OnPurchaseHandled(bool bInWasSuccesful, enum class EShPaymentResult InPurchaseResult); // Function Tiger.TigerPremiumCurrencyUiScreen.OnPurchaseHandled // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnCurrencyPacksUpdateFailed(); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCurrencyPacksUpdateFailed // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnCurrencyPacksUpdated(struct TArray<struct FTigerPremiumCurrencyPackData>& InPremiumCurrencyPacks); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCurrencyPacksUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnCloseCurrencyStore(); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCloseCurrencyStore // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void LoadCurrencyPacks(); // Function Tiger.TigerPremiumCurrencyUiScreen.LoadCurrencyPacks // (Final|Native|Public|BlueprintCallable) // @ game+0x149b060
	bool IsLoadingPremiumCurrencyPacks(); // Function Tiger.TigerPremiumCurrencyUiScreen.IsLoadingPremiumCurrencyPacks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149af80
	void ConfirmPurchase(struct FTigerPremiumCurrencyPackData& InCurrencyPackData); // Function Tiger.TigerPremiumCurrencyUiScreen.ConfirmPurchase // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x149a860
};

// Class Tiger.TigerPresenceService
// Size: 0x40 (Inherited: 0x28)
struct UTigerPresenceService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerPresenceSubsystem
// Size: 0xa8 (Inherited: 0x30)
struct UTigerPresenceSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnPlayerPresenceChange; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayersPresenceChange; // 0x40(0x10)
	struct UTigerPresenceService* PresenceService; // 0x50(0x08)
	int32_t HeartbeatIntervalInSeconds; // 0x58(0x04)
	char pad_5C[0x4c]; // 0x5c(0x4c)

	void TigerOnPlayersPresenceChange__DelegateSignature(struct TArray<struct FTigerPlayerPresenceInfo>& InPlayersPresenceInfo); // DelegateFunction Tiger.TigerPresenceSubsystem.TigerOnPlayersPresenceChange__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void TigerOnPlayerPresenceChange__DelegateSignature(struct FTigerPlayerPresenceInfo& InPlayerPresenceInfo); // DelegateFunction Tiger.TigerPresenceSubsystem.TigerOnPlayerPresenceChange__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x184a280
	void SetLocation(struct FString InLocation); // Function Tiger.TigerPresenceSubsystem.SetLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x149b640
	void SetInterestedPlayers(struct TArray<struct FString>& InInterestedPlayerIds); // Function Tiger.TigerPresenceSubsystem.SetInterestedPlayers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x149b570
	void Register(struct FString InLocation, struct TArray<struct FString>& InInterestedPlayerIds); // Function Tiger.TigerPresenceSubsystem.Register // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x149b440
	struct TArray<struct FTigerPlayerPresenceInfo> GetInterestedPlayers(); // Function Tiger.TigerPresenceSubsystem.GetInterestedPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149aca0
	void DeRegister(); // Function Tiger.TigerPresenceSubsystem.DeRegister // (Final|Native|Public|BlueprintCallable) // @ game+0x149a930
};

// Class Tiger.TigerPreSpawnMapUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerPreSpawnMapUI : UTigerWidget {
};

// Class Tiger.TigerCharacterPreset
// Size: 0x2e0 (Inherited: 0x28)
struct UTigerCharacterPreset : UObject {
	struct FTigerPreviewerData PreviewerData; // 0x28(0x2b0)
	enum class ETigerGender BodyType; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)

	enum class ETigerGender GetBodyTypeFromHead(); // Function Tiger.TigerCharacterPreset.GetBodyTypeFromHead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149ab90
	struct FTigerCharacterAppearance GetAppearance(); // Function Tiger.TigerCharacterPreset.GetAppearance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149aa20
};

// Class Tiger.TigerPrimogenNPC
// Size: 0xa80 (Inherited: 0xa60)
struct ATigerPrimogenNPC : ATigerNPC {
	struct FSoftObjectPath CharacterPresetPath; // 0xa60(0x18)
	char pad_A78[0x8]; // 0xa78(0x08)

	void OnRep_CharacterPresetPath(); // Function Tiger.TigerPrimogenNPC.OnRep_CharacterPresetPath // (Final|Native|Protected) // @ game+0x149b150
};

// Class Tiger.TigerBodyPartProjectileDamageModifiersAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerBodyPartProjectileDamageModifiersAsset : UDataAsset {
	struct TMap<struct FName, enum class EBodyPart> BonesToBodyParts; // 0x30(0x50)
};

// Class Tiger.TigerProjectile
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerProjectile : AActor {
	struct USphereComponent* CollisionComp; // 0x228(0x08)
	struct UProjectileMovementComponent* ProjectileMovement; // 0x230(0x08)
	struct UParticleSystemComponent* BulletTrail; // 0x238(0x08)
	struct UStaticMeshComponent* ProjectileMesh; // 0x240(0x08)
	struct UTigerRangedWeapon* RangedWeaponType; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)
	enum class EHitAudio HitAudioEnum; // 0x258(0x01)
	bool bDoProjectileCollision; // 0x259(0x01)
	bool bIsKilled; // 0x25a(0x01)
	bool bWillBeReflected; // 0x25b(0x01)
	bool bIsReflected; // 0x25c(0x01)
	bool bWasHeadShot; // 0x25d(0x01)
	bool bIsPooled; // 0x25e(0x01)
	char pad_25F[0x1]; // 0x25f(0x01)
	struct FVector SpawnLocation; // 0x260(0x0c)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UTigerProjectilePool* HomeProjectilePool; // 0x270(0x08)
	char pad_278[0x28]; // 0x278(0x28)
	struct TArray<struct FTigerRangedHitInfo> PiercedCharacters; // 0x2a0(0x10)
	struct TArray<struct ATigerCharacter*> HitCharacters; // 0x2b0(0x10)
	char pad_2C0[0x10]; // 0x2c0(0x10)

	void TriggerValidatedHitEffects(struct FHitResult& Hit); // Function Tiger.TigerProjectile.TriggerValidatedHitEffects // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void TriggerInstantaneousHitEffects(struct FHitResult& Hit); // Function Tiger.TigerProjectile.TriggerInstantaneousHitEffects // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void TriggerHitEffects(struct FHitResult& Hit); // Function Tiger.TigerProjectile.TriggerHitEffects // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerProjectile.OverlappedActor // (Final|Native|Public|HasOutParms) // @ game+0x149b170
	void OnReactivate(); // Function Tiger.TigerProjectile.OnReactivate // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void KillProjectile(); // Function Tiger.TigerProjectile.KillProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x149b040
	bool IsWithinRange(struct FVector& Location); // Function Tiger.TigerProjectile.IsWithinRange // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x149afa0
	bool IsFriendlyWith(struct ATigerPlayer* InOther); // Function Tiger.TigerProjectile.IsFriendlyWith // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149aee0
	void HitActor(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerProjectile.HitActor // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x149ad00
	void HideTrail(); // Function Tiger.TigerProjectile.HideTrail // (Event|Public|BlueprintEvent) // @ game+0x184a280
	float GetBulletDamage(); // Function Tiger.TigerProjectile.GetBulletDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149ac70
	void CreateProjectileParticleSystem(enum class ENetRole InLocalNetRole); // Function Tiger.TigerProjectile.CreateProjectileParticleSystem // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool CheckIsCharacterInHitResults(struct ATigerCharacter* InCharacter); // Function Tiger.TigerProjectile.CheckIsCharacterInHitResults // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149a7c0
};

// Class Tiger.TigerProjectilePool
// Size: 0x58 (Inherited: 0x28)
struct UTigerProjectilePool : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerProjectilePoolingSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerProjectilePoolingSettings : USharkLocalDeveloperSettings {
	bool bUsingProjectilePooling; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerProjectilePoolManager
// Size: 0x130 (Inherited: 0x28)
struct UTigerProjectilePoolManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UObject*> ProjectilePoolTypes; // 0x30(0x10)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> LocalPlayerProjectilePoolMap; // 0x40(0x50)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> RemotePlayersProjectilePoolMap; // 0x90(0x50)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> ServerPlayersProjectilePoolMap; // 0xe0(0x50)
};

// Class Tiger.ProjectilePoolReserveCountSettings
// Size: 0x120 (Inherited: 0x28)
struct UProjectilePoolReserveCountSettings : UObject {
	struct TMap<struct ATigerProjectile*, int8_t> InitialLocalPlayerProjectileReserveCount; // 0x28(0x50)
	struct TMap<struct ATigerProjectile*, int8_t> InitialRemotePlayersProjectileReserveCount; // 0x78(0x50)
	struct TMap<struct ATigerProjectile*, int8_t> InitialServerPlayersProjectileReserveCount; // 0xc8(0x50)
	int8_t DefaultReservedProjectileCount; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// Class Tiger.TigerProjectionDashProjectile
// Size: 0x280 (Inherited: 0x228)
struct ATigerProjectionDashProjectile : AActor {
	float MovementSpeed; // 0x228(0x04)
	float Duration; // 0x22c(0x04)
	struct FVector TargetPosition; // 0x230(0x0c)
	struct FVector StartingPosition; // 0x23c(0x0c)
	char pad_248[0xc]; // 0x248(0x0c)
	struct FVector LastValidPosition; // 0x254(0x0c)
	char pad_260[0x8]; // 0x260(0x08)
	struct USphereComponent* SphereCollider; // 0x268(0x08)
	struct UTigerBuff* ThornsBuff; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)

	void OverlapCharacter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerProjectionDashProjectile.OverlapCharacter // (Final|Native|Public|HasOutParms) // @ game+0x14a0a10
	void OnProjectileStopped(); // Function Tiger.TigerProjectionDashProjectile.OnProjectileStopped // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnProjectileDeath(); // Function Tiger.TigerProjectionDashProjectile.OnProjectileDeath // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_OnStopped(); // Function Tiger.TigerProjectionDashProjectile.Multicast_OnStopped // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13c1c00
	void Multicast_OnDeath(); // Function Tiger.TigerProjectionDashProjectile.Multicast_OnDeath // (Net|Native|Event|NetMulticast|Protected) // @ game+0xba5780
};

// Class Tiger.TigerPromotionalUI
// Size: 0x308 (Inherited: 0x298)
struct UTigerPromotionalUI : UTigerMenuWidget {
	char pad_298[0x10]; // 0x298(0x10)
	bool bIsPreviewWidget; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	int32_t ZValue; // 0x2ac(0x04)
	struct TSoftObjectPtr<UTexture2D> FirstTimeWelcomeTexturePath; // 0x2b0(0x28)
	struct FText FirstTimeWelcomeTitleText; // 0x2d8(0x18)
	struct FText FirstTimeWelcomeDescriptionText; // 0x2f0(0x18)

	void RefreshConfig(); // Function Tiger.TigerPromotionalUI.RefreshConfig // (Final|Native|Protected|BlueprintCallable) // @ game+0xb5ee20
	void OverrideCulture(struct FString InCulture); // Function Tiger.TigerPromotionalUI.OverrideCulture // (Final|Native|Protected|BlueprintCallable) // @ game+0x13bc230
	void OnTitleScreenClosed(); // Function Tiger.TigerPromotionalUI.OnTitleScreenClosed // (Final|Native|Protected) // @ game+0x14a09f0
	void OnShowFirstTimeEntry(); // Function Tiger.TigerPromotionalUI.OnShowFirstTimeEntry // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnShowEntry(struct FTigerPromotionalPopupConfigEntry& InEntry); // Function Tiger.TigerPromotionalUI.OnShowEntry // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnInitializeDone(bool bInSuccess); // Function Tiger.TigerPromotionalUI.OnInitializeDone // (Final|Native|Protected|BlueprintCallable) // @ game+0x14a0700
};

// Class Tiger.TigerPromptCollectionWidget
// Size: 0x330 (Inherited: 0x280)
struct UTigerPromptCollectionWidget : UTigerWidget {
	struct UTigerSimpleTextPrompt* MasqueradeBreachedPrompt; // 0x280(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeBreachedByNpcKillPrompt; // 0x288(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeBreachedByNpcFeedingPrompt; // 0x290(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeRestoredPrompt; // 0x298(0x08)
	struct UTigerSimpleTextPrompt* IntroPrompt; // 0x2a0(0x08)
	struct UTigerSimpleTextPrompt* FirstGasPrompt; // 0x2a8(0x08)
	struct UTigerSimpleTextPrompt* SubsequentGasPrompt; // 0x2b0(0x08)
	struct UTigerSimpleTextPrompt* GasStartedMovingPrompt; // 0x2b8(0x08)
	struct UTigerSimpleTextPrompt* JudgeSpawnedPrompt; // 0x2c0(0x08)
	struct UTigerSimpleTextPrompt* JudgeSlainPrompt; // 0x2c8(0x08)
	struct UTigerSimpleTextPrompt* SupplyDropPrompt; // 0x2d0(0x08)
	struct UTigerSimpleTextPrompt* SuperHighPotentNearbyPrompt; // 0x2d8(0x08)
	struct UTigerSimpleTextPrompt* GameModeInteractionPrompt; // 0x2e0(0x08)
	struct UTigerSimpleTextPrompt* EliminatedPlayerPrompt; // 0x2e8(0x08)
	struct UTigerSimpleTextPrompt* DownedPlayerPrompt; // 0x2f0(0x08)
	struct UTigerEnteringNewAreaPrompt* EnteringNewAreaPrompt; // 0x2f8(0x08)
	struct UTigerSimpleTextPrompt* ArtifactPickedUpPrompt; // 0x300(0x08)
	struct UTigerSimpleTextPrompt* RespawnsDisabledPrompt; // 0x308(0x08)
	struct TArray<struct FTigerQueuedTextPrompt> TextPromptQueue; // 0x310(0x10)
	struct TArray<struct FTigerQueuedTextPromptPriorityEntry> Prompts; // 0x320(0x10)

	void EnqueueTextPrompt(struct UTigerSimpleTextPrompt* InTextPrompt); // Function Tiger.TigerPromptCollectionWidget.EnqueueTextPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x14a0240
};

// Class Tiger.TigerStaticMeshPropComponent
// Size: 0x4f0 (Inherited: 0x4e0)
struct UTigerStaticMeshPropComponent : UStaticMeshComponent {
	char pad_4E0[0x10]; // 0x4e0(0x10)
};

// Class Tiger.TigerSkeletalMeshPropComponent
// Size: 0xf00 (Inherited: 0xef0)
struct UTigerSkeletalMeshPropComponent : USkeletalMeshComponent {
	char pad_EF0[0x10]; // 0xef0(0x10)
};

// Class Tiger.TigerPropEffectsComponent
// Size: 0x510 (Inherited: 0x4f0)
struct UTigerPropEffectsComponent : UTigerStaticMeshPropComponent {
	struct UParticleSystem* Particles; // 0x4e8(0x08)
	struct FName AttachPoint; // 0x4f0(0x08)
	struct UParticleSystemComponent* ParticlesSystemComponent; // 0x4f8(0x08)
	bool bActivateEffectOnAttach; // 0x500(0x01)
	char pad_509[0x7]; // 0x509(0x07)
};

// Class Tiger.TigerPropCompInterface
// Size: 0x28 (Inherited: 0x28)
struct UTigerPropCompInterface : UInterface {

	void OnDeactiveEffect(); // Function Tiger.TigerPropCompInterface.OnDeactiveEffect // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnActivateEffect(); // Function Tiger.TigerPropCompInterface.OnActivateEffect // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void DeactiveEffect(); // Function Tiger.TigerPropCompInterface.DeactiveEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14a0220
	void ActivateEffect(); // Function Tiger.TigerPropCompInterface.ActivateEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14a01e0
};

// Class Tiger.TigerPropDummy
// Size: 0x4d0 (Inherited: 0x4c0)
struct ATigerPropDummy : ACharacter {
	struct UTigerNpcPropComponent* PropComponent; // 0x4b8(0x08)
	struct TArray<struct FTigerDummyPropAttachment> Attachments; // 0x4c0(0x10)
};

// Class Tiger.TigerPS5StoreIconWidget
// Size: 0x268 (Inherited: 0x260)
struct UTigerPS5StoreIconWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)

	void ShowIcon(); // Function Tiger.TigerPS5StoreIconWidget.ShowIcon // (Final|Native|Public|BlueprintCallable) // @ game+0xb5ee20
	void HideIcon(); // Function Tiger.TigerPS5StoreIconWidget.HideIcon // (Final|Native|Public|BlueprintCallable) // @ game+0xb5ee20
};

// Class Tiger.TigerPsoCacheUI
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerPsoCacheUI : UTigerWidget {
	struct FMulticastInlineDelegate OnCachingDone; // 0x280(0x10)
	struct UTigerSharedMouseCursor* SharedMouseCursor; // 0x290(0x08)
	char pad_298[0x10]; // 0x298(0x10)

	void TigerOnCachingDone__DelegateSignature(); // DelegateFunction Tiger.TigerPsoCacheUI.TigerOnCachingDone__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool ShouldCacheDx12PsosAtBoot(); // Function Tiger.TigerPsoCacheUI.ShouldCacheDx12PsosAtBoot // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14a0c40
	void OnProgressUpdated(float InPercentageCompleted); // Function Tiger.TigerPsoCacheUI.OnProgressUpdated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void CancelCaching(); // Function Tiger.TigerPsoCacheUI.CancelCaching // (Final|Native|Protected|BlueprintCallable) // @ game+0x14a0200
};

// Class Tiger.TigerQuestAnimation
// Size: 0x38 (Inherited: 0x28)
struct UTigerQuestAnimation : UObject {
	struct UAnimMontage* QuestMontage; // 0x28(0x08)
	bool bStopsMovement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerQuestObjective
// Size: 0xa0 (Inherited: 0x28)
struct UTigerQuestObjective : UObject {
	struct FText Description; // 0x28(0x18)
	struct FText FlavourText; // 0x40(0x18)
	struct UTigerChallenge* Objective; // 0x58(0x08)
	bool bPlayAnimationOnInteract; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct UAnimMontage* QuestMontage; // 0x68(0x08)
	bool bStopsMovement; // 0x70(0x01)
	bool bComplete; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	struct FGuid ID; // 0x74(0x10)
	char pad_84[0x4]; // 0x84(0x04)
	struct UTigerQuest* ParentQuest; // 0x88(0x08)
	struct UTigerQuestObjectiveSet* ParentObjectiveSet; // 0x90(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x98(0x08)

	void OnObjectiveCompleted(struct UTigerChallenge* InTigerChallenge); // Function Tiger.TigerQuestObjective.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x14a0820
};

// Class Tiger.TigerQuestObjectiveSet
// Size: 0x50 (Inherited: 0x28)
struct UTigerQuestObjectiveSet : UObject {
	struct TArray<struct UTigerQuestObjective*> Objectives; // 0x28(0x10)
	bool bSetComplete; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UTigerQuest* ParentQuest; // 0x40(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x48(0x08)

	void OnQuestObjectiveSetComplete(); // Function Tiger.TigerQuestObjectiveSet.OnQuestObjectiveSetComplete // (Final|Native|Public) // @ game+0x14a09d0
	void OnObjectiveCompleted(struct UTigerQuestObjective* InObjective); // Function Tiger.TigerQuestObjectiveSet.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x14a08b0
	int32_t GetNumberOfCompleteObjectives(); // Function Tiger.TigerQuestObjectiveSet.GetNumberOfCompleteObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a0520
};

// Class Tiger.TigerQuest
// Size: 0x160 (Inherited: 0x28)
struct UTigerQuest : UObject {
	struct FMulticastInlineDelegate OnProgressChangedEvent; // 0x28(0x10)
	struct FMulticastInlineDelegate OnQuestCompletedEvent; // 0x38(0x10)
	struct FMulticastInlineDelegate OnQuestObjectiveCompletedEvent; // 0x48(0x10)
	struct FMulticastInlineDelegate OnQuestObjectiveSetCompleteEvent; // 0x58(0x10)
	struct FText QuestName; // 0x68(0x18)
	struct FText QuestSubheading; // 0x80(0x18)
	struct FText FlavourText; // 0x98(0x18)
	struct TArray<struct UTigerQuestObjectiveSet*> ObjectiveSets; // 0xb0(0x10)
	struct TArray<struct FTigerItemId> RewardIds; // 0xc0(0x10)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0xd0(0x10)
	bool bStartsNextQuest; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct FString NextQuestLineId; // 0xe8(0x10)
	struct FString NextQuestId; // 0xf8(0x10)
	bool bRemoveAfterLockDate; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct FDateTime LockDate; // 0x110(0x08)
	struct FTigerItemId BattlePassItemId; // 0x118(0x08)
	uint32_t EventId; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct FTigerQuestIdentifier QuestLookupIdentifier; // 0x128(0x30)
	struct ATigerPlayerController* OwningPlayerController; // 0x158(0x08)

	void OnQuestObjectiveSetCompletedEvent__DelegateSignature(struct UTigerQuest* Quest, struct UTigerQuestObjectiveSet* ObjectiveSet); // DelegateFunction Tiger.TigerQuest.OnQuestObjectiveSetCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnQuestObjectiveCompletedEvent__DelegateSignature(struct UTigerQuest* Quest, struct UTigerQuestObjective* Objective); // DelegateFunction Tiger.TigerQuest.OnQuestObjectiveCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnQuestCompletedEvent__DelegateSignature(struct UTigerQuest* Quest); // DelegateFunction Tiger.TigerQuest.OnQuestCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnProgressChangedEvent__DelegateSignature(struct UTigerQuest* Quest); // DelegateFunction Tiger.TigerQuest.OnProgressChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnObjectiveSetCompleted(struct UTigerQuestObjectiveSet* InTigerObjectiveSet); // Function Tiger.TigerQuest.OnObjectiveSetCompleted // (Final|Native|Public) // @ game+0x14a0940
	void OnObjectiveCompleted(struct UTigerQuestObjective* InTigerObjective); // Function Tiger.TigerQuest.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x14a0790
	struct FTigerItemId GetRarestRewardAsItemId(); // Function Tiger.TigerQuest.GetRarestRewardAsItemId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a06c0
	struct UTigerInventoryItemBase* GetRarestRewardAsInventoryItem(); // Function Tiger.TigerQuest.GetRarestRewardAsInventoryItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a0690
	struct FTigerQuestIdentifier GetQuestIdentifier(); // Function Tiger.TigerQuest.GetQuestIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a05b0
	int32_t GetNumberOfObjectives(); // Function Tiger.TigerQuest.GetNumberOfObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a0580
	int32_t GetNumberOfCompletedObjectives(); // Function Tiger.TigerQuest.GetNumberOfCompletedObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a0550
	struct TArray<struct UTigerQuestObjective*> GetIncompleteObjectivesFromActiveSet(); // Function Tiger.TigerQuest.GetIncompleteObjectivesFromActiveSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a04a0
	struct TArray<struct UTigerQuestObjective*> GetCompleteObjectivesFromActiveSet(); // Function Tiger.TigerQuest.GetCompleteObjectivesFromActiveSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a0420
	void GetAllIncompleteActiveAndCompleteObjectives(struct TArray<struct UTigerQuestObjective*>& OutIncompleteActiveObjectives, struct TArray<struct UTigerQuestObjective*>& OutCompleteObjectives); // Function Tiger.TigerQuest.GetAllIncompleteActiveAndCompleteObjectives // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14a0300
	struct UTigerQuestObjectiveSet* GetActiveObjectiveSet(); // Function Tiger.TigerQuest.GetActiveObjectiveSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a02d0
};

// Class Tiger.TigerQuestline
// Size: 0x98 (Inherited: 0x28)
struct UTigerQuestline : UObject {
	struct FText Title; // 0x28(0x18)
	struct TMap<struct FString, struct UTigerQuest*> Quests; // 0x40(0x50)
	bool bWhitelistedForUrgentDialogue; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Tiger.TigerQuestCollection
// Size: 0x80 (Inherited: 0x30)
struct UTigerQuestCollection : UDataAsset {
	struct TMap<struct FString, struct UTigerQuestline*> questLines; // 0x30(0x50)
};

// Class Tiger.TigerQuestSystem
// Size: 0x1b8 (Inherited: 0xb0)
struct UTigerQuestSystem : UActorComponent {
	char pad_B0[0x108]; // 0xb0(0x108)

	void Server_GatherQuestLocations(); // Function Tiger.TigerQuestSystem.Server_GatherQuestLocations // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x1396e40
	void OnQuestObjectiveComplete(struct UTigerQuest* InQuest, struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerQuestSystem.OnQuestObjectiveComplete // (Final|Native|Protected) // @ game+0x14a5780
	void OnQuestComplete(struct UTigerQuest* InCompleteQuest); // Function Tiger.TigerQuestSystem.OnQuestComplete // (Final|Native|Protected) // @ game+0x14a56f0
	void Client_SetCachedQuestLocations(struct TArray<struct FTigerQuestItemLocationDetails> InCachedQuestMapLocations); // Function Tiger.TigerQuestSystem.Client_SetCachedQuestLocations // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14a4690
	void Client_OnQuestStarted(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestStarted // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14a4540
	void Client_OnQuestObjectiveStarted(struct FTigerQuestIdentifier InIdentifier, bool bHasServerShownNotification); // Function Tiger.TigerQuestSystem.Client_OnQuestObjectiveStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14a43a0
	void Client_OnQuestObjectiveComplete(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestObjectiveComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14a4250
	void Client_OnQuestComplete(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14a4100
};

// Class Tiger.TigerQueueForLogin
// Size: 0x88 (Inherited: 0x30)
struct UTigerQueueForLogin : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ReadyForLogin; // 0x30(0x10)
	struct FMulticastInlineDelegate WaitTimeUpdated; // 0x40(0x10)
	struct FMulticastInlineDelegate Error; // 0x50(0x10)
	char pad_60[0x8]; // 0x60(0x08)
	struct UTigerLoginQueueService* LoginQueueService; // 0x68(0x08)
	char pad_70[0x18]; // 0x70(0x18)

	void QueueForLoginOutputPin__DelegateSignature(struct FTigerLoginQueueToken& LoginToken, struct FTimespan& EstimatedWaitTime, struct FString ErrorMessage); // DelegateFunction Tiger.TigerQueueForLogin.QueueForLoginOutputPin__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x184a280
	struct UTigerQueueForLogin* QueueForLogin(struct UObject* InWorldContextObject); // Function Tiger.TigerQueueForLogin.QueueForLogin // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14a5850
};

// Class Tiger.TigerRadarChart
// Size: 0x1d0 (Inherited: 0x108)
struct UTigerRadarChart : UWidget {
	struct FSlateBrush GraphImage; // 0x108(0x88)
	struct FColor FillColor; // 0x190(0x04)
	int32_t Points; // 0x194(0x04)
	float Radius; // 0x198(0x04)
	float Tilt; // 0x19c(0x04)
	struct FVector2D Offset; // 0x1a0(0x08)
	int32_t ValueMaximum; // 0x1a8(0x04)
	int32_t ValueMinimum; // 0x1ac(0x04)
	struct TArray<int32_t> Values; // 0x1b0(0x10)
	char pad_1C0[0x10]; // 0x1c0(0x10)

	void SetValue(int32_t InIndex, int32_t InValue); // Function Tiger.TigerRadarChart.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x14a5cd0
	void SetAllValues(struct TArray<int32_t> InValues, int32_t InDefaultValue); // Function Tiger.TigerRadarChart.SetAllValues // (Final|Native|Public|BlueprintCallable) // @ game+0x14a5ba0
	void NullifyAllValues(); // Function Tiger.TigerRadarChart.NullifyAllValues // (Final|Native|Public|BlueprintCallable) // @ game+0x14a5640
};

// Class Tiger.TigerRangedWeaponComponent
// Size: 0x2d0 (Inherited: 0xb0)
struct UTigerRangedWeaponComponent : UActorComponent {
	struct FMulticastInlineDelegate OnShowCrosshairAmmoState; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnReloadStart; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnReloadFinished; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnReloadAborted; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnBurstCompleted; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnLowAmmo; // 0x100(0x10)
	struct FMulticastInlineDelegate OnRangedWeaponEquipped; // 0x110(0x10)
	struct FMulticastInlineDelegate OnAimChanged; // 0x120(0x10)
	struct UTigerBodyPartProjectileDamageModifiersAsset* BodyPartDamageModifiersAsset; // 0x130(0x08)
	char pad_138[0x10]; // 0x138(0x10)
	struct ATigerPlayer* TigerPlayer; // 0x148(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x150(0x08)
	struct UStaticMesh* ImpactHelperMesh; // 0x158(0x08)
	struct UAkAudioEvent* FireModeSwitchEvent; // 0x160(0x08)
	struct UTigerRangedWeapon* EquippedWeaponType; // 0x168(0x08)
	struct UAnimMontage* LastFireAnimationMontage; // 0x170(0x08)
	char pad_178[0x20]; // 0x178(0x20)
	float CurrentFireRateMultiplier; // 0x198(0x04)
	char pad_19C[0xc]; // 0x19c(0x0c)
	int32_t CurrentFireSettingIndex; // 0x1a8(0x04)
	char pad_1AC[0x2c]; // 0x1ac(0x2c)
	struct FTimerHandle ReloadWeaponTimerHandle; // 0x1d8(0x08)
	char pad_1E0[0x2]; // 0x1e0(0x02)
	bool bIsFiring; // 0x1e2(0x01)
	bool bWantsToFire; // 0x1e3(0x01)
	bool bIsAiming; // 0x1e4(0x01)
	char pad_1E5[0x23]; // 0x1e5(0x23)
	struct UStaticMeshComponent* ImpactHelperMeshComp; // 0x208(0x08)
	char pad_210[0x40]; // 0x210(0x40)
	float CoolDownOutOfAmmoAudioEvent; // 0x250(0x04)
	char pad_254[0x10]; // 0x254(0x10)
	int32_t ProjectilesFiredSinceStartFire; // 0x264(0x04)
	char pad_268[0x20]; // 0x268(0x20)
	struct UTigerAICoordinator* AICoordinator; // 0x288(0x08)
	char pad_290[0x30]; // 0x290(0x30)
	struct ATigerProjectile* LastFiredProjectile; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	bool WeaponUsesScope(); // Function Tiger.TigerRangedWeaponComponent.WeaponUsesScope // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a5e20
	bool WeaponCanSwitchFireMode(); // Function Tiger.TigerRangedWeaponComponent.WeaponCanSwitchFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a5df0
	bool WantsToFire(); // Function Tiger.TigerRangedWeaponComponent.WantsToFire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a5dd0
	void TigerOnShowCrosshairAmmoState__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnShowCrosshairAmmoState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnReloadStart__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnReloadFinished__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnReloadAborted__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadAborted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnRangedWeaponEquipped__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnRangedWeaponEquipped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnLowAmmo__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnLowAmmo__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnBurstCompleted__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnBurstCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnAimChanged__DelegateSignature(bool bIsAiming); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnAimChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool ShouldUseAimingAnimation(); // Function Tiger.TigerRangedWeaponComponent.ShouldUseAimingAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a5da0
	void Server_SwitchFireMode(); // Function Tiger.TigerRangedWeaponComponent.Server_SwitchFireMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14a5b50
	void Server_SetFireAudioState(enum class ETigerFireAudioState InAudioFireState); // Function Tiger.TigerRangedWeaponComponent.Server_SetFireAudioState // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x140c220
	void Server_SetClientSideHitDetectionRanged(bool bEnableClientSideHits); // Function Tiger.TigerRangedWeaponComponent.Server_SetClientSideHitDetectionRanged // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14a5a90
	void Server_DebugClientHit(int32_t InProjectileId, struct FVector InMeshOffset, float InLastCorrectionTime, float InDeltaTime); // Function Tiger.TigerRangedWeaponComponent.Server_DebugClientHit // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x14a58e0
	void OnMontageStartedDuringReload(struct UAnimMontage* Montage); // Function Tiger.TigerRangedWeaponComponent.OnMontageStartedDuringReload // (Final|Native|Protected) // @ game+0x14a5660
	void Multicast_UpdateReloadLoopsLeft(int8_t InReloadLoopsDelta); // Function Tiger.TigerRangedWeaponComponent.Multicast_UpdateReloadLoopsLeft // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a55c0
	void Multicast_SetFireAudioState(enum class ETigerFireAudioState InAudioFireState); // Function Tiger.TigerRangedWeaponComponent.Multicast_SetFireAudioState // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14a5540
	void Multicast_SetClientSideHitDetectionRanged(bool bEnableClientSideHits); // Function Tiger.TigerRangedWeaponComponent.Multicast_SetClientSideHitDetectionRanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13e3ce0
	void Multicast_PlayReloadAnimations(int8_t InReloadLoops, float InPlayRate); // Function Tiger.TigerRangedWeaponComponent.Multicast_PlayReloadAnimations // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a5470
	void Multicast_PlayPrimingAnimations(); // Function Tiger.TigerRangedWeaponComponent.Multicast_PlayPrimingAnimations // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a5450
	void Multicast_OnWeaponFired(struct FVector_NetQuantize100 InSpawnLocation, float InShootDirPitch, float InShootDirYaw, float InFireSpread, struct FTigerRangedRandomState InFireRandomState, bool bInFirstBulletInBurst, int32_t InAmmoInMag); // Function Tiger.TigerRangedWeaponComponent.Multicast_OnWeaponFired // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a5230
	void Multicast_OnNpcWeaponFired(struct FVector_NetQuantize100 InSpawnLocation, struct FVector_NetQuantize100 InTargetLocation, float InFireSpread, struct FTigerRangedRandomState InFireRandomState); // Function Tiger.TigerRangedWeaponComponent.Multicast_OnNpcWeaponFired // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a50d0
	void Multicast_AbortReloadAnimation(); // Function Tiger.TigerRangedWeaponComponent.Multicast_AbortReloadAnimation // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x143e4d0
	bool IsLowOnLoadedAmmo(); // Function Tiger.TigerRangedWeaponComponent.IsLowOnLoadedAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a50a0
	bool IsInReload(); // Function Tiger.TigerRangedWeaponComponent.IsInReload // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a5070
	bool IsInFireMode(enum class ETigerWeaponFireMode FireMode); // Function Tiger.TigerRangedWeaponComponent.IsInFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4fe0
	bool IsFiring(); // Function Tiger.TigerRangedWeaponComponent.IsFiring // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4fc0
	bool IsAiming(); // Function Tiger.TigerRangedWeaponComponent.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4fa0
	bool HasEquippedOrWantedWeapon(); // Function Tiger.TigerRangedWeaponComponent.HasEquippedOrWantedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4f70
	bool HasAmmo(); // Function Tiger.TigerRangedWeaponComponent.HasAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4f40
	float GetWeaponDamageValue(); // Function Tiger.TigerRangedWeaponComponent.GetWeaponDamageValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4f10
	float GetReloadDonePercentage(); // Function Tiger.TigerRangedWeaponComponent.GetReloadDonePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4ee0
	int32_t GetMaxAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetMaxAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4d70
	int32_t GetLoadedAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetLoadedAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4d40
	int32_t GetInventoryAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetInventoryAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4d10
	struct UCameraShakeBase* GetHipFireCameraShake(); // Function Tiger.TigerRangedWeaponComponent.GetHipFireCameraShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4cd0
	struct UForceFeedbackEffect* GetFireForceFeedback(); // Function Tiger.TigerRangedWeaponComponent.GetFireForceFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4ca0
	struct UTigerRangedWeapon* GetEquippedOrWantedWeapon(); // Function Tiger.TigerRangedWeaponComponent.GetEquippedOrWantedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4c70
	float GetCurrentSpread(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentSpread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4c40
	float GetCurrentReloadDuration(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentReloadDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4c10
	struct ATigerProjectile* GetCurrentProjectileType(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentProjectileType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4a90
	struct FTigerFireSettings GetCurrentFireSettings(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentFireSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4950
	enum class ETigerWeaponFireMode GetCurrentFireMode(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4920
	float GetCurrentAimedFov(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentAimedFov // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a48f0
	float GetAimSpeedMultiplier(); // Function Tiger.TigerRangedWeaponComponent.GetAimSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4800
	struct UCameraShakeBase* GetAimedFireCameraShake(); // Function Tiger.TigerRangedWeaponComponent.GetAimedFireCameraShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a4830
	void Client_SwitchFireMode(int32_t NewFireModeIndex); // Function Tiger.TigerRangedWeaponComponent.Client_SwitchFireMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14a4770
	void Client_DebugGetClientHit(int32_t InProjectileId); // Function Tiger.TigerRangedWeaponComponent.Client_DebugGetClientHit // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1396e60
};

// Class Tiger.TigerRangedWeaponModModifier
// Size: 0x28 (Inherited: 0x28)
struct UTigerRangedWeaponModModifier : UObject {

	void OnModUnequipped(struct UTigerEquippedModModifierValues* Modifiers); // Function Tiger.TigerRangedWeaponModModifier.OnModUnequipped // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnModEquipped(struct UTigerEquippedModModifierValues* Modifiers); // Function Tiger.TigerRangedWeaponModModifier.OnModEquipped // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerRankConfigAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerRankConfigAsset : UDataAsset {
	struct FTigerRankConfig Config; // 0x30(0x28)

	int32_t GetNextRankId(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetNextRankId // (Final|Native|Public|BlueprintCallable) // @ game+0x14a4e40
	int32_t GetNextRankFloor(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetNextRankFloor // (Final|Native|Public|BlueprintCallable) // @ game+0x14a4da0
	int32_t GetCurrentRankId(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetCurrentRankId // (Final|Native|Public|BlueprintCallable) // @ game+0x14a4b70
	int32_t GetCurrentRankFloor(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetCurrentRankFloor // (Final|Native|Public|BlueprintCallable) // @ game+0x14a4ad0
	int32_t GetCurrentMatchFee(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetCurrentMatchFee // (Final|Native|Public|BlueprintCallable) // @ game+0x14a49f0
	struct TArray<int32_t> GetAllRankThreshholds(); // Function Tiger.TigerRankConfigAsset.GetAllRankThreshholds // (Final|Native|Public|BlueprintCallable) // @ game+0x14a4870
};

// Class Tiger.TigerRat
// Size: 0x310 (Inherited: 0x280)
struct ATigerRat : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	struct FVector LocalHandOffset; // 0x288(0x0c)
	struct FRotator LocalHandRotation; // 0x294(0x0c)
	struct UAnimMontage* Montage; // 0x2a0(0x08)
	struct TWeakObjectPtr<struct ATigerPlayerController> CurrentInteractingPlayerController; // 0x2a8(0x08)
	float FeedTickTime; // 0x2b0(0x04)
	float FeedHealthAmount; // 0x2b4(0x04)
	float MoveSpeed; // 0x2b8(0x04)
	float RotationSpeed; // 0x2bc(0x04)
	float MaxWaitTime; // 0x2c0(0x04)
	float MinWaitTime; // 0x2c4(0x04)
	struct USkeletalMeshComponent* RatMesh; // 0x2c8(0x08)
	bool bShouldMove; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct UAkAudioEvent* PickUpSqueekEvent; // 0x2d8(0x08)
	char pad_2E0[0x28]; // 0x2e0(0x28)
	bool bIsEaten; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)

	void OnInteractEnd(); // Function Tiger.TigerRat.OnInteractEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa180
	bool IsEaten(); // Function Tiger.TigerRat.IsEaten // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14aa080
};

// Class Tiger.TigerRatSpawnpointActorSpawner
// Size: 0x200 (Inherited: 0x200)
struct UTigerRatSpawnpointActorSpawner : USceneComponent {
	struct ATigerRat* ActorToSpawn; // 0x1f8(0x08)
};

// Class Tiger.TigerRatSpawnpoint
// Size: 0x230 (Inherited: 0x228)
struct ATigerRatSpawnpoint : AActor {
	int32_t NumRatsToSpawn; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
};

// Class Tiger.TigerReactToHeightenedSense
// Size: 0x28 (Inherited: 0x28)
struct UTigerReactToHeightenedSense : UInterface {

	void OnLeaveHeightenedSenseArea(); // Function Tiger.TigerReactToHeightenedSense.OnLeaveHeightenedSenseArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnEnterHeightenedSenseAreaInitial(); // Function Tiger.TigerReactToHeightenedSense.OnEnterHeightenedSenseAreaInitial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnEnterHeightenedSenseArea(); // Function Tiger.TigerReactToHeightenedSense.OnEnterHeightenedSenseArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerReflectable
// Size: 0x28 (Inherited: 0x28)
struct UTigerReflectable : UInterface {

	struct AActor* CopyAndReflect(struct ATigerCharacter* InNewOwner, struct FVector& InSpawnLocation, struct FRotator& InSpawnRotation); // Function Tiger.TigerReflectable.CopyAndReflect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x14a9c60
	void BlockReflect(struct ATigerCharacter* ReflectOwner); // Function Tiger.TigerReflectable.BlockReflect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14a9b30
};

// Class Tiger.TigerReflector
// Size: 0x28 (Inherited: 0x28)
struct UTigerReflector : UInterface {
};

// Class Tiger.TigerRejuvenatingVoiceEffectActor
// Size: 0x238 (Inherited: 0x228)
struct ATigerRejuvenatingVoiceEffectActor : AActor {
	struct ATigerPlayer* Player; // 0x228(0x08)
	float HealAmount; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class Tiger.TigerRemoteLocalizationSubSystem
// Size: 0x30 (Inherited: 0x30)
struct UTigerRemoteLocalizationSubSystem : UEngineSubsystem {
};

// Class Tiger.TigerRenderingSettings
// Size: 0x88 (Inherited: 0x38)
struct UTigerRenderingSettings : UDeveloperSettings {
	int32_t MaxSpotLightShadowCasters; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TSoftObjectPtr<UMaterialInterface> LastLodMaterialMaster; // 0x40(0x28)
	struct TArray<struct FName> LastLodExtractionParameters; // 0x68(0x10)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> MaterialsToExclude; // 0x78(0x10)
};

// Class Tiger.TigerReplaySpectatorController
// Size: 0x808 (Inherited: 0x578)
struct ATigerReplaySpectatorController : APlayerController {
	struct UTigerSpringArmComponent* SpringArm; // 0x578(0x08)
	struct ATigerPlayer* CurrentlySpectating; // 0x580(0x08)
	enum class ETigerReplayCameraMode CurrentCameraMode; // 0x588(0x01)
	bool bIsPaused; // 0x589(0x01)
	enum class ETigerReplayCameraMoveType CurrentMoveType; // 0x58a(0x01)
	enum class ETigerReplayMoveMode CurrentMoveMode; // 0x58b(0x01)
	enum class ETigerReplayCameraRotateMode CurrentRotateMode; // 0x58c(0x01)
	char pad_58D[0x3]; // 0x58d(0x03)
	struct FString CurrentLookAtBoneName; // 0x590(0x10)
	enum class ETigerReplayCameraTransitionType CurrentTransitionType; // 0x5a0(0x01)
	char pad_5A1[0x3]; // 0x5a1(0x03)
	float CurrentMoveTypeParameter; // 0x5a4(0x04)
	float BaseRollRate; // 0x5a8(0x04)
	bool bIsRolling; // 0x5ac(0x01)
	enum class ETigerReplayInputMode CurrentInputMode; // 0x5ad(0x01)
	char pad_5AE[0x2]; // 0x5ae(0x02)
	struct FMulticastInlineDelegate ToggleSmoothTransitions; // 0x5b0(0x10)
	struct FMulticastInlineDelegate ToggleLinearMoves; // 0x5c0(0x10)
	struct FMulticastInlineDelegate AdvanceFrame; // 0x5d0(0x10)
	struct FMulticastInlineDelegate DecrementFrame; // 0x5e0(0x10)
	struct FMulticastInlineDelegate RemoveFrame; // 0x5f0(0x10)
	struct FMulticastInlineDelegate ReplaceFrame; // 0x600(0x10)
	struct FMulticastInlineDelegate InsertFrame; // 0x610(0x10)
	struct FMulticastInlineDelegate ViewFrame; // 0x620(0x10)
	struct FMulticastInlineDelegate UpdatePlaybackSpeedDisplay; // 0x630(0x10)
	struct FMulticastInlineDelegate UpdateMovementSpeedDisplay; // 0x640(0x10)
	struct FMulticastInlineDelegate UpdateLookSpeedDisplay; // 0x650(0x10)
	struct FMulticastInlineDelegate UpdateIsPausedDisplay; // 0x660(0x10)
	struct FMulticastInlineDelegate UpdateRollInputs; // 0x670(0x10)
	struct FMulticastInlineDelegate TogglePlayers; // 0x680(0x10)
	struct FMulticastInlineDelegate ToggleMainUIFocus; // 0x690(0x10)
	struct FMulticastInlineDelegate ToggleKeyframingUIFocus; // 0x6a0(0x10)
	char pad_6B0[0x158]; // 0x6b0(0x158)

	void UpdateDisplayedInputMode(enum class ETigerReplayInputMode InInputModeToDisplay); // Function Tiger.TigerReplaySpectatorController.UpdateDisplayedInputMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void TeleportToCameraKeyFrame(bool bInToTime, int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.TeleportToCameraKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa900
	void SetReplayCameraRotationMode(enum class ETigerReplayCameraRotateMode InRotateMode); // Function Tiger.TigerReplaySpectatorController.SetReplayCameraRotationMode // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa880
	void SetReplayCameraMode(enum class ETigerReplayCameraMode InMode); // Function Tiger.TigerReplaySpectatorController.SetReplayCameraMode // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa800
	void SetMotionBlurAntiAliasing(bool bInTurnOn); // Function Tiger.TigerReplaySpectatorController.SetMotionBlurAntiAliasing // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa660
	void SetCurrentReplayTimeToSeconds(int32_t InSeconds); // Function Tiger.TigerReplaySpectatorController.SetCurrentReplayTimeToSeconds // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aa5d0
	void SetCurrentReplayPlayRate(float InPlayRate); // Function Tiger.TigerReplaySpectatorController.SetCurrentReplayPlayRate // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aa550
	bool SetCurrentReplayPausedState(bool bInPauseState); // Function Tiger.TigerReplaySpectatorController.SetCurrentReplayPausedState // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa4b0
	void SaveCameraMove(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.SaveCameraMove // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa410
	void ResetToPlayerLocation(); // Function Tiger.TigerReplaySpectatorController.ResetToPlayerLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa3f0
	void ReplaceCameraMoveKeyFrame(int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.ReplaceCameraMoveKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa310
	void RemoveCameraMoveKeyFrame(int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.RemoveCameraMoveKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa280
	void RegisterToWorldGrid(); // Function Tiger.TigerReplaySpectatorController.RegisterToWorldGrid // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa260
	void PlayReplayFromBP(struct FString InReplayName); // Function Tiger.TigerReplaySpectatorController.PlayReplayFromBP // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa1c0
	void PlayCameraMove(); // Function Tiger.TigerReplaySpectatorController.PlayCameraMove // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa1a0
	void LoadCameraMove(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.LoadCameraMove // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa0e0
	void InsertCameraMoveKeyFrame(); // Function Tiger.TigerReplaySpectatorController.InsertCameraMoveKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x14aa060
	int32_t GetCurrentReplayTotalTimeInSeconds(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayTotalTimeInSeconds // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a9eb0
	float GetCurrentReplayPlayRate(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayPlayRate // (Final|Native|Protected|BlueprintCallable) // @ game+0x14a9e80
	int32_t GetCurrentReplayCurrentTimeInSeconds(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayCurrentTimeInSeconds // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a9e50
	bool DoesCameraMoveKeyFrameExist(int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.DoesCameraMoveKeyFrameExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a9db0
	void DetachArm(); // Function Tiger.TigerReplaySpectatorController.DetachArm // (Final|Native|Public|BlueprintCallable) // @ game+0x14a9d90
	void AttachArm(); // Function Tiger.TigerReplaySpectatorController.AttachArm // (Final|Native|Public|BlueprintCallable) // @ game+0x14a9b10
};

// Class Tiger.TigerReplicationGraph
// Size: 0x550 (Inherited: 0x4a0)
struct UTigerReplicationGraph : UReplicationGraph {
	struct UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498(0x08)
	struct UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned* PlayerSpawnedGridNode; // 0x4a0(0x08)
	struct UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a8(0x08)
	struct UTigerReplicationGraphNode_OwnerRelevant* OwnerRelevantNode; // 0x4b0(0x08)
	char pad_4C0[0x90]; // 0x4c0(0x90)
};

// Class Tiger.TigerReplicationGraphNode_AlwaysRelevant_ForConnection
// Size: 0x88 (Inherited: 0x50)
struct UTigerReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	char pad_50[0x18]; // 0x50(0x18)
	struct AActor* LastViewer; // 0x68(0x08)
	struct AActor* LastViewTarget; // 0x70(0x08)
	char pad_78[0x10]; // 0x78(0x10)
};

// Class Tiger.TigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned
// Size: 0x230 (Inherited: 0x230)
struct UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned : UReplicationGraphNode_GridSpatialization2D {
};

// Class Tiger.TigerReplicationGraphNode_OwnerRelevant
// Size: 0x80 (Inherited: 0x50)
struct UTigerReplicationGraphNode_OwnerRelevant : UReplicationGraphNode {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Tiger.TigerReportMenuUI
// Size: 0x318 (Inherited: 0x2c0)
struct UTigerReportMenuUI : UTigerIngameSubmenuWidget {
	char pad_2C0[0x4]; // 0x2c0(0x04)
	int32_t TargetPlayerID; // 0x2c4(0x04)
	char pad_2C8[0x50]; // 0x2c8(0x50)

	void SetReason(enum class ETigerReportReason InReason); // Function Tiger.TigerReportMenuUI.SetReason // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aa780
	bool ReportPlayer(); // Function Tiger.TigerReportMenuUI.ReportPlayer // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aa3a0
	bool IsPlayerAlreadyReportedForReason(); // Function Tiger.TigerReportMenuUI.IsPlayerAlreadyReportedForReason // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14aa0b0
};

// Class Tiger.TigerRequestUtility
// Size: 0x40 (Inherited: 0x28)
struct UTigerRequestUtility : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerResourceBarSegmentUI
// Size: 0x298 (Inherited: 0x280)
struct UTigerResourceBarSegmentUI : UTigerWidget {
	bool NativeTickDisabledInCode; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UMaterialInstanceDynamic* SegmentMaterial; // 0x288(0x08)
	float MinResource; // 0x290(0x04)
	float MaxResource; // 0x294(0x04)
};

// Class Tiger.TigerRespawnFeatureWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerRespawnFeatureWidget : UTigerWidget {

	void SetLifeTokenCount(int32_t InTokenCount, int32_t InMaxTokens, float InSyncedRespawnTime); // Function Tiger.TigerRespawnFeatureWidget.SetLifeTokenCount // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerRespawnStreamingWidget
// Size: 0x2b0 (Inherited: 0x280)
struct UTigerRespawnStreamingWidget : UTigerWidget {
	float ShowStartTime; // 0x280(0x04)
	float RespawnLoadingTimeLimitInMs; // 0x284(0x04)
	float RespawnStreamingActorsUpdateTimeLimitInMs; // 0x288(0x04)
	char pad_28C[0x14]; // 0x28c(0x14)
	enum class ETigerRespawnStreamingStatus StreamingStatus; // 0x2a0(0x01)
	char pad_2A1[0xf]; // 0x2a1(0x0f)

	void Restart(); // Function Tiger.TigerRespawnStreamingWidget.Restart // (Final|Native|Public|BlueprintCallable) // @ game+0x14ade10
	void OnStreamingStatusChanged(enum class ETigerRespawnStreamingStatus InStreamingStatus); // Function Tiger.TigerRespawnStreamingWidget.OnStreamingStatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void HandleLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerRespawnStreamingWidget.HandleLifeStatusChanged // (Final|Native|Protected) // @ game+0x14adb40
};

// Class Tiger.TigerResurrectAltar
// Size: 0x2e0 (Inherited: 0x280)
struct ATigerResurrectAltar : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	struct ATigerPlayerController* ResurrectingPlayerController; // 0x288(0x08)
	float RespawnDelay; // 0x290(0x04)
	bool ShouldDisableAfterSingleUse; // 0x294(0x01)
	enum class ETigerResurrectHolyIncenseInteractionType HolyIncenseInteractionType; // 0x295(0x01)
	char pad_296[0x2]; // 0x296(0x02)
	float HolyIncensePositionCheckRate; // 0x298(0x04)
	float AltarDestroyDelay; // 0x29c(0x04)
	struct ATigerWorldMarker* WorldMarkerClass; // 0x2a0(0x08)
	struct TArray<struct USceneComponent*> RespawnPoints; // 0x2a8(0x10)
	struct ATigerWorldMarker* WorldMarker; // 0x2b8(0x08)
	char pad_2C0[0x20]; // 0x2c0(0x20)

	void SetupHolyIncenseInteraction(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerResurrectAltar.SetupHolyIncenseInteraction // (Final|Native|Protected) // @ game+0x14ae1e0
	void OnWaveStoppedMoving(); // Function Tiger.TigerResurrectAltar.OnWaveStoppedMoving // (Final|Native|Protected) // @ game+0x14addf0
	void OnWaveStartedMoving(); // Function Tiger.TigerResurrectAltar.OnWaveStartedMoving // (Final|Native|Protected) // @ game+0x14addd0
	void OnWaveRevealed(); // Function Tiger.TigerResurrectAltar.OnWaveRevealed // (Final|Native|Protected) // @ game+0x14addb0
	void OnResurrectInteractionFinished(); // Function Tiger.TigerResurrectAltar.OnResurrectInteractionFinished // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnResurrect(struct USceneComponent* InUsedSceneComponent, struct FVector InResurrectLocation, struct FRotator InResurrectRotation); // Function Tiger.TigerResurrectAltar.OnResurrect // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void OnAltarDeactivatedAfterUse(); // Function Tiger.TigerResurrectAltar.OnAltarDeactivatedAfterUse // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnAltarDeactivated(); // Function Tiger.TigerResurrectAltar.OnAltarDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_OnResurrect(int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.Multicast_OnResurrect // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x14adc90
	struct FRotator GetRespawnRotationOffset(struct USceneComponent* InSceneComponent, int32_t InCurrenctResurrectIndex, int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.GetRespawnRotationOffset // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x14ad950
	struct FVector GetRespawnLocationOffset(struct USceneComponent* InSceneComponent, int32_t InCurrenctResurrectIndex, int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.GetRespawnLocationOffset // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x14ad820
	void DestroyAltar(); // Function Tiger.TigerResurrectAltar.DestroyAltar // (Final|Native|Protected) // @ game+0x14ad7d0
	void CheckWavePosition(); // Function Tiger.TigerResurrectAltar.CheckWavePosition // (Final|Native|Protected) // @ game+0x14ad7b0
};

// Class Tiger.TigerResurrectComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerResurrectComponent : UActorComponent {
	int32_t TokenCount; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)
	struct ATigerPlayer* MyPawnToResurrect; // 0xc8(0x08)

	void Server_ResurrectGroupMember(struct FVector InLocation, struct FRotator InRotator); // Function Tiger.TigerResurrectComponent.Server_ResurrectGroupMember // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults) // @ game+0x14adf10
	void ResurrectGroupMember(struct FVector InRespawnLocation, struct FRotator InRespawnRotation); // Function Tiger.TigerResurrectComponent.ResurrectGroupMember // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x14ade30
	int32_t GetTokenCount(); // Function Tiger.TigerResurrectComponent.GetTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14adb20
};

// Class Tiger.TigerRevivingStatusUI
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerRevivingStatusUI : UTigerWidget {
	struct FText RegeneratingStatusText; // 0x280(0x18)
	struct FText DiablerizingStatusText; // 0x298(0x18)
	struct FText BeingRevivedStatusText; // 0x2b0(0x18)
	enum class ETigerPhysicalInteraction PhysicalInteractionStatus; // 0x2c8(0x01)
	bool bShouldUpdateTimer; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	float TimeLeft; // 0x2cc(0x04)
	float PercentageLeft; // 0x2d0(0x04)
	char pad_2D4[0x8]; // 0x2d4(0x08)
	bool ShowPrompt; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)

	void StatusChanged(); // Function Tiger.TigerRevivingStatusUI.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerRewardsPopup
// Size: 0x2b0 (Inherited: 0x298)
struct UTigerRewardsPopup : UTigerMenuWidget {
	char pad_298[0x10]; // 0x298(0x10)
	int32_t ZValue; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)

	void SetRewardItems(struct TArray<struct UTigerInventoryItemBase*>& InRewardItems, struct TArray<struct FTigerRewardReason>& InRewardReasons); // Function Tiger.TigerRewardsPopup.SetRewardItems // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerRichTextBlock
// Size: 0x448 (Inherited: 0x128)
struct UTigerRichTextBlock : UTextLayoutWidget {
	struct FText Text; // 0x128(0x18)
	struct FDelegate TextDelegate; // 0x140(0x10)
	struct FSlateFontInfo Font; // 0x150(0x58)
	struct FLinearColor ColorAndOpacity; // 0x1a8(0x10)
	struct TArray<struct UTigerRichTextBlockDecorator*> Decorators; // 0x1b8(0x10)
	char pad_1C8[0x280]; // 0x1c8(0x280)

	void SetText(struct FText& InText); // Function Tiger.TigerRichTextBlock.SetText // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14ae110
	void SetOpacity(float InOpacity); // Function Tiger.TigerRichTextBlock.SetOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x14ae090
	void SetColorAndOpacity(struct FLinearColor& InColorAndOpacity); // Function Tiger.TigerRichTextBlock.SetColorAndOpacity // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ae000
	struct FText GetText(); // Function Tiger.TigerRichTextBlock.GetText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ada80
};

// Class Tiger.TigerRichTextBlockIconDecorator
// Size: 0x50 (Inherited: 0x28)
struct UTigerRichTextBlockIconDecorator : URichTextBlockDecorator {
	bool bUsingGamePad; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct ATigerPlayerController* PlayerControllerRef; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
	struct UDataTable* IconImages; // 0x40(0x08)
	struct UTigerKeyTextureMapping* KeyTextureMapping; // 0x48(0x08)

	void OnUseGamepadChanged(bool InUsingGamepad); // Function Tiger.TigerRichTextBlockIconDecorator.OnUseGamepadChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14add20
	void InitializeValues(struct ATigerPlayerController* InTigerController, struct UTigerStyledRichTextBlock* InOwningRichTextBlock); // Function Tiger.TigerRichTextBlockIconDecorator.InitializeValues // (Final|Native|Public|BlueprintCallable) // @ game+0x14adbc0
	bool GetIsUsingGamePad(); // Function Tiger.TigerRichTextBlockIconDecorator.GetIsUsingGamePad // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ad7f0
	struct FSlateBrush GetBrushForKeyInternal(struct FKey InKey); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForKeyInternal // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	struct FSlateBrush GetBrushForAxisInternal(struct FName& InName, float InScale); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForAxisInternal // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	struct FSlateBrush GetBrushForActionInternal(struct FName& InName); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForActionInternal // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerRichTextBlockDecorator
// Size: 0x30 (Inherited: 0x28)
struct UTigerRichTextBlockDecorator : UObject {
	bool bReveal; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t RevealedIndex; // 0x2c(0x04)
};

// Class Tiger.TigerRoofSystem
// Size: 0x238 (Inherited: 0x228)
struct ATigerRoofSystem : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	float Width; // 0x230(0x04)
	float Depth; // 0x234(0x04)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerRoofSystem.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x139d340
};

// Class Tiger.TigerRoofSystemFreeTransformable
// Size: 0x248 (Inherited: 0x228)
struct ATigerRoofSystemFreeTransformable : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USplineComponent* SplineComponent; // 0x230(0x08)
	struct TArray<struct FTigerRoofSystemFreeTransformableCorner> Corners; // 0x238(0x10)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerRoofSystemFreeTransformable.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x139d340
};

// Class Tiger.TigerSafeHavenVolume
// Size: 0x268 (Inherited: 0x260)
struct ATigerSafeHavenVolume : ATriggerVolume {
	struct ATigerHaven* AssignedHaven; // 0x260(0x08)
};

// Class Tiger.TigerSafeZoneSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerSafeZoneSettings : UDeveloperSettings {
	struct FVector2D SafeZoneRelativeScreenSpaceDimensions; // 0x38(0x08)
	float UIZoneAspectRatio; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerSafeZoneWidget
// Size: 0x138 (Inherited: 0x138)
struct UTigerSafeZoneWidget : USafeZone {
};

// Class Tiger.TigerSaveGame
// Size: 0x30 (Inherited: 0x28)
struct UTigerSaveGame : USaveGame {
	struct FTigerPersistentCharacterID LastUsedCharacterId; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Tiger.TigerItemPreviewAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerItemPreviewAsset : UDataAsset {
	struct TArray<struct FTigerItemPreviewData> ItemPreviews; // 0x30(0x10)
};

// Class Tiger.TigerSubLevelList
// Size: 0x40 (Inherited: 0x30)
struct UTigerSubLevelList : UDataAsset {
	struct TArray<struct FTigerSubLevelBackground> SubLevels; // 0x30(0x10)
};

// Class Tiger.TigerScreenshotMapGenerationSettings
// Size: 0x68 (Inherited: 0x38)
struct UTigerScreenshotMapGenerationSettings : UDeveloperSettings {
	float Width; // 0x38(0x04)
	int32_t Resolution; // 0x3c(0x04)
	struct FVector2D Start; // 0x40(0x08)
	struct FVector2D End; // 0x48(0x08)
	float Height; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct FTigerPostProcessSettingsSetup PostProcessSetup; // 0x58(0x10)
};

// Class Tiger.TigerScreenshotMapBuilder
// Size: 0x260 (Inherited: 0x228)
struct ATigerScreenshotMapBuilder : AActor {
	struct ATigerPlayerController* PlayerController; // 0x228(0x08)
	struct UCameraComponent* CameraComponent; // 0x230(0x08)
	char pad_238[0x28]; // 0x238(0x28)

	void TakeScreenshot(); // Function Tiger.TigerScreenshotMapBuilder.TakeScreenshot // (Final|Native|Private) // @ game+0x14b33e0
	void HandleScreenShotTaken(); // Function Tiger.TigerScreenshotMapBuilder.HandleScreenShotTaken // (Final|Native|Private) // @ game+0x14b29c0
};

// Class Tiger.TigerScreenTransition
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerScreenTransition : UTigerWidget {
	struct UCurveFloat* ScreenTransitionCurveIn; // 0x280(0x08)
	struct UCurveFloat* ScreenTransitionCurveOut; // 0x288(0x08)
	struct FMulticastInlineDelegate OnTransitionInFinished; // 0x290(0x10)
	struct FMulticastInlineDelegate OnTransitionOutFinished; // 0x2a0(0x10)
	enum class EScreenTransitionState CurrentTransitionState; // 0x2b0(0x01)
	char pad_2B1[0xf]; // 0x2b1(0x0f)

	float GetCurrentTransitionProgress(); // Function Tiger.TigerScreenTransition.GetCurrentTransitionProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b2960
	void BeginTransition(); // Function Tiger.TigerScreenTransition.BeginTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x14b2690
};

// Class Tiger.TigerScriptedTexture
// Size: 0x2f8 (Inherited: 0x280)
struct UTigerScriptedTexture : UTigerWidget {
	struct UTextureRenderTarget2D* ScriptedTexture; // 0x280(0x08)
	char pad_288[0x70]; // 0x288(0x70)
};

// Class Tiger.TigerClientSeasonalRewardTier
// Size: 0x48 (Inherited: 0x28)
struct UTigerClientSeasonalRewardTier : UObject {
	struct TArray<struct FTigerItemId> FreeRewardIds; // 0x28(0x10)
	struct TArray<struct FTigerItemId> PremiumRewardIds; // 0x38(0x10)

	bool IsDoubleUISize(); // Function Tiger.TigerClientSeasonalRewardTier.IsDoubleUISize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b2b10
};

// Class Tiger.TigerClientSeasonalRewardCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerClientSeasonalRewardCollection : UObject {
	struct TArray<struct UTigerClientSeasonalRewardTier*> Tiers; // 0x28(0x10)
	int32_t BattlePassPrice; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Tiger.TigerSeasonConfigAsset
// Size: 0x388 (Inherited: 0x30)
struct UTigerSeasonConfigAsset : UDataAsset {
	struct FTigerSeasonConfig Config; // 0x30(0x350)
	char pad_380[0x8]; // 0x380(0x08)
};

// Class Tiger.TigerServerPushConnectionManager
// Size: 0xa8 (Inherited: 0xa8)
struct UTigerServerPushConnectionManager : UTigerPushConnectionManager {
};

// Class Tiger.TigerSessionSeeker
// Size: 0x198 (Inherited: 0x28)
struct UTigerSessionSeeker : UObject {
	struct FMulticastInlineDelegate OnSessionFound; // 0x28(0x10)
	struct FMulticastInlineDelegate OnCouldNotFindSession; // 0x38(0x10)
	struct FMulticastInlineDelegate OnJoiningSession; // 0x48(0x10)
	struct FMulticastInlineDelegate OnCouldNotJoinSession; // 0x58(0x10)
	struct UObject* WorldContextObject; // 0x68(0x08)
	struct UTigerGameInstance* GameInstance; // 0x70(0x08)
	struct ATigerPlayerController* PlayerController; // 0x78(0x08)
	struct FTigerBpFindSessionSelectedSession SelectedSession; // 0x80(0x110)
	enum class ETigerSessionSearchStatus Status; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)

	void SessionFound(struct FTigerBpFindSessionSelectedSession& InSelectedSession); // Function Tiger.TigerSessionSeeker.SessionFound // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14b3060
	void SeekBPImpl(struct FString InGameModeId, int32_t InGameModeIndex, enum class ESessionType InSessionType); // Function Tiger.TigerSessionSeeker.SeekBPImpl // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Seek(struct FString InGameModeId, int32_t InGameModeIndex, enum class ESessionType InSessionType, bool bInLeaveParty); // Function Tiger.TigerSessionSeeker.Seek // (Final|Native|Public|BlueprintCallable) // @ game+0x14b2ef0
	void OnSessionFoundDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnSessionFoundDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnPartySessionAvailable(); // Function Tiger.TigerSessionSeeker.OnPartySessionAvailable // (Final|Native|Protected) // @ game+0x14b2cb0
	void OnLeftParty(struct FTigerParty& InParty); // Function Tiger.TigerSessionSeeker.OnLeftParty // (Final|Native|Protected|HasOutParms) // @ game+0x14b2bc0
	void OnLeaderChanged(); // Function Tiger.TigerSessionSeeker.OnLeaderChanged // (Final|Native|Protected) // @ game+0x14b2ba0
	void OnJoiningSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnJoiningSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnCreateGameSessionFailed(); // Function Tiger.TigerSessionSeeker.OnCreateGameSessionFailed // (Final|Native|Protected) // @ game+0x14b26d0
	void OnCouldNotJoinSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnCouldNotJoinSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnCouldNotFindSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnCouldNotFindSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void JoiningSession(); // Function Tiger.TigerSessionSeeker.JoiningSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b2b60
	void JoinBPImpl(); // Function Tiger.TigerSessionSeeker.JoinBPImpl // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Join(); // Function Tiger.TigerSessionSeeker.Join // (Final|Native|Public|BlueprintCallable) // @ game+0x14b2b40
	void Init(struct UObject* InWorldContextObject, struct ATigerPlayerController* InPlayerController, bool bInJoinImmediately); // Function Tiger.TigerSessionSeeker.Init // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b2a00
	enum class ESessionType GetCurrentSessionType(); // Function Tiger.TigerSessionSeeker.GetCurrentSessionType // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b2940
	struct UTigerSessionSeeker* CreateSessionSeeker(struct UObject* InWorldContextObject, struct UTigerSessionSeeker* InSessionSeekerClass, struct ATigerPlayerController* InPlayerController, bool bInJoinImmediately); // Function Tiger.TigerSessionSeeker.CreateSessionSeeker // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14b2710
	void CouldNotJoinSession(); // Function Tiger.TigerSessionSeeker.CouldNotJoinSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b26f0
	void CouldNotFindSession(); // Function Tiger.TigerSessionSeeker.CouldNotFindSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x14b26d0
	void Cancel(); // Function Tiger.TigerSessionSeeker.Cancel // (Final|Native|Public|BlueprintCallable) // @ game+0x14b26b0
};

// Class Tiger.TigerSessionService
// Size: 0x40 (Inherited: 0x28)
struct UTigerSessionService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerSessionSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerSessionSettings : UDeveloperSettings {
	bool bFindOnlyLocalSessions; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t GroupSize; // 0x3c(0x04)
	bool bEnableFakeMatchmakingDelayInElysium; // 0x40(0x01)
	bool bEnableCloudSessions; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
};

// Class Tiger.TigerShacklesMine
// Size: 0x260 (Inherited: 0x228)
struct ATigerShacklesMine : AActor {
	struct UTigerBuff* ThornsBuff; // 0x228(0x08)
	struct UTigerBuff* ShacklesBuff; // 0x230(0x08)
	struct USceneComponent* Root; // 0x238(0x08)
	struct USceneComponent* IndicatorAnchor; // 0x240(0x08)
	char pad_248[0x18]; // 0x248(0x18)

	void OnShackleMineTriggered(); // Function Tiger.TigerShacklesMine.OnShackleMineTriggered // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerShacklesMine.OnOverlapBegin // (Final|Native|Private) // @ game+0x14b77e0
};

// Class Tiger.TigerSharedMouseCursor
// Size: 0x38 (Inherited: 0x28)
struct UTigerSharedMouseCursor : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerSharedVendorUI
// Size: 0x2e8 (Inherited: 0x280)
struct UTigerSharedVendorUI : UTigerWidget {
	struct FMulticastInlineDelegate OnShortcutHeaderClicked; // 0x280(0x10)
	struct FMulticastInlineDelegate OnMainHeaderClicked; // 0x290(0x10)
	struct TWeakObjectPtr<struct ATigerPaperDoll> VendorPaperDoll; // 0x2a0(0x08)
	struct ATigerPaperDoll* PaperDollClass; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct FText VendorName; // 0x2b8(0x18)
	struct FText VendorPurpose; // 0x2d0(0x18)

	void TabMenuRightGamepad(); // Function Tiger.TigerSharedVendorUI.TabMenuRightGamepad // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void TabMenuLeftGamepad(); // Function Tiger.TigerSharedVendorUI.TabMenuLeftGamepad // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SwitchToDialogueWindow(); // Function Tiger.TigerSharedVendorUI.SwitchToDialogueWindow // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SwitchToBlockingDialogueWindow(); // Function Tiger.TigerSharedVendorUI.SwitchToBlockingDialogueWindow // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SpawnPaperDoll(); // Function Tiger.TigerSharedVendorUI.SpawnPaperDoll // (Final|Native|Public|BlueprintCallable) // @ game+0x14b7cd0
	void OnHeaderTabClicked__DelegateSignature(); // DelegateFunction Tiger.TigerSharedVendorUI.OnHeaderTabClicked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
};

// Class Tiger.TigerSharkDeathTriggerVolume
// Size: 0x298 (Inherited: 0x260)
struct ATigerSharkDeathTriggerVolume : ATriggerVolume {
	struct AActor* Shark; // 0x260(0x08)
	struct FRotator SharkRotation; // 0x268(0x0c)
	struct FVector SharkSpawnLocationOffset; // 0x274(0x0c)
	float KillDelay; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct TArray<struct ATigerCharacter*> SavedVictims; // 0x288(0x10)

	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerSharkDeathTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x14b7710
	void KillVictim(); // Function Tiger.TigerSharkDeathTriggerVolume.KillVictim // (Final|Native|Private) // @ game+0x14b7620
	void HandleSharkVictim(struct ATigerCharacter* InVictim); // Function Tiger.TigerSharkDeathTriggerVolume.HandleSharkVictim // (Final|Native|Private) // @ game+0x14b7440
};

// Class Tiger.TigerSharknetAgent
// Size: 0x140 (Inherited: 0x50)
struct UTigerSharknetAgent : UTigerDsBackendAgent {
	struct FString DsVersion; // 0x50(0x10)
	char pad_60[0xc0]; // 0x60(0xc0)
	float MaxRegisterRetryDelaySeconds; // 0x120(0x04)
	char pad_124[0x1c]; // 0x124(0x1c)
};

// Class Tiger.TigerShockwaveWall
// Size: 0x2c0 (Inherited: 0x228)
struct ATigerShockwaveWall : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct UBoxComponent* EffectBoxComponent; // 0x230(0x08)
	struct FTigerShockwaveWallData ShockwaveData; // 0x238(0x60)
	struct FVector TargetLocation; // 0x298(0x0c)
	struct TWeakObjectPtr<struct ATigerPlayer> TigerInstigator; // 0x2a4(0x08)
	float CurrentLifetime; // 0x2ac(0x04)
	int32_t PowerLevel; // 0x2b0(0x04)
	char pad_2B4[0xc]; // 0x2b4(0x0c)

	struct FVector UpdateEffectCollisionBoxExtents(); // Function Tiger.TigerShockwaveWall.UpdateEffectCollisionBoxExtents // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x14b7d10
	void OnShockwaveWallDestroyed(enum class EShockwaveWallDestroyReason InDestroyReason); // Function Tiger.TigerShockwaveWall.OnShockwaveWallDestroyed // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnOverlapBeginEffect(struct UPrimitiveComponent* InOverlappedComp, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerShockwaveWall.OnOverlapBeginEffect // (Final|Native|Protected|HasOutParms) // @ game+0x14b78b0
	void OnCharacterHit(struct ATigerCharacter* InCharacterHit); // Function Tiger.TigerShockwaveWall.OnCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_OnCharacterHit(struct ATigerCharacter* InCharacterHit); // Function Tiger.TigerShockwaveWall.Multicast_OnCharacterHit // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1410e20
	void InitShockwaveData(struct FTigerShockwaveWallData& OutShockwaveData); // Function Tiger.TigerShockwaveWall.InitShockwaveData // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x14b74f0
	float DetermineDamageOnEnemy(struct ATigerCharacter* InEnemyCharacter); // Function Tiger.TigerShockwaveWall.DetermineDamageOnEnemy // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x14b72a0
	float CalculateSpeed(); // Function Tiger.TigerShockwaveWall.CalculateSpeed // (Native|Event|Protected|BlueprintEvent) // @ game+0x14b7230
	struct FVector CalculateKnockbackVector(struct ATigerCharacter* InHitEnemyCharacter); // Function Tiger.TigerShockwaveWall.CalculateKnockbackVector // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSHPBCoordinator
// Size: 0x120 (Inherited: 0xb0)
struct UTigerSHPBCoordinator : UActorComponent {
	struct UTigerNPCAsset* SHPBNPCAsset; // 0xb0(0x08)
	struct ATigerSHPBMarker* SHPBWorldMarker; // 0xb8(0x08)
	struct FName WaypointKeyName; // 0xc0(0x08)
	struct FName WaypointIndexKeyName; // 0xc8(0x08)
	bool bIsEnabled; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct TArray<struct ATigerNPC*> ActiveSHPB; // 0xd8(0x10)
	struct FTigerSHPBSettings Settings; // 0xe8(0x1c)
	char pad_104[0x4]; // 0x104(0x04)
	struct ATigerNPCInstantSpawner* SHPBSpawner; // 0x108(0x08)
	struct ATigerMatchGameMode* MatchGameMode; // 0x110(0x08)
	struct ATigerMatchGameState* MatchGameState; // 0x118(0x08)

	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerSHPBCoordinator.MatchStateChanged // (Final|Native|Private) // @ game+0x14b7640
};

// Class Tiger.TigerWorldMarker
// Size: 0x248 (Inherited: 0x228)
struct ATigerWorldMarker : AActor {
	struct UUserWidget* MarkerClass; // 0x228(0x08)
	bool bAutoCreateMapMarker; // 0x230(0x01)
	bool bWaitForMapData; // 0x231(0x01)
	char pad_232[0x6]; // 0x232(0x06)
	struct UTigerMapMarkerProxy* MapMarkerProxy; // 0x238(0x08)
	struct USceneComponent* MarkerRoot; // 0x240(0x08)

	bool TryToScheduleCreation(); // Function Tiger.TigerWorldMarker.TryToScheduleCreation // (Native|Event|Protected|BlueprintEvent) // @ game+0x14fbe90
	void OnPlayerControllerBeginPlay(); // Function Tiger.TigerWorldMarker.OnPlayerControllerBeginPlay // (Final|Native|Protected) // @ game+0x14fbc30
	bool HasMapMarker(); // Function Tiger.TigerWorldMarker.HasMapMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb760
	void CreateMapMarker(); // Function Tiger.TigerWorldMarker.CreateMapMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb200
	bool CanBeCreated(); // Function Tiger.TigerWorldMarker.CanBeCreated // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x14fb130
};

// Class Tiger.TigerSHPBMarker
// Size: 0x2b0 (Inherited: 0x248)
struct ATigerSHPBMarker : ATigerWorldMarker {
	struct ATigerNPC* FollowingNPC; // 0x248(0x08)
	struct FVector NPCLocation; // 0x250(0x0c)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TSet<struct TWeakObjectPtr<struct AActor>> PerceivedBy; // 0x260(0x50)

	void OnRep_NPCLocation(); // Function Tiger.TigerSHPBMarker.OnRep_NPCLocation // (Final|Native|Private) // @ game+0x14b7ae0
};

// Class Tiger.TigerGeneratedStaticMeshActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerGeneratedStaticMeshActor : AActor {
	struct UStaticMeshComponent* MeshComponent; // 0x228(0x08)
};

// Class Tiger.TigerSidewalkSpline
// Size: 0x250 (Inherited: 0x240)
struct ATigerSidewalkSpline : ATigerRebuildableActor {
	struct TArray<struct UPrimitiveComponent*> OrderedComponentsToMerge; // 0x240(0x10)
};

// Class Tiger.TigerSignificanceManager
// Size: 0x140 (Inherited: 0x120)
struct UTigerSignificanceManager : USignificanceManager {
	char pad_120[0x20]; // 0x120(0x20)
};

// Class Tiger.TigerSignificanceSettings
// Size: 0xb8 (Inherited: 0x38)
struct UTigerSignificanceSettings : UDeveloperSettings {
	struct FTigerSignificanceBudget Budgets[0x2]; // 0x38(0x80)
};

// Class Tiger.TigerSingleChildActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerSingleChildActor : AActor {
	struct AActor* ChildActor; // 0x228(0x08)

	void SetChildActorClass(struct AActor* ChildActorClass); // Function Tiger.TigerSingleChildActor.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // @ game+0x14b7b20
};

// Class Tiger.TigerSingleItemSpawner
// Size: 0x270 (Inherited: 0x268)
struct ATigerSingleItemSpawner : ATigerLootSpawner {
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)

	struct FTransform GetSecondaryItemTransform(); // Function Tiger.TigerSingleItemSpawner.GetSecondaryItemTransform // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x14b7360
	struct FTransform GetPrimaryItemTransform(); // Function Tiger.TigerSingleItemSpawner.GetPrimaryItemTransform // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x14b7360
};

// Class Tiger.TigerSocialSubscreenUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialSubscreenUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void Open(); // Function Tiger.TigerSocialSubscreenUI.Open // (Native|Public|BlueprintCallable) // @ game+0x13deb70
	void OnOpen(); // Function Tiger.TigerSocialSubscreenUI.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnClose(); // Function Tiger.TigerSocialSubscreenUI.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsOpen(); // Function Tiger.TigerSocialSubscreenUI.IsOpen // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1444940
	void Close(); // Function Tiger.TigerSocialSubscreenUI.Close // (Native|Public|BlueprintCallable) // @ game+0x1435c80
};

// Class Tiger.TigerSocialElysiumUI
// Size: 0x288 (Inherited: 0x288)
struct UTigerSocialElysiumUI : UTigerSocialSubscreenUI {

	struct TArray<struct FTigerPlayerStateFriendPair> GetSortedPlayerList(); // Function Tiger.TigerSocialElysiumUI.GetSortedPlayerList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b73c0
};

// Class Tiger.TigerSocialFriendInviteListUI
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerSocialFriendInviteListUI : UTigerWidget {
	char pad_280[0x28]; // 0x280(0x28)

	void StopMonitoring(); // Function Tiger.TigerSocialFriendInviteListUI.StopMonitoring // (Final|Native|Public|BlueprintCallable) // @ game+0x14b7cf0
	void PopulateListAndMonitorChanges(); // Function Tiger.TigerSocialFriendInviteListUI.PopulateListAndMonitorChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x14b7b00
	void OnPopulateInvites(struct TArray<struct UTigerFriendInvite*>& InFriendInvites); // Function Tiger.TigerSocialFriendInviteListUI.OnPopulateInvites // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnInviteRemoved(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerSocialFriendInviteListUI.OnInviteRemoved // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnInviteReceived(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerSocialFriendInviteListUI.OnInviteReceived // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerSocialFriendInviteListUI.OnFriendAdded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSocialFriendsUI
// Size: 0x2a8 (Inherited: 0x288)
struct UTigerSocialFriendsUI : UTigerSocialSubscreenUI {
	char pad_288[0x20]; // 0x288(0x20)

	void OnFriendsLoaded(); // Function Tiger.TigerSocialFriendsUI.OnFriendsLoaded // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendServiceStatusChanged(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerSocialFriendsUI.OnFriendServiceStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendRemoved(struct UTigerFriend* InLostFriend); // Function Tiger.TigerSocialFriendsUI.OnFriendRemoved // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerSocialFriendsUI.OnFriendAdded // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSocialInboxUI
// Size: 0x290 (Inherited: 0x288)
struct UTigerSocialInboxUI : UTigerSocialSubscreenUI {
	char pad_288[0x8]; // 0x288(0x08)

	void OnFriendServiceStatusChanged(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerSocialInboxUI.OnFriendServiceStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSocialPartyInviteListUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialPartyInviteListUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void StopMonitoring(); // Function Tiger.TigerSocialPartyInviteListUI.StopMonitoring // (Final|Native|Public|BlueprintCallable) // @ game+0x14bb5b0
	void OnInviteRemoved(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerSocialPartyInviteListUI.OnInviteRemoved // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnInviteReceived(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerSocialPartyInviteListUI.OnInviteReceived // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void MonitorInvites(); // Function Tiger.TigerSocialPartyInviteListUI.MonitorInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x14bb100
};

// Class Tiger.TigerSocialSearchPlayerUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialSearchPlayerUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void OnSearchPlayerResponse(struct UTigerFriend* InPlayer); // Function Tiger.TigerSocialSearchPlayerUI.OnSearchPlayerResponse // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Init(); // Function Tiger.TigerSocialSearchPlayerUI.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x14bb040
	void Close(); // Function Tiger.TigerSocialSearchPlayerUI.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x14bafa0
};

// Class Tiger.TigerSocialUI
// Size: 0x3c8 (Inherited: 0x3c0)
struct UTigerSocialUI : UTigerSceneBackgroundUI {
	struct UTigerSocialSubscreenUI* CurrentSubscreen; // 0x3c0(0x08)

	void OpenSubscreen(struct UTigerSocialSubscreenUI* InSubscreen); // Function Tiger.TigerSocialUI.OpenSubscreen // (Final|Native|Public|BlueprintCallable) // @ game+0x14bb2d0
	void OnSubscreenOpen(struct UTigerSocialSubscreenUI* InSubscreen); // Function Tiger.TigerSocialUI.OnSubscreenOpen // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void CloseCurrentSubscreen(); // Function Tiger.TigerSocialUI.CloseCurrentSubscreen // (Final|Native|Public|BlueprintCallable) // @ game+0x14bafc0
};

// Class Tiger.TigerSoloCoordinator
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerSoloCoordinator : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class Tiger.TigerSpawnMechanic
// Size: 0x28 (Inherited: 0x28)
struct UTigerSpawnMechanic : UObject {
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleBase
// Size: 0x50 (Inherited: 0x28)
struct UTigerSpawnMechanicBattleRoyaleBase : UTigerSpawnMechanic {
	struct ATigerMatchGameMode* GameMode; // 0x28(0x08)
	struct TArray<struct AActor*> AllPlayerStarts; // 0x30(0x10)
	struct TArray<struct AActor*> UnusedPlayerStarts; // 0x40(0x10)
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleMapSelection
// Size: 0x80 (Inherited: 0x50)
struct UTigerSpawnMechanicBattleRoyaleMapSelection : UTigerSpawnMechanicBattleRoyaleBase {
	struct TArray<struct FTigerDesiredSpawnLocation> DesiredSpawnLocations; // 0x50(0x10)
	char pad_60[0x20]; // 0x60(0x20)

	void OnPreMatchStateChanged(struct FTigerPreMatchStateInfo InNewInfo); // Function Tiger.TigerSpawnMechanicBattleRoyaleMapSelection.OnPreMatchStateChanged // (Final|Native|Public) // @ game+0x14bb120
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleRandomStart
// Size: 0x118 (Inherited: 0x50)
struct UTigerSpawnMechanicBattleRoyaleRandomStart : UTigerSpawnMechanicBattleRoyaleBase {
	struct ATigerWorldMarker* TestSpawnPointsMapMarkerClass; // 0x50(0x08)
	struct TArray<struct FVector2D> GroupSpawnLocations; // 0x58(0x10)
	char pad_68[0x50]; // 0x68(0x50)
	struct TMap<struct ATigerPlayerState*, struct FTigerGroupId> FakeGroupIds; // 0xb8(0x50)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x108(0x08)
	float MinimumDistanceBetweenGroups; // 0x110(0x04)
	float DistanceBetweenGroupsFalloffLength; // 0x114(0x04)
};

// Class Tiger.TigerSpawnMechanicBloodVein
// Size: 0x30 (Inherited: 0x28)
struct UTigerSpawnMechanicBloodVein : UTigerSpawnMechanic {
	struct ATigerBloodVein* StartBloodVein; // 0x28(0x08)
};

// Class Tiger.TigerSpawnMechanicPlayInEditor
// Size: 0x30 (Inherited: 0x28)
struct UTigerSpawnMechanicPlayInEditor : UTigerSpawnMechanic {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerSpawnMechanicRandomPlayerStart
// Size: 0x50 (Inherited: 0x28)
struct UTigerSpawnMechanicRandomPlayerStart : UTigerSpawnMechanic {
	struct ATigerGameMode* GameMode; // 0x28(0x08)
	struct TArray<struct AActor*> AllPlayerStarts; // 0x30(0x10)
	struct TArray<struct AActor*> UnusedPlayerStarts; // 0x40(0x10)
};

// Class Tiger.TigerSpawnMechanicTutorial
// Size: 0x60 (Inherited: 0x50)
struct UTigerSpawnMechanicTutorial : UTigerSpawnMechanicRandomPlayerStart {
	struct TArray<struct AActor*> AllBotStarts; // 0x50(0x10)
};

// Class Tiger.TigerSpawnPointSelectionUi
// Size: 0x338 (Inherited: 0x298)
struct UTigerSpawnPointSelectionUi : UTigerMenuWidget {
	struct FVector2D CurrentCanvasSize; // 0x298(0x08)
	int32_t PreGameStateEndTime; // 0x2a0(0x04)
	enum class ETigerPreMatchState CurrentPreMatchState; // 0x2a4(0x01)
	char pad_2A5[0x3]; // 0x2a5(0x03)
	struct TArray<struct FTigerClientSpawnLocationInfo> CurrentSpawnSelectionInfo; // 0x2a8(0x10)
	struct TMap<int32_t, struct UTigerWidget*> GroupSpawnLocationWidgets; // 0x2b8(0x50)
	struct UWidget* CanvasSizeWidget; // 0x308(0x08)
	char pad_310[0x14]; // 0x310(0x14)
	bool bAllowOutOfBoundsSelection; // 0x324(0x01)
	char pad_325[0x3]; // 0x325(0x03)
	struct TArray<struct UTigerWidget*> EnemySpawnLocationWidgets; // 0x328(0x10)

	void UpdateWidgetRotation(struct UTigerWidget* InWidget, float InRotation); // Function Tiger.TigerSpawnPointSelectionUi.UpdateWidgetRotation // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void UpdateWidgetLocation(struct UTigerWidget* InWidget, struct FVector& InLocation); // Function Tiger.TigerSpawnPointSelectionUi.UpdateWidgetLocation // (Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void SetPreMatchState(struct FTigerPreMatchStateInfo& InPreMatchState); // Function Tiger.TigerSpawnPointSelectionUi.SetPreMatchState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	bool RequestNewSpawnLocation(struct FVector& InDesiredSpawnLocation); // Function Tiger.TigerSpawnPointSelectionUi.RequestNewSpawnLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14bb360
	void OnNewSpawnAssignedFromServerToLocalPlayer(struct FVector2D InNewLocation, float InOrientation); // Function Tiger.TigerSpawnPointSelectionUi.OnNewSpawnAssignedFromServerToLocalPlayer // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x184a280
	bool IsLocationOutOfBounds(struct FVector& InLocation); // Function Tiger.TigerSpawnPointSelectionUi.IsLocationOutOfBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14bb060
	int32_t GetRemainingStateTime(); // Function Tiger.TigerSpawnPointSelectionUi.GetRemainingStateTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bb010
	struct UTigerWidget* CreateGroupMarkerWidget(struct FTigerClientSpawnLocationInfo& InSpawnLocationInfo); // Function Tiger.TigerSpawnPointSelectionUi.CreateGroupMarkerWidget // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	struct UTigerWidget* CreateEnemyMarkerWidget(); // Function Tiger.TigerSpawnPointSelectionUi.CreateEnemyMarkerWidget // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSpectateCameraBehavior
// Size: 0x178 (Inherited: 0x128)
struct UTigerSpectateCameraBehavior : UTigerActiveCameraBehavior {
	float FollowCameraDelay; // 0x128(0x04)
	float CameraFollowSpeedMultiplier; // 0x12c(0x04)
	float ConstantAddedCameraFollowSpeed; // 0x130(0x04)
	float NewFollowPointOffsetMultiplier; // 0x134(0x04)
	struct ATigerSpectatorPawn* SpectatorPawn; // 0x138(0x08)
	char pad_140[0x38]; // 0x140(0x38)
};

// Class Tiger.TigerSpectatorPawn
// Size: 0x308 (Inherited: 0x2b0)
struct ATigerSpectatorPawn : ASpectatorPawn {
	struct UTigerSpringArmComponent* SpringArm; // 0x2b0(0x08)
	struct FMulticastInlineDelegate OnSpectateeChanged; // 0x2b8(0x10)
	struct FMulticastInlineDelegate OnEnoughStreamingDoneToSpectate; // 0x2c8(0x10)
	struct ATigerPlayerState* CurrentSpectatee; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> CurrentSpectateePlayer; // 0x2e0(0x08)
	bool bIsWaitingForStreaming; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	float LastSpectateeSwitchTime; // 0x2ec(0x04)
	float MaxLoadingScreenTime; // 0x2f0(0x04)
	char pad_2F4[0x14]; // 0x2f4(0x14)

	void Server_SpectateAdjacentGroupMember(enum class ETigerSelectNewSpectatorDirection InDirection); // Function Tiger.TigerSpectatorPawn.Server_SpectateAdjacentGroupMember // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14bb470
	void Server_EndSpectate(); // Function Tiger.TigerSpectatorPawn.Server_EndSpectate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14bb420
	void OnStreamingCellLoaded(struct UTigerWorldCompositionCellComponent* InCell); // Function Tiger.TigerSpectatorPawn.OnStreamingCellLoaded // (Final|Native|Protected) // @ game+0x14bb240
	void OnSpectateeChanged__DelegateSignature(struct ATigerPlayerState* InSpectatee, struct ATigerPlayerState* InPreviousSpectatee); // DelegateFunction Tiger.TigerSpectatorPawn.OnSpectateeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnRep_CurrentSpectatee(struct ATigerPlayerState* InOldSpectatee); // Function Tiger.TigerSpectatorPawn.OnRep_CurrentSpectatee // (Final|Native|Public) // @ game+0x14bb1b0
	void OnEnoughStreamingDoneToSpectate__DelegateSignature(); // DelegateFunction Tiger.TigerSpectatorPawn.OnEnoughStreamingDoneToSpectate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	struct ATigerPlayer* GetCurrentSpectatedPlayer(); // Function Tiger.TigerSpectatorPawn.GetCurrentSpectatedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bafe0
};

// Class Tiger.TigerSplatmapSettings
// Size: 0xa0 (Inherited: 0x38)
struct UTigerSplatmapSettings : USharkLocalDeveloperSettings {
	bool bRenderSplatmap; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TSoftObjectPtr<UTexture2D> DefaultStamp; // 0x40(0x28)
	float TimeBetweenAutoExportInSeconds; // 0x68(0x04)
	bool bUseCtrlToDraw; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct TSoftObjectPtr<UMaterialInterface> DrawMaterialMaster; // 0x70(0x28)
	struct FName DrawMaterialTextureParamName; // 0x98(0x08)
};

// Class Tiger.TigerSplatmapPaintingSettings
// Size: 0x48 (Inherited: 0x28)
struct UTigerSplatmapPaintingSettings : UObject {
	struct TWeakObjectPtr<struct UTexture2D> Stamp; // 0x28(0x08)
	struct TArray<bool> Channels; // 0x30(0x10)
	float Opacity; // 0x40(0x04)
	float StampWorldSize; // 0x44(0x04)
};

// Class Tiger.TigerSplatmapGenerationSettings
// Size: 0x48 (Inherited: 0x28)
struct UTigerSplatmapGenerationSettings : UObject {
	float CellBounds; // 0x28(0x04)
	struct FIntPoint CellCount; // 0x2c(0x08)
	struct FIntPoint CellTextureDimensions; // 0x34(0x08)
	struct FVector CenterLocation; // 0x3c(0x0c)
};

// Class Tiger.TigerSplatmap
// Size: 0x348 (Inherited: 0x228)
struct ATigerSplatmap : AActor {
	struct UMaterialParameterCollection* SplatmapParameterCollection; // 0x228(0x08)
	struct UTextureRenderTarget2D* SplatTextureRenderTarget; // 0x230(0x08)
	struct UTextureRenderTarget2D* SplatTextureHeightRenderTarget; // 0x238(0x08)
	struct UMaterial* SplatmapCellReadMaterial; // 0x240(0x08)
	struct UMaterialInstanceDynamic* SplatmapCellReadMaterialInstance; // 0x248(0x08)
	float BoundsSize; // 0x250(0x04)
	float HeightmapBoundsSize; // 0x254(0x04)
	struct UTigerSplatmapGenerationSettings* CurrentGenerationSettings; // 0x258(0x08)
	struct TArray<struct TWeakObjectPtr<struct ATigerSplatmapCell>> SplatmapCells; // 0x260(0x10)
	struct USceneComponent* Root; // 0x270(0x08)
	struct AActor* CellOwner; // 0x278(0x08)
	struct TSet<struct ATigerSplatmapCell*> CellsInRangeLastFrame; // 0x280(0x50)
	struct TSet<struct ATigerSplatmapCell*> CellsInRangeThisFrame; // 0x2d0(0x50)
	float TickInterval; // 0x320(0x04)
	float MinRerenderDistance; // 0x324(0x04)
	struct UCanvas* SplatCanvas; // 0x328(0x08)
	struct UCanvas* HeightCanvas; // 0x330(0x08)
	char pad_338[0x10]; // 0x338(0x10)
};

// Class Tiger.TigerSplatmapCell
// Size: 0x300 (Inherited: 0x228)
struct ATigerSplatmapCell : AActor {
	struct TSoftObjectPtr<UTexture2D> TextureResource; // 0x228(0x28)
	struct TSoftObjectPtr<UMaterialInterface> DrawMaterial; // 0x250(0x28)
	struct TSoftObjectPtr<UTexture2D> HeightTextureResource; // 0x278(0x28)
	struct TSoftObjectPtr<UMaterialInterface> HeightDrawMaterial; // 0x2a0(0x28)
	char pad_2C8[0x30]; // 0x2c8(0x30)
	float BoundsSize; // 0x2f8(0x04)
	char pad_2FC[0x4]; // 0x2fc(0x04)
};

// Class Tiger.TigerSpotLight
// Size: 0x240 (Inherited: 0x238)
struct ATigerSpotLight : ALight {
	struct UTigerSpotLightComponent* SpotLightComponent; // 0x238(0x08)
};

// Class Tiger.TigerSpotLightComponent
// Size: 0x370 (Inherited: 0x370)
struct UTigerSpotLightComponent : USpotLightComponent {
};

// Class Tiger.TigerSpringArmComponent
// Size: 0x370 (Inherited: 0x280)
struct UTigerSpringArmComponent : USpringArmComponent {
	char pad_280[0x40]; // 0x280(0x40)
	float HideCharacterBelowLength; // 0x2c0(0x04)
	float SpringArmShortenSpeed; // 0x2c4(0x04)
	float SpringArmLengthenSpeed; // 0x2c8(0x04)
	float StepUpOffsetLerpSpeed; // 0x2cc(0x04)
	char pad_2D0[0x70]; // 0x2d0(0x70)
	struct TArray<struct TWeakObjectPtr<struct UStaticMeshComponent>> CurrentNearObjectFadeToggledObjects; // 0x340(0x10)
	char pad_350[0x20]; // 0x350(0x20)

	void SetCameraComponentPelvisOffset(struct FVector& InOffset); // Function Tiger.TigerSpringArmComponent.SetCameraComponentPelvisOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14bb520
	void ResetAttachment(); // Function Tiger.TigerSpringArmComponent.ResetAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x14bb400
	void AttachToOtherComponent(struct USceneComponent* InAnotherComponent); // Function Tiger.TigerSpringArmComponent.AttachToOtherComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x14baf10
};

// Class Tiger.TigerSprintConfig
// Size: 0x120 (Inherited: 0x28)
struct UTigerSprintConfig : UObject {
	float MinimumForwardInput; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	float SprintDelay; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct UTigerCharacterMovementComponent* MoveComp; // 0x38(0x08)
	char pad_40[0xc]; // 0x40(0x0c)
	float LedgeGrabReductionMultiplier; // 0x4c(0x04)
	float MeleeAttackReductionMultiplier[0x8]; // 0x50(0x20)
	float DisciplineUseReductionMultiplier[0x22]; // 0x70(0x88)
	struct TArray<float> DodgeReductionMultiplier; // 0xf8(0x10)
	float JumpReductionMultiplier; // 0x108(0x04)
	float DoubleJumpReductionMultiplier; // 0x10c(0x04)
	float SprintBuildUpDecayDuration; // 0x110(0x04)
	float SprintBuildUpDecayDelay; // 0x114(0x04)
	struct UCurveFloat* SprintBuildUpCurve; // 0x118(0x08)

	void OnSprintDelayCompleted(struct ATigerPlayer* InPlayer); // Function Tiger.TigerSprintConfig.OnSprintDelayCompleted // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerStaggerComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerStaggerComponent : UActorComponent {
	struct UAnimMontage* CurrentStaggerAnimation; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerStaticMeshUserData
// Size: 0x30 (Inherited: 0x28)
struct UTigerStaticMeshUserData : UAssetUserData {
	enum class ETigerStaticMeshType StaticMeshType; // 0x28(0x01)
	bool bIsClimbable; // 0x29(0x01)
	bool bIsWallJumpable; // 0x2a(0x01)
	bool bFadeWhenNearToCamera; // 0x2b(0x01)
	bool bIsLowVaultable; // 0x2c(0x01)
	bool bIsLedgeGrabbable; // 0x2d(0x01)
	bool bForceHorizontalVelocityOnFallingImpact; // 0x2e(0x01)
	char pad_2F[0x1]; // 0x2f(0x01)
};

// Class Tiger.TigerPiercingPhysicsAssetUserData
// Size: 0x38 (Inherited: 0x28)
struct UTigerPiercingPhysicsAssetUserData : UAssetUserData {
	float Mass; // 0x28(0x04)
	float ForceAmount; // 0x2c(0x04)
	float AnglePitchLimit; // 0x30(0x04)
	float AngleRollLimit; // 0x34(0x04)
};

// Class Tiger.StaticPiercingPhysics
// Size: 0x38 (Inherited: 0x28)
struct UStaticPiercingPhysics : UObject {
	struct TArray<struct FStaticPhysicsPiercingData> SimulatedPhysicsStaticPiercings; // 0x28(0x10)
};

// Class Tiger.TigerStatisticsGatherer
// Size: 0x288 (Inherited: 0x228)
struct ATigerStatisticsGatherer : AActor {
	struct TMap<struct FString, float> AnimationSequences; // 0x228(0x50)
	float ProcessingCullDistance; // 0x278(0x04)
	int32_t MaxComponentProcessingCountPerFrame; // 0x27c(0x04)
	bool bVisualizeProcessedComponents; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
};

// Class Tiger.TigerStatsSubsystem
// Size: 0x120 (Inherited: 0x30)
struct UTigerStatsSubsystem : UGameInstanceSubsystem {
	char pad_30[0xf0]; // 0x30(0xf0)
};

// Class Tiger.TigerStore
// Size: 0x248 (Inherited: 0x228)
struct ATigerStore : AActor {
	struct UTigerBlueprintLootLocationComponent* LootConfiguration; // 0x228(0x08)
	bool bHasAlarmedTriggered; // 0x230(0x01)
	enum class ETigerInWorldStore StoreTypeIdentifier; // 0x231(0x01)
	char pad_232[0x16]; // 0x232(0x16)

	bool IsEveryDoorOpen(); // Function Tiger.TigerStore.IsEveryDoorOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bf630
};

// Class Tiger.TigerStoreEntryWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerStoreEntryWidget : UTigerWidget {
	struct FTigerMetaStoreEntry RepresentedStoreEntry; // 0x280(0x50)

	bool HasValidStoreEntry(); // Function Tiger.TigerStoreEntryWidget.HasValidStoreEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bf600
	void BuyStoreEntry(struct FDelegate& InOnBuyResponse, int32_t InQuantity); // Function Tiger.TigerStoreEntryWidget.BuyStoreEntry // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14bf370
};

// Class Tiger.TigerStoreService
// Size: 0x40 (Inherited: 0x28)
struct UTigerStoreService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerStreamingBenchmarkTraversalStrategy
// Size: 0x78 (Inherited: 0x28)
struct UTigerStreamingBenchmarkTraversalStrategy : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Tiger.TigerStreamingBenchmarkTeleportStrategy
// Size: 0x78 (Inherited: 0x78)
struct UTigerStreamingBenchmarkTeleportStrategy : UTigerStreamingBenchmarkTraversalStrategy {
};

// Class Tiger.TigerStreamingBenchmarkFlyingStrategy
// Size: 0x98 (Inherited: 0x78)
struct UTigerStreamingBenchmarkFlyingStrategy : UTigerStreamingBenchmarkTraversalStrategy {
	char pad_78[0x20]; // 0x78(0x20)
};

// Class Tiger.TigerStyledRichTextBlock
// Size: 0x688 (Inherited: 0x678)
struct UTigerStyledRichTextBlock : URichTextBlock {
	struct FDataTableRowHandle TextStyleRow; // 0x678(0x10)

	void SetWrapTextAt(float InWrapTextAt); // Function Tiger.TigerStyledRichTextBlock.SetWrapTextAt // (Final|Native|Public|BlueprintCallable) // @ game+0x14bfc60
	void SetTextStyleSetButKeepTextStyle(struct UDataTable* InNewTextStyleSet); // Function Tiger.TigerStyledRichTextBlock.SetTextStyleSetButKeepTextStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x14bfbd0
	void SetTextStyle(struct FDataTableRowHandle InTextStyle); // Function Tiger.TigerStyledRichTextBlock.SetTextStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x14bfb30
	void SetDefaultUIColor(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace); // Function Tiger.TigerStyledRichTextBlock.SetDefaultUIColor // (Final|Native|Public|BlueprintCallable) // @ game+0x14bfa60
	void SetDefaultShadowUIColorAndOpacity(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace, float InOpacity); // Function Tiger.TigerStyledRichTextBlock.SetDefaultShadowUIColorAndOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf950
	void SetDefaultShadowUIColor(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace); // Function Tiger.TigerStyledRichTextBlock.SetDefaultShadowUIColor // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf880
	void SetDefaultOutline(struct FFontOutlineSettings InOutlineSettings); // Function Tiger.TigerStyledRichTextBlock.SetDefaultOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf7d0
	void RefreshSlateTextBlock(); // Function Tiger.TigerStyledRichTextBlock.RefreshSlateTextBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf7b0
	void ClearDefaultStyleOverrides(); // Function Tiger.TigerStyledRichTextBlock.ClearDefaultStyleOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf470
};

// Class Tiger.TigerStyledRichTextBlockDecorator
// Size: 0x28 (Inherited: 0x28)
struct UTigerStyledRichTextBlockDecorator : URichTextBlockDecorator {
};

// Class Tiger.TigerSupplyDrop
// Size: 0x350 (Inherited: 0x2f0)
struct ATigerSupplyDrop : ATigerLootBox {
	struct UBoxComponent* BoxRoot; // 0x2f0(0x08)
	char pad_2F8[0x8]; // 0x2f8(0x08)
	struct FTransform FinalTransform; // 0x300(0x30)
	struct UTigerItemLootTable* LootTable; // 0x330(0x08)
	int32_t MinNumItems; // 0x338(0x04)
	int32_t MaxNumItems; // 0x33c(0x04)
	float MaxFallSpeed; // 0x340(0x04)
	char pad_344[0xc]; // 0x344(0x0c)

	void OnRep_FinalTransform(); // Function Tiger.TigerSupplyDrop.OnRep_FinalTransform // (Final|Native|Private) // @ game+0x14bf790
	void HideParachute(); // Function Tiger.TigerSupplyDrop.HideParachute // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerSupplyDropHelicopter
// Size: 0x228 (Inherited: 0x228)
struct ATigerSupplyDropHelicopter : AActor {
};

// Class Tiger.TigerSyncPartyCrossplaySettingsAysnc
// Size: 0x50 (Inherited: 0x30)
struct UTigerSyncPartyCrossplaySettingsAysnc : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate SettingSynced; // 0x30(0x10)
	char pad_40[0x10]; // 0x40(0x10)

	struct UTigerSyncPartyCrossplaySettingsAysnc* SyncPartyCrossplaySettings(struct UObject* InWorldContextObject, struct APlayerController* InPlayerController); // Function Tiger.TigerSyncPartyCrossplaySettingsAysnc.SyncPartyCrossplaySettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14bfce0
	void CrossplaySettingSynced(enum class ETigerMatchmakingPlatform InSyncedPlatform); // Function Tiger.TigerSyncPartyCrossplaySettingsAysnc.CrossplaySettingSynced // (Final|Native|Public) // @ game+0x14bf490
};

// Class Tiger.TigerTeamMenuUI
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerTeamMenuUI : UTigerIngameSubmenuWidget {

	void MutePlayer(int32_t InPlayerId); // Function Tiger.TigerTeamMenuUI.MutePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf700
	bool IsPlayerMuted(int32_t InPlayerId); // Function Tiger.TigerTeamMenuUI.IsPlayerMuted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bf660
};

// Class Tiger.TigerTeamViewUI
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerTeamViewUI : UTigerWidget {
	struct TArray<struct ATigerPlayerState*> OtherGroupMembers; // 0x280(0x10)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComp; // 0x290(0x08)
	struct FString PreHighlightTag; // 0x298(0x10)
	struct TArray<struct FName> GroupMemberPaperDollTags; // 0x2a8(0x10)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void OnGroupMemberAdded(char InMemberId, struct ATigerPlayerState* InPlayerState, bool bInIsLeftSide, struct ATigerPaperDoll* InPaperDoll); // Function Tiger.TigerTeamViewUI.OnGroupMemberAdded // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void HandleGroupMembersChanged(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*>& InPreviousMembers); // Function Tiger.TigerTeamViewUI.HandleGroupMembersChanged // (Final|Native|Protected|HasOutParms) // @ game+0x14bf510
};

// Class Tiger.TigerTelemetryDataDefinitions
// Size: 0x48 (Inherited: 0x28)
struct UTigerTelemetryDataDefinitions : UObject {
	enum class ETigerPowerKitType ArchetypeDefinitions; // 0x28(0x01)
	enum class ETigerClan ClanDefinitions; // 0x29(0x01)
	enum class ETigerTelemetryDamageCauser DamageSourceIdentifiers; // 0x2a(0x01)
	enum class ETigerTelemetryExpSource ExperienceSources; // 0x2b(0x01)
	enum class ETigerTelemetryDamageType DamageTypes; // 0x2c(0x01)
	enum class ETigerDisciplinesEnum Disciplines; // 0x2d(0x01)
	enum class ETigerTelemetryMatchmackingCancelReason MatchmakingCancelReasons; // 0x2e(0x01)
	enum class ETigerTelemetryCauseOfPingRemoval CauseOfPingRemoval; // 0x2f(0x01)
	enum class ETigerTelemetryDeviceType DeviceTypes; // 0x30(0x01)
	enum class ETigerTelemetryPlatformType PlatformTypes; // 0x31(0x01)
	enum class ETigerTelemetryMapIds MapIds; // 0x32(0x01)
	enum class ETigerTelemetryRankedMode RankedModes; // 0x33(0x01)
	enum class ETigerTelemetryGameplayMode GameplayModes; // 0x34(0x01)
	enum class ETigerTelemetryChallengeType ChallengeTypes; // 0x35(0x01)
	enum class ETigerTelemetryItemSourceID TelemetrySourceID; // 0x36(0x01)
	enum class ETigerTelemetryBattlepassType BattlepassTypes; // 0x37(0x01)
	enum class ETigerTelemetryHardCurrencyRecieveMethod HardCurrencyReceiveMethod; // 0x38(0x01)
	enum class ETigerTelemetryNetworkType NetworkTypes; // 0x39(0x01)
	enum class ETigerTelemetryNetworkIpType NetworkIPType; // 0x3a(0x01)
	enum class ETigerTelemetryAceRebirthType RebirthType; // 0x3b(0x01)
	enum class ETigerTelemetryMetaItemSourceType MetaItemSourceType; // 0x3c(0x04)
	enum class ETigerTelemetryAceDeathType DeathType; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Tiger.TigerTelemetryEventHandler
// Size: 0x7f8 (Inherited: 0x28)
struct UTigerTelemetryEventHandler : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct USharkTelemetry* SharkTelemetry; // 0x30(0x08)
	struct UTigerTelemetryService* TelemetryService; // 0x38(0x08)
	struct UTigerGameInstance* GameInstance; // 0x40(0x08)
	char pad_48[0x7b0]; // 0x48(0x7b0)

	void SettingsChanged(); // Function Tiger.TigerTelemetryEventHandler.SettingsChanged // (Final|Native|Private) // @ game+0x14c8eb0
	void HandleJsonTelemetry(struct FString InJsonTelemetry); // Function Tiger.TigerTelemetryEventHandler.HandleJsonTelemetry // (Final|Native|Public) // @ game+0x14c8e10
	void GraphicsSettingsChanged(struct FTigerGraphicsSettings& InGraphicsSettings, struct FTigerGraphicsSettingsPS5& InGraphicsSettingsPS5); // Function Tiger.TigerTelemetryEventHandler.GraphicsSettingsChanged // (Final|Native|Private|HasOutParms) // @ game+0x14c8cc0
	void CacheTransactionalData(struct FTigerPersistentPlayerTransactionalData& InTransactionalData); // Function Tiger.TigerTelemetryEventHandler.CacheTransactionalData // (Final|Native|Public|HasOutParms) // @ game+0x14c8b50
};

// Class Tiger.TigerTelemetryIDInterface
// Size: 0x28 (Inherited: 0x28)
struct UTigerTelemetryIDInterface : UInterface {
};

// Class Tiger.TigerTelemetryService
// Size: 0x40 (Inherited: 0x28)
struct UTigerTelemetryService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerTelemetryUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerTelemetryUtilityBFL : UBlueprintFunctionLibrary {

	void UpdateTelemetryIDBundle(struct FTigerTelemetryIDBundle& InBundle); // Function Tiger.TigerTelemetryUtilityBFL.UpdateTelemetryIDBundle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d0430
	void OnTelemetryIDObjectsLoaded__DelegateSignature(struct TArray<struct FTigerTelemetryIDBundle>& InLoadedBundle); // DelegateFunction Tiger.TigerTelemetryUtilityBFL.OnTelemetryIDObjectsLoaded__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void MoveTelemetryIDFromCombinedItemsToNewItem(struct TArray<struct TSoftClassPtr<UObject>> InCombinedItemObjectPaths, struct TArray<struct TSoftClassPtr<UObject>> InNewItemObjectPaths, struct TArray<struct FString>& OutLogs, struct TArray<struct FString>& OutErrorStrings); // Function Tiger.TigerTelemetryUtilityBFL.MoveTelemetryIDFromCombinedItemsToNewItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cfe90
	struct TArray<struct TSoftClassPtr<UObject>> GetBlueprintsUsingTelemetryID(struct TArray<struct FName>& InClassExclusionList); // Function Tiger.TigerTelemetryUtilityBFL.GetBlueprintsUsingTelemetryID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cf860
	void GetAllUObjectsImplementingTelemetryIDInterfaceAsync(struct FDelegate& InOnLoadedDelegate); // Function Tiger.TigerTelemetryUtilityBFL.GetAllUObjectsImplementingTelemetryIDInterfaceAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cf790
	struct TArray<struct FTigerTelemetryIDCollisionBundle> FindTelemetryIDCollisions(struct TArray<struct FTigerTelemetryIDBundle> InIDBundles, bool& bOutHadInvalidIDs, bool& bOutValidIDsExisted); // Function Tiger.TigerTelemetryUtilityBFL.FindTelemetryIDCollisions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cf4c0
	bool ExportTelemetryIdsToJson(struct TArray<struct FTigerTelemetryIDBundle>& InIDBundles, struct FTigerTelemetryIDExportFilter InFilter); // Function Tiger.TigerTelemetryUtilityBFL.ExportTelemetryIdsToJson // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cf3c0
	void ExportTelemetryDefinitionsToJson(struct FString InPingDefinitionName, struct FTigerTelemetryDefinition& InPingDefinition); // Function Tiger.TigerTelemetryUtilityBFL.ExportTelemetryDefinitionsToJson // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cf250
	bool CheckTelemetryIDIsCollisionFree(struct TArray<struct FTigerTelemetryIDBundle>& InIDBundles, struct FTigerTelemetryIDBundle& InBundleToValidate, int32_t InOuterIndex, int32_t& OutInnerCollisionIndex); // Function Tiger.TigerTelemetryUtilityBFL.CheckTelemetryIDIsCollisionFree // (Final|Native|Static|Public|HasOutParms) // @ game+0x14cf0a0
	struct TArray<struct FTigerTelemetryIDBundle> CheckAndGenerateUniqueTelemetryIds(struct TArray<struct FTigerTelemetryIDBundle>& InIDBundles); // Function Tiger.TigerTelemetryUtilityBFL.CheckAndGenerateUniqueTelemetryIds // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cefb0
};

// Class Tiger.TigerTestChallengesConfigAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerTestChallengesConfigAsset : UDataAsset {
	struct FTigerTestChallengesConfig Config; // 0x30(0x28)
};

// Class Tiger.TigerTextWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerTextWidget : UTigerWidget {

	struct UTextBlock* GetText(); // Function Tiger.TigerTextWidget.GetText // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
};

// Class Tiger.TigerThrallMapData
// Size: 0x38 (Inherited: 0x30)
struct UTigerThrallMapData : UDataAsset {
	struct UTexture2D* Map; // 0x30(0x08)
};

// Class Tiger.TigerThrallMapUI
// Size: 0x3d0 (Inherited: 0x3c0)
struct UTigerThrallMapUI : UTigerSceneBackgroundUI {
	struct FName SubLevelName; // 0x3c0(0x08)
	struct FName SubLevelCamName; // 0x3c8(0x08)
};

// Class Tiger.TigerThrallMenu
// Size: 0x3e0 (Inherited: 0x3c0)
struct UTigerThrallMenu : UTigerSceneBackgroundUI {
	struct TArray<struct UTigerLocalThrallData*> ThrallSlots; // 0x3c0(0x10)
	struct UTigerLocalThrallData* CurrentThrall; // 0x3d0(0x08)
	enum class ETigerThrallMenu ThrallMenuIndex; // 0x3d8(0x01)
	char pad_3D9[0x7]; // 0x3d9(0x07)

	bool IsCurrentSlotEmpty(); // Function Tiger.TigerThrallMenu.IsCurrentSlotEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cfe60
	void InitialiseOnOpen(struct ATigerPlayerController* InController); // Function Tiger.TigerThrallMenu.InitialiseOnOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfdd0
	void IncrementIndex(); // Function Tiger.TigerThrallMenu.IncrementIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfdb0
	int32_t GetSlotIndex(); // Function Tiger.TigerThrallMenu.GetSlotIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cfbd0
	void DecrementIndex(); // Function Tiger.TigerThrallMenu.DecrementIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x14cf230
};

// Class Tiger.TigerThrallMissionDetailsUi
// Size: 0x2d0 (Inherited: 0x260)
struct UTigerThrallMissionDetailsUi : UUserWidget {
	struct FText MissionName; // 0x260(0x18)
	struct FText MissionObjective; // 0x278(0x18)
	struct FText MissionStatRequirements; // 0x290(0x18)
	int32_t MissionRewardXp; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct FText MissionRewardItems; // 0x2b0(0x18)
	int32_t MissionTurnsLeft; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void LoadMissionDetails(int32_t InMissionUId); // Function Tiger.TigerThrallMissionDetailsUi.LoadMissionDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x13bc400
};

// Class Tiger.TigerThrallMissionMapMarkerData
// Size: 0x48 (Inherited: 0x30)
struct UTigerThrallMissionMapMarkerData : UDataAsset {
	struct FTigerThrallMissionMapMarker MissionMarker; // 0x30(0x18)
};

// Class Tiger.TigerThrallMission
// Size: 0xb8 (Inherited: 0x30)
struct UTigerThrallMission : UDataAsset {
	int32_t MissionId; // 0x30(0x04)
	struct FName MissionName; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FTigerThrallMissionObjective MissionObjective; // 0x40(0x38)
	struct UTigerThrallMissionMapMarkerData* MissionMarkers; // 0x78(0x08)
	struct FThrallMissionRequirements MissionStatRequirements; // 0x80(0x18)
	struct FTigerThrallMissionReward MissionRewards; // 0x98(0x18)
	int32_t MissionLength; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerThrallSystem
// Size: 0x130 (Inherited: 0xb0)
struct UTigerThrallSystem : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	struct TArray<struct UTigerLocalThrallData*> PlayerThralls; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)
	struct TMap<int32_t, struct UTigerLocalThrallMissionData*> LocalActiveMissions; // 0xe0(0x50)

	void UpdateMissionTurns(int32_t InMissionId, int32_t InIncreaseTurns); // Function Tiger.TigerThrallSystem.UpdateMissionTurns // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0360
	void SetMissionStatus(int32_t InMissionId, bool bActive); // Function Tiger.TigerThrallSystem.SetMissionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0290
	bool RemoveThrallFromMission(int32_t InMissionId, enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.RemoveThrallFromMission // (Final|Native|Public|BlueprintCallable) // @ game+0x14d01c0
	bool RemoveThrallBySlot(char InSlotIndex); // Function Tiger.TigerThrallSystem.RemoveThrallBySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0130
	void OnMissionComplete__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData); // DelegateFunction Tiger.TigerThrallSystem.OnMissionComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	bool HasThrall(enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.HasThrall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cfd20
	bool HasMissionId(int32_t InMissionId); // Function Tiger.TigerThrallSystem.HasMissionId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cfc80
	int32_t GetSharedXP(); // Function Tiger.TigerThrallSystem.GetSharedXP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cfbb0
	struct UTigerThrallMission* GetRandomMission(); // Function Tiger.TigerThrallSystem.GetRandomMission // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfb80
	struct UTigerLocalThrallData* GetMutableThrallBySlot(int32_t InSlotIndex); // Function Tiger.TigerThrallSystem.GetMutableThrallBySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfae0
	struct UTigerLocalThrallData* GetMutableThrallById(enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.GetMutableThrallById // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfa50
	struct UTigerThrallMission* GetMissionForId(int32_t InID); // Function Tiger.TigerThrallSystem.GetMissionForId // (Final|Native|Public|BlueprintCallable) // @ game+0x14cf9b0
	struct TArray<struct UTigerLocalThrallData*> GetAllThralls(); // Function Tiger.TigerThrallSystem.GetAllThralls // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf700
	struct TArray<struct UTigerThrallMission*> GetAllMissions(); // Function Tiger.TigerThrallSystem.GetAllMissions // (Final|Native|Public|BlueprintCallable) // @ game+0x14cf680
	bool AssignThrallToMission(int32_t InMissionId, enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.AssignThrallToMission // (Final|Native|Public|BlueprintCallable) // @ game+0x14ceee0
};

// Class Tiger.TigerThrallSystemSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerThrallSystemSettings : UDeveloperSettings {
	struct TSoftObjectPtr<UDataTable> AbilitiesTable; // 0x38(0x28)
	struct TSoftObjectPtr<UDataTable> BaseThrallsTable; // 0x60(0x28)
	struct TSoftObjectPtr<UDataTable> StatModifiersTable; // 0x88(0x28)
	struct TSoftObjectPtr<UDataTable> ThrallMissionsTable; // 0xb0(0x28)

	struct UDataTable* GetThrallMissionsTable(); // Function Tiger.TigerThrallSystemSettings.GetThrallMissionsTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cfc50
	struct UDataTable* GetThrallAbilitiesTable(); // Function Tiger.TigerThrallSystemSettings.GetThrallAbilitiesTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cfc20
	struct UDataTable* GetStatModifiersTable(); // Function Tiger.TigerThrallSystemSettings.GetStatModifiersTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cfbf0
	struct UDataTable* GetBaseThrallsTable(); // Function Tiger.TigerThrallSystemSettings.GetBaseThrallsTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cf830
};

// Class Tiger.TigerThrallTable
// Size: 0x2b8 (Inherited: 0x280)
struct ATigerThrallTable : ATigerInteractiveObject {
	struct UTigerThrallMapUI* TigerThrallMapUI; // 0x280(0x08)
	bool bIsThrallMapUIOpened; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UCameraComponent* Camera; // 0x290(0x08)
	float TimeToTransition; // 0x298(0x04)
	float CameraExponent; // 0x29c(0x04)
	struct UStaticMeshComponent* TableMesh; // 0x2a0(0x08)
	struct ATigerPlayer* InteractingPlayer; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)

	void SwitchToTableCamera(bool bIsInstant, struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.SwitchToTableCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7af0
	void SwitchToPlayerCamera(bool bIsInstant, struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.SwitchToPlayerCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7a20
	void StopInteracting(struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.StopInteracting // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7990
	void StartCameraTransition(); // Function Tiger.TigerThrallTable.StartCameraTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7970
	void OpenUI(struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.OpenUI // (Final|Native|Public|BlueprintCallable) // @ game+0x14d75b0
	bool IsThrallMapOpen(); // Function Tiger.TigerThrallTable.IsThrallMapOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7350
	struct ATigerPlayerController* GetTigerController(); // Function Tiger.TigerThrallTable.GetTigerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7240
};

// Class Tiger.TigerThrowingAxe
// Size: 0x248 (Inherited: 0x228)
struct ATigerThrowingAxe : AActor {
	char pad_228[0x1c]; // 0x228(0x1c)
	bool bHasBeenReflected; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)

	float GetDamageMultiplier(); // Function Tiger.TigerThrowingAxe.GetDamageMultiplier // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7210
	struct AActor* CopyAndReflect(struct ATigerCharacter* InNewOwner, struct FVector& InSpawnLocation, struct FRotator& InSpawnRotation); // Function Tiger.TigerThrowingAxe.CopyAndReflect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x14d6e20
};

// Class Tiger.TigerThumbnailCameraComponent
// Size: 0x210 (Inherited: 0x200)
struct UTigerThumbnailCameraComponent : USceneComponent {
	struct FString CameraTag; // 0x1f8(0x10)
};

// Class Tiger.TigerThumbnailActor
// Size: 0x288 (Inherited: 0x228)
struct ATigerThumbnailActor : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USceneComponent* ViewOrientation; // 0x230(0x08)
	int32_t IconWidth; // 0x238(0x04)
	int32_t IconHeight; // 0x23c(0x04)
	bool bIsRealtime; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float FOV; // 0x244(0x04)
	struct TSoftObjectPtr<UTextureCube> Cubemap; // 0x248(0x28)
	float CubemapIntensity; // 0x270(0x04)
	bool bShouldGenerateImage; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	struct TArray<struct FSoftClassPath> ItemPaths; // 0x278(0x10)

	void Generate(struct UTigerInventoryItemBase* InItem); // Function Tiger.TigerThumbnailActor.Generate // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerTitleErrorUI
// Size: 0x290 (Inherited: 0x280)
struct UTigerTitleErrorUI : UTigerWidget {
	struct UTigerOnlineError* OnlineError; // 0x280(0x08)
	bool bIsOpen; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)

	void Open(); // Function Tiger.TigerTitleErrorUI.Open // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7590
	void OnOpen(); // Function Tiger.TigerTitleErrorUI.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnClose(); // Function Tiger.TigerTitleErrorUI.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Close(); // Function Tiger.TigerTitleErrorUI.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6e00
};

// Class Tiger.TigerTitleListAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerTitleListAsset : UDataAsset {
	struct TArray<struct FText> TitlesByLevel; // 0x30(0x10)

	struct FText GetTitleFromPlayer(struct ATigerPlayerState* Player); // Function Tiger.TigerTitleListAsset.GetTitleFromPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7270
};

// Class Tiger.TigerTooltipKeyPromptWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerTooltipKeyPromptWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnPromptPressed; // 0x280(0x10)
	struct FMulticastInlineDelegate OnPromptHeld; // 0x290(0x10)
	char pad_2A0[0x20]; // 0x2a0(0x20)
	bool bHasHoldAction; // 0x2c0(0x01)
	char pad_2C1[0x1f]; // 0x2c1(0x1f)

	void SetPromptText(struct FText& PromptText); // Function Tiger.TigerTooltipKeyPromptWidget.SetPromptText // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void SetHoldProgress(float HoldProgress); // Function Tiger.TigerTooltipKeyPromptWidget.SetHoldProgress // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void PromptPressed(); // Function Tiger.TigerTooltipKeyPromptWidget.PromptPressed // (Final|Native|Private) // @ game+0x14d7660
	void PromptHeld(); // Function Tiger.TigerTooltipKeyPromptWidget.PromptHeld // (Final|Native|Private) // @ game+0x14d7640
};

// Class Tiger.TigerTooltipUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerTooltipUI : UTigerWidget {

	struct UTigerTooltipKeyPromptWidget* AddKeyPrompt(struct FText& PromptText, bool bHasHoldAction); // Function Tiger.TigerTooltipUI.AddKeyPrompt // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void AddDropItemPrompt(struct UTigerItemAsset* ItemToDrop); // Function Tiger.TigerTooltipUI.AddDropItemPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x14d66e0
};

// Class Tiger.TigerTransferFromMatchGameMode
// Size: 0x2e0 (Inherited: 0x2c8)
struct ATigerTransferFromMatchGameMode : AGameModeBase {
	char pad_2C8[0x18]; // 0x2c8(0x18)

	void HideMouseCursor(); // Function Tiger.TigerTransferFromMatchGameMode.HideMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0xb5ee20
};

// Class Tiger.TigerTransferFromMatchGameState
// Size: 0x380 (Inherited: 0x380)
struct ATigerTransferFromMatchGameState : ATigerGameState {
};

// Class Tiger.TigerTransitionWidget
// Size: 0x298 (Inherited: 0x260)
struct UTigerTransitionWidget : UUserWidget {
	float AnimationDelay; // 0x260(0x04)
	float AnimationSpeed; // 0x264(0x04)
	struct FMulticastInlineDelegate OnTransitionStarted; // 0x268(0x10)
	struct FMulticastInlineDelegate OnTransitionFinished; // 0x278(0x10)
	float Progress; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UMaterialInstanceDynamic* EffectMaterialInstance; // 0x290(0x08)

	void UpdateProgress(float InProgress); // Function Tiger.TigerTransitionWidget.UpdateProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7bc0
	void SetEffectMaterialInstance(struct UMaterialInstanceDynamic* InMaterialInstance); // Function Tiger.TigerTransitionWidget.SetEffectMaterialInstance // (Final|Native|Protected|BlueprintCallable) // @ game+0x14d77a0
	void SetAnimationSpeed(float InAnimationSpeed); // Function Tiger.TigerTransitionWidget.SetAnimationSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7720
	void SetAnimationDelay(float InAnimationDelay); // Function Tiger.TigerTransitionWidget.SetAnimationDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x14d76a0
	void RestartAnimation(); // Function Tiger.TigerTransitionWidget.RestartAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7680
	void EnableRendering(); // Function Tiger.TigerTransitionWidget.EnableRendering // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void DisableRendering(); // Function Tiger.TigerTransitionWidget.DisableRendering // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerTrap
// Size: 0x330 (Inherited: 0x228)
struct ATigerTrap : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct FMulticastInlineDelegate OnTriggered; // 0x230(0x10)
	struct USceneComponent* Root; // 0x240(0x08)
	struct UStaticMeshComponent* TrapMesh; // 0x248(0x08)
	struct UBoxComponent* ShootingVolume; // 0x250(0x08)
	struct USphereComponent* TriggerVolume; // 0x258(0x08)
	struct USphereComponent* ExplosionVolume; // 0x260(0x08)
	struct USphereComponent* GasVolume; // 0x268(0x08)
	struct UParticleSystemComponent* ArmedParticle; // 0x270(0x08)
	struct UParticleSystemComponent* AreaParticle; // 0x278(0x08)
	struct UParticleSystemComponent* ExplosionParticle; // 0x280(0x08)
	struct UParticleSystemComponent* GasParticle; // 0x288(0x08)
	struct UTigerTrapsConfig* Config; // 0x290(0x08)
	struct UTigerTrapsConfig* RawConfig; // 0x298(0x08)
	struct UTigerBuff* GasBuff; // 0x2a0(0x08)
	struct UDecalComponent* Decal; // 0x2a8(0x08)
	struct FTigerPersistentPlayerID OwnerPersistentId; // 0x2b0(0x10)
	char pad_2C0[0xc]; // 0x2c0(0x0c)
	float ExplosionDamageMultiplier; // 0x2cc(0x04)
	int32_t PowerLevel; // 0x2d0(0x04)
	bool bIsPlaced; // 0x2d4(0x01)
	bool bIsArmed; // 0x2d5(0x01)
	bool bUseAreaTrigger; // 0x2d6(0x01)
	char pad_2D7[0x1]; // 0x2d7(0x01)
	bool bTriggered; // 0x2d8(0x01)
	char pad_2D9[0x17]; // 0x2d9(0x17)
	struct FVector ForwardDirection; // 0x2f0(0x0c)
	struct FVector Velocity; // 0x2fc(0x0c)
	char pad_308[0x18]; // 0x308(0x18)
	struct UMaterialInstanceDynamic* TrapMaterialInstance; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)

	bool ShouldTrapSeeCharacterAsFriendly(struct ATigerCharacter* InCharacter); // Function Tiger.TigerTrap.ShouldTrapSeeCharacterAsFriendly // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d78d0
	bool ShouldPlayerSeeTrapAsFriendly(struct ATigerPlayer* InPlayer); // Function Tiger.TigerTrap.ShouldPlayerSeeTrapAsFriendly // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7830
	void OnTriggeredTrap(); // Function Tiger.TigerTrap.OnTriggeredTrap // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnPlacedTrap(); // Function Tiger.TigerTrap.OnPlacedTrap // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnGasBuffTick(struct UTigerBuffDOTInstance* InGasBuffInstance); // Function Tiger.TigerTrap.OnGasBuffTick // (Final|Native|Protected) // @ game+0x14d7500
	void OnActivatedTrap(); // Function Tiger.TigerTrap.OnActivatedTrap // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void Multicast_TriggerTrap(); // Function Tiger.TigerTrap.Multicast_TriggerTrap // (Net|NetReliableNative|Event|NetMulticast|Protected|NetValidate) // @ game+0x14d74b0
	void Multicast_Stick(struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerTrap.Multicast_Stick // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x14d73f0
	void Multicast_ActivateTrap(); // Function Tiger.TigerTrap.Multicast_ActivateTrap // (Net|NetReliableNative|Event|NetMulticast|Protected|NetValidate) // @ game+0x14d73a0
	bool IsTriggered(); // Function Tiger.TigerTrap.IsTriggered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7380
	bool IsPlaced(); // Function Tiger.TigerTrap.IsPlaced // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7330
	bool IsArmed(); // Function Tiger.TigerTrap.IsArmed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d7310
	void EndOverlappedTrigger(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerTrap.EndOverlappedTrigger // (Final|Native|Private) // @ game+0x14d70b0
	void EndOverlappedGas(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerTrap.EndOverlappedGas // (Final|Native|Private) // @ game+0x14d6f50
	void BeginOverlappedTrigger(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerTrap.BeginOverlappedTrigger // (Final|Native|Private|HasOutParms) // @ game+0x14d6bd0
	void BeginOverlappedProjectile(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerTrap.BeginOverlappedProjectile // (Final|Native|Private|HasOutParms) // @ game+0x14d69a0
	void BeginOverlappedGas(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerTrap.BeginOverlappedGas // (Final|Native|Private|HasOutParms) // @ game+0x14d6770
};

// Class Tiger.TigerTraversalBaseFiniteState
// Size: 0x40 (Inherited: 0x28)
struct UTigerTraversalBaseFiniteState : UObject {
	struct UTigerCharacterMovementComponent* TigerCharacterMovementComponent; // 0x28(0x08)
	struct UTigerTraversalStateConfigBase* BaseConfig; // 0x30(0x08)
	struct UTigerTraversalFiniteStateMachine* OwningStateMachine; // 0x38(0x08)
};

// Class Tiger.TigerTraversalAirDashState
// Size: 0x58 (Inherited: 0x40)
struct UTigerTraversalAirDashState : UTigerTraversalBaseFiniteState {
	char pad_40[0x18]; // 0x40(0x18)
};

// Class Tiger.TigerTraversalClimbState
// Size: 0x130 (Inherited: 0x40)
struct UTigerTraversalClimbState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateClimbingConfig* ClimbingConfig; // 0x40(0x08)
	char pad_48[0xe8]; // 0x48(0xe8)
};

// Class Tiger.TigerTraversalCrouchState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalCrouchState : UTigerTraversalBaseFiniteState {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Tiger.TigerTraversalDownedState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalDownedState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalFallState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalFallState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
	struct UTigerTraversalStateFallConfig* FallConfig; // 0x48(0x08)
};

// Class Tiger.TigerTraversalFiniteStateMachine
// Size: 0x1d8 (Inherited: 0xb0)
struct UTigerTraversalFiniteStateMachine : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct UTigerCharacterMovementComponent* TigerCharacterMovement; // 0xb8(0x08)
	struct UTigerTraversalBaseFiniteState* ActiveState; // 0xc0(0x08)
	struct UTigerTraversalBaseFiniteState* TraversalList[0xf]; // 0xc8(0x78)
	struct UTigerTraversalStateConfigBase* Configs[0xf]; // 0x140(0x78)
	struct FMulticastInlineDelegate OnTraversalStateChanged; // 0x1b8(0x10)
	char pad_1C8[0x10]; // 0x1c8(0x10)
};

// Class Tiger.TigerTraversalForcedMoveState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalForcedMoveState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalJumpState
// Size: 0x60 (Inherited: 0x40)
struct UTigerTraversalJumpState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateJumpConfig* JumpConfig; // 0x40(0x08)
	char pad_48[0x18]; // 0x48(0x18)
};

// Class Tiger.TigerTraversalLedgeGrabState
// Size: 0x80 (Inherited: 0x40)
struct UTigerTraversalLedgeGrabState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateLedgeGrabConfig* LedgeGrabConfig; // 0x40(0x08)
	char pad_48[0x38]; // 0x48(0x38)
};

// Class Tiger.TigerTraversalLowVaultState
// Size: 0x70 (Inherited: 0x40)
struct UTigerTraversalLowVaultState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
	struct UAnimMontage* ActiveLowVaultMontage; // 0x48(0x08)
	char pad_50[0x20]; // 0x50(0x20)
};

// Class Tiger.TigerTraversalSlideJumpState
// Size: 0x58 (Inherited: 0x40)
struct UTigerTraversalSlideJumpState : UTigerTraversalBaseFiniteState {
	char pad_40[0x18]; // 0x40(0x18)
};

// Class Tiger.TigerTraversalSlideState
// Size: 0x80 (Inherited: 0x40)
struct UTigerTraversalSlideState : UTigerTraversalBaseFiniteState {
	char pad_40[0x38]; // 0x40(0x38)
	struct UTigerTraversalStateSlidingConfig* Slidingconfig; // 0x78(0x08)
};

// Class Tiger.TigerTraversalStateConfigBase
// Size: 0x50 (Inherited: 0x28)
struct UTigerTraversalStateConfigBase : UObject {
	bool bStateIsDisabled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<enum class ETigerTraversalState> PossibleOutTransitions; // 0x30(0x10)
	struct UTigerTraversalBaseFiniteState* TraversalState; // 0x40(0x08)
	float TimeOutSeconds; // 0x48(0x04)
	enum class ETigerTraversalState TimeOutInto; // 0x4c(0x01)
	bool bJumpCooldownAllowedToTick; // 0x4d(0x01)
	bool bJumpDiminishingReturnsCountdownCanTick; // 0x4e(0x01)
	char pad_4F[0x1]; // 0x4f(0x01)
};

// Class Tiger.TigerTraversaleStateForcedMoveConfig
// Size: 0x50 (Inherited: 0x50)
struct UTigerTraversaleStateForcedMoveConfig : UTigerTraversalStateConfigBase {
};

// Class Tiger.TigerTraversalStateClimbingConfig
// Size: 0x100 (Inherited: 0x50)
struct UTigerTraversalStateClimbingConfig : UTigerTraversalStateConfigBase {
	struct FName CameraClimbingSocketName; // 0x50(0x08)
	struct FName ClimbingSpeedAnimationCurveName; // 0x58(0x08)
	struct FName ClimbingBlendSpaceName; // 0x60(0x08)
	struct FName ClimbStartBlendSpaceName; // 0x68(0x08)
	float ClimbingCameraInterpSpeed; // 0x70(0x04)
	float ClimbingCameraInterpDelay; // 0x74(0x04)
	float ClimbablePrimaryAngleCheckOffset; // 0x78(0x04)
	float ClimbableFeetCheckOffset; // 0x7c(0x04)
	float ClimbableOffset; // 0x80(0x04)
	float ClimbableExtraSearchDepth; // 0x84(0x04)
	float StartingClimbDepth; // 0x88(0x04)
	float ClimbHorizontalAdjustmentSpeed; // 0x8c(0x04)
	float ClimbLowHorizontalAdjustmentSpeed; // 0x90(0x04)
	float IndoorClimbRadiusScale; // 0x94(0x04)
	float IndoorClimbVerticalOffset; // 0x98(0x04)
	float IndoorClimbBackwardOffset; // 0x9c(0x04)
	float IndoorClimbIndoorUpsideDownDeadzoneHalfAngle; // 0xa0(0x04)
	float CornerTraceLength; // 0xa4(0x04)
	float ClimbableCornerAngleTreshold; // 0xa8(0x04)
	float CornerCheckAngle; // 0xac(0x04)
	float DistanceToCheckForClimbingOverhangs; // 0xb0(0x04)
	float MaximumOverhangAdjustmentLength; // 0xb4(0x04)
	float ClimbingOverHangCheckSweepRadius; // 0xb8(0x04)
	float MinimumOverHangLeadUpBufferPercentage; // 0xbc(0x04)
	float ClimbingInputZCutOff; // 0xc0(0x04)
	float MinimumUpwardClimbAngle; // 0xc4(0x04)
	float MaximumSidewaysClimbDeviation; // 0xc8(0x04)
	float ClimbingOverHangZCutOff; // 0xcc(0x04)
	float StartClimbInAirAllowedAngleDifference; // 0xd0(0x04)
	float StartClimbOnGroundAllowedAngleDifference; // 0xd4(0x04)
	float StartClimbInAirAllowedAngleDifferenceGamepad; // 0xd8(0x04)
	float StartClimbOnGroundAllowedAngleDifferenceGamepad; // 0xdc(0x04)
	float ClimbCooldown; // 0xe0(0x04)
	float IndoorClimbingCooldown; // 0xe4(0x04)
	float VerticalClimbSpeed; // 0xe8(0x04)
	float HorizontalClimbSpeed; // 0xec(0x04)
	float MaximumAllowedAngleDifferenceBetweenClimbTargets; // 0xf0(0x04)
	bool bShouldReadClimbSpeedFromAnimationCurve; // 0xf4(0x01)
	bool bResetIndoorClimbCooldownWhenOutside; // 0xf5(0x01)
	bool bResetIndoorClimbCooldownOnLanding; // 0xf6(0x01)
	bool bShouldAvoidOverhangsDuringClimb; // 0xf7(0x01)
	bool bOnlyStartClimbIfLookingAtWall; // 0xf8(0x01)
	bool bUseSocketForNonLinearCameraWhenClimbing; // 0xf9(0x01)
	bool bShouldInterpClimbingCamera; // 0xfa(0x01)
	char pad_FB[0x5]; // 0xfb(0x05)
};

// Class Tiger.TigerTraversalStateJumpConfig
// Size: 0x78 (Inherited: 0x50)
struct UTigerTraversalStateJumpConfig : UTigerTraversalStateConfigBase {
	int32_t MaxJumpIndexForDiminishingReturnsCurve; // 0x50(0x04)
	float TimeToReduceDiminishingReturnsCount; // 0x54(0x04)
	float JumpForgivenessDistance; // 0x58(0x04)
	float InitialJumpZVelocity; // 0x5c(0x04)
	float PostJumpClimbInteractionDelay; // 0x60(0x04)
	float JumpCoolDownTime; // 0x64(0x04)
	bool bCancelJumpOnHeadImpact; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UCurveFloat* DiminishingReturnsCurve; // 0x70(0x08)
};

// Class Tiger.TigerTraversalStateAirDashConfig
// Size: 0x68 (Inherited: 0x50)
struct UTigerTraversalStateAirDashConfig : UTigerTraversalStateConfigBase {
	bool bResetOnWallJump; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float JumpVerticalVelocity; // 0x54(0x04)
	float PostJumpClimbInteractionDelay; // 0x58(0x04)
	float JumpCoolDownTime; // 0x5c(0x04)
	bool bPreventFallingSlide; // 0x60(0x01)
	bool bResetAimGlideOnDoubleJump; // 0x61(0x01)
	char pad_62[0x6]; // 0x62(0x06)
};

// Class Tiger.TigerTraversalStateLedgeGrabConfig
// Size: 0xc0 (Inherited: 0x50)
struct UTigerTraversalStateLedgeGrabConfig : UTigerTraversalStateConfigBase {
	struct FName LedgeGrabAnimationName; // 0x50(0x08)
	struct FName FallbackLedgeGrabAnimationName; // 0x58(0x08)
	struct FVector LedgeGrabUpperBodyVolumeExtent; // 0x60(0x0c)
	struct FVector LedgeGrabClearanceCheckExtent; // 0x6c(0x0c)
	struct FVector LedgeGrabUpperBodyVolumeCheckPosition; // 0x78(0x0c)
	float AnimationBlendoutStartDelay; // 0x84(0x04)
	float LedgeGrabAnimationTriggerMaxDistance; // 0x88(0x04)
	float MaximumLedgeWallHeight; // 0x8c(0x04)
	float MaximumLedgeOverHangDepth; // 0x90(0x04)
	float LedgeGrabUpperBodyVolumeForwardOffset; // 0x94(0x04)
	float LedgeGrabMaximumCameraAngleDifference; // 0x98(0x04)
	float LedgeGrabForwardSearchDepth; // 0x9c(0x04)
	float LedgeGrabBackwardSearchDepth; // 0xa0(0x04)
	float LedgeGrabPositionSweepRadius; // 0xa4(0x04)
	float LedgeGrabPositionHorizontalEdgeOffset; // 0xa8(0x04)
	float LedgeGrabPositionVerticalOffset; // 0xac(0x04)
	float StartingRotationSpeedForBringingCharacterBackToCameraFacing; // 0xb0(0x04)
	float RotationSpeedGainPerSecond; // 0xb4(0x04)
	float MaxTimeToFixCharacterRotation; // 0xb8(0x04)
	bool bShouldAdjustLedgeGrabAnimationPlayRate; // 0xbc(0x01)
	bool bShouldUseExitLedgeGrabRotationInterpolation; // 0xbd(0x01)
	char pad_BE[0x2]; // 0xbe(0x02)
};

// Class Tiger.TigerTraversalStateFallConfig
// Size: 0x58 (Inherited: 0x50)
struct UTigerTraversalStateFallConfig : UTigerTraversalStateConfigBase {
	float DecelerationFactorFallingUpwardsFromSliding; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Tiger.TigerTraversalStateSlidingConfig
// Size: 0xd0 (Inherited: 0x50)
struct UTigerTraversalStateSlidingConfig : UTigerTraversalStateConfigBase {
	float SlideGravityMultiplier; // 0x50(0x04)
	float SlideTerminalSpeed; // 0x54(0x04)
	float BrakingDecelerationSliding; // 0x58(0x04)
	float BrakingDecelerationSlidingStop; // 0x5c(0x04)
	float RequiredVelocityForSlideStart; // 0x60(0x04)
	float RequiredFallingVelocityForSlideStart; // 0x64(0x04)
	float HorizontalSpeedForFallingSlide; // 0x68(0x04)
	float ThresholdVelocityForSlideStop; // 0x6c(0x04)
	float SlideVelocityBoostMultiplier; // 0x70(0x04)
	float SlideFallingHorizontalBoostMultiplier; // 0x74(0x04)
	float SlideFallingVerticalBoostMultiplier; // 0x78(0x04)
	float SlideAirGraceTime; // 0x7c(0x04)
	float SlideBoostDecayRecoverySpeed; // 0x80(0x04)
	float SlideControllerRotationTime; // 0x84(0x04)
	float SlidingWallCollisionCutOffHalfAngle; // 0x88(0x04)
	float SlidingWallCollisionSweepRadius; // 0x8c(0x04)
	float SlidingWallCollisionZecondaryCheckZOffset; // 0x90(0x04)
	float SlideTimeBeforeJumpIsAllowed; // 0x94(0x04)
	float TimeOfForcedSliding; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UCurveFloat* SlideBoostDecayCurve; // 0xa0(0x08)
	struct UCurveFloat* SlideGravityCurve; // 0xa8(0x08)
	struct UCurveFloat* HorizontalSpeedForFallingSlideCurve; // 0xb0(0x08)
	struct UCurveFloat* DownwardsAngleDifferenceMultiplierCurve; // 0xb8(0x08)
	struct UCurveFloat* DecelerationCurve; // 0xc0(0x08)
	bool bUseSlideAlongSurfaceLogic; // 0xc8(0x01)
	bool bPrintVariablesOnFallSlide; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
};

// Class Tiger.TigerTraversalStateSlideJumpConfig
// Size: 0x88 (Inherited: 0x50)
struct UTigerTraversalStateSlideJumpConfig : UTigerTraversalStateConfigBase {
	float JumpCoolDownTime; // 0x50(0x04)
	float PostJumpClimbInteractionDelay; // 0x54(0x04)
	float SlideHorizontalDirectionInfluenceThreshold; // 0x58(0x04)
	float SlideJumpDecayRecoverySpeed; // 0x5c(0x04)
	struct UCurveFloat* JumpZVelocityOverSlideSpeed; // 0x60(0x08)
	struct UCurveFloat* SlideJumpHorizontalMultiplierOverVelocity; // 0x68(0x08)
	struct UCurveFloat* SlideJumpDecayCurve; // 0x70(0x08)
	struct UCurveFloat* SlideJumpAngledJumpCurve; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerTraversalStateWallJumpConfig
// Size: 0xe0 (Inherited: 0x50)
struct UTigerTraversalStateWallJumpConfig : UTigerTraversalStateConfigBase {
	struct FTigerWallJumpBlendBundle DefaultWallJumpBlendBundle; // 0x50(0x10)
	struct FTigerWallJumpBlendBundle WallJumpBlendBundleFromClimb; // 0x60(0x10)
	struct FVector WallJumpColliderOffset; // 0x70(0x0c)
	float PostJumpClimbInteractionDelay; // 0x7c(0x04)
	float JumpCoolDownTime; // 0x80(0x04)
	float WallJumpSphereColliderRadius; // 0x84(0x04)
	float SecondaryWallSweepRadius; // 0x88(0x04)
	float MaximumHorizontalJumpVelocity; // 0x8c(0x04)
	float MinimumHorizontalJumpVelocity; // 0x90(0x04)
	float WallJumpZVelocity; // 0x94(0x04)
	float WallJumpInputDirectionCutOffAngle; // 0x98(0x04)
	float MaxWallJumpStateDuration; // 0x9c(0x04)
	float WallJumpDownwardWallNormalCutOffAngle; // 0xa0(0x04)
	float WallJumpRequiredHalfAngleFromWallWhenHoldingForward; // 0xa4(0x04)
	float WallJumpDeadzoneHalfAngle; // 0xa8(0x04)
	float WallJumpMaxAllowedHalfAngleBeforeClamping; // 0xac(0x04)
	bool bShouldCapNumberOfWallJumpsFromSimilarWalls; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	float ConsecutiveWallJumpNormalLikenessThreshold; // 0xb4(0x04)
	float WallJumpDelayTime; // 0xb8(0x04)
	float WallJumpDownwardSpeedGainInSeconds; // 0xbc(0x04)
	float WallJumpSlideSpeedScale; // 0xc0(0x04)
	float WallJumpMinimumWallSlideSpeed; // 0xc4(0x04)
	float WallJumpMaximumWallSlideSpeed; // 0xc8(0x04)
	float WallJumpForwardHalfAngleAnimationCutOff; // 0xcc(0x04)
	enum class ETigerWallJumpInputOption WallJumpInputOption; // 0xd0(0x01)
	char MaximumNumberOfWallJumpsFromSimilarWall; // 0xd1(0x01)
	char NumberOfWallJumpsToRestoreOnDoubleJump; // 0xd2(0x01)
	bool bShouldApplyDownwardForceDuringWallJumpDelay; // 0xd3(0x01)
	bool AdjustWallJumpSlideSpeedOnInputAngle; // 0xd4(0x01)
	bool bShouldValidateDownwardAngleOfHitResult; // 0xd5(0x01)
	char pad_D6[0x2]; // 0xd6(0x02)
	struct UCurveFloat* WallJumpDelaySpeedCurve; // 0xd8(0x08)
};

// Class Tiger.TigerTraversalStateWallGrindConfig
// Size: 0xb0 (Inherited: 0x50)
struct UTigerTraversalStateWallGrindConfig : UTigerTraversalStateConfigBase {
	struct FVector ColliderOffset; // 0x50(0x0c)
	float SphereColliderRadius; // 0x5c(0x04)
	float WallGrindCancelInputHalfAngle; // 0x60(0x04)
	float WallGrindCancelInputDelayTime; // 0x64(0x04)
	float WallGrindVelocityRemapDeadZone; // 0x68(0x04)
	float WallGrindMaxHorizontalSpeed; // 0x6c(0x04)
	float WallGrindBufferDistance; // 0x70(0x04)
	float WallGrindBufferAdjustmentSpeed; // 0x74(0x04)
	float RequiredSuccessfulSimulationTime; // 0x78(0x04)
	float MinRequiredAngleBetweenStartingNormalAndPathDir; // 0x7c(0x04)
	float WallGrindPossibleStartAngleThreshold; // 0x80(0x04)
	float WallGrindSimulationSharpAngleThreshold; // 0x84(0x04)
	int8_t NumberofSimulationChecksPerSecond; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct UCurveFloat* WallGrindFallVelocitySpeedUp; // 0x90(0x08)
	struct UCurveFloat* WallGrindFallVelocitySlowDown; // 0x98(0x08)
	struct UCurveFloat* WallGrindStartingHorizontalSpeedMultipler; // 0xa0(0x08)
	bool bOnlyAdjustFallSpeedWhenFallingTooFast; // 0xa8(0x01)
	bool bShouldBlockWallGrindingWhenHoldingCancelInput; // 0xa9(0x01)
	bool bShouldClampHorizontalSpeed; // 0xaa(0x01)
	bool bWallGrindShouldBufferDistanceToWall; // 0xab(0x01)
	bool bValidateWallgrindByCheckingPathAverageToWall; // 0xac(0x01)
	bool bDrawOutWallNormalsUsedInAWallGrind; // 0xad(0x01)
	char pad_AE[0x2]; // 0xae(0x02)
};

// Class Tiger.TigerTraversalStateDownedConfig
// Size: 0x58 (Inherited: 0x50)
struct UTigerTraversalStateDownedConfig : UTigerTraversalStateConfigBase {
	float DownedMaxSpeed; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Tiger.TigerTraversalStateLowVaultConfig
// Size: 0x88 (Inherited: 0x50)
struct UTigerTraversalStateLowVaultConfig : UTigerTraversalStateConfigBase {
	struct FName LowVaultAnimationName; // 0x50(0x08)
	struct FVector LowVaultLowerBodyVolumeExtent; // 0x58(0x0c)
	struct FVector LowVaultCheckOffset; // 0x64(0x0c)
	float LowVaultMaximumCameraAngleDifference; // 0x70(0x04)
	float AnimationBlendoutStartDelay; // 0x74(0x04)
	float LowVaultPositionVerticalOffset; // 0x78(0x04)
	float HorizontalEndPositionOffset; // 0x7c(0x04)
	bool bShouldAdjustLowVaultAnimationPlayRate; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Tiger.TigerTraversalStateWallHangConfig
// Size: 0x68 (Inherited: 0x50)
struct UTigerTraversalStateWallHangConfig : UTigerTraversalStateConfigBase {
	float OffsetDistanceForFutureWallHangPosition; // 0x50(0x04)
	bool bShouldBlockWallHangIfLikelyToSlideOff; // 0x54(0x01)
	bool bShouldAllowPlayerToSlideoffHorizontallyDuringDeceleration; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	struct UCurveFloat* VerticalVelocitySlowDownRate; // 0x58(0x08)
	struct UCurveFloat* HorizontalVelocitySlowDownRate; // 0x60(0x08)
};

// Class Tiger.TigerTraversalWalkState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalWalkState : UTigerTraversalBaseFiniteState {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Tiger.TigerTraversalWallGrindState
// Size: 0x150 (Inherited: 0x40)
struct UTigerTraversalWallGrindState : UTigerTraversalBaseFiniteState {
	char pad_40[0x100]; // 0x40(0x100)
	struct UTigerTraversalStateWallGrindConfig* WallGrindConfig; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)

	void UpdateEffect(struct FName& InAssociatedBoneName, struct FHitResult& InHitResult, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.UpdateEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void StopEffect(struct FName& InAssociatedBoneName, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.StopEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void StartEffect(struct FName& InAssociatedBoneName, struct FHitResult& InHitResult, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.StartEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerTraversalWallHangState
// Size: 0x60 (Inherited: 0x40)
struct UTigerTraversalWallHangState : UTigerTraversalBaseFiniteState {
	char pad_40[0x20]; // 0x40(0x20)
};

// Class Tiger.TigerTraversalWallJumpState
// Size: 0x138 (Inherited: 0x40)
struct UTigerTraversalWallJumpState : UTigerTraversalBaseFiniteState {
	char pad_40[0xf8]; // 0x40(0xf8)
};

// Class Tiger.TigerTRNSubsystem
// Size: 0xe8 (Inherited: 0x30)
struct UTigerTRNSubsystem : UGameInstanceSubsystem {
	char pad_30[0x78]; // 0x30(0x78)
	int32_t NumRetries; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct FString BaseUrl; // 0xb0(0x10)
	struct FString EndpointDev; // 0xc0(0x10)
	struct FString EndpointRelease; // 0xd0(0x10)
	bool bShouldForceUpload; // 0xe0(0x01)
	bool bUseStagingTrackerLink; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)

	struct FString GetTrackerLink(struct FTigerPersistentPlayerID InID); // Function Tiger.TigerTRNSubsystem.GetTrackerLink // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14dc830
};

// Class Tiger.TigerMetadataDataTableHelper
// Size: 0x28 (Inherited: 0x28)
struct UTigerMetadataDataTableHelper : UObject {

	struct UTexture2D* GetRankIconByIndex(int32_t& InIndex); // Function Tiger.TigerMetadataDataTableHelper.GetRankIconByIndex // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerMetadataExportSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerMetadataExportSettings : UDeveloperSettings {
	struct TSoftClassPtr<UObject> DataTableHelper; // 0x38(0x28)
};

// Class Tiger.TigerTutorialGameMode
// Size: 0xdf8 (Inherited: 0x808)
struct ATigerTutorialGameMode : ATigerGameMode {
	struct FMulticastInlineDelegate OnTutorialStart; // 0x808(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat01Complete; // 0x818(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat02Complete; // 0x828(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat03Complete; // 0x838(0x10)
	bool bHasTutorialStarted; // 0x848(0x01)
	bool bHasTutorialCompleted; // 0x849(0x01)
	char pad_84A[0x6]; // 0x84a(0x06)
	struct FTigerPreviewerData PlayerAppearance; // 0x850(0x2b0)
	struct FTigerPreviewerData BotAppearance; // 0xb00(0x2b0)
	struct FString BotName; // 0xdb0(0x10)
	struct UTigerItemAsset* StartingRangedItemAsset; // 0xdc0(0x08)
	uint32_t StartingRangedAmmo; // 0xdc8(0x04)
	float BotDifficulty; // 0xdcc(0x04)
	struct UTigerPowerKit* TutorialPlayerArchetype; // 0xdd0(0x08)
	struct UTigerPowerKit* TutorialBotArchetype; // 0xdd8(0x08)
	struct UAkAudioEvent* CurrentDialogueEvent; // 0xde0(0x08)
	struct ATigerItemWorldRepresentation* Beat03Consumable; // 0xde8(0x08)
	struct UTigerConsequenceBroadcastCoordinator* ConsequenceBroadcastCoordinator; // 0xdf0(0x08)

	void UnlockPlayer(); // Function Tiger.TigerTutorialGameMode.UnlockPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void StartMatch(); // Function Tiger.TigerTutorialGameMode.StartMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x14dd380
	void SpawnTutorialBot(); // Function Tiger.TigerTutorialGameMode.SpawnTutorialBot // (Final|Native|Public|BlueprintCallable) // @ game+0x14dd230
	void ShowContextualHelp_BlueprintImplementation(struct TSoftClassPtr<UObject>& InContextualHelp); // Function Tiger.TigerTutorialGameMode.ShowContextualHelp_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void ShowContextualHelp(struct TSoftClassPtr<UObject> InContextualHelp); // Function Tiger.TigerTutorialGameMode.ShowContextualHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x14dd010
	void SetTutorialHasStarted(bool bInTutorialHasStarted); // Function Tiger.TigerTutorialGameMode.SetTutorialHasStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x14dcef0
	void SetTutorialHasCompleted(); // Function Tiger.TigerTutorialGameMode.SetTutorialHasCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x14dced0
	void RemoveSubtitles(struct UAkAudioEvent* InDialogueEvent); // Function Tiger.TigerTutorialGameMode.RemoveSubtitles // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void RemovePing(); // Function Tiger.TigerTutorialGameMode.RemovePing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	struct UAkAudioEvent* PlayVoiceOver_BlueprintImplementation(struct TSoftObjectPtr<UAkAudioEvent>& InDialogueEvent, struct FText& InSubtitles, struct FDelegate& InPostEventCallback); // Function Tiger.TigerTutorialGameMode.PlayVoiceOver_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	struct UAkAudioEvent* PlayVoiceOver(struct TSoftObjectPtr<UAkAudioEvent> InDialogueEvent, struct FText& InSubtitles, struct FDelegate& InPostEventCallback); // Function Tiger.TigerTutorialGameMode.PlayVoiceOver // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14dccb0
	void Ping_BlueprintImplementation(struct FVector& InWorldLocation, struct TSoftClassPtr<UObject>& InPingClass, struct AActor* InContextualActor, struct FVector& InLocalOffset); // Function Tiger.TigerTutorialGameMode.Ping_BlueprintImplementation // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x184a280
	void Ping(struct FVector InWorldLocation, struct TSoftClassPtr<UObject> InPingClass, struct AActor* InContextualActor, struct FVector InLocalOffset); // Function Tiger.TigerTutorialGameMode.Ping // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x14dcad0
	void MakeTutorialBotBloodHunted(); // Function Tiger.TigerTutorialGameMode.MakeTutorialBotBloodHunted // (Final|Native|Public|BlueprintCallable) // @ game+0x14dcab0
	void LockPlayer(); // Function Tiger.TigerTutorialGameMode.LockPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	bool IsObjectiveActive(struct FName InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.IsObjectiveActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void HideUI(); // Function Tiger.TigerTutorialGameMode.HideUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void HideContextualHelp_BlueprintImplementation(struct TSoftClassPtr<UObject>& InContextualHelp); // Function Tiger.TigerTutorialGameMode.HideContextualHelp_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void HideContextualHelp(struct TSoftClassPtr<UObject> InContextualHelp); // Function Tiger.TigerTutorialGameMode.HideContextualHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x14dc970
	struct UAkAudioEvent* GetCurrentDialogueEvent(); // Function Tiger.TigerTutorialGameMode.GetCurrentDialogueEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14dc7b0
	void CompleteObjective_BlueprintImplementation(struct FName& InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.CompleteObjective_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void CompleteObjective(struct FName InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.CompleteObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x14dc720
	void AddNewObjective_BlueprintImplementation(struct FName& InObjectiveIdentifier, struct FText& InObjectiveText, struct FName& InActionToEmbed, struct FName& InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, struct FKey& InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, struct FKey& InAdditionalGamepadInput, bool InOverrideImage, struct FName& InImageToOverride, bool InPersistantObjective, struct FName& InGamepadImageToOverride); // Function Tiger.TigerTutorialGameMode.AddNewObjective_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void AddNewObjective(struct FName InObjectiveIdentifier, struct FText InObjectiveText, struct FName InActionToEmbed, struct FName InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, struct FKey InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, struct FKey InAdditionalGamepadInput, bool InOverrideImage, struct FName InImageToOverride, bool InPersistantObjective, struct FName InGamepadImageToOverride); // Function Tiger.TigerTutorialGameMode.AddNewObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x14dc270
};

// Class Tiger.TigerTutorialGameState
// Size: 0x380 (Inherited: 0x380)
struct ATigerTutorialGameState : ATigerGameState {
};

// Class Tiger.TigerTutorialTrainerAsset
// Size: 0x60 (Inherited: 0x30)
struct UTigerTutorialTrainerAsset : UDataAsset {
	struct AAIController* Controller; // 0x30(0x08)
	struct ATigerTutorialTrainer* NPC; // 0x38(0x08)
	struct TArray<struct FTigerPreviewerData> VisualData; // 0x40(0x10)
	struct UTigerWeapon* WeaponClass; // 0x50(0x08)
	bool bShouldBeFriendlyWithPlayer; // 0x58(0x01)
	bool bShouldReviveInsteadOfDiablerize; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// Class Tiger.TigerTutorialNpcSpawner
// Size: 0x230 (Inherited: 0x228)
struct ATigerTutorialNpcSpawner : AActor {
	struct UTigerTutorialTrainerAsset* DataAsset; // 0x228(0x08)

	struct ATigerTutorialTrainer* SpawnNpc(); // Function Tiger.TigerTutorialNpcSpawner.SpawnNpc // (Final|Native|Public|BlueprintCallable) // @ game+0x14dd200
	struct TArray<struct ATigerTutorialTrainer*> SpawnGroupOfNpcs(int32_t NumberToSpawn); // Function Tiger.TigerTutorialNpcSpawner.SpawnGroupOfNpcs // (Final|Native|Public|BlueprintCallable) // @ game+0x14dd120
};

// Class Tiger.TigerTutorialTrainer
// Size: 0x900 (Inherited: 0x7a0)
struct ATigerTutorialTrainer : ATigerCharacter {
	char pad_7A0[0x28]; // 0x7a0(0x28)
	struct FMulticastInlineDelegate OnReviveEnded; // 0x7c8(0x10)
	struct FMulticastInlineDelegate OnTutorialTrainerDowned; // 0x7d8(0x10)
	struct FMulticastInlineDelegate OnTutorialTrainerDiablerized; // 0x7e8(0x10)
	struct FTutorialTrainerDiablerizeData DiablerizeData; // 0x7f8(0x20)
	struct FTutorialTrainerReviveData ReviveData; // 0x818(0x18)
	float HealthOnEnteringDownedState; // 0x830(0x04)
	float DiablerizeOffsetDistance; // 0x834(0x04)
	float MaxDownedTime; // 0x838(0x04)
	float RemainingDownedTime; // 0x83c(0x04)
	bool bShouldBeFriendlyWithPlayer; // 0x840(0x01)
	bool bCanBeDiablerized; // 0x841(0x01)
	bool bWantsToShoot; // 0x842(0x01)
	bool bIsDowned; // 0x843(0x01)
	bool bIsInvulnerableWhenDowned; // 0x844(0x01)
	char pad_845[0x3]; // 0x845(0x03)
	struct ATigerCharacter* CurrentlyAimedAtCharacter; // 0x848(0x08)
	struct UTigerNPCVisualAsset* VisualAsset; // 0x850(0x08)
	struct UTigerNPCFacePoseMap* HeadMeshsPoseAssetsClass; // 0x858(0x08)
	struct UTigerPhysicalInteractionAnimationAsset* DiablerizeAnimationSetAsset; // 0x860(0x08)
	float TimeInEnterState; // 0x868(0x04)
	float TimeInDrainState; // 0x86c(0x04)
	float TimeInLeaveState; // 0x870(0x04)
	struct FName DownedMontageNames[0x4]; // 0x874(0x20)
	struct FName StaticEntryToDownedMontageName; // 0x894(0x08)
	struct FName InterruptSectionName; // 0x89c(0x08)
	struct FName EndSectionName; // 0x8a4(0x08)
	struct FName DodgeOnGroundBlendSpaceName; // 0x8ac(0x08)
	struct FName DodgeInAirBlendSpaceName; // 0x8b4(0x08)
	struct FName DiablerizeAnimationName; // 0x8bc(0x08)
	struct FName GetDiablerizedAnimationName; // 0x8c4(0x08)
	struct FName ExitDownedStateAnimationName; // 0x8cc(0x08)
	char pad_8D4[0xc]; // 0x8d4(0x0c)
	struct UAnimMontage* CurrentTrainerDiablerizeMontage; // 0x8e0(0x08)
	struct UAnimMontage* CurrentPlayerDiablerizeMontage; // 0x8e8(0x08)
	char pad_8F0[0x10]; // 0x8f0(0x10)

	void TutorialTrainerReviveFinished__DelegateSignature(bool bDidCompleteRevive, bool bWasInterruptedByPlayer); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerReviveFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TutorialTrainerDowned__DelegateSignature(); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerDowned__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TutorialTrainerDiablerized__DelegateSignature(); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerDiablerized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void StopShooting(bool bShouldStopAiming); // Function Tiger.TigerTutorialTrainer.StopShooting // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd490
	void StopBlocking(); // Function Tiger.TigerTutorialTrainer.StopBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd470
	void StopAiming(); // Function Tiger.TigerTutorialTrainer.StopAiming // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd450
	void StartShooting(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.StartShooting // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd3c0
	void StartMeleeAttack(); // Function Tiger.TigerTutorialTrainer.StartMeleeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd3a0
	void StartHeavyMeleeAttack(float ChargeUpTime); // Function Tiger.TigerTutorialTrainer.StartHeavyMeleeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd300
	void StartBlocking(); // Function Tiger.TigerTutorialTrainer.StartBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd2e0
	void StartAimingAt(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.StartAimingAt // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dd250
	void ShootOnce(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.ShootOnce // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dcf80
	void ReloadWeapon(); // Function Tiger.TigerTutorialTrainer.ReloadWeapon // (Final|Native|Protected|BlueprintCallable) // @ game+0x14dceb0
	void OnExitDownedState(); // Function Tiger.TigerTutorialTrainer.OnExitDownedState // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDowned(); // Function Tiger.TigerTutorialTrainer.OnDowned // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDiablerizeStopped(); // Function Tiger.TigerTutorialTrainer.OnDiablerizeStopped // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDiablerizeStarted(); // Function Tiger.TigerTutorialTrainer.OnDiablerizeStarted // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void OnDiablerizedSuccessfullyFinished(); // Function Tiger.TigerTutorialTrainer.OnDiablerizedSuccessfullyFinished // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsAiming(); // Function Tiger.TigerTutorialTrainer.IsAiming // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14dca80
	float GetReviveOrDiablerizeProgress(); // Function Tiger.TigerTutorialTrainer.GetReviveOrDiablerizeProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14dc800
	float GetDiablerizeTimeInSeconds(); // Function Tiger.TigerTutorialTrainer.GetDiablerizeTimeInSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14dc7d0
};

// Class Tiger.TigerTypeAndRarityData
// Size: 0x260 (Inherited: 0x30)
struct UTigerTypeAndRarityData : UDataAsset {
	struct TMap<enum class ETigerInventoryItemType, struct FText> ItemTypeNames; // 0x30(0x50)
	struct TMap<enum class ETigerInventoryItemType, struct FText> ShortItemTypeNames; // 0x80(0x50)
	struct TMap<enum class ETigerWeaponAmmoType, struct FText> AmmoTypeNames; // 0xd0(0x50)
	struct TMap<enum class ETigerWeaponType, struct FText> ShortWeaponTypeNames; // 0x120(0x50)
	struct TMap<enum class ETigerLootCategory, struct FText> LootCategoryNames; // 0x170(0x50)
	struct TMap<enum class ETigerItemRarity, struct FText> ItemRarityNames; // 0x1c0(0x50)
	struct TMap<enum class ETigerItemRarity, enum class ETigerUIColor> ItemRarityColors; // 0x210(0x50)
};

// Class Tiger.TigerUIBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTigerUIBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	void Update3dWidgetTransform(struct AActor* Character, struct USceneComponent* Widget, struct FVector& SocketLocation, struct FVector Offset); // Function Tiger.TigerUIBlueprintFunctionLibrary.Update3dWidgetTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e2220
	struct TArray<struct FTigerProgressedChallengeWrapper> SortProgressedChallenges(struct TArray<struct FTigerProgressedChallengeWrapper> InProgressedChallengesArray); // Function Tiger.TigerUIBlueprintFunctionLibrary.SortProgressedChallenges // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e2020
	void ShowGameModeNotification(struct ATigerPlayerController* Player, struct FText Message); // Function Tiger.TigerUIBlueprintFunctionLibrary.ShowGameModeNotification // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e1f00
	bool ProjectWorldToScreenBidirectional(struct APlayerController* InPlayerController, struct FVector InWorldLocation, struct FVector2D& OutScreenPosition); // Function Tiger.TigerUIBlueprintFunctionLibrary.ProjectWorldToScreenBidirectional // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14e1d40
	void PlayOrReverseAnimation(struct UUserWidget* Widget, struct UWidgetAnimation* WidgetAnimation, enum class EUMGSequencePlayMode PlayMode, float PlayBackSpeed); // Function Tiger.TigerUIBlueprintFunctionLibrary.PlayOrReverseAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e1bf0
	void MapWorldLocationToUIRectangle(struct ATigerPlayerController* InPlayerController, struct FVector& InLocation, struct FBox2D& InMargins, struct FVector2D& OutScreenPosition, float& OutRotationAngleDegrees, bool& bIsOnScreen); // Function Tiger.TigerUIBlueprintFunctionLibrary.MapWorldLocationToUIRectangle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e1670
	void MapWorldLocationToUICircle(struct ATigerPlayer* Player, struct FVector& InLocation, float EdgePercent, float CircleRadius, struct FVector2D& OutScreenPosition, float& OutRotationAngleDegrees, bool& bIsOnScreen); // Function Tiger.TigerUIBlueprintFunctionLibrary.MapWorldLocationToUICircle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e1430
	bool IsItemPartOfPlayerCard(struct FTigerPersistentPlayerCardData& InCard, struct TSoftClassPtr<UObject>& InItemPath); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsItemPartOfPlayerCard // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e11c0
	bool IsItemPartOfAppearance(struct FTigerCharacterAppearance& InAppearance, struct TSoftClassPtr<UObject>& InItemPath); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsItemPartOfAppearance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e1070
	bool IsDisciplineClanAbility(struct ATigerPlayer* Player, enum class ETigerDisciplinesEnum Type); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsDisciplineClanAbility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e0fa0
	float GetUIAngle(struct ATigerPlayer* Player, struct FVector& LocationToGetAngleFrom); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetUIAngle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14e0ed0
	struct TArray<struct FStatChangeDescription> GetStatChanges(struct FTigerCharacterStatModification& StatModification); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetStatChanges // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0ce0
	struct FRotator GetRelativeCameraDirectionToActorRotation(struct AActor* Actor); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetRelativeCameraDirectionToActorRotation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14e0c40
	void GetLineLineIntersectionPoint(struct FVector& LineAStart, struct FVector& LineAEnd, struct FVector& LineBStart, struct FVector& LineBEnd, bool& bDoesIntersect, struct FVector& IntersectionPoint); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetLineLineIntersectionPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e09e0
	struct TArray<struct FInputAxisKeyMapping> GetKeysForAxis(struct ATigerPlayerController* Controller, struct FName& Axis); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetKeysForAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0810
	struct TArray<struct FInputActionKeyMapping> GetKeysForAction(struct ATigerPlayerController* Controller, struct FName& Action); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetKeysForAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0640
	enum class ETigerInventoryItemType GetInventoryItemTypeFromWeaponType(enum class ETigerEquippedWeaponType WeaponType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetInventoryItemTypeFromWeaponType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e05c0
	struct FName GetFNameFromKey(struct FKey& Key); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetFNameFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e04f0
	float GetExpandableAreaRolloutAnimationSeconds(struct UExpandableArea* InExpandableArea); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetExpandableAreaRolloutAnimationSeconds // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e0460
	struct FText GetDisplayTextFromKey(struct FKey& Key); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisplayTextFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0340
	struct UMediaSource* GetDisciplinePreviewMediaSource(struct UTigerDisciplineConfigs* InConfigsClass, enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplinePreviewMediaSource // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e0220
	struct UTexture2D* GetDisciplineIcon(struct UTigerDisciplineConfigs* ConfigsClass, enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplineIcon // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e0150
	struct UTigerDisciplineConfigBase* GetDisciplineConfigFromType(struct ATigerPlayer* Player, enum class ETigerDisciplinesEnum Type); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplineConfigFromType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e0080
	struct FVector2D GetBorderLocationFromAngle(float Angle, float DistanceFromBorder); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetBorderLocationFromAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14dff70
	void GetBorderLocationAndAngleFromWorld(struct ATigerPlayerController* InPlayerController, struct FVector InWorldLocation, float InBorderDistance, struct FVector2D& OutScreenPosition, float& OutAngle); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetBorderLocationAndAngleFromWorld // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14dfda0
	void GamepadUpdateScrollbox(struct ATigerPlayerController* InPlayerController, struct UScrollBox* InScrollbox, float& ScrollTime, float InDeltaTime, float InMinScrollSpeed, float InMaxScrollSpeed, float InMaxScrollTime); // Function Tiger.TigerUIBlueprintFunctionLibrary.GamepadUpdateScrollbox // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14dfb80
	void GamepadMoveMouseToWidget(struct ATigerPlayerController* InPlayerController, struct TArray<struct UWidget*>& InWidgetList, int32_t InHoverIndex, int32_t InDirection, struct UScrollBox* InScrollbox, bool& OutMouseMoved); // Function Tiger.TigerUIBlueprintFunctionLibrary.GamepadMoveMouseToWidget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14df990
	float CalculateTopdownAngleBetweenPlayerAndTarget(struct ATigerPlayer* InPlayer, struct FVector& InLocationToGetAngleFrom); // Function Tiger.TigerUIBlueprintFunctionLibrary.CalculateTopdownAngleBetweenPlayerAndTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14df8c0
};

// Class Tiger.TigerUIEnemyHealthBar
// Size: 0x280 (Inherited: 0x280)
struct UTigerUIEnemyHealthBar : UTigerWidget {

	enum class ETigerDamageNumberAmount GetDamageNumberAmountSetting(); // Function Tiger.TigerUIEnemyHealthBar.GetDamageNumberAmountSetting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e0050
	void AddHealAmount(int32_t InHealAmount); // Function Tiger.TigerUIEnemyHealthBar.AddHealAmount // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerUiNewNotificationNode
// Size: 0x68 (Inherited: 0x28)
struct UTigerUiNewNotificationNode : UObject {
	struct UTigerUiNewNotificationNode* ParentNode; // 0x28(0x08)
	struct TArray<struct UTigerUiNewNotificationNode*> ChildNodes; // 0x30(0x10)
	struct UTigerUiNewNotificationHandler* NewNotificationHandler; // 0x40(0x08)
	bool bHasNewEntry; // 0x48(0x01)
	bool bIsDirty; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
	struct TArray<uint64_t> NewIds; // 0x50(0x10)
	bool bShouldPersistBetweenSessions; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// Class Tiger.TigerUiNewNotificationHandler
// Size: 0xd0 (Inherited: 0x30)
struct UTigerUiNewNotificationHandler : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnNewItemStatus; // 0x30(0x10)
	struct TMap<enum class ETigerNewNotificationMenuOptions, struct UTigerUiNewNotificationNode*> NodeMap; // 0x40(0x50)
	char pad_90[0x40]; // 0x90(0x40)

	void UpdateInboxViewedState(bool InViewedState); // Function Tiger.TigerUiNewNotificationHandler.UpdateInboxViewedState // (Final|Native|Public) // @ game+0x14e2390
	void OnNewItemStatus__DelegateSignature(); // DelegateFunction Tiger.TigerUiNewNotificationHandler.OnNewItemStatus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnGroupInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerUiNewNotificationHandler.OnGroupInvite // (Final|Native|Public) // @ game+0x14e1b60
	void OnFriendInvite(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerUiNewNotificationHandler.OnFriendInvite // (Final|Native|Public) // @ game+0x14e1ad0
	void MarkWeeklyChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkWeeklyChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1ab0
	void MarkQuestsAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkQuestsAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1a90
	void MarkMasteryChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkMasteryChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1a70
	void MarkItemAsViewed(struct FTigerItemId& InTigerItemId); // Function Tiger.TigerUiNewNotificationHandler.MarkItemAsViewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14e19d0
	void MarkGrimoireEntryAsViewed(uint32_t InID); // Function Tiger.TigerUiNewNotificationHandler.MarkGrimoireEntryAsViewed // (Final|Native|Public) // @ game+0x14e1940
	void MarkFriendInviteEntryViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkFriendInviteEntryViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1920
	void MarkDailyChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkDailyChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1900
	void MarkBattlepassAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkBattlepassAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e18e0
	void MarkArchetypeViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkArchetypeViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e18c0
	void MarkAllGroupInviteEntriesViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkAllGroupInviteEntriesViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x14e18a0
	bool IsItemUnviewed(struct FTigerItemId& InTigerItemId); // Function Tiger.TigerUiNewNotificationHandler.IsItemUnviewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14e12f0
	bool CalculateNewNotificationActive(enum class ETigerNewNotificationMenuOptions InType); // Function Tiger.TigerUiNewNotificationHandler.CalculateNewNotificationActive // (Final|Native|Public|BlueprintCallable) // @ game+0x14df830
	void AddNewWeeklyChallenges(); // Function Tiger.TigerUiNewNotificationHandler.AddNewWeeklyChallenges // (Final|Native|Private) // @ game+0x14df810
	void AddNewQuest(); // Function Tiger.TigerUiNewNotificationHandler.AddNewQuest // (Final|Native|Public) // @ game+0x14df7f0
	void AddNewMasteryChallenge(); // Function Tiger.TigerUiNewNotificationHandler.AddNewMasteryChallenge // (Final|Native|Public) // @ game+0x14df7d0
	void AddNewGroupInviteEntry(); // Function Tiger.TigerUiNewNotificationHandler.AddNewGroupInviteEntry // (Final|Native|Public) // @ game+0x14df7b0
	void AddNewGrimoireEntry(uint32_t InID); // Function Tiger.TigerUiNewNotificationHandler.AddNewGrimoireEntry // (Final|Native|Public) // @ game+0x14df720
	void AddNewFriendInviteEntry(); // Function Tiger.TigerUiNewNotificationHandler.AddNewFriendInviteEntry // (Final|Native|Public) // @ game+0x14df700
	void AddNewDailyChallenges(); // Function Tiger.TigerUiNewNotificationHandler.AddNewDailyChallenges // (Final|Native|Private) // @ game+0x14df6e0
	void AddNewBattlepassOrBattlepassLevel(); // Function Tiger.TigerUiNewNotificationHandler.AddNewBattlepassOrBattlepassLevel // (Final|Native|Public) // @ game+0x14df6c0
	void AddNewArchetype(); // Function Tiger.TigerUiNewNotificationHandler.AddNewArchetype // (Final|Native|Public) // @ game+0x14df6a0
};

// Class Tiger.TigerUISettings
// Size: 0x70 (Inherited: 0x38)
struct UTigerUISettings : USharkLocalDeveloperSettings {
	struct FDataTableRowHandle DefaultTextStyle; // 0x38(0x10)
	struct TSoftObjectPtr<UDataTable> DefaultTextStyleSet; // 0x48(0x28)
};

// Class Tiger.TigerUser
// Size: 0x60 (Inherited: 0x28)
struct UTigerUser : UObject {
	struct FMulticastInlineDelegate OnDisplayNameChanged; // 0x28(0x10)
	struct FString DISPLAYNAME; // 0x38(0x10)
	struct FTigerPersistentPlayerID ID; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)

	void SetDisplayName(struct FString InName); // Function Tiger.TigerUser.SetDisplayName // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1e60
	void OnDisplayNameChangedDelegate__DelegateSignature(struct FString InName); // DelegateFunction Tiger.TigerUser.OnDisplayNameChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	struct UTigerUser* MakeUserFromLocalPlayer(struct UObject* InWorldContextObject); // Function Tiger.TigerUser.MakeUserFromLocalPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e13a0
	enum class EShAccountChannel GetPlayerChannel(); // Function Tiger.TigerUser.GetPlayerChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e0c10
	struct FTigerPersistentPlayerID GetPersistentPlayerID(); // Function Tiger.TigerUser.GetPersistentPlayerID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f1a00
	struct FString GetDisplayName(); // Function Tiger.TigerUser.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e02f0
};

// Class Tiger.TigerUserInputBinding
// Size: 0x308 (Inherited: 0x28)
struct UTigerUserInputBinding : UObject {
	struct FMulticastInlineDelegate OnPresetChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnSettingChangedFromPreset; // 0x38(0x10)
	struct FMulticastInlineDelegate OnInputBindingsReset; // 0x48(0x10)
	struct FMulticastInlineDelegate OnInputBindingChanged; // 0x58(0x10)
	struct FMulticastInlineDelegate OnAxisInputBindingChanged; // 0x68(0x10)
	char pad_78[0x90]; // 0x78(0x90)
	struct FTigerInputBindings UserInputs; // 0x108(0x48)
	struct FTigerInputBindings DefaultInputs; // 0x150(0x48)
	struct TArray<struct FInputActionKeyMapping> DebugMappings; // 0x198(0x10)
	struct TArray<struct FInputAxisKeyMapping> DebugAxisMappings; // 0x1a8(0x10)
	struct TArray<struct FInputActionKeyMapping> ConsoleShippingDebugMappings; // 0x1b8(0x10)
	struct TArray<struct FInputAxisKeyMapping> ConsoleShippingDebugAxisMappings; // 0x1c8(0x10)
	struct TArray<struct UTigerWeaponCycleStyle*> WeaponCycleStyles; // 0x1d8(0x10)
	struct TArray<struct UTigerWeaponCycleStyle*> WeaponCycleStylesGamepad; // 0x1e8(0x10)
	struct FString BoundConsoleCommand; // 0x1f8(0x10)
	struct UCurveFloat* SensitivityCurve; // 0x208(0x08)
	struct UCurveFloat* SensitivityCurveGamepad; // 0x210(0x08)
	struct FTigerInputSettings InputSettings; // 0x218(0x60)
	struct FTigerInputSettings DefaultInputSettings; // 0x278(0x60)
	struct UTigerCustomizableKeybindsDataAsset* CustomizableKeybindsDataAsset; // 0x2d8(0x08)
	struct UTigerInputPresetDataAsset* InputPresetData; // 0x2e0(0x08)
	struct FName UsedInputPreset; // 0x2e8(0x08)
	struct FName NameOfCustomPreset; // 0x2f0(0x08)
	struct UTigerWeaponCycleStyle* DefaultWeaponCycleStyle; // 0x2f8(0x08)
	bool bIsSwitchingPreset; // 0x300(0x01)
	char pad_301[0x7]; // 0x301(0x07)

	void SwitchWeaponCycleStyle(struct FText InWeaponCycleStyle, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.SwitchWeaponCycleStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x14ecfb0
	void SwitchInputPreset(struct FName InInputPresetToUse); // Function Tiger.TigerUserInputBinding.SwitchInputPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x14ecf20
	void SetRumbleIntensity(float InIntensity); // Function Tiger.TigerUserInputBinding.SetRumbleIntensity // (Final|Native|Public|BlueprintCallable) // @ game+0x14ebe90
	void SetEnableAimAssistSlowDown(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAimAssistSlowDown // (Final|Native|Public|BlueprintCallable) // @ game+0x14ebe00
	void SetEnableAimAssistRotation(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAimAssistRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x14ebd70
	void SetEnableAdaptiveTriggerVibration(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAdaptiveTriggerVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x14ebc50
	void SetEnableAdaptiveTriggers(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAdaptiveTriggers // (Final|Native|Public|BlueprintCallable) // @ game+0x14ebce0
	void ScopedSensitivityChangedY(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.ScopedSensitivityChangedY // (Final|Native|Public|BlueprintCallable) // @ game+0x14ebae0
	void ScopedSensitivityChangedX(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.ScopedSensitivityChangedX // (Final|Native|Public|BlueprintCallable) // @ game+0x14eba00
	void ResetSettings(); // Function Tiger.TigerUserInputBinding.ResetSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x14eb9e0
	void ResetKeybinds(); // Function Tiger.TigerUserInputBinding.ResetKeybinds // (Final|Native|Public|BlueprintCallable) // @ game+0x14eb940
	void RebindKey(int32_t ActionMappingIndex, struct FInputActionKeyMapping& NewBinding, bool bInSwapKeysOnConflict); // Function Tiger.TigerUserInputBinding.RebindKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14eb380
	void RebindAxisKey(int32_t ActionMappingIndex, struct FInputAxisKeyMapping& InNewBinding, bool bInSwapKeysOnConflict); // Function Tiger.TigerUserInputBinding.RebindAxisKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14eb1c0
	void MasterSensitivityChangedY(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.MasterSensitivityChangedY // (Final|Native|Public|BlueprintCallable) // @ game+0x14ea3e0
	void MasterSensitivityChangedX(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.MasterSensitivityChangedX // (Final|Native|Public|BlueprintCallable) // @ game+0x14ea300
	void LoadInputDefaults(); // Function Tiger.TigerUserInputBinding.LoadInputDefaults // (Final|Native|Public|BlueprintCallable) // @ game+0x14ea060
	void InvertYAxisChanged(bool bInInverted, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.InvertYAxisChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e9420
	void InvertXAxisChanged(bool bInInverted, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.InvertXAxisChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e9350
	void HoldJumpToClimbChanged(bool bInHoldJumpToClimb, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.HoldJumpToClimbChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e9160
	void HoldForInventoryChanged(bool bInShouldHold, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.HoldForInventoryChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e9090
	void HoldForHeightenedSensesChanged(bool bInShouldHold); // Function Tiger.TigerUserInputBinding.HoldForHeightenedSensesChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e9000
	void HoldForAimDownSightsChanged(bool bInShouldHold); // Function Tiger.TigerUserInputBinding.HoldForAimDownSightsChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e8f70
	struct UTigerWeaponCycleStyle* GetUsedWeaponCycleStyle(bool bInForGamepad); // Function Tiger.TigerUserInputBinding.GetUsedWeaponCycleStyle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e8ee0
	void AutoSprintChanged(bool bInAutoSprint); // Function Tiger.TigerUserInputBinding.AutoSprintChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x14e6820
	void AimingSensitivityChangedY(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.AimingSensitivityChangedY // (Final|Native|Public|BlueprintCallable) // @ game+0x14e5ee0
	void AimingSensitivityChangedX(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.AimingSensitivityChangedX // (Final|Native|Public|BlueprintCallable) // @ game+0x14e5e00
};

// Class Tiger.TigerInputPresetDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerInputPresetDataAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerInputPresetData> InputPresets; // 0x30(0x50)

	struct TArray<struct FName> GetInputPresetsArray(); // Function Tiger.TigerInputPresetDataAsset.GetInputPresetsArray // (Final|Native|Public|BlueprintCallable) // @ game+0x14e7df0
};

// Class Tiger.TigerCustomizableKeybindsDataAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerCustomizableKeybindsDataAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerCustomizableKeybindData> KeybindData; // 0x30(0x50)
	struct TMap<struct FName, struct FTigerCustomizableAxisKeybindData> AxisKeybindData; // 0x80(0x50)
};

// Class Tiger.TigerWeaponCycleStyle
// Size: 0x48 (Inherited: 0x28)
struct UTigerWeaponCycleStyle : UObject {
	int32_t WeaponSlotsToCycle; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FText UiName; // 0x30(0x18)

	int32_t WrapSlotValue(int32_t InSlotAsInt); // Function Tiger.TigerWeaponCycleStyle.WrapSlotValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ee970
	bool IsValidWeaponSlotToCycle(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerWeaponCycleStyle.IsValidWeaponSlotToCycle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e9a80
	enum class ETigerWeaponSlot IntToSlot(int32_t InSlotAsInt); // Function Tiger.TigerWeaponCycleStyle.IntToSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e92b0
	enum class ETigerWeaponSlot DetermineNextWeaponSlot(struct ATigerPlayerController* InPlayerController, enum class ETigerWeaponCycleDirection InDirection); // Function Tiger.TigerWeaponCycleStyle.DetermineNextWeaponSlot // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerUtilityBFL : UBlueprintFunctionLibrary {

	struct FVector VRandCone(struct FVector InDir, float InConeHalfAngleRad, struct FTigerRangedRandomState& InOutRandomState); // Function Tiger.TigerUtilityBFL.VRandCone // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14ee830
	struct FLinearColor UnpackLinearColorFromFloat(float InPackedColor); // Function Tiger.TigerUtilityBFL.UnpackLinearColorFromFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x14ee7a0
	struct FTigerPreviewerData ToPreviewerData(struct FTigerCharacterAppearance& InAppearance); // Function Tiger.TigerUtilityBFL.ToPreviewerData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14ee6c0
	float TimeSince(float Time, struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.TimeSince // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ee5f0
	void TigerDebugDrawSphere(struct UObject* InWorldContextObject, struct FVector& InCenter, float InRadius, int32_t InSegments, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ee330
	void TigerDebugDrawRotation(struct UObject* InWorldContextObject, struct FRotator& InRotation, struct FVector& InPosition, float InLength, float InLifeTime); // Function Tiger.TigerUtilityBFL.TigerDebugDrawRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ee170
	void TigerDebugDrawLine(struct UObject* InWorldContextObject, struct FVector& InLineStart, struct FVector& InLineEnd, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14edef0
	void TigerDebugDrawCapsule(struct UObject* InWorldContextObject, struct FVector& InCenter, float InRadius, float InHalfHeight, struct FRotator& InRotation, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawCapsule // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14edbf0
	void TigerDebugDrawBox(struct UObject* WorldContextObject, struct FVector& InCenter, struct FVector& InExtent, struct FRotator& InRotation, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawBox // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ed910
	float TigerApplyPointDamage(struct ATigerCharacter* InDamagedActor, float InBaseDamage, struct FVector& InHitFromDirection, struct FHitResult& InHitInfo, struct AController* InEventInstigator, struct AActor* InDamageCauser, struct UDamageType* InDamageTypeClass, enum class ETigerDamageCauser InDamageCauserType, struct FString InDamageReason, struct FTigerDamageContext& InDamageContext); // Function Tiger.TigerUtilityBFL.TigerApplyPointDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ed520
	float TigerApplyDamage(struct ATigerCharacter* InDamagedActor, float InBaseDamage, struct AController* InEventInstigator, struct AActor* InDamageCauser, struct UDamageType* InDamageTypeClass, enum class ETigerDamageCauser InDamageCauserType, struct FString InDamageReason, struct FTigerDamageContext& InDamageContext); // Function Tiger.TigerUtilityBFL.TigerApplyDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ed240
	struct UProceduralMeshComponent* TigerAddProceduralMeshComponent(struct AActor* Actor, struct FCollisionResponseContainer& CollisionResponses, enum class ECollisionChannel CollisionObjectType, struct FName ComponentName); // Function Tiger.TigerUtilityBFL.TigerAddProceduralMeshComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ed0e0
	void StoreOpened(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerUtilityBFL.StoreOpened // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ecea0
	void StoreItemPreviewOpened(struct ATigerPlayerController* InPlayerController, struct FTigerMetaStoreEntry& InEntry); // Function Tiger.TigerUtilityBFL.StoreItemPreviewOpened // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ecda0
	void StoreItemPreviewExited(struct ATigerPlayerController* InPlayerController, struct FTigerMetaStoreEntry& InEntry); // Function Tiger.TigerUtilityBFL.StoreItemPreviewExited // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ecca0
	void StoreExited(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerUtilityBFL.StoreExited // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ecc20
	void StopAkPlayingId(int32_t AkPlayingId, float FadeOutDuration); // Function Tiger.TigerUtilityBFL.StopAkPlayingId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ecb60
	struct FPerfTimerHandle StartPerfTimer(); // Function Tiger.TigerUtilityBFL.StartPerfTimer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ecb30
	void SpawnItemFromTable(struct UObject* InWorldContextObject, struct UTigerItemLootTable* InLootTable, struct FTransform& InFirstTransform, struct FTransform& InSecondTransform, enum class ETigerTelemetryItemSourceID InItemSource, struct ATigerItemWorldRepresentation*& OutFirstSpawnedItem, struct ATigerItemWorldRepresentation*& OutSecondSpawnedItem, bool bInSpawnSecondItem, bool bInSimulatePhysics); // Function Tiger.TigerUtilityBFL.SpawnItemFromTable // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ec7d0
	struct ATigerItemWorldRepresentation* SpawnItem(struct UObject* InWorldContextObject, struct FTransform& InTransform, struct UTigerItemAsset* InItem, enum class ETigerTelemetryItemSourceID InItemSource, int32_t InItemCount, bool bInSimulatePhysics); // Function Tiger.TigerUtilityBFL.SpawnItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ec5a0
	struct UParticleSystemComponent* SpawnEmitterStrategized(struct UParticleSystem* InSystemToSpawn, struct ATigerCharacter* InInstigatingCharacter, struct FTransform& InRelativeTransform, struct FName InAttachPointName, struct USceneComponent* InComponentToAttachTo, struct UTigerParticleStrategyPostSpawn* InPostSpawnStrategy); // Function Tiger.TigerUtilityBFL.SpawnEmitterStrategized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ec370
	struct UParticleSystemComponent* SpawnEmitterDefaultStrategized(struct UParticleSystem* InSystemToSpawn, struct ATigerCharacter* InInstigatingCharacter, struct FTransform& InRelativeTransform, struct FName InAttachPointName, struct USceneComponent* InComponentToAttachTo, struct UTigerParticleStrategyPostSpawn* InPostSpawnStrategy); // Function Tiger.TigerUtilityBFL.SpawnEmitterDefaultStrategized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ec140
	bool ShouldAutoSpectateOnDeath(); // Function Tiger.TigerUtilityBFL.ShouldAutoSpectateOnDeath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ec110
	void SetTemporalAASamples(int32_t InSamples); // Function Tiger.TigerUtilityBFL.SetTemporalAASamples // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ec090
	void SetStaticMeshMobility(struct UStaticMeshComponent* MeshComponent, enum class EComponentMobility NewMobility); // Function Tiger.TigerUtilityBFL.SetStaticMeshMobility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ebfd0
	void SetSignificanceManagerBudgetType(struct UObject* InWorldContextObject, enum class ETigerSignificanceBudgetType InBudgetType); // Function Tiger.TigerUtilityBFL.SetSignificanceManagerBudgetType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ebf10
	void SetCurrentAudioCultureForced(struct FString InNewAudioCulture); // Function Tiger.TigerUtilityBFL.SetCurrentAudioCultureForced // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ebbc0
	void RunAllFunctionalTestsOnMap(); // Function Tiger.TigerUtilityBFL.RunAllFunctionalTestsOnMap // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xbf6c20
	void ResetMaterialsToMeshDefault(struct UPrimitiveComponent* Component); // Function Tiger.TigerUtilityBFL.ResetMaterialsToMeshDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eb960
	void RenameActorInstance(struct AActor* InActor, struct FString InName); // Function Tiger.TigerUtilityBFL.RenameActorInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eb870
	void RecordStartOfTutorialObjective(struct UObject* InWorldContextObject, struct FString InTimeStampId, struct FVector& InLocation); // Function Tiger.TigerUtilityBFL.RecordStartOfTutorialObjective // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14eb750
	void RecordStartOfTutorial(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.RecordStartOfTutorial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eb6d0
	void RecordEndOfTutorialObjective(struct UObject* InWorldContextObject, struct FString InTimeStampId); // Function Tiger.TigerUtilityBFL.RecordEndOfTutorialObjective // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eb600
	void RecordEndOfTutorial(struct UObject* InWorldContextObject, bool InTutorialFinished); // Function Tiger.TigerUtilityBFL.RecordEndOfTutorial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eb540
	void PrintPerfTimer(struct FPerfTimerHandle& Handle, bool bPrintToLog, struct FLinearColor TextColor); // Function Tiger.TigerUtilityBFL.PrintPerfTimer // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14eb090
	int32_t PostAudioVisualizedAkEventOnComponent(struct UAkAudioEvent* InEvent, struct AActor* InActor, struct UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, struct FName InAttachPointName, bool bInStopWhenAttachedToDestroyed, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEventOnComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eae60
	int32_t PostAudioVisualizedAkEventAtLocation(struct UAkAudioEvent* InEvent, struct FVector InLocation, struct FRotator InOrientation, struct UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEventAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x14eac60
	int32_t PostAudioVisualizedAkEvent(struct UAkAudioEvent* InEvent, struct ATigerPlayer* InPlayer, struct FName InAttachPointName, bool bInStopWhenAttachedToDestroyed, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eaa70
	void PostAkEventRaw(int32_t& InAkPlayingId, struct UAkAudioEvent* InAkAudioEvent, struct AActor* InOwner, bool bInStopWhenOwnerIsDestroyed); // Function Tiger.TigerUtilityBFL.PostAkEventRaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ea910
	int32_t PostAkEventIfLocallyControlled(struct AActor* InActor, struct UAkAudioEvent* InEvent); // Function Tiger.TigerUtilityBFL.PostAkEventIfLocallyControlled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ea840
	struct FTigerPersistentVoipID PersistentPlayerIdToPersistentVoipID(struct FTigerPersistentPlayerID& InPersistentPlayerId); // Function Tiger.TigerUtilityBFL.PersistentPlayerIdToPersistentVoipID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ea750
	bool PartialMatch(struct FString InRegexPattern, struct FString InInput); // Function Tiger.TigerUtilityBFL.PartialMatch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ea5e0
	float PackLinearColorToFloat(struct FLinearColor& InColor); // Function Tiger.TigerUtilityBFL.PackLinearColorToFloat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14ea550
	void OnItemAppliedToCard__DelegateSignature(struct FTigerPersistentPlayerCardData& InCard); // DelegateFunction Tiger.TigerUtilityBFL.OnItemAppliedToCard__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void OnItemAppliedToApperanceFromPreview__DelegateSignature(struct FTigerPreviewerData& InPreviewerAppearance); // DelegateFunction Tiger.TigerUtilityBFL.OnItemAppliedToApperanceFromPreview__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	bool MeshContainsCollisionData(struct UStaticMeshComponent* InMeshComp); // Function Tiger.TigerUtilityBFL.MeshContainsCollisionData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ea4c0
	struct FTigerDamageContext MakeTigerDamageContext(struct UObject* InUObject); // Function Tiger.TigerUtilityBFL.MakeTigerDamageContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ea260
	void LogToScreenPopUp(struct UWorld* InWorld, struct FString InScreenMessage); // Function Tiger.TigerUtilityBFL.LogToScreenPopUp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14ea190
	struct UObject* LoadObjectOfType(struct TSoftObjectPtr<UObject>& ObjectPath, struct UObject* Type); // Function Tiger.TigerUtilityBFL.LoadObjectOfType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ea080
	struct UObject* LoadDefaultObjectFromSoftClass(struct TSoftClassPtr<UObject> InSoftClass, struct UObject* InOutputType); // Function Tiger.TigerUtilityBFL.LoadDefaultObjectFromSoftClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e9f10
	void LoadClan(struct TSoftObjectPtr<UTigerPlayerClanData>& ClanPath, struct UTigerPlayerClanData*& ClanData); // Function Tiger.TigerUtilityBFL.LoadClan // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e9e00
	struct FText ListChanges(struct TArray<float>& Changes, struct FText Prefix, struct FText Suffix, struct FText Seperator); // Function Tiger.TigerUtilityBFL.ListChanges // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e9b10
	bool IsValidCharacterId(struct FTigerPersistentCharacterID& CharacterId); // Function Tiger.TigerUtilityBFL.IsValidCharacterId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e99f0
	bool IsSameCharacterId(struct FTigerPersistentCharacterID& CharacterA, struct FTigerPersistentCharacterID& CharacterB); // Function Tiger.TigerUtilityBFL.IsSameCharacterId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e9910
	bool IsOnlineSubsystemEnabled(struct FName InSubsystemName); // Function Tiger.TigerUtilityBFL.IsOnlineSubsystemEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e9880
	bool IsInTutorial(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInTutorial // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e97f0
	bool IsInTransferFromMatch(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInTransferFromMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9760
	bool IsInMatch(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e96d0
	bool IsInElysium(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.IsInElysium // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9640
	bool IsInEditor(); // Function Tiger.TigerUtilityBFL.IsInEditor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9610
	bool IsInBenchmark(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInBenchmark // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9580
	bool IsEditorBuild(); // Function Tiger.TigerUtilityBFL.IsEditorBuild // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x9423d0
	bool IsDirectlyHovered(struct UWidget* Widget); // Function Tiger.TigerUtilityBFL.IsDirectlyHovered // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e94f0
	void InitializeCharacterAlignmentAk(struct AActor* Actor); // Function Tiger.TigerUtilityBFL.InitializeCharacterAlignmentAk // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e9230
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetTransactionalPlayerData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8e50
	void GetTimeLeftForStoreEntry(struct UObject* InWorldContextObject, struct FTigerMetaStoreEntry& InStoreEntry, bool& bOutHasExpired, struct FTimespan& OutTimeLeft); // Function Tiger.TigerUtilityBFL.GetTimeLeftForStoreEntry // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14e8c90
	struct UTigerGameInstance* GetTigerGameInstance(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetTigerGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8c00
	int32_t GetTemporalAASamples(); // Function Tiger.TigerUtilityBFL.GetTemporalAASamples // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e8bd0
	struct FTigerGameModeDescriptor GetSuitableGameModeDescriptor(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSuitableGameModeDescriptor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e89e0
	struct FTigerPersistentPlayerCharacterData GetSelectedCharacterData(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSelectedCharacterData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8930
	struct FTigerCharacterAppearance GetSelectedCharacterAppearance(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSelectedCharacterAppearance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e88a0
	float GetScrollBoxContentSpace(struct UScrollBox* ScrollBox); // Function Tiger.TigerUtilityBFL.GetScrollBoxContentSpace // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8810
	struct FString GetRomanNumeral(int32_t InNumber); // Function Tiger.TigerUtilityBFL.GetRomanNumeral // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8740
	struct UNiagaraSystem* GetPreloadedNiagaraSystem(struct UObject* WorldContextObject, struct FSoftObjectPath& SoftObjectPath); // Function Tiger.TigerUtilityBFL.GetPreloadedNiagaraSystem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14e8650
	struct FTigerPersistentPlayerCardData GetPlayerCardData(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetPlayerCardData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e85b0
	float GetPerfTimerElapsedTime(struct FPerfTimerHandle& Handle); // Function Tiger.TigerUtilityBFL.GetPerfTimerElapsedTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e8510
	struct UTigerPartyManager* GetPartyManager(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetPartyManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8480
	struct TSoftClassPtr<UObject> GetOutfitSoftClass(struct FTigerCharacterCustomizationOutfitData& InOutfitData); // Function Tiger.TigerUtilityBFL.GetOutfitSoftClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e8380
	int32_t GetNearestScrollBoxToPoint(struct TArray<struct UScrollBox*>& Boxes, struct FVector2D& Point); // Function Tiger.TigerUtilityBFL.GetNearestScrollBoxToPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e8280
	struct ATigerPlayerController* GetLocalPlayerController(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e81f0
	struct ATigerPlayer* GetLocalPlayer(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8160
	struct UTigerLegalDocuments* GetLegalDocuments(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetLegalDocuments // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e80d0
	float GetLastRenderTime(struct UPrimitiveComponent* Primitive); // Function Tiger.TigerUtilityBFL.GetLastRenderTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8040
	struct UTigerItemDatabase* GetItemsDatabase(); // Function Tiger.TigerUtilityBFL.GetItemsDatabase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8010
	struct FTigerItemId GetItemIdForItem(struct TSoftClassPtr<UObject> InItemPathFrom); // Function Tiger.TigerUtilityBFL.GetItemIdForItem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7f00
	struct UTigerInventoryItemBase* GetItemFromItemId(struct FTigerItemId InItemId); // Function Tiger.TigerUtilityBFL.GetItemFromItemId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7e70
	int32_t GetHardCurrency(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetHardCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7d60
	struct UTigerGrimoireTree* GetGrimoireTree(); // Function Tiger.TigerUtilityBFL.GetGrimoireTree // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e7d30
	float GetGameTimeSecondsByContext(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameTimeSecondsByContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7ca0
	float GetGameTimeSeconds(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7c10
	struct TArray<struct FTigerGameModeDescriptor> GetGameModeDescriptors(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameModeDescriptors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7a90
	enum class ETigerDamageCauser GetDamageCauserFromCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerUtilityBFL.GetDamageCauserFromCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7a00
	struct UTigerClanCustomizationOptions* GetCustomizationDatabase(); // Function Tiger.TigerUtilityBFL.GetCustomizationDatabase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e79d0
	struct FString GetComputerIdentifier(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetComputerIdentifier // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7900
	void GetCommandLineInteger(struct FString ParameterName, bool& ParameterExists, int32_t& Integer); // Function Tiger.TigerUtilityBFL.GetCommandLineInteger // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e77c0
	struct AActor* GetClosestActorToLocation(struct AActor* ActorClass, struct TArray<struct AActor*>& ActorArray, struct FVector& Location); // Function Tiger.TigerUtilityBFL.GetClosestActorToLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e7570
	struct UObject* GetClassDefaultObject(struct UObject* Class); // Function Tiger.TigerUtilityBFL.GetClassDefaultObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e74e0
	int32_t GetBuildVersion(); // Function Tiger.TigerUtilityBFL.GetBuildVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e74b0
	struct FTigerPropAttachmentInfo GetAttachmentInfoFromIdentifierAndClass(struct ATigerPropDummy* Subclass, struct FName Identifier); // Function Tiger.TigerUtilityBFL.GetAttachmentInfoFromIdentifierAndClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e73b0
	float GetAngleDeltaDegrees(float Angle1, float Angle2); // Function Tiger.TigerUtilityBFL.GetAngleDeltaDegrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e72e0
	struct FString FormatDate(struct FDateTime& DateTime, struct FText Format); // Function Tiger.TigerUtilityBFL.FormatDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x14e7160
	bool EqualTigerPersistentPlayerId(struct FTigerPersistentPlayerID InLHS, struct FTigerPersistentPlayerID InRHS); // Function Tiger.TigerUtilityBFL.EqualTigerPersistentPlayerId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e6ff0
	bool EqualTigerItemIDs(struct FTigerItemId InLHS, struct FTigerItemId InRHS); // Function Tiger.TigerUtilityBFL.EqualTigerItemIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e6f20
	void DisableReplicationInElysium(struct UActorComponent* InActorComponent); // Function Tiger.TigerUtilityBFL.DisableReplicationInElysium // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e6ea0
	bool DestroyActorIfNotEditorBuild(struct AActor* InActor); // Function Tiger.TigerUtilityBFL.DestroyActorIfNotEditorBuild // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e6e10
	void DedicatedServerBranch(struct UObject* WorldContextObject, enum class ETigerIsDedicatedServer& NetMode); // Function Tiger.TigerUtilityBFL.DedicatedServerBranch // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e6d40
	struct FTigerChatMessage CreateGameChatMessage(struct FText InMessage, bool bInIsChatBanMessage); // Function Tiger.TigerUtilityBFL.CreateGameChatMessage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e6a90
	int32_t ConvertInt64ToInt(int64_t Int64Value, bool& bSuccess); // Function Tiger.TigerUtilityBFL.ConvertInt64ToInt // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e69b0
	enum class ESharkPlatformType Conv_AccountChannelToPlatformType(enum class EShAccountChannel InAccountChannel); // Function Tiger.TigerUtilityBFL.Conv_AccountChannelToPlatformType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e6930
	void CenterMouseLocation(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerUtilityBFL.CenterMouseLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e68b0
	bool ArePlayerStateArraysEqual(struct TArray<struct APlayerState*>& InLeft, struct TArray<struct APlayerState*>& InRight); // Function Tiger.TigerUtilityBFL.ArePlayerStateArraysEqual // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e6700
	bool AreOutfitPhysicalMeshesValid(struct FTigerPersistentOutfitSetup& InOutfitSetup); // Function Tiger.TigerUtilityBFL.AreOutfitPhysicalMeshesValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e6630
	void ApplyItemToCardAsync(struct TSoftClassPtr<UObject>& InItemPath, struct FTigerPersistentPlayerCardData& InCardData, struct FDelegate& InDelegate); // Function Tiger.TigerUtilityBFL.ApplyItemToCardAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e64b0
	void ApplyItemToAppearanceFromPreview(struct TSoftClassPtr<UObject>& InItemPath, int32_t InSlot, struct FTigerPreviewerData& InPreviewAppearance, enum class ETigerPowerKitType InUsedPowerKit, enum class ETigerClan InClan, struct FDelegate& InDelegate); // Function Tiger.TigerUtilityBFL.ApplyItemToAppearanceFromPreview // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e6230
	void ApplyCustomizationParametersToMeshComponentFiltered(struct FTigerCharacterCustomizationParameters& InParams, struct USkeletalMeshComponent* InMeshComponent, enum class ETigerCharacterMeshPart InPart); // Function Tiger.TigerUtilityBFL.ApplyCustomizationParametersToMeshComponentFiltered // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e60e0
	void ApplyCustomizationParametersToMeshComponent(struct FTigerCharacterCustomizationParameters& Params, struct USkeletalMeshComponent* MeshComponent); // Function Tiger.TigerUtilityBFL.ApplyCustomizationParametersToMeshComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e5fc0
	struct UProceduralMeshComponent* AddProceduralMeshWithSection(struct AActor* Actor, struct TArray<struct FVector>& Vertices, struct TArray<int32_t> Triangles, struct TArray<struct FVector>& Normals, struct TArray<struct FVector2D>& UV0, struct TArray<struct FLinearColor>& VertexColors, struct TArray<struct FProcMeshTangent>& Tangents, bool bCreateCollision, struct FCollisionResponseContainer& CollisionResponses, enum class ECollisionChannel CollisionObjectType); // Function Tiger.TigerUtilityBFL.AddProceduralMeshWithSection // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e5a00
};

// Class Tiger.TigerUtilityPowerBaseComponent
// Size: 0xe8 (Inherited: 0xb0)
struct UTigerUtilityPowerBaseComponent : UActorComponent {
	struct FText UtilityName; // 0xb0(0x18)
	struct FText UtilityDescription; // 0xc8(0x18)
	bool bUseClientBackgroundUpdate; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
};

// Class Tiger.TigerUtilityPowerHSenseComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerUtilityPowerHSenseComponent : UActorComponent {
	struct FMulticastInlineDelegate OnHeightenedSensesUsed; // 0xb0(0x10)
	struct TArray<struct FTigerNPCMasqueradeStateMessage> NPCMasqueradeStates; // 0xc0(0x10)
	struct TArray<struct AActor*> ActiveHeightenedSenseObjects; // 0xd0(0x10)
	float HeightenedSensesDirectLosExtent; // 0xe0(0x04)
	float HeightenedSensesIndirectLosExtent; // 0xe4(0x04)
	float MaxFadeInTimer; // 0xe8(0x04)
	float MaxFadeOutTimer; // 0xec(0x04)
	float PulseDuration; // 0xf0(0x04)
	float CooldownTimeAfterActivation; // 0xf4(0x04)
	float MovementMultiplierWhenActive; // 0xf8(0x04)
	float CurrentFadeInTimer; // 0xfc(0x04)
	float CurrentFadeOutTimer; // 0x100(0x04)
	float CooldownEndTime; // 0x104(0x04)
	float PulseTimeLeft; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct UAkAudioEvent* FailedUseAudioEvent; // 0x110(0x08)
	int32_t CancellingActions; // 0x118(0x04)
	bool ActivateHeightenedSensesStartupFinished; // 0x11c(0x01)
	bool DeactivateHeightenedSensesStartupFinished; // 0x11d(0x01)
	bool bShouldStopSprintingWhenActive; // 0x11e(0x01)
	bool bShouldPulse; // 0x11f(0x01)
	bool bIsHeightenedSensesActive; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
	struct TArray<struct FTigerDisableHSenseTarget> DisabledHeightenedSensesActors; // 0x128(0x10)
	char pad_138[0x10]; // 0x138(0x10)

	void UpdateHeightenedSensesEffects(); // Function Tiger.TigerUtilityPowerHSenseComponent.UpdateHeightenedSensesEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x14f3790
	void UpdateBloodResonanceBlendAudio(); // Function Tiger.TigerUtilityPowerHSenseComponent.UpdateBloodResonanceBlendAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x14f3770
	void TriggerHeightenedSensesEffects(); // Function Tiger.TigerUtilityPowerHSenseComponent.TriggerHeightenedSensesEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x14f3660
	void ToggledHeightenedSenses__DelegateSignature(bool bIsNowActive); // DelegateFunction Tiger.TigerUtilityPowerHSenseComponent.ToggledHeightenedSenses__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void Server_UnsubscribeToHeightenedSenseData(); // Function Tiger.TigerUtilityPowerHSenseComponent.Server_UnsubscribeToHeightenedSenseData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f3430
	void Server_OnActivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.Server_OnActivateHeightenedSenses // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f32d0
	void OnDeactivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.OnDeactivateHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnActivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.OnActivateHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x184a280
	bool IsWithinHeightenedSensesRanges(struct AActor* InCharacter); // Function Tiger.TigerUtilityPowerHSenseComponent.IsWithinHeightenedSensesRanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2da0
	bool IsHeightenedSensesActive(); // Function Tiger.TigerUtilityPowerHSenseComponent.IsHeightenedSensesActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2d70
	float GetHeightenedSensesViewLength(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetHeightenedSensesViewLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2910
	float GetCurrentHeightenedSensesViewLength(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetCurrentHeightenedSensesViewLength // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x184a280
	float GetCooldownTimeLeft(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetCooldownTimeLeft // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f28e0
	void DeactivateHeightenedSenseObjects(); // Function Tiger.TigerUtilityPowerHSenseComponent.DeactivateHeightenedSenseObjects // (Final|Native|Public|BlueprintCallable) // @ game+0x14f2790
	void Client_DeactivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.Client_DeactivateHeightenedSenses // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13bca80
};

// Class Tiger.TigerUtilityPowerLureComponent
// Size: 0x120 (Inherited: 0xe8)
struct UTigerUtilityPowerLureComponent : UTigerUtilityPowerBaseComponent {
	float TimeToLure; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UAnimMontage* LureAnimation; // 0xf0(0x08)
	struct USoundBase* LureWhistleSound; // 0xf8(0x08)
	float ClientFeedbackUpdateTickInterval; // 0x100(0x04)
	char pad_104[0x1c]; // 0x104(0x1c)

	void Server_StopLureAttempt(); // Function Tiger.TigerUtilityPowerLureComponent.Server_StopLureAttempt // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f33e0
	void Server_StartLureAttempt(struct ATigerNPC* TargetNpc); // Function Tiger.TigerUtilityPowerLureComponent.Server_StartLureAttempt // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f3320
	void OnSuccesfulLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnSuccesfulLure // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStoppedChannelingLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnStoppedChannelingLure // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnStartedChannelingLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnStartedChannelingLure // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnLureEffectEnded(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnLureEffectEnded // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_StoppedLureAttempt(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_StoppedLureAttempt // (Net|Native|Event|NetMulticast|Public) // @ game+0x14f2e60
	void Multicast_StartedLureAttempt(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_StartedLureAttempt // (Net|Native|Event|NetMulticast|Public) // @ game+0x13b6420
	void Multicast_Lure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_Lure // (Net|Native|Event|NetMulticast|Public) // @ game+0x13b7540
	void Client_SyncSuccessfulLureTarget(struct ATigerNPC* TargetNpc); // Function Tiger.TigerUtilityPowerLureComponent.Client_SyncSuccessfulLureTarget // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14f2700
	void Client_StopLureAttempt(); // Function Tiger.TigerUtilityPowerLureComponent.Client_StopLureAttempt // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14f26e0
};

// Class Tiger.TigerUtilityPowerRoar
// Size: 0x138 (Inherited: 0xe8)
struct UTigerUtilityPowerRoar : UTigerUtilityPowerBaseComponent {
	float DurationAIAreAffected; // 0xe8(0x04)
	float ConeEffectLength; // 0xec(0x04)
	float SphereEffectRadius; // 0xf0(0x04)
	float ConeWidthAngle; // 0xf4(0x04)
	float Cooldown; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UAnimMontage* RoarStaggerAnimation; // 0x100(0x08)
	struct UAnimMontage* RoarAnimation; // 0x108(0x08)
	struct UAkAudioEvent* RoarSoundEvent; // 0x110(0x08)
	char pad_118[0x20]; // 0x118(0x20)

	void Server_AttemptRoar(); // Function Tiger.TigerUtilityPowerRoar.Server_AttemptRoar // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14f3280
	void Multicast_Roar(); // Function Tiger.TigerUtilityPowerRoar.Multicast_Roar // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14f2e40
	void Client_ConfirmRoarUsage(); // Function Tiger.TigerUtilityPowerRoar.Client_ConfirmRoarUsage // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14f26c0
};

// Class Tiger.TigerVehicle
// Size: 0x290 (Inherited: 0x280)
struct ATigerVehicle : ATigerActivatedObject {
	struct ATigerLootableVehicleDoorSpawner* LootableDoorSpawner; // 0x280(0x08)
	struct ATigerLootContainer* LootContainer; // 0x288(0x08)

	void ChangeLootableDoorActorClass(struct ATigerLootableVehicleDoorSpawner* InClass); // Function Tiger.TigerVehicle.ChangeLootableDoorActorClass // (Final|Native|Protected|BlueprintCallable) // @ game+0x14f2630
};

// Class Tiger.TigerVendorStoreCategory
// Size: 0x50 (Inherited: 0x28)
struct UTigerVendorStoreCategory : UObject {
	struct TArray<struct FTigerVendorStoreCategoryItem> CachedItems; // 0x28(0x10)
	struct TArray<struct FTigerPersistentItemDefinition> ItemDefinitions; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)

	struct TArray<struct FTigerVendorStoreCategoryItem> GetItemsWithClass(struct UTigerInventoryItemBase* Class); // Function Tiger.TigerVendorStoreCategory.GetItemsWithClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2980
	struct TArray<struct FTigerVendorStoreCategoryItem> GetItems(); // Function Tiger.TigerVendorStoreCategory.GetItems // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f2940
	enum class ETigerPersistentStoreCategory GetCategoryType(); // Function Tiger.TigerVendorStoreCategory.GetCategoryType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f28c0
};

// Class Tiger.TigerVendorComponent
// Size: 0x130 (Inherited: 0xb0)
struct UTigerVendorComponent : UActorComponent {
	struct TArray<struct UTigerVendorStoreCategory*> DynamicCategories; // 0xb0(0x10)
	char pad_C0[0x70]; // 0xc0(0x70)

	void UnsubscribeToStoreEntryConfigEvents(enum class ETigerMetaStoreCategoryType InStoreEntryCategory, struct FDelegate& InEventDelegate); // Function Tiger.TigerVendorComponent.UnsubscribeToStoreEntryConfigEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f3680
	void TigerPurchaseItemDelegate__DelegateSignature(bool bInSuccess, struct FString InErrorString, struct FTigerItemId& InItemId); // DelegateFunction Tiger.TigerVendorComponent.TigerPurchaseItemDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x184a280
	void SubscribeToStoreEntryConfigEvents(enum class ETigerMetaStoreCategoryType InStoreEntryCategory, struct FDelegate& InEventDelegate); // Function Tiger.TigerVendorComponent.SubscribeToStoreEntryConfigEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f3570
	void SaveOutfitSetup(struct FTigerPersistentOutfitSetup& OutfitSetup); // Function Tiger.TigerVendorComponent.SaveOutfitSetup // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14f31b0
	struct FTigerItemPrice GetSpecialItemCost(struct FTigerItemId& InItemId); // Function Tiger.TigerVendorComponent.GetSpecialItemCost // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2af0
	struct UTigerVendorStoreCategory* GetCategory(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerVendorComponent.GetCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2830
};

// Class Tiger.TigerVendorUI
// Size: 0x2b8 (Inherited: 0x298)
struct UTigerVendorUI : UTigerMenuWidget {
	struct TWeakObjectPtr<struct ATigerNPC> VendorNPC; // 0x298(0x08)
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x2a0(0x08)
	struct UTigerSharedVendorUI* SharedVendorUI; // 0x2a8(0x08)
	bool bHideMouseCusorAtDescruction; // 0x2b0(0x01)
	char pad_2B1[0x1]; // 0x2b1(0x01)
	bool bUseTransitions; // 0x2b2(0x01)
	char pad_2B3[0x5]; // 0x2b3(0x05)

	bool ShouldUseTransitions(); // Function Tiger.TigerVendorUI.ShouldUseTransitions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f3550
	void OnMenuBuy(); // Function Tiger.TigerVendorUI.OnMenuBuy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x184a280
	void OnCloseVendorWidget(bool& bShouldRemoveWidget); // Function Tiger.TigerVendorUI.OnCloseVendorWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnAddToScreen(); // Function Tiger.TigerVendorUI.OnAddToScreen // (Event|Public|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerVideoCameraActorOffset
// Size: 0x810 (Inherited: 0x7b0)
struct ATigerVideoCameraActorOffset : ACameraActor {
	char pad_7B0[0x50]; // 0x7b0(0x50)
	struct ATigerPlayer* PlayerActor; // 0x800(0x08)
	char pad_808[0x8]; // 0x808(0x08)
};

// Class Tiger.TigerVideoCameraController
// Size: 0x680 (Inherited: 0x680)
struct ATigerVideoCameraController : ADebugCameraController {
};

// Class Tiger.TigerVisitLocationTriggerVolume
// Size: 0x290 (Inherited: 0x260)
struct ATigerVisitLocationTriggerVolume : ATriggerVolume {
	char pad_260[0x30]; // 0x260(0x30)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerVisitLocationTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x14f2fc0
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerVisitLocationTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x14f2ef0
	void OnAreaLeft__DelegateSignature(); // DelegateFunction Tiger.TigerVisitLocationTriggerVolume.OnAreaLeft__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void OnAreaEntered__DelegateSignature(struct ATigerPlayerController* InPlayerController); // DelegateFunction Tiger.TigerVisitLocationTriggerVolume.OnAreaEntered__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerVisitLocationTriggerVolume.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x14f2ba0
};

// Class Tiger.TigerVisualLoggerDummyFilter
// Size: 0x28 (Inherited: 0x28)
struct UTigerVisualLoggerDummyFilter : UObject {
};

// Class Tiger.TigerVoipChatIndicatorWidget
// Size: 0x290 (Inherited: 0x260)
struct UTigerVoipChatIndicatorWidget : UUserWidget {
	char pad_260[0x30]; // 0x260(0x30)

	enum class ETalkingVisiblityState UpdateVoiceChatState2(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerVoipChatIndicatorWidget.UpdateVoiceChatState2 // (Final|Native|Public|BlueprintCallable) // @ game+0x14f37b0
	void TalkingVisibilityStateChanged(enum class ETalkingVisiblityState InTalkingVisibilityState); // Function Tiger.TigerVoipChatIndicatorWidget.TalkingVisibilityStateChanged // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
	void InitializeChatStateWithVoipID(struct FTigerPersistentVoipID& InPersistentVoipId); // Function Tiger.TigerVoipChatIndicatorWidget.InitializeChatStateWithVoipID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f2cc0
	void InitializeChatStateWithTigerPlayerState(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerVoipChatIndicatorWidget.InitializeChatStateWithTigerPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x14f2c30
};

// Class Tiger.TigerVoSettings
// Size: 0xb0 (Inherited: 0x38)
struct UTigerVoSettings : USharkLocalDeveloperSettings {
	struct TSoftObjectPtr<UAkAudioEvent> AudioEvent; // 0x38(0x28)
	struct TMap<struct FName, struct FTigerVoCategoryData> CategoryData; // 0x60(0x50)
};

// Class Tiger.TigerVoSubsystem
// Size: 0xe8 (Inherited: 0x30)
struct UTigerVoSubsystem : UGameInstanceSubsystem {
	struct UAkAudioEvent* AudioEvent; // 0x30(0x08)
	char pad_38[0xa0]; // 0x38(0xa0)
	struct TArray<struct FTigerVoEvent> VoEvents; // 0xd8(0x10)

	float AddVoEvent(struct FTigerVoEvent& InVoEvent); // Function Tiger.TigerVoSubsystem.AddVoEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f2580
};

// Class Tiger.TigerWardrobeUI
// Size: 0x4e0 (Inherited: 0x3c0)
struct UTigerWardrobeUI : UTigerSceneBackgroundUI {
	struct UTigerVendorComponent* VendorComponent; // 0x3c0(0x08)
	struct TArray<struct UTigerVendorStoreCategory*> InventoryCategories; // 0x3c8(0x10)
	struct UTigerVendorStoreCategory* CurrentCategory; // 0x3d8(0x08)
	char pad_3E0[0x100]; // 0x3e0(0x100)

	void SetZoomStatus(struct ATigerBattlepassRewardPreview* InPreviewItem, bool bIsHeadItem); // Function Tiger.TigerWardrobeUI.SetZoomStatus // (Final|Native|Protected|BlueprintCallable) // @ game+0x14f3480
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerWardrobeUI.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x14f3120
	void OnPlayerInventoryUpdated(); // Function Tiger.TigerWardrobeUI.OnPlayerInventoryUpdated // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnPlayerInventoryChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerWardrobeUI.OnPlayerInventoryChanged // (Final|Native|Protected) // @ game+0x14f3090
	void OnCategoryItemsReceived(enum class ETigerPersistentStoreCategory CategoryType, struct TArray<struct FTigerVendorStoreCategoryItem>& CategoryItems); // Function Tiger.TigerWardrobeUI.OnCategoryItemsReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnBodyTypeChanged(enum class ETigerGender InBodyType); // Function Tiger.TigerWardrobeUI.OnBodyTypeChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void FetchCategoryItems(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerWardrobeUI.FetchCategoryItems // (Final|Native|Public|BlueprintCallable) // @ game+0x14f27b0
};

// Class Tiger.TigerThrowingAxeConfig
// Size: 0x1e0 (Inherited: 0x170)
struct UTigerThrowingAxeConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* StartAimingPoseMontage; // 0x170(0x08)
	struct UAnimMontage* ReadyAxeMontage; // 0x178(0x08)
	bool bDebugInfiniteAxes; // 0x180(0x01)
	bool bDebugDrawPredictedProjectilePath; // 0x181(0x01)
	char pad_182[0x2]; // 0x182(0x02)
	struct FName CastAnimationName; // 0x184(0x08)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct AActor* ThrowingAxeProjectile; // 0x190(0x08)
	struct UTigerItemAsset* AxeItem; // 0x198(0x08)
	struct FName AxeSpawnSocket; // 0x1a0(0x08)
	float ForwardOffset; // 0x1a8(0x04)
	struct FRotator AxeSpawnRotationOffset; // 0x1ac(0x0c)
	float ProjectileDamage; // 0x1b8(0x04)
	float ProjectileStartSpeed; // 0x1bc(0x04)
	float ProjectileMaxSpeed; // 0x1c0(0x04)
	float ProjectileMassInKg; // 0x1c4(0x04)
	struct FRotator ProjectileRotationPerSecond; // 0x1c8(0x0c)
	float ProjectileGravityScale; // 0x1d4(0x04)
	float MovementMultiplierAimState; // 0x1d8(0x04)
	char pad_1DC[0x4]; // 0x1dc(0x04)
};

// Class Tiger.TigerWeaponAbilityAxeThrow
// Size: 0x108 (Inherited: 0xf0)
struct UTigerWeaponAbilityAxeThrow : UTigerDisciplineAnimTriggered {
	struct UTigerThrowingAxeConfig* Config; // 0xf0(0x08)
	struct ATigerPlayer* Player; // 0xf8(0x08)
	char pad_100[0x8]; // 0x100(0x08)

	void ThrowMontageEnded(struct UAnimMontage* Montage, bool bWasInterrupted); // Function Tiger.TigerWeaponAbilityAxeThrow.ThrowMontageEnded // (Final|Native|Private) // @ game+0x14f7c20
	void Multicast_RevertWeaponVisibilityOnSimulatedProxy(); // Function Tiger.TigerWeaponAbilityAxeThrow.Multicast_RevertWeaponVisibilityOnSimulatedProxy // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14f7450
};

// Class Tiger.TigerDashConfig
// Size: 0x1d0 (Inherited: 0x170)
struct UTigerDashConfig : UTigerDisciplineAnimTriggeredConfig {
	struct FVector HitBoxExtents; // 0x170(0x0c)
	struct FVector HitBoxOffset; // 0x17c(0x0c)
	float DashDistance; // 0x188(0x04)
	float DashDuration; // 0x18c(0x04)
	float Damage; // 0x190(0x04)
	float DashExitVelocity; // 0x194(0x04)
	float SurfaceStopThreshold; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UAnimMontage* RecoveryMontage; // 0x1a0(0x08)
	struct UAnimMontage* RecoveryMontageInAir; // 0x1a8(0x08)
	float RecoveryCancelledBlendOut; // 0x1b0(0x04)
	float RecoveryCancelledBlendOutInAir; // 0x1b4(0x04)
	struct UParticleSystem* DashPSTemplate; // 0x1b8(0x08)
	struct UAnimMontage* AirDashMontage; // 0x1c0(0x08)
	float PlayAirAnimAngleToSurfaceThreshold; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
};

// Class Tiger.TigerWeaponAbilityDash
// Size: 0xc8 (Inherited: 0x78)
struct UTigerWeaponAbilityDash : UTigerDisciplineBase {
	struct UTigerDashConfig* AbilityConfig; // 0x78(0x08)
	struct FVector CastDirection; // 0x80(0x0c)
	struct FVector CastLocation; // 0x8c(0x0c)
	char pad_98[0x30]; // 0x98(0x30)

	void RecoveryMontageEnded(struct UAnimMontage* Montage, bool bWasInterrupted); // Function Tiger.TigerWeaponAbilityDash.RecoveryMontageEnded // (Final|Native|Private) // @ game+0x14f78d0
	void OnTerrainInterrupt(struct AActor* TerrainActor, struct UPrimitiveComponent* HitComponent, struct FHitResult& HitResult); // Function Tiger.TigerWeaponAbilityDash.OnTerrainInterrupt // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnTerrainHitResult(struct AActor* InTerrainActor, struct UPrimitiveComponent* InHitComponent, struct FHitResult& InHitResult); // Function Tiger.TigerWeaponAbilityDash.OnTerrainHitResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void OnTerrainHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerWeaponAbilityDash.OnTerrainHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x14f76f0
	void OnOwnerMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function Tiger.TigerWeaponAbilityDash.OnOwnerMovementUpdated // (Final|Native|Private|HasDefaults) // @ game+0x14f75c0
	void OnForcedMoveResult(enum class ETigerForcedMoveResult ForcedMoveResult); // Function Tiger.TigerWeaponAbilityDash.OnForcedMoveResult // (Final|Native|Private) // @ game+0x14f7540
	void OnCharacterHit(struct ATigerCharacter* AHitTigerCharacter); // Function Tiger.TigerWeaponAbilityDash.OnCharacterHit // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void Multicast_SpawnOnHitParticle(struct ATigerCharacter* TigerCharacterHit); // Function Tiger.TigerWeaponAbilityDash.Multicast_SpawnOnHitParticle // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14f7470
	void Multicast_PlayRecovery(); // Function Tiger.TigerWeaponAbilityDash.Multicast_PlayRecovery // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14f7230
};

// Class Tiger.TigerHookConfig
// Size: 0x1e8 (Inherited: 0x160)
struct UTigerHookConfig : UTigerActiveDisciplineConfig {
	float MaxThrowDistance; // 0x160(0x04)
	float StopPullDistance; // 0x164(0x04)
	float TimeUntilReachMaxThrowDistance; // 0x168(0x04)
	float TimeUntilReturn; // 0x16c(0x04)
	float FastReelTime; // 0x170(0x04)
	float RotateTime; // 0x174(0x04)
	float TimeBeforeReel; // 0x178(0x04)
	float TimeUntilCutoffVelocity; // 0x17c(0x04)
	float TimeLeftWhenToAllowHookingPlayerActions; // 0x180(0x04)
	float HookDamage; // 0x184(0x04)
	float StunDurationPostHook; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct ATigerHook* HookType; // 0x190(0x08)
	struct UTigerHookedBuff* HookedBuffType; // 0x198(0x08)
	struct UTigerHookingBuff* HookingBuffType; // 0x1a0(0x08)
	struct UAnimMontage* ThrowAnimation; // 0x1a8(0x08)
	struct UAnimMontage* ReelAnimation; // 0x1b0(0x08)
	struct UAnimMontage* AirThrowAnimation; // 0x1b8(0x08)
	struct UAnimMontage* AirReelAnimation; // 0x1c0(0x08)
	struct UAnimMontage* HookedReactionAnimation; // 0x1c8(0x08)
	struct UAnimMontage* HookedReelAnimation; // 0x1d0(0x08)
	struct UAnimMontage* HookedPostReelAnimation; // 0x1d8(0x08)
	bool bUseForcedMove; // 0x1e0(0x01)
	char pad_1E1[0x7]; // 0x1e1(0x07)
};

// Class Tiger.TigerWeaponAbilityHook
// Size: 0x88 (Inherited: 0x78)
struct UTigerWeaponAbilityHook : UTigerDisciplineBase {
	struct UTigerHookConfig* Config; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)

	void Server_ThrowHook(struct FVector SpawnLoc, struct FVector TargetLoc); // Function Tiger.TigerWeaponAbilityHook.Server_ThrowHook // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x14f7b30
};

// Class Tiger.TigerReflectConfig
// Size: 0x1b0 (Inherited: 0x160)
struct UTigerReflectConfig : UTigerActiveDisciplineConfig {
	enum class ETigerReflectBehaviour ReflectBehaviors[0x5]; // 0x160(0x05)
	char pad_165[0x3]; // 0x165(0x03)
	float DamageLetThroughModifier; // 0x168(0x04)
	float ReflectSpread; // 0x16c(0x04)
	float MaxDuration; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct AActor* BulletReflector; // 0x178(0x08)
	float ReflectorRadius; // 0x180(0x04)
	float ReflectorHalfHeight; // 0x184(0x04)
	float ReflectorCoverageRange; // 0x188(0x04)
	float PoseSwapDelay; // 0x18c(0x04)
	struct TArray<struct FName> ReflectMontageNames; // 0x190(0x10)
	struct FName ReflectEndMontageName; // 0x1a0(0x08)
	bool bDrawReflectedBulletLines; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
};

// Class Tiger.TigerWeaponAbilityReflect
// Size: 0xd8 (Inherited: 0x78)
struct UTigerWeaponAbilityReflect : UTigerDisciplineBase {
	char pad_78[0x10]; // 0x78(0x10)
	struct UTigerReflectConfig* Config; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	struct AActor* ReflectorActor; // 0x98(0x08)
	char pad_A0[0x38]; // 0xa0(0x38)

	void ReflectProjectile(struct AActor* InReflector, struct AActor* InOverlappedActor, struct FHitResult& InHit); // Function Tiger.TigerWeaponAbilityReflect.ReflectProjectile // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f79a0
	void Multicast_StopReflecting(); // Function Tiger.TigerWeaponAbilityReflect.Multicast_StopReflecting // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x14f7520
	void Multicast_StopDiscipline(); // Function Tiger.TigerWeaponAbilityReflect.Multicast_StopDiscipline // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x14f7500
	void Multicast_ReflectProjectile(struct UTigerRangedWeapon* InRangedWeapon, struct AActor* InOverlappedActor, enum class ETigerReflectBehaviour InBehaviour, struct FVector InProjectileSpawnLocation, struct FRotator InProjectileSpawnDirection, int32_t aFireSettingsIndex); // Function Tiger.TigerWeaponAbilityReflect.Multicast_ReflectProjectile // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x14f7250
};

// Class Tiger.TigerWeaponAbilityReflectActor
// Size: 0x228 (Inherited: 0x228)
struct ATigerWeaponAbilityReflectActor : AActor {

	bool CanBeReflected(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerWeaponAbilityReflectActor.CanBeReflected // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x14f6f60
};

// Class Tiger.TigerWeaponAmmoWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerWeaponAmmoWidget : UTigerWidget {
	char pad_280[0x60]; // 0x280(0x60)

	void WeaponEquipped(struct UTigerItemAsset* InWeaponAsset, int32_t InItemCount, struct ATigerLootBox* InLootBox, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerWeaponAmmoWidget.WeaponEquipped // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void SelectedSlotUpdated(struct UTigerRangedWeaponComponent* RangedWeaponComponent, struct UTigerInventoryComponent* Inventory, enum class ETigerWeaponSlot NewSlot); // Function Tiger.TigerWeaponAmmoWidget.SelectedSlotUpdated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void ArtifactUpdated(struct UTigerItemAsset* InArtifactAsset); // Function Tiger.TigerWeaponAmmoWidget.ArtifactUpdated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void AmmoUpdated(int32_t AmmoInMagazine, int32_t AmmoInInventory); // Function Tiger.TigerWeaponAmmoWidget.AmmoUpdated // (Event|Protected|BlueprintEvent) // @ game+0x184a280
};

// Class Tiger.TigerWeaponAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerWeaponAnimInstance : UAnimInstance {
	bool bShowWeaponTrails; // 0x2b8(0x01)
};

// Class Tiger.TigerRangedWeapon
// Size: 0x200 (Inherited: 0xb0)
struct UTigerRangedWeapon : UTigerWeapon {
	struct FName WeaponName; // 0xb0(0x08)
	enum class ETigerWeaponType WeaponType; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	struct FName CharacterReloadAnimationName; // 0xbc(0x08)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct TArray<struct FName> FireAnimations; // 0xc8(0x10)
	float TimeAfterFireBeforePrimingIsAllowed; // 0xd8(0x04)
	struct FName CharacterPrimingAnimation; // 0xdc(0x08)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UAnimMontage* WeaponPrimingAnimation; // 0xe8(0x08)
	struct FName RecoilNoiseBlendspace; // 0xf0(0x08)
	struct UAnimMontage* GunReload; // 0xf8(0x08)
	struct UAnimMontage* GunFireAnimation; // 0x100(0x08)
	struct UCurveFloat* VerticalRecoilCurve; // 0x108(0x08)
	struct UCurveFloat* HorizontalRecoilCurve; // 0x110(0x08)
	struct UCurveFloat* VerticalRecoilMultiplierCurveOverRecoil; // 0x118(0x08)
	struct UCurveFloat* HorizontalRecoilMultiplierCurveOverRecoil; // 0x120(0x08)
	struct ATigerProjectile* ProjectileClass; // 0x128(0x08)
	struct UAkAudioEvent* StartAimingSound; // 0x130(0x08)
	struct UAkAudioEvent* StopAimingSound; // 0x138(0x08)
	struct UAkAudioEvent* HitWallSound; // 0x140(0x08)
	struct UAkAudioEvent* FireSound; // 0x148(0x08)
	struct UAkAudioEvent* BurstFireSound; // 0x150(0x08)
	float LoopFireAfterFireRateMultiplier; // 0x158(0x04)
	bool bShouldPostLoop; // 0x15c(0x01)
	bool bIsMinigun; // 0x15d(0x01)
	char pad_15E[0x2]; // 0x15e(0x02)
	struct UAkAudioEvent* LowAmmoSound; // 0x160(0x08)
	struct UAkAudioEvent* LastShotSound; // 0x168(0x08)
	struct UAkAudioEvent* OutOfAmmoSound; // 0x170(0x08)
	struct UAkAudioEvent* CoolDownAudioEvent; // 0x178(0x08)
	int32_t AmountOfProjectilesFiredBeforeCooldown; // 0x180(0x04)
	float LowAmmoThresholdPercent; // 0x184(0x04)
	struct UMatineeCameraShake* CameraShake; // 0x188(0x08)
	struct UMatineeCameraShake* CameraShakeAimed; // 0x190(0x08)
	struct UForceFeedbackEffect* FireForceFeedback; // 0x198(0x08)
	int32_t ShotsPerTrail; // 0x1a0(0x04)
	int32_t AimedFov; // 0x1a4(0x04)
	bool bShotsArePiercing; // 0x1a8(0x01)
	enum class ETigerWeaponAmmoType AmmoType; // 0x1a9(0x01)
	char pad_1AA[0x6]; // 0x1aa(0x06)
	struct UCurveFloat* DamageDropOffCurve; // 0x1b0(0x08)
	struct UTigerCameraPreset* CameraPreset; // 0x1b8(0x08)
	struct UTigerWeaponCrosshairWidget* CrosshairsByFireMode[0x3]; // 0x1c0(0x18)
	struct UTigerWeaponCrosshairWidget* AimingCrossHair; // 0x1d8(0x08)
	struct TArray<struct FName> SecondaryFireAnimations; // 0x1e0(0x10)
	struct FName MuzzleSocket; // 0x1f0(0x08)
	struct AActor* TracerActor; // 0x1f8(0x08)

	void PlayLoopingAkEvents(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.PlayLoopingAkEvents // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnHitAuthority(struct ATigerCharacter* Instigator, struct ATigerCharacter* Target); // Function Tiger.TigerRangedWeapon.OnHitAuthority // (Event|Public|BlueprintEvent|Const) // @ game+0x184a280
	void OnEndFireAudio(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.OnEndFireAudio // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void OnBeginFireAudio(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.OnBeginFireAudio // (Event|Public|BlueprintEvent) // @ game+0x184a280
	struct FVector CalculateBulletDirection(struct FVector InAimDirection, struct FTigerRangedRandomState& InOutRandomState, int32_t InBulletIndex, struct UTigerRangedWeaponComponent* InRangedWeaponComponent); // Function Tiger.TigerRangedWeapon.CalculateBulletDirection // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x14f6db0
};

// Class Tiger.TigerWeatherController
// Size: 0x228 (Inherited: 0x228)
struct ATigerWeatherController : AActor {
};

// Class Tiger.TigerWeatherScenarioData
// Size: 0x40 (Inherited: 0x30)
struct UTigerWeatherScenarioData : UDataAsset {
	struct FName DebugName; // 0x30(0x08)
	bool bOverrideServerReplicationCullDistance; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float CullDistance; // 0x3c(0x04)
};

// Class Tiger.TigerWeatherSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerWeatherSettings : USharkLocalDeveloperSettings {
	struct TMap<struct FName, struct UTigerWeatherScenarioData*> WeatherScenarioAliases; // 0x38(0x50)
	struct TMap<struct UTigerWeatherScenarioData*, float> WeatherScenarioProbabilityRatios; // 0x88(0x50)
};

// Class Tiger.TigerWheelInterfaceWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerWheelInterfaceWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnAlternateActionTriggered; // 0x280(0x10)
	struct FMulticastInlineDelegate OnPrimaryActionTriggered; // 0x290(0x10)
	bool bCursorCanBeOutside; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	int32_t NumItems; // 0x2a4(0x04)
	int32_t MinimumSupportedItems; // 0x2a8(0x04)
	int32_t MaximumSupportedItems; // 0x2ac(0x04)
	float MiddleRadius; // 0x2b0(0x04)
	float OutsideRadius; // 0x2b4(0x04)
	float GamepadDeadZone; // 0x2b8(0x04)
	float DeselectionGraceTime; // 0x2bc(0x04)
	char pad_2C0[0x4]; // 0x2c0(0x04)
	int32_t HoveredIndex; // 0x2c4(0x04)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UpdateHoverEffect(int32_t Index); // Function Tiger.TigerWheelInterfaceWidget.UpdateHoverEffect // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void TigerOnWheelPrimaryAction__DelegateSignature(int32_t Index); // DelegateFunction Tiger.TigerWheelInterfaceWidget.TigerOnWheelPrimaryAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void TigerOnWheelAlternateAction__DelegateSignature(int32_t Index); // DelegateFunction Tiger.TigerWheelInterfaceWidget.TigerOnWheelAlternateAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void SetWheelUsable(bool bNewUsable); // Function Tiger.TigerWheelInterfaceWidget.SetWheelUsable // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void SetItem(int32_t Index, struct UTexture2D* Icon, struct FText& Label, int32_t Count); // Function Tiger.TigerWheelInterfaceWidget.SetItem // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x184a280
	void SetIsItemSelected(int32_t Index, bool bIsSelected); // Function Tiger.TigerWheelInterfaceWidget.SetIsItemSelected // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	void ResetItems(); // Function Tiger.TigerWheelInterfaceWidget.ResetItems // (Event|Public|BlueprintEvent) // @ game+0x184a280
	void PlayOpenAnimation(); // Function Tiger.TigerWheelInterfaceWidget.PlayOpenAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x1435c80
	void PlayCloseAnimation(); // Function Tiger.TigerWheelInterfaceWidget.PlayCloseAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x13deb70
	void OnNumberOfItemsChanged(int32_t InNewNumberOfItems); // Function Tiger.TigerWheelInterfaceWidget.OnNumberOfItemsChanged // (Event|Protected|BlueprintEvent) // @ game+0x184a280
	bool IsWheelOpen(); // Function Tiger.TigerWheelInterfaceWidget.IsWheelOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb7e0
};

// Class Tiger.TigerTooltipWidget
// Size: 0x288 (Inherited: 0x280)
struct UTigerTooltipWidget : UTigerWidget {
	struct UTigerWidget* OwningWidget; // 0x280(0x08)
};

// Class Tiger.TigerWorldCompositionCellComponent
// Size: 0x230 (Inherited: 0x200)
struct UTigerWorldCompositionCellComponent : USceneComponent {
	struct UShapeComponent* ShapeComponent; // 0x1f8(0x08)
	struct TArray<struct UTigerWorldCompositionCellComponent*> SubCellComponents; // 0x200(0x10)
	struct ATigerWorldCompositionGrid* WorldGrid; // 0x210(0x08)
	struct FName StreamLevelPath; // 0x218(0x08)
	char pad_228[0x8]; // 0x228(0x08)

	void HandleOnLevelUnloaded(); // Function Tiger.TigerWorldCompositionCellComponent.HandleOnLevelUnloaded // (Final|Native|Private) // @ game+0x14fb740
	void HandleOnLevelLoaded(); // Function Tiger.TigerWorldCompositionCellComponent.HandleOnLevelLoaded // (Final|Native|Private) // @ game+0x14fb720
};

// Class Tiger.TigerWorldCompositionGridCellComponent
// Size: 0x230 (Inherited: 0x230)
struct UTigerWorldCompositionGridCellComponent : UTigerWorldCompositionCellComponent {
};

// Class Tiger.TigerWorldCompositionHexGridCellComponent
// Size: 0x240 (Inherited: 0x230)
struct UTigerWorldCompositionHexGridCellComponent : UTigerWorldCompositionCellComponent {
	float HexCellRadius; // 0x230(0x04)
	char pad_234[0xc]; // 0x234(0x0c)
};

// Class Tiger.TigerWorldCompositionGrid
// Size: 0x320 (Inherited: 0x228)
struct ATigerWorldCompositionGrid : AActor {
	struct FMulticastInlineDelegate OnCellStartedLoadingEvent; // 0x228(0x10)
	struct FMulticastInlineDelegate OnCellFinishedLoadingEvent; // 0x238(0x10)
	struct FMulticastInlineDelegate OnCellStartedUnloadingEvent; // 0x248(0x10)
	struct FMulticastInlineDelegate OnCellFinishedUnloadingEvent; // 0x258(0x10)
	enum class ETigerWorldCompositionGridLayout Layout; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	struct FVector GridExtent; // 0x26c(0x0c)
	int32_t LevelDepth; // 0x278(0x04)
	float CellTriggerSizeBias; // 0x27c(0x04)
	struct TArray<struct TSoftObjectPtr<UWorld>> BlackListedLevels; // 0x280(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> AdditionalLevels; // 0x290(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> AlwaysLoadedLevels; // 0x2a0(0x10)
	struct UTigerWorldCompositionCellComponent* RootCellComponent; // 0x2b0(0x08)
	struct TArray<struct UTigerWorldCompositionCellComponent*> LoadingCells; // 0x2b8(0x10)
	struct TArray<struct UTigerWorldCompositionCellComponent*> LoadedCells; // 0x2c8(0x10)
	struct TArray<struct UTigerWorldCompositionCellComponent*> UnloadingCells; // 0x2d8(0x10)
	struct TArray<struct FTigerRecentlyStreamedCellEntries> RecentlyLoadedCells; // 0x2e8(0x10)
	struct TArray<struct FTigerRecentlyStreamedCellEntries> RecentlyUnloadedCells; // 0x2f8(0x10)
	struct TArray<struct FTigerStreamingPlayer> StreamingPlayers; // 0x308(0x10)
	char pad_318[0x8]; // 0x318(0x08)

	void PrespawnStreamingFinished__DelegateSignature(); // DelegateFunction Tiger.TigerWorldCompositionGrid.PrespawnStreamingFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void HandleOnCellStartedUnloadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellStartedUnloadingEvent // (Final|Native|Private) // @ game+0x14fb690
	void HandleOnCellStartedLoadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellStartedLoadingEvent // (Final|Native|Private) // @ game+0x14fb600
	void HandleOnCellFinishedUnloadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellFinishedUnloadingEvent // (Final|Native|Private) // @ game+0x14fb570
	void HandleOnCellFinishedLoadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellFinishedLoadingEvent // (Final|Native|Private) // @ game+0x14fb4e0
	void CellStartedUnloading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellStartedUnloading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void CellStartedLoading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellStartedLoading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void CellFinishedUnloading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellFinishedUnloading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
	void CellFinishedLoading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellFinishedLoading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x184a280
};

// Class Tiger.TigerWorldCompositionSettings
// Size: 0x248 (Inherited: 0x38)
struct UTigerWorldCompositionSettings : UDeveloperSettings {
	struct FDirectoryPath StreamedLevelDirectory; // 0x38(0x10)
	enum class ETigerWorldCompositionProxyMode ProxyGenerationMode; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	int32_t ActorSortingCellSizeIncrementCount; // 0x4c(0x04)
	float ActorSortingCellSizeIncrementAmount; // 0x50(0x04)
	struct FMeshMergingSettings ProxyMeshMergeSettings; // 0x54(0xa0)
	bool bDoSecondProxyGenStage; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct FMeshProxySettings ProxySettings; // 0xf8(0xa8)
	struct FMeshBuildSettings LodBuildSettings; // 0x1a0(0x30)
	struct TArray<struct FPerPlatformFloat> LodScreenSizes; // 0x1d0(0x10)
	bool bEnableLodDitheringOnProxyMeshes; // 0x1e0(0x01)
	char pad_1E1[0x3]; // 0x1e1(0x03)
	float ProxySizeRequirement; // 0x1e4(0x04)
	bool bForceLoadAllCellLevels; // 0x1e8(0x01)
	bool bBlockOnLoad; // 0x1e9(0x01)
	bool bEnablePreSpawnLoading; // 0x1ea(0x01)
	bool bTriggerGarbageCollectionOnUnload; // 0x1eb(0x01)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	struct TArray<struct TSoftClassPtr<UObject>> ProxyTypeBlacklistSoft; // 0x1f0(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> StreamingTypeBlacklistSoft; // 0x200(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> LevelClusterBlacklistSoft; // 0x210(0x10)
	struct TSoftObjectPtr<UMaterialInterface> DebugVisualizationMaterialNotInFilter; // 0x220(0x28)
};

// Class Tiger.TigerConsiderForProxyUserData
// Size: 0x28 (Inherited: 0x28)
struct UTigerConsiderForProxyUserData : UAssetUserData {
};

// Class Tiger.TigerNeverConsiderForProxyUserData
// Size: 0x28 (Inherited: 0x28)
struct UTigerNeverConsiderForProxyUserData : UAssetUserData {
};

// Class Tiger.TigerWorldCompositionLevel
// Size: 0x150 (Inherited: 0x150)
struct UTigerWorldCompositionLevel : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148(0x01)
	char bInitiallyVisible : 1; // 0x148(0x01)

	struct UTigerWorldCompositionLevel* LoadLevelInstanceBySoftObjectPtr(struct UObject* WorldContextObject, struct TSoftObjectPtr<UWorld> Level, struct FVector Location, struct FRotator Rotation, bool& bOutSuccess); // Function Tiger.TigerWorldCompositionLevel.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14fba10
	struct UTigerWorldCompositionLevel* LoadLevelInstance(struct UObject* WorldContextObject, struct FString LevelName, struct FVector Location, struct FRotator Rotation, bool& bOutSuccess); // Function Tiger.TigerWorldCompositionLevel.LoadLevelInstance // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14fb800
};

// Class Tiger.TigerWorldMarkerComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerWorldMarkerComponent : UActorComponent {
	struct ATigerWorldMarker* WorldMarkerActorType; // 0xb0(0x08)
	struct ATigerWorldMarker* WorldMarkerChild; // 0xb8(0x08)
};

// Class Tiger.TigerWorldSettings
// Size: 0x3c0 (Inherited: 0x3a8)
struct ATigerWorldSettings : AWorldSettings {
	bool bOverrideServerReplicationCullDistance; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	float CullDistance; // 0x3ac(0x04)
	struct UTigerProjectilePoolManager* ProjectilePoolManager; // 0x3b0(0x08)
	struct UProjectilePoolReserveCountSettings* ProjectilePoolReserveCountSettings; // 0x3b8(0x08)
};

// Class Tiger.TigerWorldStatsGenerator
// Size: 0xb8 (Inherited: 0x28)
struct UTigerWorldStatsGenerator : UObject {
	char pad_28[0x90]; // 0x28(0x90)
};

// Class Tiger.TigerWorldStatsComponentCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsComponentCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsActorCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsActorCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsObjectCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsObjectCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsBlueprintCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsBlueprintCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsCommandGenerator
// Size: 0xc8 (Inherited: 0xb8)
struct UTigerWorldStatsCommandGenerator : UTigerWorldStatsGenerator {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerWorldStatsSubSystem
// Size: 0xe0 (Inherited: 0x30)
struct UTigerWorldStatsSubSystem : UGameInstanceSubsystem {
	char pad_30[0xb0]; // 0x30(0xb0)

	void OnCellStartedLoading(struct UTigerWorldCompositionCellComponent* InCellComponent); // Function Tiger.TigerWorldStatsSubSystem.OnCellStartedLoading // (Final|Native|Private) // @ game+0x14fcbc0
	void OnCellFinishedLoading(); // Function Tiger.TigerWorldStatsSubSystem.OnCellFinishedLoading // (Final|Native|Private) // @ game+0x14fcba0
};

